                      (../cmds/BBS.post.):00001                    nam    BBS.post
                      (../cmds/BBS.post.):00002                    ttl    program module
                      (../cmds/BBS.post.):00003         
                      (../cmds/BBS.post.):00004                    ifp1
                      (../cmds/BBS.post.):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/BBS.post.):00006                    endc
                      (../cmds/BBS.post.):00007         
     0011             (../cmds/BBS.post.):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/BBS.post.):00009         atrv       set    ReEnt+rev
     0001             (../cmds/BBS.post.):00010         rev        set    $01
                      (../cmds/BBS.post.):00011         
0000 87CD08AE000D1181 (../cmds/BBS.post.):00012                    mod    eom,name,tylg,atrv,start,size
     8E01D122C9
                      (../cmds/BBS.post.):00013         
0000.                 (../cmds/BBS.post.):00014         U0000      rmb    1
0001.                 (../cmds/BBS.post.):00015         U0001      rmb    1
0002.                 (../cmds/BBS.post.):00016         U0002      rmb    1
0003.                 (../cmds/BBS.post.):00017         U0003      rmb    1
0004.                 (../cmds/BBS.post.):00018         U0004      rmb    1
0005.                 (../cmds/BBS.post.):00019         U0005      rmb    1
0006.                 (../cmds/BBS.post.):00020         U0006      rmb    1
0007.                 (../cmds/BBS.post.):00021         U0007      rmb    1
0008.                 (../cmds/BBS.post.):00022         U0008      rmb    2
000A.                 (../cmds/BBS.post.):00023         U000A      rmb    1
000B.                 (../cmds/BBS.post.):00024         U000B      rmb    1
000C.                 (../cmds/BBS.post.):00025         U000C      rmb    1
000D.                 (../cmds/BBS.post.):00026         U000D      rmb    1
000E.                 (../cmds/BBS.post.):00027         U000E      rmb    2
0010.                 (../cmds/BBS.post.):00028         U0010      rmb    2
0012.                 (../cmds/BBS.post.):00029         U0012      rmb    2
0014.                 (../cmds/BBS.post.):00030         U0014      rmb    1
0015.                 (../cmds/BBS.post.):00031         U0015      rmb    1
0016.                 (../cmds/BBS.post.):00032         U0016      rmb    2
0018.                 (../cmds/BBS.post.):00033         U0018      rmb    2
001A.                 (../cmds/BBS.post.):00034         U001A      rmb    200
00E2.                 (../cmds/BBS.post.):00035         U00E2      rmb    1
00E3.                 (../cmds/BBS.post.):00036         U00E3      rmb    5
00E8.                 (../cmds/BBS.post.):00037         U00E8      rmb    1
00E9.                 (../cmds/BBS.post.):00038         U00E9      rmb    2
00EB.                 (../cmds/BBS.post.):00039         U00EB      rmb    2
00ED.                 (../cmds/BBS.post.):00040         U00ED      rmb    60
0129.                 (../cmds/BBS.post.):00041         U0129      rmb    2
012B.                 (../cmds/BBS.post.):00042         U012B      rmb    2
012D.                 (../cmds/BBS.post.):00043         U012D      rmb    20
0141.                 (../cmds/BBS.post.):00044         U0141      rmb    30
015F.                 (../cmds/BBS.post.):00045         U015F      rmb    6
0165.                 (../cmds/BBS.post.):00046         U0165      rmb    2
0167.                 (../cmds/BBS.post.):00047         U0167      rmb    2
0169.                 (../cmds/BBS.post.):00048         U0169      rmb    2
016B.                 (../cmds/BBS.post.):00049         U016B      rmb    2
016D.                 (../cmds/BBS.post.):00050         U016D      rmb    6
0173.                 (../cmds/BBS.post.):00051         U0173      rmb    2
0175.                 (../cmds/BBS.post.):00052         U0175      rmb    2
0177.                 (../cmds/BBS.post.):00053         U0177      rmb    2
0179.                 (../cmds/BBS.post.):00054         U0179      rmb    16
0189.                 (../cmds/BBS.post.):00055         U0189      rmb    200
0251.                 (../cmds/BBS.post.):00056         U0251      rmb    8000
2191.                 (../cmds/BBS.post.):00057         U2191      rmb    80
21E1.                 (../cmds/BBS.post.):00058         U21E1      rmb    1
21E2.                 (../cmds/BBS.post.):00059         U21E2      rmb    231
     22C9             (../cmds/BBS.post.):00060         size       equ    .
                      (../cmds/BBS.post.):00061         
000D 4242532E706F73F4 (../cmds/BBS.post.):00062         name       fcs    /BBS.post/                                            * 000D 42 42 53 2E 70 6F 73 F4 BBS.post
0015 436F707972696768 (../cmds/BBS.post.):00063                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0015 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
0072 EC               (../cmds/BBS.post.):00064                    fcb    $EC                                                   * 0072 EC             l
0073 E6               (../cmds/BBS.post.):00065                    fcb    $E6                                                   * 0073 E6             f
0074 EA               (../cmds/BBS.post.):00066                    fcb    $EA                                                   * 0074 EA             j
0075 F5               (../cmds/BBS.post.):00067                    fcb    $F5                                                   * 0075 F5             u
0076 E9               (../cmds/BBS.post.):00068                    fcb    $E9                                                   * 0076 E9             i
0077 A0               (../cmds/BBS.post.):00069                    fcb    $A0                                                   * 0077 A0
0078 E2               (../cmds/BBS.post.):00070                    fcb    $E2                                                   * 0078 E2             b
0079 ED               (../cmds/BBS.post.):00071                    fcb    $ED                                                   * 0079 ED             m
007A F1               (../cmds/BBS.post.):00072                    fcb    $F1                                                   * 007A F1             q
007B E9               (../cmds/BBS.post.):00073                    fcb    $E9                                                   * 007B E9             i
007C F0               (../cmds/BBS.post.):00074                    fcb    $F0                                                   * 007C F0             p
007D EF               (../cmds/BBS.post.):00075                    fcb    $EF                                                   * 007D EF             o
007E F4               (../cmds/BBS.post.):00076                    fcb    $F4                                                   * 007E F4             t
007F F0               (../cmds/BBS.post.):00077                    fcb    $F0                                                   * 007F F0             p
0080 4242532E6D73672E (../cmds/BBS.post.):00078         L0080      fcc    "BBS.msg.inx"                                         * 0080 42 42 53 2E 6D 73 67 2E 69 6E 78 BBS.msg.inx
     696E78
008B 0D               (../cmds/BBS.post.):00079                    fcb    $0D                                                   * 008B 0D             .
008C 4242532E6D7367   (../cmds/BBS.post.):00080         L008C      fcc    "BBS.msg"                                             * 008C 42 42 53 2E 6D 73 67 BBS.msg
0093 0D               (../cmds/BBS.post.):00081                    fcb    $0D                                                   * 0093 0D             .
0094 0A               (../cmds/BBS.post.):00082         L0094      fcb    $0A                                                   * 0094 0A             .
0095 456E746572207375 (../cmds/BBS.post.):00083                    fcc    "Enter subject of message"                            * 0095 45 6E 74 65 72 20 73 75 62 6A 65 63 74 20 6F 66 20 6D 65 73 73 61 67 65 Enter subject of message
     626A656374206F66
     206D657373616765
00AD 0D               (../cmds/BBS.post.):00084                    fcb    $0D                                                   * 00AD 0D             .
00AE 0A               (../cmds/BBS.post.):00085                    fcb    $0A                                                   * 00AE 0A             .
00AF 3E               (../cmds/BBS.post.):00086                    fcc    ">"                                                   * 00AF 3E             >
00B0 4164647265737320 (../cmds/BBS.post.):00087         L00B0      fcc    "Address message to (BLANK for ALL):"                 * 00B0 41 64 64 72 65 73 73 20 6D 65 73 73 61 67 65 20 74 6F 20 28 42 4C 41 4E 4B 20 66 6F 72 20 41 4C 4C 29 3A Address message to (BLANK for ALL):
     6D65737361676520
     746F2028424C414E
     4B20666F7220414C
     4C293A
00D3 0D               (../cmds/BBS.post.):00088                    fcb    $0D                                                   * 00D3 0D             .
00D4 0A               (../cmds/BBS.post.):00089                    fcb    $0A                                                   * 00D4 0A             .
00D5 3E               (../cmds/BBS.post.):00090                    fcb    $3E                                                   * 00D5 3E             >
00D6 00               (../cmds/BBS.post.):00091         L00D6      fcb    $00                                                   * 00D6 00             .
00D7 1C               (../cmds/BBS.post.):00092                    fcb    $1C                                                   * 00D7 1C             .
00D8 0A               (../cmds/BBS.post.):00093         L00D8      fcb    $0A                                                   * 00D8 0A             .
00D9 0A               (../cmds/BBS.post.):00094                    fcb    $0A                                                   * 00D9 0A             .
00DA 20202020506C6561 (../cmds/BBS.post.):00095                    fcc    "    Please enter message now            (Blank line ends)" * 00DA 20 20 20 20 50 6C 65 61 73 65 20 65 6E 74 65 72 20 6D 65 73 73 61 67 65 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29     Please enter message now            (Blank line ends)
     736520656E746572
     206D657373616765
     206E6F7720202020
     2020202020202020
     28426C616E6B206C
     696E6520656E6473
     29
0113 0D               (../cmds/BBS.post.):00096                    fcb    $0D                                                   * 0113 0D             .
0114 2D2D2D2D2D2D2D2D (../cmds/BBS.post.):00097         L0114      fcc    "----------------------------------------------------------------" * 0114 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
0154 0D               (../cmds/BBS.post.):00098                    fcb    $0D                                                   * 0154 0D             .
0155 2F64642F6262732F (../cmds/BBS.post.):00099         L0155      fcc    "/dd/bbs/BBS.alias"                                   * 0155 2F 64 64 2F 62 62 73 2F 42 42 53 2E 61 6C 69 61 73 /dd/bbs/BBS.alias
     4242532E616C6961
     73
0166 0D               (../cmds/BBS.post.):00100                    fcb    $0D                                                   * 0166 0D             .
0167 0A               (../cmds/BBS.post.):00101         L0167      fcb    $0A                                                   * 0167 0A             .
0168 5B415D626F727420 (../cmds/BBS.post.):00102                    fcc    "[A]bort [D]one [E]dit [C]ontinue or [L]ist"          * 0168 5B 41 5D 62 6F 72 74 20 5B 44 5D 6F 6E 65 20 5B 45 5D 64 69 74 20 5B 43 5D 6F 6E 74 69 6E 75 65 20 6F 72 20 5B 4C 5D 69 73 74 [A]bort [D]one [E]dit [C]ontinue or [L]ist
     5B445D6F6E65205B
     455D646974205B43
     5D6F6E74696E7565
     206F72205B4C5D69
     7374
0192 0D               (../cmds/BBS.post.):00103                    fcb    $0D                                                   * 0192 0D             .
0193 456E746572206C69 (../cmds/BBS.post.):00104         L0193      fcc    "Enter line #"                                        * 0193 45 6E 74 65 72 20 6C 69 6E 65 20 23 Enter line #
     6E652023
019F 0D               (../cmds/BBS.post.):00105                    fcb    $0D                                                   * 019F 0D             .
01A0 3E               (../cmds/BBS.post.):00106         L01A0      fcb    $3E                                                   * 01A0 3E             >
01A1 0A               (../cmds/BBS.post.):00107         L01A1      fcb    $0A                                                   * 01A1 0A             .
01A2 0D               (../cmds/BBS.post.):00108                    fcb    $0D                                                   * 01A2 0D             .
01A3 08               (../cmds/BBS.post.):00109         L01A3      fcb    $08                                                   * 01A3 08             .
01A4 20               (../cmds/BBS.post.):00110                    fcb    $20                                                   * 01A4 20
01A5 08               (../cmds/BBS.post.):00111                    fcb    $08                                                   * 01A5 08             .
01A6 2F64642F6262732F (../cmds/BBS.post.):00112         L01A6      fcc    "/dd/bbs/BBS.userstats"                               * 01A6 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
01BB 0D               (../cmds/BBS.post.):00113                    fcb    $0D                                                   * 01BB 0D             .
01BC 55736572206E616D (../cmds/BBS.post.):00114         L01BC      fcc    "User name not found!"                                * 01BC 55 73 65 72 20 6E 61 6D 65 20 6E 6F 74 20 66 6F 75 6E 64 21 User name not found!
     65206E6F7420666F
     756E6421
01D0 0D               (../cmds/BBS.post.):00115                    fcb    $0D                                                   * 01D0 0D             .
01D1 6FC900E8         (../cmds/BBS.post.):00116         start      clr    >U00E8,U                                              * 01D1 6F C9 00 E8    oI.h
01D5 6FC900E2         (../cmds/BBS.post.):00117                    clr    >U00E2,U                                              * 01D5 6F C9 00 E2    oI.b
01D9 6F46             (../cmds/BBS.post.):00118                    clr    U0006,U                                               * 01D9 6F 46          oF
01DB 103F0C           (../cmds/BBS.post.):00119                    os9    F$ID                                                  * 01DB 10 3F 0C       .?.
01DE 10250488         (../cmds/BBS.post.):00120                    lbcs   L066A                                                 * 01DE 10 25 04 88    .%..
01E2 10AF48           (../cmds/BBS.post.):00121                    sty    U0008,U                                               * 01E2 10 AF 48       ./H
01E5 108E0000         (../cmds/BBS.post.):00122                    ldy    #0                                                    * 01E5 10 8E 00 00    ....
01E9 103F1C           (../cmds/BBS.post.):00123                    os9    F$SUser                                               * 01E9 10 3F 1C       .?.
01EC 1025047A         (../cmds/BBS.post.):00124                    lbcs   L066A                                                 * 01EC 10 25 04 7A    .%.z
01F0 308DFE8C         (../cmds/BBS.post.):00125                    leax   >L0080,PC                                             * 01F0 30 8D FE 8C    0.~.
01F4 8601             (../cmds/BBS.post.):00126                    lda    #1                                                    * 01F4 86 01          ..
01F6 103F84           (../cmds/BBS.post.):00127                    os9    I$Open                                                * 01F6 10 3F 84       .?.
01F9 1025046D         (../cmds/BBS.post.):00128                    lbcs   L066A                                                 * 01F9 10 25 04 6D    .%.m
01FD A7C4             (../cmds/BBS.post.):00129                    sta    U0000,U                                               * 01FD A7 C4          'D
01FF 30C900E9         (../cmds/BBS.post.):00130                    leax   >U00E9,U                                              * 01FF 30 C9 00 E9    0I.i
0203 108E0040         (../cmds/BBS.post.):00131                    ldy    #64                                                   * 0203 10 8E 00 40    ...@
0207 A6C4             (../cmds/BBS.post.):00132                    lda    U0000,U                                               * 0207 A6 C4          &D
0209 103F89           (../cmds/BBS.post.):00133                    os9    I$Read                                                * 0209 10 3F 89       .?.
020C 1025045A         (../cmds/BBS.post.):00134                    lbcs   L066A                                                 * 020C 10 25 04 5A    .%.Z
0210 A6C4             (../cmds/BBS.post.):00135                    lda    U0000,U                                               * 0210 A6 C4          &D
0212 103F8F           (../cmds/BBS.post.):00136                    os9    I$Close                                               * 0212 10 3F 8F       .?.
0215 308DFE67         (../cmds/BBS.post.):00137                    leax   >L0080,PC                                             * 0215 30 8D FE 67    0.~g
0219 8603             (../cmds/BBS.post.):00138                    lda    #3                                                    * 0219 86 03          ..
021B 103F84           (../cmds/BBS.post.):00139                    os9    I$Open                                                * 021B 10 3F 84       .?.
021E 10250448         (../cmds/BBS.post.):00140                    lbcs   L066A                                                 * 021E 10 25 04 48    .%.H
0222 A7C4             (../cmds/BBS.post.):00141                    sta    U0000,U                                               * 0222 A7 C4          'D
0224 8606             (../cmds/BBS.post.):00142                    lda    #6                                                    * 0224 86 06          ..
0226 A743             (../cmds/BBS.post.):00143                    sta    U0003,U                                               * 0226 A7 43          'C
0228 ECC900E9         (../cmds/BBS.post.):00144                    ldd    >U00E9,U                                              * 0228 EC C9 00 E9    lI.i
022C C30001           (../cmds/BBS.post.):00145                    addd   #1                                                    * 022C C3 00 01       C..
022F EDC900E9         (../cmds/BBS.post.):00146                    std    >U00E9,U                                              * 022F ED C9 00 E9    mI.i
0233 6F4C             (../cmds/BBS.post.):00147                    clr    U000C,U                                               * 0233 6F 4C          oL
0235 6F4D             (../cmds/BBS.post.):00148                    clr    U000D,U                                               * 0235 6F 4D          oM
0237 58               (../cmds/BBS.post.):00149         L0237      aslb                                                         * 0237 58             X
0238 49               (../cmds/BBS.post.):00150                    rola                                                         * 0238 49             I
0239 694D             (../cmds/BBS.post.):00151                    rol    U000D,U                                               * 0239 69 4D          iM
023B 6A43             (../cmds/BBS.post.):00152                    dec    U0003,U                                               * 023B 6A 43          jC
023D 26F8             (../cmds/BBS.post.):00153                    bne    L0237                                                 * 023D 26 F8          &x
023F ED4E             (../cmds/BBS.post.):00154                    std    U000E,U                                               * 023F ED 4E          mN
0241 A6C4             (../cmds/BBS.post.):00155                    lda    U0000,U                                               * 0241 A6 C4          &D
0243 AE4C             (../cmds/BBS.post.):00156                    ldx    U000C,U                                               * 0243 AE 4C          .L
0245 3440             (../cmds/BBS.post.):00157                    pshs   U                                                     * 0245 34 40          4@
0247 EE4E             (../cmds/BBS.post.):00158                    ldu    U000E,U                                               * 0247 EE 4E          nN
0249 103F88           (../cmds/BBS.post.):00159                    os9    I$Seek                                                * 0249 10 3F 88       .?.
024C 1025041A         (../cmds/BBS.post.):00160                    lbcs   L066A                                                 * 024C 10 25 04 1A    .%..
0250 3540             (../cmds/BBS.post.):00161                    puls   U                                                     * 0250 35 40          5@
0252 30C9015F         (../cmds/BBS.post.):00162                    leax   >U015F,U                                              * 0252 30 C9 01 5F    0I._
0256 103F15           (../cmds/BBS.post.):00163                    os9    F$Time                                                * 0256 10 3F 15       .?.
0259 308DFE37         (../cmds/BBS.post.):00164                    leax   >L0094,PC                                             * 0259 30 8D FE 37    0.~7
025D 10AE8DFE74       (../cmds/BBS.post.):00165                    ldy    >L00D6,PC                                             * 025D 10 AE 8D FE 74 ...~t
0262 8601             (../cmds/BBS.post.):00166                    lda    #1                                                    * 0262 86 01          ..
0264 103F8A           (../cmds/BBS.post.):00167                    os9    I$Write                                               * 0264 10 3F 8A       .?.
0267 102503FF         (../cmds/BBS.post.):00168                    lbcs   L066A                                                 * 0267 10 25 03 FF    .%..
026B 4F               (../cmds/BBS.post.):00169                    clra                                                         * 026B 4F             O
026C 30C90141         (../cmds/BBS.post.):00170                    leax   >U0141,U                                              * 026C 30 C9 01 41    0I.A
0270 108E001E         (../cmds/BBS.post.):00171                    ldy    #30                                                   * 0270 10 8E 00 1E    ....
0274 103F8B           (../cmds/BBS.post.):00172                    os9    I$ReadLn                                              * 0274 10 3F 8B       .?.
0277 308DFEDA         (../cmds/BBS.post.):00173                    leax   >L0155,PC                                             * 0277 30 8D FE DA    0.~Z
027B 8601             (../cmds/BBS.post.):00174                    lda    #1                                                    * 027B 86 01          ..
027D 103F84           (../cmds/BBS.post.):00175                    os9    I$Open                                                * 027D 10 3F 84       .?.
0280 102503E6         (../cmds/BBS.post.):00176                    lbcs   L066A                                                 * 0280 10 25 03 E6    .%.f
0284 A742             (../cmds/BBS.post.):00177                    sta    U0002,U                                               * 0284 A7 42          'B
0286 308DFE26         (../cmds/BBS.post.):00178         L0286      leax   >L00B0,PC                                             * 0286 30 8D FE 26    0.~&
028A 108E0026         (../cmds/BBS.post.):00179                    ldy    #38                                                   * 028A 10 8E 00 26    ...&
028E 8601             (../cmds/BBS.post.):00180                    lda    #1                                                    * 028E 86 01          ..
0290 103F8A           (../cmds/BBS.post.):00181                    os9    I$Write                                               * 0290 10 3F 8A       .?.
0293 30C90189         (../cmds/BBS.post.):00182                    leax   >U0189,U                                              * 0293 30 C9 01 89    0I..
0297 108E00C8         (../cmds/BBS.post.):00183                    ldy    #200                                                  * 0297 10 8E 00 C8    ...H
029B 4F               (../cmds/BBS.post.):00184                    clra                                                         * 029B 4F             O
029C 103F8B           (../cmds/BBS.post.):00185                    os9    I$ReadLn                                              * 029C 10 3F 8B       .?.
029F 108C0001         (../cmds/BBS.post.):00186                    cmpy   #1                                                    * 029F 10 8C 00 01    ....
02A3 2F68             (../cmds/BBS.post.):00187                    ble    L030D                                                 * 02A3 2F 68          /h
02A5 A680             (../cmds/BBS.post.):00188         L02A5      lda    ,X+                                                   * 02A5 A6 80          &.
02A7 84DF             (../cmds/BBS.post.):00189                    anda   #223                                                  * 02A7 84 DF          ._
02A9 A71F             (../cmds/BBS.post.):00190                    sta    -$01,X                                                * 02A9 A7 1F          '.
02AB 810D             (../cmds/BBS.post.):00191                    cmpa   #13                                                   * 02AB 81 0D          ..
02AD 26F6             (../cmds/BBS.post.):00192                    bne    L02A5                                                 * 02AD 26 F6          &v
02AF 30C81A           (../cmds/BBS.post.):00193         L02AF      leax   <U001A,U                                              * 02AF 30 C8 1A       0H.
02B2 108E00C8         (../cmds/BBS.post.):00194                    ldy    #200                                                  * 02B2 10 8E 00 C8    ...H
02B6 A642             (../cmds/BBS.post.):00195                    lda    U0002,U                                               * 02B6 A6 42          &B
02B8 103F8B           (../cmds/BBS.post.):00196                    os9    I$ReadLn                                              * 02B8 10 3F 8B       .?.
02BB 2533             (../cmds/BBS.post.):00197                    bcs    L02F0                                                 * 02BB 25 33          %3
02BD 31C90189         (../cmds/BBS.post.):00198                    leay   >U0189,U                                              * 02BD 31 C9 01 89    1I..
02C1 30C81A           (../cmds/BBS.post.):00199                    leax   <U001A,U                                              * 02C1 30 C8 1A       0H.
02C4 A680             (../cmds/BBS.post.):00200         L02C4      lda    ,X+                                                   * 02C4 A6 80          &.
02C6 812C             (../cmds/BBS.post.):00201                    cmpa   #44                                                   * 02C6 81 2C          .,
02C8 2708             (../cmds/BBS.post.):00202                    beq    L02D2                                                 * 02C8 27 08          '.
02CA 84DF             (../cmds/BBS.post.):00203                    anda   #223                                                  * 02CA 84 DF          ._
02CC A1A0             (../cmds/BBS.post.):00204                    cmpa   ,Y+                                                   * 02CC A1 A0          !
02CE 26DF             (../cmds/BBS.post.):00205                    bne    L02AF                                                 * 02CE 26 DF          &_
02D0 20F2             (../cmds/BBS.post.):00206                    bra    L02C4                                                 * 02D0 20 F2           r
02D2 A6A0             (../cmds/BBS.post.):00207         L02D2      lda    ,Y+                                                   * 02D2 A6 A0          &
02D4 810D             (../cmds/BBS.post.):00208                    cmpa   #13                                                   * 02D4 81 0D          ..
02D6 26D7             (../cmds/BBS.post.):00209                    bne    L02AF                                                 * 02D6 26 D7          &W
02D8 170522           (../cmds/BBS.post.):00210                    lbsr   L07FD                                                 * 02D8 17 05 22       .."
02DB EDC90167         (../cmds/BBS.post.):00211                    std    >U0167,U                                              * 02DB ED C9 01 67    mI.g
02DF A642             (../cmds/BBS.post.):00212                    lda    U0002,U                                               * 02DF A6 42          &B
02E1 3440             (../cmds/BBS.post.):00213                    pshs   U                                                     * 02E1 34 40          4@
02E3 CE0000           (../cmds/BBS.post.):00214                    ldu    #0                                                    * 02E3 CE 00 00       N..
02E6 8E0000           (../cmds/BBS.post.):00215                    ldx    #0                                                    * 02E6 8E 00 00       ...
02E9 103F88           (../cmds/BBS.post.):00216                    os9    I$Seek                                                * 02E9 10 3F 88       .?.
02EC 3540             (../cmds/BBS.post.):00217                    puls   U                                                     * 02EC 35 40          5@
02EE 2024             (../cmds/BBS.post.):00218                    bra    L0314                                                 * 02EE 20 24           $
02F0 308DFEC8         (../cmds/BBS.post.):00219         L02F0      leax   >L01BC,PC                                             * 02F0 30 8D FE C8    0.~H
02F4 108E00C8         (../cmds/BBS.post.):00220                    ldy    #200                                                  * 02F4 10 8E 00 C8    ...H
02F8 8601             (../cmds/BBS.post.):00221                    lda    #1                                                    * 02F8 86 01          ..
02FA 103F8C           (../cmds/BBS.post.):00222                    os9    I$WritLn                                              * 02FA 10 3F 8C       .?.
02FD A642             (../cmds/BBS.post.):00223                    lda    U0002,U                                               * 02FD A6 42          &B
02FF 3440             (../cmds/BBS.post.):00224                    pshs   U                                                     * 02FF 34 40          4@
0301 CE0000           (../cmds/BBS.post.):00225                    ldu    #0                                                    * 0301 CE 00 00       N..
0304 8E0000           (../cmds/BBS.post.):00226                    ldx    #0                                                    * 0304 8E 00 00       ...
0307 103F88           (../cmds/BBS.post.):00227                    os9    I$Seek                                                * 0307 10 3F 88       .?.
030A 16FF79           (../cmds/BBS.post.):00228                    lbra   L0286                                                 * 030A 16 FF 79       ..y
030D CCFFFF           (../cmds/BBS.post.):00229         L030D      ldd    #-1                                                   * 030D CC FF FF       L..
0310 EDC90167         (../cmds/BBS.post.):00230                    std    >U0167,U                                              * 0310 ED C9 01 67    mI.g
0314 308DFDC0         (../cmds/BBS.post.):00231         L0314      leax   >L00D8,PC                                             * 0314 30 8D FD C0    0.}@
0318 108E00C8         (../cmds/BBS.post.):00232                    ldy    #200                                                  * 0318 10 8E 00 C8    ...H
031C 8601             (../cmds/BBS.post.):00233                    lda    #1                                                    * 031C 86 01          ..
031E 103F8C           (../cmds/BBS.post.):00234                    os9    I$WritLn                                              * 031E 10 3F 8C       .?.
0321 10250345         (../cmds/BBS.post.):00235                    lbcs   L066A                                                 * 0321 10 25 03 45    .%.E
0325 308DFDEB         (../cmds/BBS.post.):00236                    leax   >L0114,PC                                             * 0325 30 8D FD EB    0.}k
0329 108E0050         (../cmds/BBS.post.):00237                    ldy    #80                                                   * 0329 10 8E 00 50    ...P
032D 103F8C           (../cmds/BBS.post.):00238                    os9    I$WritLn                                              * 032D 10 3F 8C       .?.
0330 10250336         (../cmds/BBS.post.):00239                    lbcs   L066A                                                 * 0330 10 25 03 36    .%.6
0334 CC0000           (../cmds/BBS.post.):00240                    ldd    #0                                                    * 0334 CC 00 00       L..
0337 ED4A             (../cmds/BBS.post.):00241                    std    U000A,U                                               * 0337 ED 4A          mJ
0339 EC4A             (../cmds/BBS.post.):00242         L0339      ldd    U000A,U                                               * 0339 EC 4A          lJ
033B C30001           (../cmds/BBS.post.):00243                    addd   #1                                                    * 033B C3 00 01       C..
033E ED4A             (../cmds/BBS.post.):00244                    std    U000A,U                                               * 033E ED 4A          mJ
0340 10830063         (../cmds/BBS.post.):00245                    cmpd   #99                                                   * 0340 10 83 00 63    ...c
0344 2C0B             (../cmds/BBS.post.):00246                    bge    L0351                                                 * 0344 2C 0B          ,.
0346 170118           (../cmds/BBS.post.):00247                    lbsr   L0461                                                 * 0346 17 01 18       ...
0349 108C0001         (../cmds/BBS.post.):00248                    cmpy   #1                                                    * 0349 10 8C 00 01    ....
034D 2302             (../cmds/BBS.post.):00249                    bls    L0351                                                 * 034D 23 02          #.
034F 20E8             (../cmds/BBS.post.):00250                    bra    L0339                                                 * 034F 20 E8           h
0351 308DFE12         (../cmds/BBS.post.):00251         L0351      leax   >L0167,PC                                             * 0351 30 8D FE 12    0.~.
0355 108E00C8         (../cmds/BBS.post.):00252                    ldy    #200                                                  * 0355 10 8E 00 C8    ...H
0359 8601             (../cmds/BBS.post.):00253                    lda    #1                                                    * 0359 86 01          ..
035B 103F8C           (../cmds/BBS.post.):00254                    os9    I$WritLn                                              * 035B 10 3F 8C       .?.
035E 308DFE3E         (../cmds/BBS.post.):00255                    leax   >L01A0,PC                                             * 035E 30 8D FE 3E    0.~>
0362 108E0001         (../cmds/BBS.post.):00256                    ldy    #1                                                    * 0362 10 8E 00 01    ....
0366 103F8A           (../cmds/BBS.post.):00257                    os9    I$Write                                               * 0366 10 3F 8A       .?.
0369 3045             (../cmds/BBS.post.):00258                    leax   U0005,U                                               * 0369 30 45          0E
036B 4F               (../cmds/BBS.post.):00259                    clra                                                         * 036B 4F             O
036C 108E0001         (../cmds/BBS.post.):00260                    ldy    #1                                                    * 036C 10 8E 00 01    ....
0370 103F89           (../cmds/BBS.post.):00261                    os9    I$Read                                                * 0370 10 3F 89       .?.
0373 308DFE2A         (../cmds/BBS.post.):00262                    leax   >L01A1,PC                                             * 0373 30 8D FE 2A    0.~*
0377 108E0001         (../cmds/BBS.post.):00263                    ldy    #1                                                    * 0377 10 8E 00 01    ....
037B 8601             (../cmds/BBS.post.):00264                    lda    #1                                                    * 037B 86 01          ..
037D 103F8C           (../cmds/BBS.post.):00265                    os9    I$WritLn                                              * 037D 10 3F 8C       .?.
0380 A645             (../cmds/BBS.post.):00266                    lda    U0005,U                                               * 0380 A6 45          &E
0382 84DF             (../cmds/BBS.post.):00267                    anda   #223                                                  * 0382 84 DF          ._
0384 8141             (../cmds/BBS.post.):00268                    cmpa   #65                                                   * 0384 81 41          .A
0386 102702D9         (../cmds/BBS.post.):00269                    lbeq   L0663                                                 * 0386 10 27 02 D9    .'.Y
038A 8144             (../cmds/BBS.post.):00270                    cmpa   #68                                                   * 038A 81 44          .D
038C 10270126         (../cmds/BBS.post.):00271                    lbeq   L04B6                                                 * 038C 10 27 01 26    .'.&
0390 8145             (../cmds/BBS.post.):00272                    cmpa   #69                                                   * 0390 81 45          .E
0392 2715             (../cmds/BBS.post.):00273                    beq    L03A9                                                 * 0392 27 15          '.
0394 8143             (../cmds/BBS.post.):00274                    cmpa   #67                                                   * 0394 81 43          .C
0396 2708             (../cmds/BBS.post.):00275                    beq    L03A0                                                 * 0396 27 08          '.
0398 814C             (../cmds/BBS.post.):00276                    cmpa   #76                                                   * 0398 81 4C          .L
039A 10270082         (../cmds/BBS.post.):00277                    lbeq   L0420                                                 * 039A 10 27 00 82    .'..
039E 20B1             (../cmds/BBS.post.):00278                    bra    L0351                                                 * 039E 20 B1           1
03A0 EC4A             (../cmds/BBS.post.):00279         L03A0      ldd    U000A,U                                               * 03A0 EC 4A          lJ
03A2 830001           (../cmds/BBS.post.):00280                    subd   #1                                                    * 03A2 83 00 01       ...
03A5 ED4A             (../cmds/BBS.post.):00281                    std    U000A,U                                               * 03A5 ED 4A          mJ
03A7 2090             (../cmds/BBS.post.):00282                    bra    L0339                                                 * 03A7 20 90           .
03A9 308DFDE6         (../cmds/BBS.post.):00283         L03A9      leax   >L0193,PC                                             * 03A9 30 8D FD E6    0.}f
03AD 108E00C8         (../cmds/BBS.post.):00284                    ldy    #200                                                  * 03AD 10 8E 00 C8    ...H
03B1 8601             (../cmds/BBS.post.):00285                    lda    #1                                                    * 03B1 86 01          ..
03B3 103F8C           (../cmds/BBS.post.):00286                    os9    I$WritLn                                              * 03B3 10 3F 8C       .?.
03B6 308DFDE6         (../cmds/BBS.post.):00287                    leax   >L01A0,PC                                             * 03B6 30 8D FD E6    0.}f
03BA 108E0001         (../cmds/BBS.post.):00288                    ldy    #1                                                    * 03BA 10 8E 00 01    ....
03BE 103F8A           (../cmds/BBS.post.):00289                    os9    I$Write                                               * 03BE 10 3F 8A       .?.
03C1 4F               (../cmds/BBS.post.):00290                    clra                                                         * 03C1 4F             O
03C2 30C900E3         (../cmds/BBS.post.):00291                    leax   >U00E3,U                                              * 03C2 30 C9 00 E3    0I.c
03C6 108E0003         (../cmds/BBS.post.):00292                    ldy    #3                                                    * 03C6 10 8E 00 03    ....
03CA 103F8B           (../cmds/BBS.post.):00293                    os9    I$ReadLn                                              * 03CA 10 3F 8B       .?.
03CD 17042D           (../cmds/BBS.post.):00294                    lbsr   L07FD                                                 * 03CD 17 04 2D       ..-
03D0 10A34A           (../cmds/BBS.post.):00295                    cmpd   U000A,U                                               * 03D0 10 A3 4A       .#J
03D3 1024FF7A         (../cmds/BBS.post.):00296                    lbcc   L0351                                                 * 03D3 10 24 FF 7A    .$.z
03D7 EDC818           (../cmds/BBS.post.):00297                    std    <U0018,U                                              * 03D7 ED C8 18       mH.
03DA 30C900E3         (../cmds/BBS.post.):00298                    leax   >U00E3,U                                              * 03DA 30 C9 00 E3    0I.c
03DE 17048C           (../cmds/BBS.post.):00299                    lbsr   L086D                                                 * 03DE 17 04 8C       ...
03E1 30C900E3         (../cmds/BBS.post.):00300                    leax   >U00E3,U                                              * 03E1 30 C9 00 E3    0I.c
03E5 863A             (../cmds/BBS.post.):00301                    lda    #58                                                   * 03E5 86 3A          .:
03E7 A702             (../cmds/BBS.post.):00302                    sta    $02,X                                                 * 03E7 A7 02          '.
03E9 108E0003         (../cmds/BBS.post.):00303                    ldy    #3                                                    * 03E9 10 8E 00 03    ....
03ED 8601             (../cmds/BBS.post.):00304                    lda    #1                                                    * 03ED 86 01          ..
03EF 103F8A           (../cmds/BBS.post.):00305                    os9    I$Write                                               * 03EF 10 3F 8A       .?.
03F2 ECC818           (../cmds/BBS.post.):00306                    ldd    <U0018,U                                              * 03F2 EC C8 18       lH.
03F5 30C90251         (../cmds/BBS.post.):00307                    leax   >U0251,U                                              * 03F5 30 C9 02 51    0I.Q
03F9 8650             (../cmds/BBS.post.):00308                    lda    #80                                                   * 03F9 86 50          .P
03FB 3D               (../cmds/BBS.post.):00309                    mul                                                          * 03FB 3D             =
03FC 308B             (../cmds/BBS.post.):00310                    leax   D,X                                                   * 03FC 30 8B          0.
03FE 108E0050         (../cmds/BBS.post.):00311                    ldy    #80                                                   * 03FE 10 8E 00 50    ...P
0402 8601             (../cmds/BBS.post.):00312                    lda    #1                                                    * 0402 86 01          ..
0404 103F8C           (../cmds/BBS.post.):00313                    os9    I$WritLn                                              * 0404 10 3F 8C       .?.
0407 1F20             (../cmds/BBS.post.):00314                    tfr    Y,D                                                   * 0407 1F 20          .
0409 E746             (../cmds/BBS.post.):00315                    stb    U0006,U                                               * 0409 E7 46          gF
040B 6A46             (../cmds/BBS.post.):00316                    dec    U0006,U                                               * 040B 6A 46          jF
040D 31C92191         (../cmds/BBS.post.):00317                    leay   >U2191,U                                              * 040D 31 C9 21 91    1I!.
0411 A680             (../cmds/BBS.post.):00318         L0411      lda    ,X+                                                   * 0411 A6 80          &.
0413 A7A0             (../cmds/BBS.post.):00319                    sta    ,Y+                                                   * 0413 A7 A0          '
0415 5A               (../cmds/BBS.post.):00320                    decb                                                         * 0415 5A             Z
0416 26F9             (../cmds/BBS.post.):00321                    bne    L0411                                                 * 0416 26 F9          &y
0418 ECC818           (../cmds/BBS.post.):00322                    ldd    <U0018,U                                              * 0418 EC C8 18       lH.
041B 8D44             (../cmds/BBS.post.):00323                    bsr    L0461                                                 * 041B 8D 44          .D
041D 16FF31           (../cmds/BBS.post.):00324                    lbra   L0351                                                 * 041D 16 FF 31       ..1
0420 CC0000           (../cmds/BBS.post.):00325         L0420      ldd    #0                                                    * 0420 CC 00 00       L..
0423 ED4A             (../cmds/BBS.post.):00326                    std    U000A,U                                               * 0423 ED 4A          mJ
0425 EC4A             (../cmds/BBS.post.):00327         L0425      ldd    U000A,U                                               * 0425 EC 4A          lJ
0427 C30001           (../cmds/BBS.post.):00328                    addd   #1                                                    * 0427 C3 00 01       C..
042A ED4A             (../cmds/BBS.post.):00329                    std    U000A,U                                               * 042A ED 4A          mJ
042C 30C900E3         (../cmds/BBS.post.):00330                    leax   >U00E3,U                                              * 042C 30 C9 00 E3    0I.c
0430 17043A           (../cmds/BBS.post.):00331                    lbsr   L086D                                                 * 0430 17 04 3A       ..:
0433 30C900E3         (../cmds/BBS.post.):00332                    leax   >U00E3,U                                              * 0433 30 C9 00 E3    0I.c
0437 863A             (../cmds/BBS.post.):00333                    lda    #58                                                   * 0437 86 3A          .:
0439 A702             (../cmds/BBS.post.):00334                    sta    $02,X                                                 * 0439 A7 02          '.
043B 8601             (../cmds/BBS.post.):00335                    lda    #1                                                    * 043B 86 01          ..
043D 108E0003         (../cmds/BBS.post.):00336                    ldy    #3                                                    * 043D 10 8E 00 03    ....
0441 103F8A           (../cmds/BBS.post.):00337                    os9    I$Write                                               * 0441 10 3F 8A       .?.
0444 30C90251         (../cmds/BBS.post.):00338                    leax   >U0251,U                                              * 0444 30 C9 02 51    0I.Q
0448 EC4A             (../cmds/BBS.post.):00339                    ldd    U000A,U                                               * 0448 EC 4A          lJ
044A 8650             (../cmds/BBS.post.):00340                    lda    #80                                                   * 044A 86 50          .P
044C 3D               (../cmds/BBS.post.):00341                    mul                                                          * 044C 3D             =
044D 308B             (../cmds/BBS.post.):00342                    leax   D,X                                                   * 044D 30 8B          0.
044F 108E0050         (../cmds/BBS.post.):00343                    ldy    #80                                                   * 044F 10 8E 00 50    ...P
0453 8601             (../cmds/BBS.post.):00344                    lda    #1                                                    * 0453 86 01          ..
0455 103F8C           (../cmds/BBS.post.):00345                    os9    I$WritLn                                              * 0455 10 3F 8C       .?.
0458 108C0001         (../cmds/BBS.post.):00346                    cmpy   #1                                                    * 0458 10 8C 00 01    ....
045C 22C7             (../cmds/BBS.post.):00347                    bhi    L0425                                                 * 045C 22 C7          "G
045E 16FEF0           (../cmds/BBS.post.):00348                    lbra   L0351                                                 * 045E 16 FE F0       .~p
0461 30C900E3         (../cmds/BBS.post.):00349         L0461      leax   >U00E3,U                                              * 0461 30 C9 00 E3    0I.c
0465 3406             (../cmds/BBS.post.):00350                    pshs   D                                                     * 0465 34 06          4.
0467 170403           (../cmds/BBS.post.):00351                    lbsr   L086D                                                 * 0467 17 04 03       ...
046A 30C900E3         (../cmds/BBS.post.):00352                    leax   >U00E3,U                                              * 046A 30 C9 00 E3    0I.c
046E 863A             (../cmds/BBS.post.):00353                    lda    #58                                                   * 046E 86 3A          .:
0470 A702             (../cmds/BBS.post.):00354                    sta    $02,X                                                 * 0470 A7 02          '.
0472 8601             (../cmds/BBS.post.):00355                    lda    #1                                                    * 0472 86 01          ..
0474 108E0003         (../cmds/BBS.post.):00356                    ldy    #3                                                    * 0474 10 8E 00 03    ....
0478 103F8A           (../cmds/BBS.post.):00357                    os9    I$Write                                               * 0478 10 3F 8A       .?.
047B 102501EB         (../cmds/BBS.post.):00358                    lbcs   L066A                                                 * 047B 10 25 01 EB    .%.k
047F 30C92191         (../cmds/BBS.post.):00359                    leax   >U2191,U                                              * 047F 30 C9 21 91    0I!.
0483 E646             (../cmds/BBS.post.):00360                    ldb    U0006,U                                               * 0483 E6 46          fF
0485 4F               (../cmds/BBS.post.):00361                    clra                                                         * 0485 4F             O
0486 1F02             (../cmds/BBS.post.):00362                    tfr    D,Y                                                   * 0486 1F 02          ..
0488 8601             (../cmds/BBS.post.):00363                    lda    #1                                                    * 0488 86 01          ..
048A 103F8A           (../cmds/BBS.post.):00364                    os9    I$Write                                               * 048A 10 3F 8A       .?.
048D 3506             (../cmds/BBS.post.):00365                    puls   D                                                     * 048D 35 06          5.
048F 8650             (../cmds/BBS.post.):00366                    lda    #80                                                   * 048F 86 50          .P
0491 3D               (../cmds/BBS.post.):00367                    mul                                                          * 0491 3D             =
0492 30C90251         (../cmds/BBS.post.):00368                    leax   >U0251,U                                              * 0492 30 C9 02 51    0I.Q
0496 308B             (../cmds/BBS.post.):00369                    leax   D,X                                                   * 0496 30 8B          0.
0498 31C92191         (../cmds/BBS.post.):00370                    leay   >U2191,U                                              * 0498 31 C9 21 91    1I!.
049C C650             (../cmds/BBS.post.):00371                    ldb    #80                                                   * 049C C6 50          FP
049E A646             (../cmds/BBS.post.):00372                    lda    U0006,U                                               * 049E A6 46          &F
04A0 270D             (../cmds/BBS.post.):00373                    beq    L04AF                                                 * 04A0 27 0D          '.
04A2 A7C814           (../cmds/BBS.post.):00374                    sta    <U0014,U                                              * 04A2 A7 C8 14       'H.
04A5 A6A0             (../cmds/BBS.post.):00375         L04A5      lda    ,Y+                                                   * 04A5 A6 A0          &
04A7 A780             (../cmds/BBS.post.):00376                    sta    ,X+                                                   * 04A7 A7 80          '.
04A9 5A               (../cmds/BBS.post.):00377                    decb                                                         * 04A9 5A             Z
04AA 6AC814           (../cmds/BBS.post.):00378                    dec    <U0014,U                                              * 04AA 6A C8 14       jH.
04AD 26F6             (../cmds/BBS.post.):00379                    bne    L04A5                                                 * 04AD 26 F6          &v
04AF 4F               (../cmds/BBS.post.):00380         L04AF      clra                                                         * 04AF 4F             O
04B0 1F02             (../cmds/BBS.post.):00381                    tfr    D,Y                                                   * 04B0 1F 02          ..
04B2 1701B8           (../cmds/BBS.post.):00382                    lbsr   L066D                                                 * 04B2 17 01 B8       ..8
04B5 39               (../cmds/BBS.post.):00383                    rts                                                          * 04B5 39             9
04B6 30C81A           (../cmds/BBS.post.):00384         L04B6      leax   <U001A,U                                              * 04B6 30 C8 1A       0H.
04B9 108E00C8         (../cmds/BBS.post.):00385                    ldy    #200                                                  * 04B9 10 8E 00 C8    ...H
04BD A642             (../cmds/BBS.post.):00386                    lda    U0002,U                                               * 04BD A6 42          &B
04BF 103F8B           (../cmds/BBS.post.):00387                    os9    I$ReadLn                                              * 04BF 10 3F 8B       .?.
04C2 102501A4         (../cmds/BBS.post.):00388                    lbcs   L066A                                                 * 04C2 10 25 01 A4    .%.$
04C6 A680             (../cmds/BBS.post.):00389         L04C6      lda    ,X+                                                   * 04C6 A6 80          &.
04C8 812C             (../cmds/BBS.post.):00390                    cmpa   #44                                                   * 04C8 81 2C          .,
04CA 26FA             (../cmds/BBS.post.):00391                    bne    L04C6                                                 * 04CA 26 FA          &z
04CC 17032E           (../cmds/BBS.post.):00392                    lbsr   L07FD                                                 * 04CC 17 03 2E       ...
04CF 10A348           (../cmds/BBS.post.):00393                    cmpd   U0008,U                                               * 04CF 10 A3 48       .#H
04D2 26E2             (../cmds/BBS.post.):00394                    bne    L04B6                                                 * 04D2 26 E2          &b
04D4 30C81A           (../cmds/BBS.post.):00395                    leax   <U001A,U                                              * 04D4 30 C8 1A       0H.
04D7 31C9012D         (../cmds/BBS.post.):00396                    leay   >U012D,U                                              * 04D7 31 C9 01 2D    1I.-
04DB A680             (../cmds/BBS.post.):00397         L04DB      lda    ,X+                                                   * 04DB A6 80          &.
04DD 812C             (../cmds/BBS.post.):00398                    cmpa   #44                                                   * 04DD 81 2C          .,
04DF 2704             (../cmds/BBS.post.):00399                    beq    L04E5                                                 * 04DF 27 04          '.
04E1 A7A0             (../cmds/BBS.post.):00400                    sta    ,Y+                                                   * 04E1 A7 A0          '
04E3 20F6             (../cmds/BBS.post.):00401                    bra    L04DB                                                 * 04E3 20 F6           v
04E5 860D             (../cmds/BBS.post.):00402         L04E5      lda    #13                                                   * 04E5 86 0D          ..
04E7 A7A4             (../cmds/BBS.post.):00403                    sta    0,Y                                                   * 04E7 A7 A4          '$
04E9 ECC900EB         (../cmds/BBS.post.):00404                    ldd    >U00EB,U                                              * 04E9 EC C9 00 EB    lI.k
04ED EDC90129         (../cmds/BBS.post.):00405                    std    >U0129,U                                              * 04ED ED C9 01 29    mI.)
04F1 ECC900ED         (../cmds/BBS.post.):00406                    ldd    >U00ED,U                                              * 04F1 EC C9 00 ED    lI.m
04F5 EDC9012B         (../cmds/BBS.post.):00407                    std    >U012B,U                                              * 04F5 ED C9 01 2B    mI.+
04F9 EC48             (../cmds/BBS.post.):00408                    ldd    U0008,U                                               * 04F9 EC 48          lH
04FB EDC90165         (../cmds/BBS.post.):00409                    std    >U0165,U                                              * 04FB ED C9 01 65    mI.e
04FF 30C90129         (../cmds/BBS.post.):00410                    leax   >U0129,U                                              * 04FF 30 C9 01 29    0I.)
0503 A6C4             (../cmds/BBS.post.):00411                    lda    U0000,U                                               * 0503 A6 C4          &D
0505 108E0040         (../cmds/BBS.post.):00412                    ldy    #64                                                   * 0505 10 8E 00 40    ...@
0509 103F8A           (../cmds/BBS.post.):00413                    os9    I$Write                                               * 0509 10 3F 8A       .?.
050C 1025015A         (../cmds/BBS.post.):00414                    lbcs   L066A                                                 * 050C 10 25 01 5A    .%.Z
0510 308DFB78         (../cmds/BBS.post.):00415                    leax   >L008C,PC                                             * 0510 30 8D FB 78    0.{x
0514 8603             (../cmds/BBS.post.):00416                    lda    #3                                                    * 0514 86 03          ..
0516 103F84           (../cmds/BBS.post.):00417                    os9    I$Open                                                * 0516 10 3F 84       .?.
0519 1025014D         (../cmds/BBS.post.):00418                    lbcs   L066A                                                 * 0519 10 25 01 4D    .%.M
051D A741             (../cmds/BBS.post.):00419                    sta    U0001,U                                               * 051D A7 41          'A
051F 3440             (../cmds/BBS.post.):00420                    pshs   U                                                     * 051F 34 40          4@
0521 AEC900EB         (../cmds/BBS.post.):00421                    ldx    >U00EB,U                                              * 0521 AE C9 00 EB    .I.k
0525 A641             (../cmds/BBS.post.):00422                    lda    U0001,U                                               * 0525 A6 41          &A
0527 EEC900ED         (../cmds/BBS.post.):00423                    ldu    >U00ED,U                                              * 0527 EE C9 00 ED    nI.m
052B 103F88           (../cmds/BBS.post.):00424                    os9    I$Seek                                                * 052B 10 3F 88       .?.
052E 10250138         (../cmds/BBS.post.):00425                    lbcs   L066A                                                 * 052E 10 25 01 38    .%.8
0532 3540             (../cmds/BBS.post.):00426                    puls   U                                                     * 0532 35 40          5@
0534 8600             (../cmds/BBS.post.):00427                    lda    #0                                                    * 0534 86 00          ..
0536 A7C810           (../cmds/BBS.post.):00428                    sta    <U0010,U                                              * 0536 A7 C8 10       'H.
0539 CC0001           (../cmds/BBS.post.):00429                    ldd    #1                                                    * 0539 CC 00 01       L..
053C EDC812           (../cmds/BBS.post.):00430                    std    <U0012,U                                              * 053C ED C8 12       mH.
053F A6C810           (../cmds/BBS.post.):00431         L053F      lda    <U0010,U                                              * 053F A6 C8 10       &H.
0542 4C               (../cmds/BBS.post.):00432                    inca                                                         * 0542 4C             L
0543 A7C810           (../cmds/BBS.post.):00433                    sta    <U0010,U                                              * 0543 A7 C8 10       'H.
0546 A14B             (../cmds/BBS.post.):00434                    cmpa   U000B,U                                               * 0546 A1 4B          !K
0548 2226             (../cmds/BBS.post.):00435                    bhi    L0570                                                 * 0548 22 26          "&
054A C650             (../cmds/BBS.post.):00436                    ldb    #80                                                   * 054A C6 50          FP
054C 3D               (../cmds/BBS.post.):00437                    mul                                                          * 054C 3D             =
054D 30C90251         (../cmds/BBS.post.):00438                    leax   >U0251,U                                              * 054D 30 C9 02 51    0I.Q
0551 308B             (../cmds/BBS.post.):00439                    leax   D,X                                                   * 0551 30 8B          0.
0553 108E0050         (../cmds/BBS.post.):00440                    ldy    #80                                                   * 0553 10 8E 00 50    ...P
0557 A641             (../cmds/BBS.post.):00441                    lda    U0001,U                                               * 0557 A6 41          &A
0559 103F8C           (../cmds/BBS.post.):00442                    os9    I$WritLn                                              * 0559 10 3F 8C       .?.
055C 1025010A         (../cmds/BBS.post.):00443                    lbcs   L066A                                                 * 055C 10 25 01 0A    .%..
0560 108C0001         (../cmds/BBS.post.):00444                    cmpy   #1                                                    * 0560 10 8C 00 01    ....
0564 230A             (../cmds/BBS.post.):00445                    bls    L0570                                                 * 0564 23 0A          #.
0566 1F20             (../cmds/BBS.post.):00446                    tfr    Y,D                                                   * 0566 1F 20          .
0568 E3C812           (../cmds/BBS.post.):00447                    addd   <U0012,U                                              * 0568 E3 C8 12       cH.
056B EDC812           (../cmds/BBS.post.):00448                    std    <U0012,U                                              * 056B ED C8 12       mH.
056E 20CF             (../cmds/BBS.post.):00449                    bra    L053F                                                 * 056E 20 CF           O
0570 ECC900ED         (../cmds/BBS.post.):00450         L0570      ldd    >U00ED,U                                              * 0570 EC C9 00 ED    lI.m
0574 E3C812           (../cmds/BBS.post.):00451                    addd   <U0012,U                                              * 0574 E3 C8 12       cH.
0577 EDC900ED         (../cmds/BBS.post.):00452                    std    >U00ED,U                                              * 0577 ED C9 00 ED    mI.m
057B 240B             (../cmds/BBS.post.):00453                    bcc    L0588                                                 * 057B 24 0B          $.
057D ECC900EB         (../cmds/BBS.post.):00454                    ldd    >U00EB,U                                              * 057D EC C9 00 EB    lI.k
0581 C30001           (../cmds/BBS.post.):00455                    addd   #1                                                    * 0581 C3 00 01       C..
0584 EDC900EB         (../cmds/BBS.post.):00456                    std    >U00EB,U                                              * 0584 ED C9 00 EB    mI.k
0588 3440             (../cmds/BBS.post.):00457         L0588      pshs   U                                                     * 0588 34 40          4@
058A A6C4             (../cmds/BBS.post.):00458                    lda    U0000,U                                               * 058A A6 C4          &D
058C 8E0000           (../cmds/BBS.post.):00459                    ldx    #0                                                    * 058C 8E 00 00       ...
058F CE0000           (../cmds/BBS.post.):00460                    ldu    #0                                                    * 058F CE 00 00       N..
0592 103F88           (../cmds/BBS.post.):00461                    os9    I$Seek                                                * 0592 10 3F 88       .?.
0595 102500D1         (../cmds/BBS.post.):00462                    lbcs   L066A                                                 * 0595 10 25 00 D1    .%.Q
0599 3540             (../cmds/BBS.post.):00463                    puls   U                                                     * 0599 35 40          5@
059B 30C900E9         (../cmds/BBS.post.):00464                    leax   >U00E9,U                                              * 059B 30 C9 00 E9    0I.i
059F 108E0040         (../cmds/BBS.post.):00465                    ldy    #64                                                   * 059F 10 8E 00 40    ...@
05A3 A6C4             (../cmds/BBS.post.):00466                    lda    U0000,U                                               * 05A3 A6 C4          &D
05A5 103F8A           (../cmds/BBS.post.):00467                    os9    I$Write                                               * 05A5 10 3F 8A       .?.
05A8 102500BE         (../cmds/BBS.post.):00468                    lbcs   L066A                                                 * 05A8 10 25 00 BE    .%.>
05AC 308DFBF6         (../cmds/BBS.post.):00469                    leax   >L01A6,PC                                             * 05AC 30 8D FB F6    0.{v
05B0 8603             (../cmds/BBS.post.):00470                    lda    #3                                                    * 05B0 86 03          ..
05B2 103F84           (../cmds/BBS.post.):00471                    os9    I$Open                                                * 05B2 10 3F 84       .?.
05B5 2409             (../cmds/BBS.post.):00472                    bcc    L05C0                                                 * 05B5 24 09          $.
05B7 C61B             (../cmds/BBS.post.):00473                    ldb    #27                                                   * 05B7 C6 1B          F.
05B9 103F83           (../cmds/BBS.post.):00474                    os9    I$Create                                              * 05B9 10 3F 83       .?.
05BC 102500AA         (../cmds/BBS.post.):00475                    lbcs   L066A                                                 * 05BC 10 25 00 AA    .%.*
05C0 A747             (../cmds/BBS.post.):00476         L05C0      sta    U0007,U                                               * 05C0 A7 47          'G
05C2 30C90169         (../cmds/BBS.post.):00477         L05C2      leax   >U0169,U                                              * 05C2 30 C9 01 69    0I.i
05C6 108E0020         (../cmds/BBS.post.):00478                    ldy    #32                                                   * 05C6 10 8E 00 20    ...
05CA A647             (../cmds/BBS.post.):00479                    lda    U0007,U                                               * 05CA A6 47          &G
05CC 103F89           (../cmds/BBS.post.):00480                    os9    I$Read                                                * 05CC 10 3F 89       .?.
05CF 250B             (../cmds/BBS.post.):00481                    bcs    L05DC                                                 * 05CF 25 0B          %.
05D1 ECC90169         (../cmds/BBS.post.):00482                    ldd    >U0169,U                                              * 05D1 EC C9 01 69    lI.i
05D5 10A348           (../cmds/BBS.post.):00483                    cmpd   U0008,U                                               * 05D5 10 A3 48       .#H
05D8 26E8             (../cmds/BBS.post.):00484                    bne    L05C2                                                 * 05D8 26 E8          &h
05DA 2009             (../cmds/BBS.post.):00485                    bra    L05E5                                                 * 05DA 20 09           .
05DC C1D3             (../cmds/BBS.post.):00486         L05DC      cmpb   #211                                                  * 05DC C1 D3          AS
05DE 10260088         (../cmds/BBS.post.):00487                    lbne   L066A                                                 * 05DE 10 26 00 88    .&..
05E2 16003E           (../cmds/BBS.post.):00488                    lbra   L0623                                                 * 05E2 16 00 3E       ..>
05E5 ECC90173         (../cmds/BBS.post.):00489         L05E5      ldd    >U0173,U                                              * 05E5 EC C9 01 73    lI.s
05E9 C30001           (../cmds/BBS.post.):00490                    addd   #1                                                    * 05E9 C3 00 01       C..
05EC EDC90173         (../cmds/BBS.post.):00491                    std    >U0173,U                                              * 05EC ED C9 01 73    mI.s
05F0 A647             (../cmds/BBS.post.):00492                    lda    U0007,U                                               * 05F0 A6 47          &G
05F2 C605             (../cmds/BBS.post.):00493                    ldb    #5                                                    * 05F2 C6 05          F.
05F4 3440             (../cmds/BBS.post.):00494                    pshs   U                                                     * 05F4 34 40          4@
05F6 103F8D           (../cmds/BBS.post.):00495                    os9    I$GetStt                                              * 05F6 10 3F 8D       .?.
05F9 1F30             (../cmds/BBS.post.):00496                    tfr    U,D                                                   * 05F9 1F 30          .0
05FB 830020           (../cmds/BBS.post.):00497                    subd   #32                                                   * 05FB 83 00 20       ..
05FE 2C02             (../cmds/BBS.post.):00498                    bge    L0602                                                 * 05FE 2C 02          ,.
0600 301F             (../cmds/BBS.post.):00499                    leax   -$01,X                                                * 0600 30 1F          0.
0602 EEE4             (../cmds/BBS.post.):00500         L0602      ldu    0,S                                                   * 0602 EE E4          nd
0604 1F02             (../cmds/BBS.post.):00501                    tfr    D,Y                                                   * 0604 1F 02          ..
0606 A647             (../cmds/BBS.post.):00502                    lda    U0007,U                                               * 0606 A6 47          &G
0608 1F23             (../cmds/BBS.post.):00503                    tfr    Y,U                                                   * 0608 1F 23          .#
060A 103F88           (../cmds/BBS.post.):00504                    os9    I$Seek                                                * 060A 10 3F 88       .?.
060D 10250059         (../cmds/BBS.post.):00505                    lbcs   L066A                                                 * 060D 10 25 00 59    .%.Y
0611 3540             (../cmds/BBS.post.):00506                    puls   U                                                     * 0611 35 40          5@
0613 30C90169         (../cmds/BBS.post.):00507                    leax   >U0169,U                                              * 0613 30 C9 01 69    0I.i
0617 108E0020         (../cmds/BBS.post.):00508                    ldy    #32                                                   * 0617 10 8E 00 20    ...
061B A647             (../cmds/BBS.post.):00509                    lda    U0007,U                                               * 061B A6 47          &G
061D 103F8A           (../cmds/BBS.post.):00510                    os9    I$Write                                               * 061D 10 3F 8A       .?.
0620 160040           (../cmds/BBS.post.):00511                    lbra   L0663                                                 * 0620 16 00 40       ..@
0623 30C90169         (../cmds/BBS.post.):00512         L0623      leax   >U0169,U                                              * 0623 30 C9 01 69    0I.i
0627 CC0001           (../cmds/BBS.post.):00513                    ldd    #1                                                    * 0627 CC 00 01       L..
062A EDC9016B         (../cmds/BBS.post.):00514                    std    >U016B,U                                              * 062A ED C9 01 6B    mI.k
062E CC0000           (../cmds/BBS.post.):00515                    ldd    #0                                                    * 062E CC 00 00       L..
0631 EDC90173         (../cmds/BBS.post.):00516                    std    >U0173,U                                              * 0631 ED C9 01 73    mI.s
0635 EDC90175         (../cmds/BBS.post.):00517                    std    >U0175,U                                              * 0635 ED C9 01 75    mI.u
0639 EDC90179         (../cmds/BBS.post.):00518                    std    >U0179,U                                              * 0639 ED C9 01 79    mI.y
063D EDC90177         (../cmds/BBS.post.):00519                    std    >U0177,U                                              * 063D ED C9 01 77    mI.w
0641 EC48             (../cmds/BBS.post.):00520                    ldd    U0008,U                                               * 0641 EC 48          lH
0643 EDC90169         (../cmds/BBS.post.):00521                    std    >U0169,U                                              * 0643 ED C9 01 69    mI.i
0647 30C9016D         (../cmds/BBS.post.):00522                    leax   >U016D,U                                              * 0647 30 C9 01 6D    0I.m
064B 103F15           (../cmds/BBS.post.):00523                    os9    F$Time                                                * 064B 10 3F 15       .?.
064E 10250018         (../cmds/BBS.post.):00524                    lbcs   L066A                                                 * 064E 10 25 00 18    .%..
0652 30C90169         (../cmds/BBS.post.):00525                    leax   >U0169,U                                              * 0652 30 C9 01 69    0I.i
0656 108E0020         (../cmds/BBS.post.):00526                    ldy    #32                                                   * 0656 10 8E 00 20    ...
065A A647             (../cmds/BBS.post.):00527                    lda    U0007,U                                               * 065A A6 47          &G
065C 103F8A           (../cmds/BBS.post.):00528                    os9    I$Write                                               * 065C 10 3F 8A       .?.
065F 10250007         (../cmds/BBS.post.):00529                    lbcs   L066A                                                 * 065F 10 25 00 07    .%..
0663 5F               (../cmds/BBS.post.):00530         L0663      clrb                                                         * 0663 5F             _
0664 10AE48           (../cmds/BBS.post.):00531                    ldy    U0008,U                                               * 0664 10 AE 48       ..H
0667 103F1C           (../cmds/BBS.post.):00532                    os9    F$SUser                                               * 0667 10 3F 1C       .?.
066A 103F06           (../cmds/BBS.post.):00533         L066A      os9    F$Exit                                                * 066A 10 3F 06       .?.
066D 170156           (../cmds/BBS.post.):00534         L066D      lbsr   L07C6                                                 * 066D 17 01 56       ..V
0670 E646             (../cmds/BBS.post.):00535                    ldb    U0006,U                                               * 0670 E6 46          fF
0672 31A5             (../cmds/BBS.post.):00536                    leay   B,Y                                                   * 0672 31 A5          1%
0674 3420             (../cmds/BBS.post.):00537                    pshs   Y                                                     * 0674 34 20          4
0676 50               (../cmds/BBS.post.):00538                    negb                                                         * 0676 50             P
0677 1D               (../cmds/BBS.post.):00539                    sex                                                          * 0677 1D             .
0678 31AB             (../cmds/BBS.post.):00540                    leay   D,Y                                                   * 0678 31 AB          1+
067A 6F46             (../cmds/BBS.post.):00541                    clr    U0006,U                                               * 067A 6F 46          oF
067C 108C0000         (../cmds/BBS.post.):00542                    cmpy   #0                                                    * 067C 10 8C 00 00    ....
0680 102700B8         (../cmds/BBS.post.):00543                    lbeq   L073C                                                 * 0680 10 27 00 B8    .'.8
0684 3430             (../cmds/BBS.post.):00544                    pshs   Y,X                                                   * 0684 34 30          40
0686 860D             (../cmds/BBS.post.):00545                    lda    #13                                                   * 0686 86 0D          ..
0688 A780             (../cmds/BBS.post.):00546         L0688      sta    ,X+                                                   * 0688 A7 80          '.
068A 313F             (../cmds/BBS.post.):00547                    leay   -$01,Y                                                * 068A 31 3F          1?
068C 26FA             (../cmds/BBS.post.):00548                    bne    L0688                                                 * 068C 26 FA          &z
068E 3530             (../cmds/BBS.post.):00549                    puls   Y,X                                                   * 068E 35 30          50
0690 3430             (../cmds/BBS.post.):00550         L0690      pshs   Y,X                                                   * 0690 34 30          40
0692 3045             (../cmds/BBS.post.):00551                    leax   U0005,U                                               * 0692 30 45          0E
0694 108E0001         (../cmds/BBS.post.):00552                    ldy    #1                                                    * 0694 10 8E 00 01    ....
0698 4F               (../cmds/BBS.post.):00553                    clra                                                         * 0698 4F             O
0699 103F89           (../cmds/BBS.post.):00554                    os9    I$Read                                                * 0699 10 3F 89       .?.
069C 252B             (../cmds/BBS.post.):00555                    bcs    L06C9                                                 * 069C 25 2B          %+
069E A645             (../cmds/BBS.post.):00556                    lda    U0005,U                                               * 069E A6 45          &E
06A0 8101             (../cmds/BBS.post.):00557                    cmpa   #1                                                    * 06A0 81 01          ..
06A2 2729             (../cmds/BBS.post.):00558                    beq    L06CD                                                 * 06A2 27 29          ')
06A4 8108             (../cmds/BBS.post.):00559                    cmpa   #8                                                    * 06A4 81 08          ..
06A6 2747             (../cmds/BBS.post.):00560                    beq    L06EF                                                 * 06A6 27 47          'G
06A8 8118             (../cmds/BBS.post.):00561                    cmpa   #24                                                   * 06A8 81 18          ..
06AA 2767             (../cmds/BBS.post.):00562                    beq    L0713                                                 * 06AA 27 67          'g
06AC 810D             (../cmds/BBS.post.):00563                    cmpa   #13                                                   * 06AC 81 0D          ..
06AE 10270088         (../cmds/BBS.post.):00564                    lbeq   L073A                                                 * 06AE 10 27 00 88    .'..
06B2 8120             (../cmds/BBS.post.):00565                    cmpa   #32                                                   * 06B2 81 20          .
06B4 2513             (../cmds/BBS.post.):00566                    bcs    L06C9                                                 * 06B4 25 13          %.
06B6 8601             (../cmds/BBS.post.):00567                    lda    #1                                                    * 06B6 86 01          ..
06B8 103F8A           (../cmds/BBS.post.):00568                    os9    I$Write                                               * 06B8 10 3F 8A       .?.
06BB 3530             (../cmds/BBS.post.):00569                    puls   Y,X                                                   * 06BB 35 30          50
06BD A645             (../cmds/BBS.post.):00570                    lda    U0005,U                                               * 06BD A6 45          &E
06BF A780             (../cmds/BBS.post.):00571                    sta    ,X+                                                   * 06BF A7 80          '.
06C1 313F             (../cmds/BBS.post.):00572                    leay   -$01,Y                                                * 06C1 31 3F          1?
06C3 1027009C         (../cmds/BBS.post.):00573                    lbeq   L0763                                                 * 06C3 10 27 00 9C    .'..
06C7 20C7             (../cmds/BBS.post.):00574                    bra    L0690                                                 * 06C7 20 C7           G
06C9 3530             (../cmds/BBS.post.):00575         L06C9      puls   Y,X                                                   * 06C9 35 30          50
06CB 20C3             (../cmds/BBS.post.):00576                    bra    L0690                                                 * 06CB 20 C3           C
06CD 3530             (../cmds/BBS.post.):00577         L06CD      puls   Y,X                                                   * 06CD 35 30          50
06CF 313F             (../cmds/BBS.post.):00578                    leay   -$01,Y                                                * 06CF 31 3F          1?
06D1 2717             (../cmds/BBS.post.):00579                    beq    L06EA                                                 * 06D1 27 17          '.
06D3 A680             (../cmds/BBS.post.):00580                    lda    ,X+                                                   * 06D3 A6 80          &.
06D5 810D             (../cmds/BBS.post.):00581                    cmpa   #13                                                   * 06D5 81 0D          ..
06D7 270F             (../cmds/BBS.post.):00582                    beq    L06E8                                                 * 06D7 27 0F          '.
06D9 3430             (../cmds/BBS.post.):00583                    pshs   Y,X                                                   * 06D9 34 30          40
06DB 301F             (../cmds/BBS.post.):00584                    leax   -$01,X                                                * 06DB 30 1F          0.
06DD 108E0001         (../cmds/BBS.post.):00585                    ldy    #1                                                    * 06DD 10 8E 00 01    ....
06E1 8601             (../cmds/BBS.post.):00586                    lda    #1                                                    * 06E1 86 01          ..
06E3 103F8A           (../cmds/BBS.post.):00587                    os9    I$Write                                               * 06E3 10 3F 8A       .?.
06E6 20E5             (../cmds/BBS.post.):00588                    bra    L06CD                                                 * 06E6 20 E5           e
06E8 301F             (../cmds/BBS.post.):00589         L06E8      leax   -$01,X                                                * 06E8 30 1F          0.
06EA 3121             (../cmds/BBS.post.):00590         L06EA      leay   $01,Y                                                 * 06EA 31 21          1!
06EC 16FFA1           (../cmds/BBS.post.):00591                    lbra   L0690                                                 * 06EC 16 FF A1       ..!
06EF 3530             (../cmds/BBS.post.):00592         L06EF      puls   Y,X                                                   * 06EF 35 30          50
06F1 3121             (../cmds/BBS.post.):00593                    leay   $01,Y                                                 * 06F1 31 21          1!
06F3 10ACE4           (../cmds/BBS.post.):00594                    cmpy   0,S                                                   * 06F3 10 AC E4       .,d
06F6 2216             (../cmds/BBS.post.):00595                    bhi    L070E                                                 * 06F6 22 16          ".
06F8 3430             (../cmds/BBS.post.):00596                    pshs   Y,X                                                   * 06F8 34 30          40
06FA 308DFAA5         (../cmds/BBS.post.):00597                    leax   >L01A3,PC                                             * 06FA 30 8D FA A5    0.z%
06FE 108E0003         (../cmds/BBS.post.):00598                    ldy    #3                                                    * 06FE 10 8E 00 03    ....
0702 8601             (../cmds/BBS.post.):00599                    lda    #1                                                    * 0702 86 01          ..
0704 103F8A           (../cmds/BBS.post.):00600                    os9    I$Write                                               * 0704 10 3F 8A       .?.
0707 3530             (../cmds/BBS.post.):00601                    puls   Y,X                                                   * 0707 35 30          50
0709 301F             (../cmds/BBS.post.):00602                    leax   -$01,X                                                * 0709 30 1F          0.
070B 16FF82           (../cmds/BBS.post.):00603                    lbra   L0690                                                 * 070B 16 FF 82       ...
070E 313F             (../cmds/BBS.post.):00604         L070E      leay   -$01,Y                                                * 070E 31 3F          1?
0710 16FF7D           (../cmds/BBS.post.):00605                    lbra   L0690                                                 * 0710 16 FF 7D       ..}
0713 3530             (../cmds/BBS.post.):00606         L0713      puls   Y,X                                                   * 0713 35 30          50
0715 3121             (../cmds/BBS.post.):00607                    leay   $01,Y                                                 * 0715 31 21          1!
0717 10ACE4           (../cmds/BBS.post.):00608                    cmpy   0,S                                                   * 0717 10 AC E4       .,d
071A 22F2             (../cmds/BBS.post.):00609                    bhi    L070E                                                 * 071A 22 F2          "r
071C 3430             (../cmds/BBS.post.):00610                    pshs   Y,X                                                   * 071C 34 30          40
071E 308DFA81         (../cmds/BBS.post.):00611                    leax   >L01A3,PC                                             * 071E 30 8D FA 81    0.z.
0722 108E0003         (../cmds/BBS.post.):00612                    ldy    #3                                                    * 0722 10 8E 00 03    ....
0726 8601             (../cmds/BBS.post.):00613                    lda    #1                                                    * 0726 86 01          ..
0728 103F8A           (../cmds/BBS.post.):00614                    os9    I$Write                                               * 0728 10 3F 8A       .?.
072B 3530             (../cmds/BBS.post.):00615                    puls   Y,X                                                   * 072B 35 30          50
072D 301F             (../cmds/BBS.post.):00616                    leax   -$01,X                                                * 072D 30 1F          0.
072F 10ACE4           (../cmds/BBS.post.):00617                    cmpy   0,S                                                   * 072F 10 AC E4       .,d
0732 1022FF5A         (../cmds/BBS.post.):00618                    lbhi   L0690                                                 * 0732 10 22 FF 5A    .".Z
0736 3430             (../cmds/BBS.post.):00619                    pshs   Y,X                                                   * 0736 34 30          40
0738 20D9             (../cmds/BBS.post.):00620                    bra    L0713                                                 * 0738 20 D9           Y
073A 3530             (../cmds/BBS.post.):00621         L073A      puls   Y,X                                                   * 073A 35 30          50
073C 860D             (../cmds/BBS.post.):00622         L073C      lda    #13                                                   * 073C 86 0D          ..
073E A780             (../cmds/BBS.post.):00623                    sta    ,X+                                                   * 073E A7 80          '.
0740 3430             (../cmds/BBS.post.):00624                    pshs   Y,X                                                   * 0740 34 30          40
0742 308DFA5B         (../cmds/BBS.post.):00625                    leax   >L01A1,PC                                             * 0742 30 8D FA 5B    0.z[
0746 108E0001         (../cmds/BBS.post.):00626                    ldy    #1                                                    * 0746 10 8E 00 01    ....
074A 8601             (../cmds/BBS.post.):00627                    lda    #1                                                    * 074A 86 01          ..
074C 103F8C           (../cmds/BBS.post.):00628                    os9    I$WritLn                                              * 074C 10 3F 8C       .?.
074F 3530             (../cmds/BBS.post.):00629                    puls   Y,X                                                   * 074F 35 30          50
0751 3506             (../cmds/BBS.post.):00630                    puls   D                                                     * 0751 35 06          5.
0753 3420             (../cmds/BBS.post.):00631                    pshs   Y                                                     * 0753 34 20          4
0755 A3E4             (../cmds/BBS.post.):00632                    subd   0,S                                                   * 0755 A3 E4          #d
0757 3262             (../cmds/BBS.post.):00633                    leas   $02,S                                                 * 0757 32 62          2b
0759 1F02             (../cmds/BBS.post.):00634                    tfr    D,Y                                                   * 0759 1F 02          ..
075B 3121             (../cmds/BBS.post.):00635                    leay   $01,Y                                                 * 075B 31 21          1!
075D 170080           (../cmds/BBS.post.):00636                    lbsr   L07E0                                                 * 075D 17 00 80       ...
0760 39               (../cmds/BBS.post.):00637                    rts                                                          * 0760 39             9
0761 3530             (../cmds/BBS.post.):00638                    fcc    "50"                                                  * 0761 35 30          50
0763 3506             (../cmds/BBS.post.):00639         L0763      puls   D                                                     * 0763 35 06          5.
0765 3420             (../cmds/BBS.post.):00640                    pshs   Y                                                     * 0765 34 20          4
0767 A3E4             (../cmds/BBS.post.):00641                    subd   0,S                                                   * 0767 A3 E4          #d
0769 3262             (../cmds/BBS.post.):00642                    leas   $02,S                                                 * 0769 32 62          2b
076B C30001           (../cmds/BBS.post.):00643                    addd   #1                                                    * 076B C3 00 01       C..
076E 1F02             (../cmds/BBS.post.):00644                    tfr    D,Y                                                   * 076E 1F 02          ..
0770 5F               (../cmds/BBS.post.):00645                    clrb                                                         * 0770 5F             _
0771 313F             (../cmds/BBS.post.):00646         L0771      leay   -$01,Y                                                * 0771 31 3F          1?
0773 271A             (../cmds/BBS.post.):00647                    beq    L078F                                                 * 0773 27 1A          '.
0775 A682             (../cmds/BBS.post.):00648                    lda    ,-X                                                   * 0775 A6 82          &.
0777 8120             (../cmds/BBS.post.):00649                    cmpa   #32                                                   * 0777 81 20          .
0779 2725             (../cmds/BBS.post.):00650                    beq    L07A0                                                 * 0779 27 25          '%
077B 3430             (../cmds/BBS.post.):00651                    pshs   Y,X                                                   * 077B 34 30          40
077D 308DFA22         (../cmds/BBS.post.):00652                    leax   >L01A3,PC                                             * 077D 30 8D FA 22    0.z"
0781 108E0003         (../cmds/BBS.post.):00653                    ldy    #3                                                    * 0781 10 8E 00 03    ....
0785 8601             (../cmds/BBS.post.):00654                    lda    #1                                                    * 0785 86 01          ..
0787 103F8A           (../cmds/BBS.post.):00655                    os9    I$Write                                               * 0787 10 3F 8A       .?.
078A 5C               (../cmds/BBS.post.):00656                    incb                                                         * 078A 5C             \
078B 3530             (../cmds/BBS.post.):00657                    puls   Y,X                                                   * 078B 35 30          50
078D 20E2             (../cmds/BBS.post.):00658                    bra    L0771                                                 * 078D 20 E2           b
078F 860D             (../cmds/BBS.post.):00659         L078F      lda    #13                                                   * 078F 86 0D          ..
0791 A7884F           (../cmds/BBS.post.):00660                    sta    <$004F,X                                              * 0791 A7 88 4F       '.O
0794 108E00C8         (../cmds/BBS.post.):00661                    ldy    #200                                                  * 0794 10 8E 00 C8    ...H
0798 8601             (../cmds/BBS.post.):00662                    lda    #1                                                    * 0798 86 01          ..
079A 103F8C           (../cmds/BBS.post.):00663                    os9    I$WritLn                                              * 079A 10 3F 8C       .?.
079D 3520             (../cmds/BBS.post.):00664                    puls   Y                                                     * 079D 35 20          5
079F 39               (../cmds/BBS.post.):00665                    rts                                                          * 079F 39             9
07A0 860D             (../cmds/BBS.post.):00666         L07A0      lda    #13                                                   * 07A0 86 0D          ..
07A2 A780             (../cmds/BBS.post.):00667                    sta    ,X+                                                   * 07A2 A7 80          '.
07A4 3430             (../cmds/BBS.post.):00668                    pshs   Y,X                                                   * 07A4 34 30          40
07A6 E746             (../cmds/BBS.post.):00669                    stb    U0006,U                                               * 07A6 E7 46          gF
07A8 31C92191         (../cmds/BBS.post.):00670                    leay   >U2191,U                                              * 07A8 31 C9 21 91    1I!.
07AC A680             (../cmds/BBS.post.):00671         L07AC      lda    ,X+                                                   * 07AC A6 80          &.
07AE A7A0             (../cmds/BBS.post.):00672                    sta    ,Y+                                                   * 07AE A7 A0          '
07B0 5A               (../cmds/BBS.post.):00673                    decb                                                         * 07B0 5A             Z
07B1 26F9             (../cmds/BBS.post.):00674                    bne    L07AC                                                 * 07B1 26 F9          &y
07B3 308DF9EA         (../cmds/BBS.post.):00675                    leax   >L01A1,PC                                             * 07B3 30 8D F9 EA    0.yj
07B7 108E0001         (../cmds/BBS.post.):00676                    ldy    #1                                                    * 07B7 10 8E 00 01    ....
07BB 8601             (../cmds/BBS.post.):00677                    lda    #1                                                    * 07BB 86 01          ..
07BD 103F8C           (../cmds/BBS.post.):00678                    os9    I$WritLn                                              * 07BD 10 3F 8C       .?.
07C0 3530             (../cmds/BBS.post.):00679                    puls   Y,X                                                   * 07C0 35 30          50
07C2 17001B           (../cmds/BBS.post.):00680                    lbsr   L07E0                                                 * 07C2 17 00 1B       ...
07C5 39               (../cmds/BBS.post.):00681                    rts                                                          * 07C5 39             9
07C6 3436             (../cmds/BBS.post.):00682         L07C6      pshs   Y,X,D                                                 * 07C6 34 36          46
07C8 30C921E1         (../cmds/BBS.post.):00683                    leax   >U21E1,U                                              * 07C8 30 C9 21 E1    0I!a
07CC 4F               (../cmds/BBS.post.):00684                    clra                                                         * 07CC 4F             O
07CD C600             (../cmds/BBS.post.):00685                    ldb    #0                                                    * 07CD C6 00          F.
07CF 103F8D           (../cmds/BBS.post.):00686                    os9    I$GetStt                                              * 07CF 10 3F 8D       .?.
07D2 3088E0           (../cmds/BBS.post.):00687                    leax   -$20,X                                                * 07D2 30 88 E0       0.`
07D5 6F8824           (../cmds/BBS.post.):00688                    clr    <$0024,X                                              * 07D5 6F 88 24       o.$
07D8 308820           (../cmds/BBS.post.):00689                    leax   <$0020,X                                              * 07D8 30 88 20       0.
07DB 103F8E           (../cmds/BBS.post.):00690                    os9    I$SetStt                                              * 07DB 10 3F 8E       .?.
07DE 35B6             (../cmds/BBS.post.):00691                    puls   PC,Y,X,D                                              * 07DE 35 B6          56
07E0 3436             (../cmds/BBS.post.):00692         L07E0      pshs   Y,X,D                                                 * 07E0 34 36          46
07E2 30C921E1         (../cmds/BBS.post.):00693                    leax   >U21E1,U                                              * 07E2 30 C9 21 E1    0I!a
07E6 4F               (../cmds/BBS.post.):00694                    clra                                                         * 07E6 4F             O
07E7 C600             (../cmds/BBS.post.):00695                    ldb    #0                                                    * 07E7 C6 00          F.
07E9 103F8D           (../cmds/BBS.post.):00696                    os9    I$GetStt                                              * 07E9 10 3F 8D       .?.
07EC 3088E0           (../cmds/BBS.post.):00697                    leax   -$20,X                                                * 07EC 30 88 E0       0.`
07EF 8601             (../cmds/BBS.post.):00698                    lda    #1                                                    * 07EF 86 01          ..
07F1 A78824           (../cmds/BBS.post.):00699                    sta    <$0024,X                                              * 07F1 A7 88 24       '.$
07F4 308820           (../cmds/BBS.post.):00700                    leax   <$0020,X                                              * 07F4 30 88 20       0.
07F7 4F               (../cmds/BBS.post.):00701                    clra                                                         * 07F7 4F             O
07F8 103F8E           (../cmds/BBS.post.):00702                    os9    I$SetStt                                              * 07F8 10 3F 8E       .?.
07FB 35B6             (../cmds/BBS.post.):00703                    puls   PC,Y,X,D                                              * 07FB 35 B6          56
07FD 3420             (../cmds/BBS.post.):00704         L07FD      pshs   Y                                                     * 07FD 34 20          4
07FF A680             (../cmds/BBS.post.):00705         L07FF      lda    ,X+                                                   * 07FF A6 80          &.
0801 810D             (../cmds/BBS.post.):00706                    cmpa   #13                                                   * 0801 81 0D          ..
0803 1027009F         (../cmds/BBS.post.):00707                    lbeq   L08A6                                                 * 0803 10 27 00 9F    .'..
0807 8130             (../cmds/BBS.post.):00708                    cmpa   #48                                                   * 0807 81 30          .0
0809 25F4             (../cmds/BBS.post.):00709                    bcs    L07FF                                                 * 0809 25 F4          %t
080B 8139             (../cmds/BBS.post.):00710                    cmpa   #57                                                   * 080B 81 39          .9
080D 22F0             (../cmds/BBS.post.):00711                    bhi    L07FF                                                 * 080D 22 F0          "p
080F 301F             (../cmds/BBS.post.):00712                    leax   -$01,X                                                * 080F 30 1F          0.
0811 A680             (../cmds/BBS.post.):00713         L0811      lda    ,X+                                                   * 0811 A6 80          &.
0813 8130             (../cmds/BBS.post.):00714                    cmpa   #48                                                   * 0813 81 30          .0
0815 2506             (../cmds/BBS.post.):00715                    bcs    L081D                                                 * 0815 25 06          %.
0817 8139             (../cmds/BBS.post.):00716                    cmpa   #57                                                   * 0817 81 39          .9
0819 2202             (../cmds/BBS.post.):00717                    bhi    L081D                                                 * 0819 22 02          ".
081B 20F4             (../cmds/BBS.post.):00718                    bra    L0811                                                 * 081B 20 F4           t
081D 3410             (../cmds/BBS.post.):00719         L081D      pshs   X                                                     * 081D 34 10          4.
081F 301F             (../cmds/BBS.post.):00720                    leax   -$01,X                                                * 081F 30 1F          0.
0821 6FC814           (../cmds/BBS.post.):00721                    clr    <U0014,U                                              * 0821 6F C8 14       oH.
0824 6FC815           (../cmds/BBS.post.):00722                    clr    <U0015,U                                              * 0824 6F C8 15       oH.
0827 CC0001           (../cmds/BBS.post.):00723                    ldd    #1                                                    * 0827 CC 00 01       L..
082A EDC816           (../cmds/BBS.post.):00724                    std    <U0016,U                                              * 082A ED C8 16       mH.
082D A682             (../cmds/BBS.post.):00725         L082D      lda    ,-X                                                   * 082D A6 82          &.
082F 8130             (../cmds/BBS.post.):00726                    cmpa   #48                                                   * 082F 81 30          .0
0831 2533             (../cmds/BBS.post.):00727                    bcs    L0866                                                 * 0831 25 33          %3
0833 8139             (../cmds/BBS.post.):00728                    cmpa   #57                                                   * 0833 81 39          .9
0835 222F             (../cmds/BBS.post.):00729                    bhi    L0866                                                 * 0835 22 2F          "/
0837 8030             (../cmds/BBS.post.):00730                    suba   #48                                                   * 0837 80 30          .0
0839 A744             (../cmds/BBS.post.):00731                    sta    U0004,U                                               * 0839 A7 44          'D
083B CC0000           (../cmds/BBS.post.):00732                    ldd    #0                                                    * 083B CC 00 00       L..
083E 6D44             (../cmds/BBS.post.):00733         L083E      tst    U0004,U                                               * 083E 6D 44          mD
0840 2707             (../cmds/BBS.post.):00734                    beq    L0849                                                 * 0840 27 07          '.
0842 E3C816           (../cmds/BBS.post.):00735                    addd   <U0016,U                                              * 0842 E3 C8 16       cH.
0845 6A44             (../cmds/BBS.post.):00736                    dec    U0004,U                                               * 0845 6A 44          jD
0847 20F5             (../cmds/BBS.post.):00737                    bra    L083E                                                 * 0847 20 F5           u
0849 E3C814           (../cmds/BBS.post.):00738         L0849      addd   <U0014,U                                              * 0849 E3 C8 14       cH.
084C EDC814           (../cmds/BBS.post.):00739                    std    <U0014,U                                              * 084C ED C8 14       mH.
084F 860A             (../cmds/BBS.post.):00740                    lda    #10                                                   * 084F 86 0A          ..
0851 A744             (../cmds/BBS.post.):00741                    sta    U0004,U                                               * 0851 A7 44          'D
0853 CC0000           (../cmds/BBS.post.):00742                    ldd    #0                                                    * 0853 CC 00 00       L..
0856 6D44             (../cmds/BBS.post.):00743         L0856      tst    U0004,U                                               * 0856 6D 44          mD
0858 2707             (../cmds/BBS.post.):00744                    beq    L0861                                                 * 0858 27 07          '.
085A E3C816           (../cmds/BBS.post.):00745                    addd   <U0016,U                                              * 085A E3 C8 16       cH.
085D 6A44             (../cmds/BBS.post.):00746                    dec    U0004,U                                               * 085D 6A 44          jD
085F 20F5             (../cmds/BBS.post.):00747                    bra    L0856                                                 * 085F 20 F5           u
0861 EDC816           (../cmds/BBS.post.):00748         L0861      std    <U0016,U                                              * 0861 ED C8 16       mH.
0864 20C7             (../cmds/BBS.post.):00749                    bra    L082D                                                 * 0864 20 C7           G
0866 ECC814           (../cmds/BBS.post.):00750         L0866      ldd    <U0014,U                                              * 0866 EC C8 14       lH.
0869 3510             (../cmds/BBS.post.):00751                    puls   X                                                     * 0869 35 10          5.
086B 35A0             (../cmds/BBS.post.):00752                    puls   PC,Y                                                  * 086B 35 A0          5
086D 3420             (../cmds/BBS.post.):00753         L086D      pshs   Y                                                     * 086D 34 20          4
086F EDC814           (../cmds/BBS.post.):00754                    std    <U0014,U                                              * 086F ED C8 14       mH.
0872 8630             (../cmds/BBS.post.):00755                    lda    #48                                                   * 0872 86 30          .0
0874 A784             (../cmds/BBS.post.):00756                    sta    0,X                                                   * 0874 A7 84          '.
0876 A701             (../cmds/BBS.post.):00757                    sta    $01,X                                                 * 0876 A7 01          '.
0878 CC000A           (../cmds/BBS.post.):00758                    ldd    #10                                                   * 0878 CC 00 0A       L..
087B EDC816           (../cmds/BBS.post.):00759                    std    <U0016,U                                              * 087B ED C8 16       mH.
087E ECC814           (../cmds/BBS.post.):00760                    ldd    <U0014,U                                              * 087E EC C8 14       lH.
0881 8D11             (../cmds/BBS.post.):00761                    bsr    L0894                                                 * 0881 8D 11          ..
0883 CC0001           (../cmds/BBS.post.):00762                    ldd    #1                                                    * 0883 CC 00 01       L..
0886 EDC816           (../cmds/BBS.post.):00763                    std    <U0016,U                                              * 0886 ED C8 16       mH.
0889 ECC814           (../cmds/BBS.post.):00764                    ldd    <U0014,U                                              * 0889 EC C8 14       lH.
088C 8D06             (../cmds/BBS.post.):00765                    bsr    L0894                                                 * 088C 8D 06          ..
088E 860D             (../cmds/BBS.post.):00766                    lda    #13                                                   * 088E 86 0D          ..
0890 A784             (../cmds/BBS.post.):00767                    sta    0,X                                                   * 0890 A7 84          '.
0892 35A0             (../cmds/BBS.post.):00768                    puls   PC,Y                                                  * 0892 35 A0          5
0894 A3C816           (../cmds/BBS.post.):00769         L0894      subd   <U0016,U                                              * 0894 A3 C8 16       #H.
0897 2504             (../cmds/BBS.post.):00770                    bcs    L089D                                                 * 0897 25 04          %.
0899 6C84             (../cmds/BBS.post.):00771                    inc    0,X                                                   * 0899 6C 84          l.
089B 20F7             (../cmds/BBS.post.):00772                    bra    L0894                                                 * 089B 20 F7           w
089D E3C816           (../cmds/BBS.post.):00773         L089D      addd   <U0016,U                                              * 089D E3 C8 16       cH.
08A0 EDC814           (../cmds/BBS.post.):00774                    std    <U0014,U                                              * 08A0 ED C8 14       mH.
08A3 3001             (../cmds/BBS.post.):00775                    leax   $01,X                                                 * 08A3 30 01          0.
08A5 39               (../cmds/BBS.post.):00776                    rts                                                          * 08A5 39             9
08A6 CCFFFF           (../cmds/BBS.post.):00777         L08A6      ldd    #-1                                                   * 08A6 CC FF FF       L..
08A9 35A0             (../cmds/BBS.post.):00778                    puls   PC,Y                                                  * 08A9 35 A0          5
                      (../cmds/BBS.post.):00779         
08AB 7AABAA           (../cmds/BBS.post.):00780                    emod
     08AE             (../cmds/BBS.post.):00781         eom        equ    *
                      (../cmds/BBS.post.):00782                    end
