                      (         dasm.asm):00001         *****************************
                      (         dasm.asm):00002         * OS9 DASM VERSION 1.0      *
                      (         dasm.asm):00003         * (C)1992 J.R.COLLYER       *
                      (         dasm.asm):00004         *****************************
                      (         dasm.asm):00005         
                      (         dasm.asm):00006                  ifp1
                      (         dasm.asm):00007                  use  os9.d
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0018                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
0018                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
0018                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
0018                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
0018                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
0018                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
                      (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0018                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0018                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
0018                  (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0024                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0024                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0034                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0034                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0034                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0034                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0034                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
0034                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
0034                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
0034                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
0034                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
0034                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
0034                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0034                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0034                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0034                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0034                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0034                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0034                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0034                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0034                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0034                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0034                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
0034                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
0034                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
0034                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
0034                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
0034                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
0034                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0034                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0034                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0034                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0034                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0034                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0034                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0034                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0034                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
00B1                  (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
00B1                  (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
00B1                  (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
00B1                  (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
00B1                  (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
00B1                  (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
00B1                  (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
00B1                  (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
00B1                  (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
00B1                  (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
00B1                  (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
00B1                  (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
00B1                  (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
00B1                  (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
00B1                  (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
00B1                  (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
00B1                  (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0000                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0000                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0002                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0004             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0025                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0025                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0025                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
0025                  (            os9.d):00820         DefIOSiz       EQU       12
0025                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
0025                  (            os9.d):00824         P$ID           RMB       1                   Process ID
0025                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
0025                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
0025                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
0025                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
0025                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
0025                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
0025                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
0025                  (            os9.d):00832         P$User         RMB       2                   User Index $09
0025                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
0025                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
0025                  (            os9.d):00835         P$State        RMB       1                   Status $0D
0025                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
0025                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
0025                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
0025                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
0025                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
0025                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
0025                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
0025                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
0025                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
0025                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
0025                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
0025                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
0025                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
0025                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
0025                  (            os9.d):00855         SysState       EQU       %10000000
0025                  (            os9.d):00856         TimSleep       EQU       %01000000
0025                  (            os9.d):00857         TimOut         EQU       %00100000
0025                  (            os9.d):00858         ImgChg         EQU       %00010000
0025                  (            os9.d):00859         Condem         EQU       %00000010
0025                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
0009                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     0009             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     0009             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         dasm.asm):00008                  endc
                      (         dasm.asm):00009         
0000 87CD1688000D1181 (         dasm.asm):00010         begin    mod  len,name,prgrm+objct,reent+1,entry,dsize
     B600256440
     000A             (         dasm.asm):00011         lf       equ  $0A
     000D             (         dasm.asm):00012         cr       equ  $0D
     0020             (         dasm.asm):00013         sp       equ  $20
     00FF             (         dasm.asm):00014         mask     equ  $FF
     00FF             (         dasm.asm):00015         on       equ  $FF
     00C8             (         dasm.asm):00016         stacksz  equ  200
     6000             (         dasm.asm):00017         buffsiz  equ  24576
     2000             (         dasm.asm):00018         pagesiz  equ  8192
     0003             (         dasm.asm):00019         pagenum  equ  3
0000.                 (         dasm.asm):00020         path     rmb  1
0001.                 (         dasm.asm):00021         dpath    rmb  1
0002.                 (         dasm.asm):00022         mode     rmb  1
0003.                 (         dasm.asm):00023         pflag    rmb  1
0004.                 (         dasm.asm):00024         bflag    rmb  1
0005.                 (         dasm.asm):00025         count    rmb  1
0006.                 (         dasm.asm):00026         errnum   rmb  1
0007.                 (         dasm.asm):00027         listflg  rmb  1
0008.                 (         dasm.asm):00028         linkcnt  rmb  1
0009.                 (         dasm.asm):00029         address  rmb  2
000B.                 (         dasm.asm):00030         saveadr  rmb  2
000D.                 (         dasm.asm):00031         auxaddr  rmb  2
000F.                 (         dasm.asm):00032         endaddr  rmb  2
0011.                 (         dasm.asm):00033         moduloc  rmb  2
0013.                 (         dasm.asm):00034         pointer  rmb  2
0015.                 (         dasm.asm):00035         endbuff  rmb  2
0017.                 (         dasm.asm):00036         counter  rmb  2
0019.                 (         dasm.asm):00037         linkaddr rmb  2
001B.                 (         dasm.asm):00038         curstack rmb  2
001D.                 (         dasm.asm):00039         lststack rmb  2
001F.                 (         dasm.asm):00040         firstack rmb  2
0021.                 (         dasm.asm):00041         branchad rmb  2
0023.                 (         dasm.asm):00042         offsopt  rmb  1
0024.                 (         dasm.asm):00043         offsflg  rmb  1
0025.                 (         dasm.asm):00044         gimicnt  rmb  1
0026.                 (         dasm.asm):00045         gimidat  rmb  3
0029.                 (         dasm.asm):00046         gimisys  rmb  5
002E.                 (         dasm.asm):00047         xaddress rmb  2
0030.                 (         dasm.asm):00048         pcaller  rmb  1
0031.                 (         dasm.asm):00049         peflg    rmb  1
0032.                 (         dasm.asm):00050         psflg    rmb  1
0033.                 (         dasm.asm):00051         paddress rmb  2
0035.                 (         dasm.asm):00052         pendaddr rmb  2
0037.                 (         dasm.asm):00053         turn     rmb  1
0038.                 (         dasm.asm):00054         status   rmb  4
003C.                 (         dasm.asm):00055         eko      rmb  1
003D.                 (         dasm.asm):00056                  rmb  27
0058.                 (         dasm.asm):00057         linknam  rmb  stacksz
0120.                 (         dasm.asm):00058         iobuff   rmb  stacksz
01E8.                 (         dasm.asm):00059         adrstack rmb  stacksz
02B0.                 (         dasm.asm):00060         buffer   rmb  buffsiz
62B0.                 (         dasm.asm):00061                  rmb  stacksz
6378.                 (         dasm.asm):00062                  rmb  stacksz
     6440             (         dasm.asm):00063         dsize    equ  .
000D 446173ED         (         dasm.asm):00064         name     fcs  /Dasm/
0011 2843293139393220 (         dasm.asm):00065                  fcc   /(C)1992 J.R.COLLYER/
     4A2E522E434F4C4C
     594552
0024 01               (         dasm.asm):00066                  fcb  1 
0025 5A               (         dasm.asm):00067         entry    decb
0026 2703             (         dasm.asm):00068                  beq  noparams
0028 16073B           (         dasm.asm):00069                  lbra params
002B 5C               (         dasm.asm):00070         noparams incb
002C D700             (         dasm.asm):00071                  stb  path
002E 318D12BF         (         dasm.asm):00072                  leay copyr,pcr
0032 8D72             (         dasm.asm):00073                  bsr  echo
0034 170615           (         dasm.asm):00074                  lbsr init
0037 318D12D4         (         dasm.asm):00075         centry   leay prompt,pcr
003B 8D69             (         dasm.asm):00076                  bsr  echo
003D 1700A9           (         dasm.asm):00077                  lbsr getsta
0040 6FC83C           (         dasm.asm):00078                  clr  eko,u
0043 1700B1           (         dasm.asm):00079                  lbsr setsta
0046 4F               (         dasm.asm):00080                  clra
0047 30C90120         (         dasm.asm):00081                  leax iobuff,u
004B C601             (         dasm.asm):00082         inkey    ldb  #1
004D 103F8D           (         dasm.asm):00083                  os9  i$getstt
0050 25F9             (         dasm.asm):00084                  bcs  inkey
0052 108E0001         (         dasm.asm):00085                  ldy  #1
0056 103F89           (         dasm.asm):00086                  os9  i$read
0059 1025019A         (         dasm.asm):00087                  lbcs exit
005D 318D15E7         (         dasm.asm):00088                  leay commands,pcr
0061 A684             (         dasm.asm):00089                  lda  ,x        
0063 8161             (         dasm.asm):00090                  cmpa #'a
0065 2504             (         dasm.asm):00091                  blo  cloop     
0067 8020             (         dasm.asm):00092                  suba #sp      
0069 A784             (         dasm.asm):00093                  sta  ,x        
006B 3123             (         dasm.asm):00094         cloop    leay 3,y       
006D A6A4             (         dasm.asm):00095                  lda  ,y        
006F 270D             (         dasm.asm):00096                  beq  errcom    
0071 A184             (         dasm.asm):00097                  cmpa ,x        
0073 26F6             (         dasm.asm):00098                  bne  cloop
0075 EC21             (         dasm.asm):00099                  ldd  1,y       
0077 318C86           (         dasm.asm):00100                  leay begin,pcr 
007A ADAB             (         dasm.asm):00101                  jsr  d,y       
007C 20B9             (         dasm.asm):00102                  bra  centry    
007E 8D02             (         dasm.asm):00103         errcom   bsr  comerr    
0080 20B5             (         dasm.asm):00104                  bra  centry    
0082 8D7B             (         dasm.asm):00105         comerr   bsr  echoon
0084 318D128E         (         dasm.asm):00106                  leay whatmsg,pcr
0088 8D1C             (         dasm.asm):00107                  bsr  echo
008A 39               (         dasm.asm):00108                  rts
008B D706             (         dasm.asm):00109         errmsg   stb  errnum
008D 318D127E         (         dasm.asm):00110                  leay prompt,pcr
0091 8D13             (         dasm.asm):00111                  bsr  echo
0093 D606             (         dasm.asm):00112                  ldb  errnum
0095 8602             (         dasm.asm):00113                  lda  #2
0097 103F0F           (         dasm.asm):00114                  os9  f$perr
009A 39               (         dasm.asm):00115                  rts
009B 860D             (         dasm.asm):00116         crlf     lda  #cr
009D A780             (         dasm.asm):00117                  sta  ,x+
009F 4F               (         dasm.asm):00118                  clra
00A0 A784             (         dasm.asm):00119                  sta  ,x
00A2 31C90120         (         dasm.asm):00120                  leay iobuff,u
00A6 3440             (         dasm.asm):00121         echo     pshs u
00A8 1F21             (         dasm.asm):00122                  tfr  y,x
00AA 1F23             (         dasm.asm):00123                  tfr  y,u
00AC 108E0000         (         dasm.asm):00124                  ldy  #0
00B0 E6C0             (         dasm.asm):00125         outsize  ldb  ,u+
00B2 2704             (         dasm.asm):00126                  beq  print
00B4 3121             (         dasm.asm):00127                  leay 1,y
00B6 20F8             (         dasm.asm):00128                  bra  outsize
00B8 9600             (         dasm.asm):00129         print    lda  path
00BA 103F8C           (         dasm.asm):00130                  os9  i$writln
00BD 1025011B         (         dasm.asm):00131                  lbcs fatal
00C1 3540             (         dasm.asm):00132                  puls u
00C3 39               (         dasm.asm):00133                  rts
00C4 30C90120         (         dasm.asm):00134         input    leax iobuff,u
00C8 108E00C8         (         dasm.asm):00135                  ldy  #stacksz
00CC 4F               (         dasm.asm):00136                  clra
00CD 103F8B           (         dasm.asm):00137                  os9  i$readln
00D0 25B9             (         dasm.asm):00138                  bcs  errmsg
00D2 39               (         dasm.asm):00139                  rts
00D3 A680             (         dasm.asm):00140         skip     lda  ,x+
00D5 8120             (         dasm.asm):00141                  cmpa #sp
00D7 27FA             (         dasm.asm):00142                  beq  skip
00D9 301F             (         dasm.asm):00143                  leax -1,x
00DB 39               (         dasm.asm):00144                  rts
00DC 8D21             (         dasm.asm):00145         commons  bsr  echoon
00DE 8DC6             (         dasm.asm):00146                  bsr  echo
00E0 8DE2             (         dasm.asm):00147                  bsr  input
00E2 30C90120         (         dasm.asm):00148                  leax iobuff,u
00E6 8DEB             (         dasm.asm):00149                  bsr  skip
00E8 39               (         dasm.asm):00150                  rts
00E9 30C838           (         dasm.asm):00151         getsta   leax status,u
00EC CC0000           (         dasm.asm):00152                  ldd  #0
00EF 103F8D           (         dasm.asm):00153                  os9  i$getstt
00F2 10250101         (         dasm.asm):00154                  lbcs exit
00F6 39               (         dasm.asm):00155                  rts
00F7 103F8E           (         dasm.asm):00156         setsta   os9  i$setstt
00FA 102500F9         (         dasm.asm):00157                  lbcs exit
00FE 39               (         dasm.asm):00158                  rts
00FF 8DE8             (         dasm.asm):00159         echoon   bsr  getsta
0101 6CC83C           (         dasm.asm):00160                  inc  eko,u
0104 20F1             (         dasm.asm):00161                  bra  setsta
0106 318D1278         (         dasm.asm):00162         shell    leay shellmsg,pcr
010A 8DD0             (         dasm.asm):00163                  bsr  commons
010C 4F               (         dasm.asm):00164                  clra           
010D 5F               (         dasm.asm):00165                  clrb
010E 3440             (         dasm.asm):00166                  pshs u
0110 1F13             (         dasm.asm):00167                  tfr  x,u       
0112 1F02             (         dasm.asm):00168                  tfr  d,y       
0114 3121             (         dasm.asm):00169         shell2   leay 1,y       
0116 A680             (         dasm.asm):00170                  lda  ,x+       
0118 810D             (         dasm.asm):00171                  cmpa #cr      
011A 26F8             (         dasm.asm):00172                  bne  shell2    
011C 4F               (         dasm.asm):00173                  clra           
011D 308D0E71         (         dasm.asm):00174                  leax rshell,pcr
0121 103F03           (         dasm.asm):00175                  os9  f$fork
0124 102500B4         (         dasm.asm):00176                  lbcs fatal 
0128 103F04           (         dasm.asm):00177                  os9  f$wait
012B 102500AD         (         dasm.asm):00178                  lbcs fatal 
012F 3540             (         dasm.asm):00179                  puls u
0131 39               (         dasm.asm):00180         sheout   rts
0132 318D123F         (         dasm.asm):00181         link     leay linkmsg,pcr
0136 8DA4             (         dasm.asm):00182                  bsr  commons
0138 810D             (         dasm.asm):00183                  cmpa #cr
013A 27F5             (         dasm.asm):00184                  beq  sheout
013C 812E             (         dasm.asm):00185                  cmpa #'.
013E 276D             (         dasm.asm):00186                  beq  setlinke
0140 8140             (         dasm.asm):00187                  cmpa #'@
0142 2761             (         dasm.asm):00188                  beq  setlinkx
0144 4F               (         dasm.asm):00189         pelink   clra
0145 3410             (         dasm.asm):00190                  pshs x
0147 3440             (         dasm.asm):00191                  pshs u
0149 103F00           (         dasm.asm):00192                  os9  f$link
014C 10250091         (         dasm.asm):00193                  lbcs lfatal 
0150 1F31             (         dasm.asm):00194                  tfr  u,x
0152 EC02             (         dasm.asm):00195                  ldd  2,x
0154 830003           (         dasm.asm):00196                  subd #3
0157 3540             (         dasm.asm):00197                  puls u
0159 AFC811           (         dasm.asm):00198                  stx  moduloc,u
015C 10AF49           (         dasm.asm):00199                  sty  address,u
015F 10AFC819         (         dasm.asm):00200                  sty  linkaddr,u
0163 318B             (         dasm.asm):00201                  leay d,x
0165 10AF4F           (         dasm.asm):00202                  sty  endaddr,u
0168 3510             (         dasm.asm):00203                  puls x
016A 3450             (         dasm.asm):00204                  pshs x,u
016C 103F10           (         dasm.asm):00205                  os9  f$prsnam
016F 3550             (         dasm.asm):00206                  puls x,u
0171 1025FF16         (         dasm.asm):00207                  lbcs errmsg
0175 3450             (         dasm.asm):00208                  pshs x,u
0177 31C858           (         dasm.asm):00209                  leay linknam,u
017A 103F11           (         dasm.asm):00210                  os9  f$cmpnam
017D 3550             (         dasm.asm):00211                  puls x,u
017F 2509             (         dasm.asm):00212                  bcs  savlnam
0181 A648             (         dasm.asm):00213                  lda  linkcnt,u
0183 81FF             (         dasm.asm):00214                  cmpa #on
0185 2402             (         dasm.asm):00215                  bhs  lnkout
0187 6C48             (         dasm.asm):00216                  inc  linkcnt,u
0189 39               (         dasm.asm):00217         lnkout   rts
018A 3410             (         dasm.asm):00218         savlnam  pshs x
018C 6F48             (         dasm.asm):00219                  clr  linkcnt,u
018E 31C858           (         dasm.asm):00220                  leay linknam,u
0191 A680             (         dasm.asm):00221         putkinam lda  ,x+
0193 810D             (         dasm.asm):00222                  cmpa #cr
0195 2704             (         dasm.asm):00223                  beq  sitit
0197 A7A0             (         dasm.asm):00224                  sta  ,y+
0199 20F6             (         dasm.asm):00225                  bra  putkinam
019B 313F             (         dasm.asm):00226         sitit    leay -1,y
019D A6A4             (         dasm.asm):00227                  lda  ,y
019F 8A80             (         dasm.asm):00228                  ora  #$80
01A1 A7A4             (         dasm.asm):00229                  sta  ,y
01A3 3590             (         dasm.asm):00230                  puls x,pc
01A5 10AEC819         (         dasm.asm):00231         setlinkx ldy  linkaddr,u
01A9 10AF49           (         dasm.asm):00232                  sty  address,u
01AC 39               (         dasm.asm):00233                  rts
01AD 10AEC811         (         dasm.asm):00234         setlinke ldy  moduloc,u
01B1 10AF49           (         dasm.asm):00235                  sty  address,u
01B4 39               (         dasm.asm):00236                  rts
01B5 17FF47           (         dasm.asm):00237         unlink   lbsr echoon
01B8 6D48             (         dasm.asm):00238                  tst  linkcnt,u
01BA 2718             (         dasm.asm):00239                  beq  notlink
01BC 6A48             (         dasm.asm):00240                  dec  linkcnt,u
01BE 318D1181         (         dasm.asm):00241                  leay ulinkmsg,pcr
01C2 17FEE1           (         dasm.asm):00242                  lbsr echo
01C5 3440             (         dasm.asm):00243                  pshs u
01C7 1E31             (         dasm.asm):00244                  exg  u,x
01C9 EE8811           (         dasm.asm):00245                  ldu  moduloc,x
01CC 103F02           (         dasm.asm):00246                  os9  f$unlink
01CF 250B             (         dasm.asm):00247                  bcs  fatal
01D1 3540             (         dasm.asm):00248                  puls u
01D3 39               (         dasm.asm):00249                  rts
01D4 318D1182         (         dasm.asm):00250         notlink  leay notlkmsg,pcr
01D8 17FECB           (         dasm.asm):00251                  lbsr echo
01DB 39               (         dasm.asm):00252                  rts
01DC 3540             (         dasm.asm):00253         fatal    puls u         
01DE 16FEAA           (         dasm.asm):00254                  lbra errmsg
01E1 3540             (         dasm.asm):00255         lfatal   puls u
01E3 3510             (         dasm.asm):00256                  puls x
01E5 16FEA3           (         dasm.asm):00257                  lbra errmsg
01E8 318D12EA         (         dasm.asm):00258         quit     leay exitmsg,pcr
01EC 17FEED           (         dasm.asm):00259                  lbsr commons
01EF 8A20             (         dasm.asm):00260                  ora  #sp
01F1 8179             (         dasm.asm):00261                  cmpa #'y
01F3 2701             (         dasm.asm):00262                  beq  exexit
01F5 39               (         dasm.asm):00263                  rts
01F6 5F               (         dasm.asm):00264         exexit   clrb
01F7 103F06           (         dasm.asm):00265         exit     os9  f$exit
01FA 17FF02           (         dasm.asm):00266         help     lbsr echoon
01FD 318D1228         (         dasm.asm):00267                  leay helpmsg,pcr
0201 17FEA2           (         dasm.asm):00268                  lbsr echo
0204 39               (         dasm.asm):00269                  rts
0205 318D1129         (         dasm.asm):00270         jump     leay jumpmsg,pcr
0209 17FED0           (         dasm.asm):00271                  lbsr commons
020C 3149             (         dasm.asm):00272         pjump    leay address,u
020E 10AF4D           (         dasm.asm):00273                  sty  auxaddr,u
0211 8D1A             (         dasm.asm):00274                  bsr  ejaddr
0213 5D               (         dasm.asm):00275                  tstb
0214 2675             (         dasm.asm):00276                  bne  adrerr
0216 EC49             (         dasm.asm):00277                  ldd  address,u
0218 EDC833           (         dasm.asm):00278                  std  paddress,u
021B 6DC823           (         dasm.asm):00279                  tst  offsopt,u
021E 2602             (         dasm.asm):00280                  bne  pjump1
0220 2009             (         dasm.asm):00281                  bra  pjump2
0222 3406             (         dasm.asm):00282         pjump1   pshs d
0224 ECC811           (         dasm.asm):00283                  ldd  moduloc,u
0227 E3E1             (         dasm.asm):00284                  addd ,s++
0229 ED49             (         dasm.asm):00285                  std  address,u
022B 5F               (         dasm.asm):00286         pjump2   clrb
022C 39               (         dasm.asm):00287                  rts
022D 810D             (         dasm.asm):00288         ejaddr   cmpa #cr
022F 2750             (         dasm.asm):00289                  beq  addrerr    
0231 ECA4             (         dasm.asm):00290                  ldd  ,y
0233 ED4B             (         dasm.asm):00291                  std  saveadr,u
0235 0F05             (         dasm.asm):00292                  clr  count
0237 5F               (         dasm.asm):00293                  clrb
0238 8D23             (         dasm.asm):00294                  bsr  hexcalc
023A 0D05             (         dasm.asm):00295                  tst  count
023C 2743             (         dasm.asm):00296                  beq  addrerr
023E 0F05             (         dasm.asm):00297                  clr  count
0240 8D1B             (         dasm.asm):00298                  bsr  hexcalc
0242 0D05             (         dasm.asm):00299                  tst  count
0244 273B             (         dasm.asm):00300                  beq  addrerr
0246 E7A0             (         dasm.asm):00301                  stb  ,y+
0248 0F05             (         dasm.asm):00302                  clr  count
024A 5F               (         dasm.asm):00303                  clrb
024B 8D10             (         dasm.asm):00304                  bsr  hexcalc
024D 0D05             (         dasm.asm):00305                  tst  count
024F 2730             (         dasm.asm):00306                  beq  addrerr
0251 0F05             (         dasm.asm):00307                  clr  count
0253 8D08             (         dasm.asm):00308                  bsr  hexcalc
0255 0D05             (         dasm.asm):00309                  tst  count
0257 2728             (         dasm.asm):00310                  beq  addrerr
0259 E7A4             (         dasm.asm):00311                  stb  ,y
025B 5F               (         dasm.asm):00312                  clrb
025C 39               (         dasm.asm):00313                  rts
025D A684             (         dasm.asm):00314         hexcalc  lda  ,x
025F 8130             (         dasm.asm):00315                  cmpa #'0
0261 251D             (         dasm.asm):00316                  blo  jout
0263 8139             (         dasm.asm):00317                  cmpa #'9
0265 230C             (         dasm.asm):00318                  bls  makebin
0267 84DF             (         dasm.asm):00319                  anda #%11011111
0269 8141             (         dasm.asm):00320                  cmpa #'A
026B 2513             (         dasm.asm):00321                  blo  jout
026D 8146             (         dasm.asm):00322                  cmpa #'F
026F 220F             (         dasm.asm):00323                  bhi  jout
0271 8007             (         dasm.asm):00324                  suba #7
0273 8030             (         dasm.asm):00325         makebin  suba #'0
0275 3402             (         dasm.asm):00326                  pshs a
0277 8610             (         dasm.asm):00327                  lda  #16
0279 3D               (         dasm.asm):00328                  mul
027A EBE0             (         dasm.asm):00329                  addb ,s+
027C 3001             (         dasm.asm):00330                  leax 1,x
027E 0C05             (         dasm.asm):00331                  inc  count
0280 39               (         dasm.asm):00332         jout     rts
0281 EC4B             (         dasm.asm):00333         addrerr  ldd  saveadr,u
0283 10AE4D           (         dasm.asm):00334                  ldy  auxaddr,u
0286 EDA4             (         dasm.asm):00335                  std  ,y
0288 5F               (         dasm.asm):00336         bckcall  clrb
0289 5A               (         dasm.asm):00337                  decb
028A 39               (         dasm.asm):00338                  rts
028B 6DC830           (         dasm.asm):00339         adrerr   tst  pcaller,u
028E 26F8             (         dasm.asm):00340                  bne  bckcall
0290 318D107B         (         dasm.asm):00341                  leay prompt,pcr
0294 17FE0F           (         dasm.asm):00342                  lbsr echo
0297 318D1084         (         dasm.asm):00343                  leay adrmsg,pcr
029B 17FE08           (         dasm.asm):00344                  lbsr echo
029E 39               (         dasm.asm):00345                  rts
029F 318D11C2         (         dasm.asm):00346         chngend  leay endadmsg,pcr
02A3 17FE36           (         dasm.asm):00347                  lbsr commons
02A6 314F             (         dasm.asm):00348         pchgend  leay endaddr,u
02A8 10AF4D           (         dasm.asm):00349                  sty  auxaddr,u
02AB 8D80             (         dasm.asm):00350                  bsr  ejaddr
02AD 5D               (         dasm.asm):00351                  tstb
02AE 26DB             (         dasm.asm):00352                  bne  adrerr
02B0 EC4F             (         dasm.asm):00353                  ldd  endaddr,u
02B2 EDC835           (         dasm.asm):00354                  std  pendaddr,u
02B5 6DC823           (         dasm.asm):00355                  tst  offsopt,u
02B8 2602             (         dasm.asm):00356                  bne  pchg1
02BA 5F               (         dasm.asm):00357         pchg     clrb
02BB 39               (         dasm.asm):00358                  rts
02BC 3406             (         dasm.asm):00359         pchg1    pshs d
02BE ECC811           (         dasm.asm):00360                  ldd  moduloc,u
02C1 E3E1             (         dasm.asm):00361                  addd ,s++
02C3 ED4F             (         dasm.asm):00362                  std  endaddr,u
02C5 20F3             (         dasm.asm):00363                  bra  pchg
02C7 318D10C0         (         dasm.asm):00364         setmode  leay getmode,pcr
02CB 17FE0E           (         dasm.asm):00365                  lbsr commons
02CE 3440             (         dasm.asm):00366                  pshs u
02D0 3342             (         dasm.asm):00367                  leau mode,u
02D2 8D43             (         dasm.asm):00368                  bsr  onoff
02D4 3540             (         dasm.asm):00369                  puls u
02D6 318D1035         (         dasm.asm):00370         tellmode leay prompt,pcr
02DA 17FDC9           (         dasm.asm):00371                  lbsr echo
02DD 0D02             (         dasm.asm):00372                  tst  mode
02DF 2B06             (         dasm.asm):00373                  bmi  pmon
02E1 318D10B7         (         dasm.asm):00374                  leay modemsg2,pcr
02E5 2004             (         dasm.asm):00375                  bra  pmode
02E7 318D10A8         (         dasm.asm):00376         pmon     leay modemsg1,pcr
02EB 17FDB8           (         dasm.asm):00377         pmode    lbsr echo
02EE 39               (         dasm.asm):00378                  rts
02EF 318D10B3         (         dasm.asm):00379         printer  leay prtermsg,pcr
02F3 17FDE6           (         dasm.asm):00380                  lbsr commons   
02F6 3440             (         dasm.asm):00381                  pshs u
02F8 3343             (         dasm.asm):00382                  leau pflag,u
02FA 8D1B             (         dasm.asm):00383                  bsr  onoff
02FC 3540             (         dasm.asm):00384                  puls u
02FE 318D100D         (         dasm.asm):00385         tellprt  leay prompt,pcr
0302 17FDA1           (         dasm.asm):00386                  lbsr echo
0305 0D03             (         dasm.asm):00387                  tst  pflag
0307 2B06             (         dasm.asm):00388                  bmi  ponm
0309 318D10B1         (         dasm.asm):00389                  leay scrmsg,pcr
030D 2004             (         dasm.asm):00390                  bra  pp
030F 318D109E         (         dasm.asm):00391         ponm     leay prtmsg,pcr
0313 17FD90           (         dasm.asm):00392         pp       lbsr echo
0316 39               (         dasm.asm):00393                  rts
0317 812B             (         dasm.asm):00394         onoff    cmpa #'+
0319 2708             (         dasm.asm):00395                  beq  iton
031B 812D             (         dasm.asm):00396                  cmpa #'-
031D 2608             (         dasm.asm):00397                  bne  exonoff
031F 6FC4             (         dasm.asm):00398                  clr  ,u
0321 2004             (         dasm.asm):00399                  bra  exonoff
0323 86FF             (         dasm.asm):00400         iton     lda  #on
0325 A7C4             (         dasm.asm):00401                  sta  ,u
0327 39               (         dasm.asm):00402         exonoff  rts
0328 318D10A0         (         dasm.asm):00403         bcom     leay buffmsg,pcr
032C 17FDAD           (         dasm.asm):00404                  lbsr commons
032F 810D             (         dasm.asm):00405                  cmpa #cr
0331 271C             (         dasm.asm):00406                  beq  tellb
0333 812E             (         dasm.asm):00407                  cmpa #'.
0335 2746             (         dasm.asm):00408                  beq  buffe
0337 8140             (         dasm.asm):00409                  cmpa #'@
0339 2748             (         dasm.asm):00410                  beq  buffx
033B 1F89             (         dasm.asm):00411                  tfr  a,b
033D CA20             (         dasm.asm):00412                  orb  #sp
033F C163             (         dasm.asm):00413                  cmpb #'c
0341 2748             (         dasm.asm):00414                  beq  clsbuff
0343 C16C             (         dasm.asm):00415                  cmpb #'l
0345 272D             (         dasm.asm):00416                  beq  list
0347 3440             (         dasm.asm):00417                  pshs u
0349 3344             (         dasm.asm):00418                  leau bflag,u
034B 8DCA             (         dasm.asm):00419                  bsr  onoff
034D 3540             (         dasm.asm):00420                  puls u
034F 318D0FBC         (         dasm.asm):00421         tellb    leay prompt,pcr
0353 17FD50           (         dasm.asm):00422                  lbsr echo
0356 0D04             (         dasm.asm):00423                  tst  bflag
0358 2B06             (         dasm.asm):00424                  bmi  bonm
035A 318D1078         (         dasm.asm):00425                  leay buff1,pcr
035E 2004             (         dasm.asm):00426                  bra  bmexit
0360 318D107E         (         dasm.asm):00427         bonm     leay buff2,pcr
0364 17FD3F           (         dasm.asm):00428         bmexit   lbsr echo
0367 39               (         dasm.asm):00429                  rts
0368 6D47             (         dasm.asm):00430         time     tst  listflg,u
036A 2707             (         dasm.asm):00431                  beq  timeout
036C 8E3FFF           (         dasm.asm):00432                  ldx  #$3FFF
036F 301F             (         dasm.asm):00433         timel    leax -1,x
0371 26FC             (         dasm.asm):00434                  bne  timel
0373 39               (         dasm.asm):00435         timeout  rts
0374 86FF             (         dasm.asm):00436         list     lda  #on
0376 A747             (         dasm.asm):00437                  sta  listflg,u
0378 8D2E             (         dasm.asm):00438                  bsr  listbuff
037A 6F47             (         dasm.asm):00439                  clr  listflg,u
037C 39               (         dasm.asm):00440                  rts
037D 31C902B0         (         dasm.asm):00441         buffe    leay buffer,u
0381 2004             (         dasm.asm):00442                  bra  buffex
0383 10AEC82E         (         dasm.asm):00443         buffx    ldy  xaddress,u
0387 10AF49           (         dasm.asm):00444         buffex   sty  address,u
038A 39               (         dasm.asm):00445                  rts
038B 30C902B0         (         dasm.asm):00446         clsbuff  leax buffer,u
038F 3410             (         dasm.asm):00447                  pshs x
0391 6F80             (         dasm.asm):00448         clsloop  clr  ,x+
0393 ACC813           (         dasm.asm):00449                  cmpx pointer,u
0396 25F9             (         dasm.asm):00450                  blo  clsloop
0398 3510             (         dasm.asm):00451                  puls x
039A AFC813           (         dasm.asm):00452                  stx  pointer,u
039D 6FC817           (         dasm.asm):00453                  clr  counter,u
03A0 6FC818           (         dasm.asm):00454                  clr  1+counter,u
03A3 0F02             (         dasm.asm):00455                  clr  mode
03A5 0F04             (         dasm.asm):00456                  clr  bflag
03A7 39               (         dasm.asm):00457                  rts
03A8 AEC817           (         dasm.asm):00458         listbuff ldx  counter,u
03AB 8C0000           (         dasm.asm):00459                  cmpx #0
03AE 2729             (         dasm.asm):00460                  beq  listout
03B0 3410             (         dasm.asm):00461                  pshs x
03B2 31C902B0         (         dasm.asm):00462                  leay buffer,u
03B6 2006             (         dasm.asm):00463                  bra  lbl1
03B8 3520             (         dasm.asm):00464         lbloop   puls y
03BA A6A0             (         dasm.asm):00465         lbl0     lda  ,y+
03BC 26FC             (         dasm.asm):00466                  bne  lbl0
03BE 3420             (         dasm.asm):00467         lbl1     pshs y
03C0 17FCE3           (         dasm.asm):00468                  lbsr echo
03C3 8DA3             (         dasm.asm):00469                  bsr  time
03C5 AEC817           (         dasm.asm):00470                  ldx  counter,u
03C8 301F             (         dasm.asm):00471                  leax -1,x
03CA AFC817           (         dasm.asm):00472                  stx  counter,u
03CD 8C0000           (         dasm.asm):00473                  cmpx #0
03D0 26E6             (         dasm.asm):00474                  bne  lbloop
03D2 3520             (         dasm.asm):00475                  puls y
03D4 3510             (         dasm.asm):00476                  puls x
03D6 AFC817           (         dasm.asm):00477                  stx  counter,u
03D9 39               (         dasm.asm):00478         listout  rts
03DA 17FD22           (         dasm.asm):00479         back     lbsr echoon    
03DD 0F02             (         dasm.asm):00480                  clr  mode      
03DF 30C90120         (         dasm.asm):00481                  leax iobuff,u  
03E3 EC49             (         dasm.asm):00482                  ldd  address,u 
03E5 830001           (         dasm.asm):00483                  subd #1        
03E8 1F02             (         dasm.asm):00484                  tfr  d,y       
03EA 6DC823           (         dasm.asm):00485                  tst  offsopt,u
03ED 2703             (         dasm.asm):00486                  beq  back2
03EF 1702AB           (         dasm.asm):00487                  lbsr setoffs
03F2 17050D           (         dasm.asm):00488         back2    lbsr outhex2
03F5 160315           (         dasm.asm):00489                  lbra next      
03F8 17FD04           (         dasm.asm):00490         ascii    lbsr echoon    
03FB 0F02             (         dasm.asm):00491         ascii2   clr  mode
03FD 30C90120         (         dasm.asm):00492                  leax iobuff,u  
0401 EC49             (         dasm.asm):00493                  ldd  address,u 
0403 1F02             (         dasm.asm):00494                  tfr  d,y       
0405 6DC823           (         dasm.asm):00495                  tst  offsopt,u
0408 2703             (         dasm.asm):00496                  beq  ascii3
040A 170290           (         dasm.asm):00497                  lbsr setoffs
040D 1704F2           (         dasm.asm):00498         ascii3   lbsr outhex2
0410 1704CE           (         dasm.asm):00499                  lbsr space1    
0413 E6A0             (         dasm.asm):00500                  ldb  ,y+       
0415 3404             (         dasm.asm):00501                  pshs b         
0417 170504           (         dasm.asm):00502                  lbsr outhex1   
041A 1704BE           (         dasm.asm):00503                  lbsr space2    
041D 3504             (         dasm.asm):00504                  puls b         
041F C17B             (         dasm.asm):00505                  cmpb #'z+1     
0421 2409             (         dasm.asm):00506                  bhs  dot       
0423 C120             (         dasm.asm):00507                  cmpb #sp      
0425 2505             (         dasm.asm):00508                  blo  dot       
0427 E780             (         dasm.asm):00509                  stb  ,x+       
0429 1602E1           (         dasm.asm):00510                  lbra next      
042C C62E             (         dasm.asm):00511         dot      ldb  #'.       
042E E780             (         dasm.asm):00512                  stb  ,x+       
0430 1602DA           (         dasm.asm):00513                  lbra next      
0433 318D1022         (         dasm.asm):00514         read     leay fname,pcr
0437 17FCA2           (         dasm.asm):00515                  lbsr commons   
043A 810D             (         dasm.asm):00516                  cmpa #cr      
043C 2713             (         dasm.asm):00517                  beq  readout
043E 8605             (         dasm.asm):00518                  lda  #exec.+read.
0440 103F84           (         dasm.asm):00519                  os9  i$open    
0443 1025FC44         (         dasm.asm):00520                  lbcs errmsg    
0447 9701             (         dasm.asm):00521                  sta  dpath     
0449 8D07             (         dasm.asm):00522                  bsr  moduread  
044B 8D28             (         dasm.asm):00523                  bsr  moduadrs  
044D 0F04             (         dasm.asm):00524                  clr  bflag
044F 0F02             (         dasm.asm):00525                  clr  mode
0451 39               (         dasm.asm):00526         readout  rts            
0452 30C902B0         (         dasm.asm):00527         moduread leax buffer,u
0456 108E6000         (         dasm.asm):00528                  ldy  #buffsiz    
045A 103F89           (         dasm.asm):00529                  os9  i$read    
045D 2506             (         dasm.asm):00530                  bcs  chkeof    
045F 9601             (         dasm.asm):00531                  lda  dpath     
0461 103F8F           (         dasm.asm):00532                  os9  i$close   
0464 39               (         dasm.asm):00533                  rts            
0465 C1D3             (         dasm.asm):00534         chkeof   cmpb #e$eof    
0467 1026FC20         (         dasm.asm):00535                  lbne errmsg    
046B 9601             (         dasm.asm):00536                  lda  dpath     
046D 103F8F           (         dasm.asm):00537                  os9  i$close   
0470 1025FC17         (         dasm.asm):00538                  lbcs errmsg    
0474 39               (         dasm.asm):00539                  rts            
0475 30C902B0         (         dasm.asm):00540         moduadrs leax buffer,u
0479 AFC811           (         dasm.asm):00541                  stx  moduloc,u 
047C EC02             (         dasm.asm):00542                  ldd  2,x       
047E 830003           (         dasm.asm):00543                  subd #3        
0481 318B             (         dasm.asm):00544                  leay d,x       
0483 10AF4F           (         dasm.asm):00545                  sty  endaddr,u 
0486 EC09             (         dasm.asm):00546                  ldd  9,x       
0488 318B             (         dasm.asm):00547                  leay d,x       
048A 10AF49           (         dasm.asm):00548                  sty  address,u 
048D 10AFC82E         (         dasm.asm):00549                  sty  xaddress,u
0491 39               (         dasm.asm):00550                  rts            
0492 318D0FC3         (         dasm.asm):00551         write    leay fname,pcr
0496 17FC43           (         dasm.asm):00552                  lbsr commons
0499 A684             (         dasm.asm):00553                  lda  ,x
049B 810D             (         dasm.asm):00554                  cmpa #cr
049D 272D             (         dasm.asm):00555                  beq  writout
049F 812A             (         dasm.asm):00556                  cmpa #'*
04A1 2702             (         dasm.asm):00557                  beq  makefile
04A3 2028             (         dasm.asm):00558                  bra  openfile
04A5 3001             (         dasm.asm):00559         makefile leax 1,x
04A7 17FC29           (         dasm.asm):00560                  lbsr skip
04AA A684             (         dasm.asm):00561                  lda  ,x
04AC 810D             (         dasm.asm):00562                  cmpa #cr
04AE 271C             (         dasm.asm):00563                  beq  writout
04B0 8603             (         dasm.asm):00564                  lda  #updat.
04B2 C60B             (         dasm.asm):00565                  ldb  #$0B
04B4 103F83           (         dasm.asm):00566                  os9  i$create
04B7 1025FBD0         (         dasm.asm):00567                  lbcs errmsg
04BB 9701             (         dasm.asm):00568                  sta  dpath
04BD 8D6B             (         dasm.asm):00569                  bsr  outdisk
04BF 9601             (         dasm.asm):00570         outwrit  lda  dpath
04C1 103F8F           (         dasm.asm):00571                  os9  i$close
04C4 1025FBC3         (         dasm.asm):00572                  lbcs errmsg
04C8 0F02             (         dasm.asm):00573                  clr  mode
04CA 0F04             (         dasm.asm):00574                  clr  bflag
04CC 39               (         dasm.asm):00575         writout  rts
04CD 8603             (         dasm.asm):00576         openfile lda  #updat.
04CF 103F84           (         dasm.asm):00577                  os9  i$open
04D2 1025FBB5         (         dasm.asm):00578                  lbcs errmsg
04D6 9701             (         dasm.asm):00579                  sta  dpath
04D8 8D04             (         dasm.asm):00580                  bsr  seek
04DA 8D4E             (         dasm.asm):00581                  bsr  outdisk
04DC 20E1             (         dasm.asm):00582                  bra  outwrit
04DE 3440             (         dasm.asm):00583         seek     pshs u
04E0 9601             (         dasm.asm):00584                  lda  dpath
04E2 C602             (         dasm.asm):00585                  ldb  #$02
04E4 103F8D           (         dasm.asm):00586                  os9  i$getstt
04E7 1025FCF1         (         dasm.asm):00587                  lbcs fatal
04EB 103F88           (         dasm.asm):00588                  os9  i$seek
04EE 1025FCEA         (         dasm.asm):00589                  lbcs fatal
04F2 3540             (         dasm.asm):00590                  puls u
04F4 39               (         dasm.asm):00591                  rts
04F5 AEC813           (         dasm.asm):00592         chkbuff  ldx  pointer,u
04F8 ACC815           (         dasm.asm):00593                  cmpx endbuff,u
04FB 241A             (         dasm.asm):00594                  bhs  outb2
04FD 31C90120         (         dasm.asm):00595                  leay iobuff,u
0501 A6A0             (         dasm.asm):00596         bufloop  lda  ,y+
0503 A780             (         dasm.asm):00597                  sta  ,x+
0505 2702             (         dasm.asm):00598                  beq  bnl
0507 20F8             (         dasm.asm):00599                  bra  bufloop
0509 31C813           (         dasm.asm):00600         bnl      leay pointer,u
050C AFA4             (         dasm.asm):00601                  stx  ,y
050E AEC817           (         dasm.asm):00602                  ldx  counter,u
0511 3001             (         dasm.asm):00603                  leax 1,x
0513 AFC817           (         dasm.asm):00604                  stx  counter,u
0516 39               (         dasm.asm):00605                  rts
0517 318D0DF4         (         dasm.asm):00606         outb2    leay prompt,pcr
051B 17FB88           (         dasm.asm):00607                  lbsr echo
051E 318D0ECB         (         dasm.asm):00608                  leay bfull,pcr
0522 17FB81           (         dasm.asm):00609                  lbsr echo
0525 0F04             (         dasm.asm):00610                  clr  bflag
0527 0F02             (         dasm.asm):00611                  clr  mode
0529 39               (         dasm.asm):00612                  rts
052A 9601             (         dasm.asm):00613         outdisk  lda  dpath
052C D600             (         dasm.asm):00614                  ldb  path
052E 9700             (         dasm.asm):00615                  sta  path
0530 D701             (         dasm.asm):00616                  stb  dpath
0532 17FE73           (         dasm.asm):00617                  lbsr listbuff
0535 9600             (         dasm.asm):00618                  lda  path
0537 D601             (         dasm.asm):00619                  ldb  dpath
0539 9701             (         dasm.asm):00620                  sta  dpath
053B D700             (         dasm.asm):00621                  stb  path
053D 39               (         dasm.asm):00622                  rts
053E 17FBBE           (         dasm.asm):00623         branch   lbsr echoon
0541 AEC81B           (         dasm.asm):00624                  ldx  curstack,u
0544 ACC81D           (         dasm.asm):00625                  cmpx lststack,u
0547 2711             (         dasm.asm):00626                  beq  nomove
0549 10AE49           (         dasm.asm):00627                  ldy  address,u
054C 10AF81           (         dasm.asm):00628                  sty  ,x++
054F AFC81B           (         dasm.asm):00629                  stx  curstack,u
0552 AEC821           (         dasm.asm):00630                  ldx  branchad,u
0555 AF49             (         dasm.asm):00631                  stx  address,u
0557 160150           (         dasm.asm):00632                  lbra ddentry
055A 318D0E9C         (         dasm.asm):00633         nomove   leay stackms1,pcr
055E 17FB45           (         dasm.asm):00634         nomove1  lbsr echo
0561 39               (         dasm.asm):00635                  rts
0562 17FB9A           (         dasm.asm):00636         return   lbsr echoon
0565 AEC81B           (         dasm.asm):00637                  ldx  curstack,u
0568 ACC81F           (         dasm.asm):00638                  cmpx firstack,u
056B 2206             (         dasm.asm):00639                  bhi  yesmove
056D 318D0EA0         (         dasm.asm):00640                  leay stackms2,pcr
0571 20EB             (         dasm.asm):00641                  bra  nomove1
0573 10AE83           (         dasm.asm):00642         yesmove  ldy  ,--x
0576 AFC81B           (         dasm.asm):00643                  stx  curstack,u
0579 10AF49           (         dasm.asm):00644                  sty  address,u
057C 16012B           (         dasm.asm):00645                  lbra ddentry
057F 318D0E8E         (         dasm.asm):00646                  leay stackms2,pcr
0583 17FB20           (         dasm.asm):00647                  lbsr echo
0586 39               (         dasm.asm):00648                  rts
0587 318D0F27         (         dasm.asm):00649         offscom  leay offsmsg,pcr
058B 17FB4E           (         dasm.asm):00650                  lbsr commons
058E 3440             (         dasm.asm):00651                  pshs u
0590 33C823           (         dasm.asm):00652                  leau offsopt,u
0593 17FD81           (         dasm.asm):00653                  lbsr onoff
0596 3540             (         dasm.asm):00654                  puls u
0598 318D0D73         (         dasm.asm):00655         telloffs leay prompt,pcr
059C 17FB07           (         dasm.asm):00656                  lbsr echo
059F 6DC823           (         dasm.asm):00657                  tst  offsopt,u
05A2 2B06             (         dasm.asm):00658                  bmi  offson
05A4 318D0F21         (         dasm.asm):00659                  leay offsmsg2,pcr
05A8 2004             (         dasm.asm):00660                  bra  offsmode
05AA 318D0F0F         (         dasm.asm):00661         offson   leay offsmsg1,pcr
05AE 17FAF5           (         dasm.asm):00662         offsmode lbsr echo
05B1 39               (         dasm.asm):00663                  rts
05B2 318D0EBE         (         dasm.asm):00664         gimicom  leay gimimsg,pcr
05B6 17FB23           (         dasm.asm):00665                  lbsr commons
05B9 6FC825           (         dasm.asm):00666                  clr  gimicnt,u
05BC 31C826           (         dasm.asm):00667                  leay gimidat,u
05BF A680             (         dasm.asm):00668         gimiloop lda  ,x+
05C1 810D             (         dasm.asm):00669                  cmpa #cr
05C3 2731             (         dasm.asm):00670                  beq  gimichk
05C5 8120             (         dasm.asm):00671                  cmpa #sp
05C7 27F6             (         dasm.asm):00672                  beq  gimiloop
05C9 812C             (         dasm.asm):00673                  cmpa #',
05CB 27F2             (         dasm.asm):00674                  beq  gimiloop
05CD 301F             (         dasm.asm):00675                  leax -1,x
05CF 0F05             (         dasm.asm):00676                  clr  count
05D1 5F               (         dasm.asm):00677                  clrb
05D2 17FC88           (         dasm.asm):00678                  lbsr hexcalc
05D5 0D05             (         dasm.asm):00679                  tst  count
05D7 2754             (         dasm.asm):00680                  beq  gimibad
05D9 0F05             (         dasm.asm):00681                  clr  count
05DB 17FC7F           (         dasm.asm):00682                  lbsr hexcalc
05DE 0D05             (         dasm.asm):00683                  tst  count
05E0 274B             (         dasm.asm):00684                  beq  gimibad
05E2 C1FF             (         dasm.asm):00685                  cmpb #mask
05E4 2304             (         dasm.asm):00686                  bls  nologic
05E6 CAFF             (         dasm.asm):00687                  orb  #mask
05E8 C4FF             (         dasm.asm):00688                  andb #mask
05EA E7A0             (         dasm.asm):00689         nologic  stb  ,y+
05EC 6CC825           (         dasm.asm):00690                  inc  gimicnt,u
05EF C603             (         dasm.asm):00691                  ldb  #pagenum
05F1 E1C825           (         dasm.asm):00692                  cmpb gimicnt,u
05F4 26C9             (         dasm.asm):00693                  bne  gimiloop
05F6 6DC825           (         dasm.asm):00694         gimichk  tst  gimicnt,u
05F9 2721             (         dasm.asm):00695                  beq  gimiprt
05FB 4F               (         dasm.asm):00696                  clra
05FC 5F               (         dasm.asm):00697                  clrb
05FD C32000           (         dasm.asm):00698         gimiloo  addd #pagesiz
0600 6AC825           (         dasm.asm):00699                  dec  gimicnt,u
0603 26F8             (         dasm.asm):00700                  bne  gimiloo
0605 31C826           (         dasm.asm):00701                  leay gimidat,u
0608 1E02             (         dasm.asm):00702                  exg  d,y
060A 8E0000           (         dasm.asm):00703                  ldx  #0
060D 3440             (         dasm.asm):00704                  pshs u
060F 33C902B0         (         dasm.asm):00705                  leau buffer,u
0613 103F             (         dasm.asm):00706                  swi2
0615 1B               (         dasm.asm):00707                  fcb  $1B
0616 1025FBC2         (         dasm.asm):00708                  lbcs fatal
061A 3540             (         dasm.asm):00709                  puls u
061C 31C902B0         (         dasm.asm):00710         gimiprt  leay buffer,u
0620 10AF49           (         dasm.asm):00711                  sty  address,u
0623 318D0CE8         (         dasm.asm):00712                  leay prompt,pcr
0627 17FA7C           (         dasm.asm):00713                  lbsr echo
062A 16FDCE           (         dasm.asm):00714                  lbra ascii2
062D 318D0CDE         (         dasm.asm):00715         gimibad  leay prompt,pcr
0631 17FA72           (         dasm.asm):00716                  lbsr echo
0634 E6C837           (         dasm.asm):00717                  ldb  turn,u
0637 C8FF             (         dasm.asm):00718                  eorb #on
0639 E7C837           (         dasm.asm):00719                  stb  turn,u
063C 2708             (         dasm.asm):00720                  beq  nxturn
063E 318D0E3A         (         dasm.asm):00721                  leay gimimsg1,pcr
0642 17FA61           (         dasm.asm):00722         gbadout  lbsr echo
0645 39               (         dasm.asm):00723                  rts
0646 318D0E4D         (         dasm.asm):00724         nxturn   leay gimimsg2,pcr
064A 20F6             (         dasm.asm):00725                  bra  gbadout
064C C664             (         dasm.asm):00726         init     ldb  #100
064E 3041             (         dasm.asm):00727                  leax dpath,u
0650 6F80             (         dasm.asm):00728         initloop clr  ,x+
0652 5A               (         dasm.asm):00729                  decb
0653 26FB             (         dasm.asm):00730                  bne  initloop
0655 30C902B0         (         dasm.asm):00731                  leax buffer,u
0659 AFC813           (         dasm.asm):00732                  stx  pointer,u
065C CC6000           (         dasm.asm):00733                  ldd  #buffsiz
065F 318B             (         dasm.asm):00734                  leay d,x
0661 10AFC815         (         dasm.asm):00735                  sty  endbuff,u
0665 CCFFEF           (         dasm.asm):00736                  ldd  #$FFEF
0668 ED4F             (         dasm.asm):00737                  std  endaddr,u
066A 86FF             (         dasm.asm):00738         prgmdat  lda  #mask top page
066C C608             (         dasm.asm):00739                  ldb  #8
066E 31C826           (         dasm.asm):00740                  leay gimidat,u
0671 A7A0             (         dasm.asm):00741         prgdatlp sta  ,y+
0673 4A               (         dasm.asm):00742                  deca
0674 5A               (         dasm.asm):00743                  decb
0675 26FA             (         dasm.asm):00744                  bne  prgdatlp
0677 86FF             (         dasm.asm):00745                  lda  #on
0679 A7C837           (         dasm.asm):00746                  sta  turn,u
067C 318D0CFD         (         dasm.asm):00747                  leay dasmmsg,pcr
0680 30C858           (         dasm.asm):00748                  leax linknam,u
0683 A6A0             (         dasm.asm):00749         stuff1   lda  ,y+
0685 A780             (         dasm.asm):00750                  sta  ,x+
0687 26FA             (         dasm.asm):00751                  bne  stuff1
0689 30C901E8         (         dasm.asm):00752         initstak leax adrstack,u
068D AFC81B           (         dasm.asm):00753                  stx  curstack,u
0690 AFC81F           (         dasm.asm):00754                  stx  firstack,u
0693 CC00C8           (         dasm.asm):00755                  ldd  #stacksz
0696 318B             (         dasm.asm):00756                  leay d,x
0698 10AFC81D         (         dasm.asm):00757                  sty  lststack,u
069C 39               (         dasm.asm):00758                  rts
069D 3402             (         dasm.asm):00759         setoffs  pshs a
069F 86FF             (         dasm.asm):00760                  lda  #on
06A1 A7C824           (         dasm.asm):00761                  sta  offsflg,u
06A4 3502             (         dasm.asm):00762                  puls a
06A6 39               (         dasm.asm):00763                  rts
06A7 17FA55           (         dasm.asm):00764         dentry   lbsr echoon    
06AA 10AE49           (         dasm.asm):00765         ddentry  ldy  address,u 
06AD 30C90120         (         dasm.asm):00766                  leax iobuff,u  
06B1 3420             (         dasm.asm):00767                  pshs y         
06B3 ECE4             (         dasm.asm):00768                  ldd  ,s        
06B5 6DC823           (         dasm.asm):00769                  tst  offsopt,u
06B8 2702             (         dasm.asm):00770                  beq  dentry2
06BA 8DE1             (         dasm.asm):00771                  bsr  setoffs
06BC 170243           (         dasm.asm):00772         dentry2  lbsr outhex2
06BF 17021F           (         dasm.asm):00773                  lbsr space1    
06C2 3520             (         dasm.asm):00774                  puls y         
06C4 E6A0             (         dasm.asm):00775                  ldb  ,y+       
06C6 1F98             (         dasm.asm):00776                  tfr  b,a       
06C8 8580             (         dasm.asm):00777                  bita #$80      
06CA 102B0647         (         dasm.asm):00778                  lbmi grp80     
06CE 84F0             (         dasm.asm):00779                  anda #$F0      
06D0 102701B1         (         dasm.asm):00780                  lbeq grp0      
06D4 8110             (         dasm.asm):00781                  cmpa #$10      
06D6 10270271         (         dasm.asm):00782                  lbeq grp10     
06DA 8120             (         dasm.asm):00783                  cmpa #$20      
06DC 102701B7         (         dasm.asm):00784                  lbeq grp20     
06E0 8130             (         dasm.asm):00785                  cmpa #$30      
06E2 10270341         (         dasm.asm):00786                  lbeq grp30     
06E6 8160             (         dasm.asm):00787                  cmpa #$60      
06E8 1027024B         (         dasm.asm):00788                  lbeq grp60     
06EC 8170             (         dasm.asm):00789                  cmpa #$70      
06EE 102701BF         (         dasm.asm):00790                  lbeq grp70     
06F2 3404             (         dasm.asm):00791                  pshs b         
06F4 3420             (         dasm.asm):00792                  pshs y         
06F6 C40F             (         dasm.asm):00793                  andb #$0F      
06F8 1701C9           (         dasm.asm):00794                  lbsr set       
06FB 3520             (         dasm.asm):00795                  puls y         
06FD 3504             (         dasm.asm):00796                  puls b         
06FF C4F0             (         dasm.asm):00797                  andb #$F0      
0701 C150             (         dasm.asm):00798                  cmpb #$50      
0703 2704             (         dasm.asm):00799                  beq  grp50     
0705 8661             (         dasm.asm):00800                  lda  #'a       
0707 2002             (         dasm.asm):00801                  bra  save      
0709 8662             (         dasm.asm):00802         grp50    lda  #'b       
070B A780             (         dasm.asm):00803         save     sta  ,x+       
070D 10AF49           (         dasm.asm):00804         next     sty  address,u 
0710 17F988           (         dasm.asm):00805                  lbsr crlf      
0713 0D03             (         dasm.asm):00806         options  tst  pflag      
0715 2702             (         dasm.asm):00807                  beq  chkdisk   
0717 8D15             (         dasm.asm):00808                  bsr  hardprt   
0719 0D04             (         dasm.asm):00809         chkdisk  tst  bflag     
071B 2702             (         dasm.asm):00810                  beq  chkauto   
071D 8D43             (         dasm.asm):00811                  bsr  diskwrt
071F 0D02             (         dasm.asm):00812         chkauto  tst  mode      
0721 2B01             (         dasm.asm):00813                  bmi  automat   
0723 39               (         dasm.asm):00814                  rts            
0724 EC49             (         dasm.asm):00815         automat  ldd  address,u 
0726 10A34F           (         dasm.asm):00816                  cmpd endaddr,u 
0729 1025FF7D         (         dasm.asm):00817                  lblo ddentry   
072D 39               (         dasm.asm):00818                  rts            
072E 308D0DBF         (         dasm.asm):00819         hardprt  leax pmsg,pcr  
0732 8602             (         dasm.asm):00820                  lda  #write.   
0734 103F84           (         dasm.asm):00821                  os9  i$open    
0737 2407             (         dasm.asm):00822                  bcc  hard
0739 C1F6             (         dasm.asm):00823                  cmpb #246
073B 27F1             (         dasm.asm):00824                  beq  hardprt
073D 16F94B           (         dasm.asm):00825                  lbra errmsg
0740 9701             (         dasm.asm):00826         hard     sta  dpath
0742 9601             (         dasm.asm):00827         hard1    lda  dpath
0744 30C90120         (         dasm.asm):00828                  leax iobuff,u
0748 108E00C8         (         dasm.asm):00829                  ldy  #stacksz
074C 103F8C           (         dasm.asm):00830                  os9  i$writln
074F 2407             (         dasm.asm):00831                  bcc  hardout
0751 C1F6             (         dasm.asm):00832                  cmpb #246
0753 27ED             (         dasm.asm):00833                  beq  hard1
0755 16F933           (         dasm.asm):00834                  lbra errmsg
0758 9601             (         dasm.asm):00835         hardout  lda  dpath
075A 103F8F           (         dasm.asm):00836                  os9  i$close
075D 1025F92A         (         dasm.asm):00837                  lbcs errmsg
0761 39               (         dasm.asm):00838                  rts
0762 17FD90           (         dasm.asm):00839         diskwrt  lbsr chkbuff
0765 39               (         dasm.asm):00840                  rts
0766 C601             (         dasm.asm):00841         params   ldb  #1        
0768 D700             (         dasm.asm):00842                  stb  path      
076A 3410             (         dasm.asm):00843                  pshs x
076C 17FEDD           (         dasm.asm):00844                  lbsr init
076F 3510             (         dasm.asm):00845                  puls x
0771 C6FF             (         dasm.asm):00846                  ldb  #on
0773 D702             (         dasm.asm):00847                  stb  mode      
0775 E7C830           (         dasm.asm):00848                  stb  pcaller,u
0778 17F958           (         dasm.asm):00849         getparm  lbsr skip
077B A680             (         dasm.asm):00850                  lda  ,x+
077D 812D             (         dasm.asm):00851                  cmpa #'-
077F 102600E3         (         dasm.asm):00852                  lbne syntax
0783 17F94D           (         dasm.asm):00853                  lbsr skip
0786 A680             (         dasm.asm):00854                  lda  ,x+
0788 8A20             (         dasm.asm):00855                  ora  #sp       
078A 816F             (         dasm.asm):00856                  cmpa #'o
078C 2607             (         dasm.asm):00857                  bne  chkend
078E 8D35             (         dasm.asm):00858                  bsr  chksub
0790 E7C823           (         dasm.asm):00859                  stb  offsopt,u
0793 20E3             (         dasm.asm):00860                  bra  getparm
0795 8165             (         dasm.asm):00861         chkend   cmpa #'e
0797 2612             (         dasm.asm):00862                  bne  chkstart
0799 17F937           (         dasm.asm):00863                  lbsr skip
079C 17FB07           (         dasm.asm):00864                  lbsr pchgend
079F 5D               (         dasm.asm):00865                  tstb
07A0 102600CB         (         dasm.asm):00866                  lbne syntaxa
07A4 8D1F             (         dasm.asm):00867                  bsr  chksub
07A6 E7C831           (         dasm.asm):00868                  stb  peflg,u
07A9 20CD             (         dasm.asm):00869                  bra  getparm
07AB 8173             (         dasm.asm):00870         chkstart cmpa #'s
07AD 102200B5         (         dasm.asm):00871                  lbhi syntax
07B1 2615             (         dasm.asm):00872                  bne  chkmem
07B3 17F91D           (         dasm.asm):00873                  lbsr skip
07B6 17FA53           (         dasm.asm):00874                  lbsr pjump
07B9 5D               (         dasm.asm):00875                  tstb
07BA 102600B1         (         dasm.asm):00876                  lbne syntaxa
07BE 8D05             (         dasm.asm):00877                  bsr  chksub
07C0 E7C832           (         dasm.asm):00878                  stb  psflg,u
07C3 20B3             (         dasm.asm):00879                  bra  getparm
07C5 5F               (         dasm.asm):00880         chksub   clrb
07C6 5A               (         dasm.asm):00881                  decb
07C7 39               (         dasm.asm):00882                  rts
07C8 816D             (         dasm.asm):00883         chkmem   cmpa #'m
07CA 2602             (         dasm.asm):00884                  bne  chkread
07CC 2055             (         dasm.asm):00885                  bra  penter
07CE 8172             (         dasm.asm):00886         chkread  cmpa #'r
07D0 2739             (         dasm.asm):00887                  beq  inputr
07D2 816C             (         dasm.asm):00888                  cmpa #'l
07D4 1026008E         (         dasm.asm):00889                  lbne syntax
07D8 17F8F8           (         dasm.asm):00890                  lbsr skip
07DB 8D16             (         dasm.asm):00891                  bsr  psnam
07DD 4F               (         dasm.asm):00892                  clra
07DE 3450             (         dasm.asm):00893                  pshs x,u
07E0 103F00           (         dasm.asm):00894                  os9  f$link
07E3 2509             (         dasm.asm):00895                  bcs  pfatal
07E5 3550             (         dasm.asm):00896                  puls x,u
07E7 8D0A             (         dasm.asm):00897                  bsr psnam
07E9 17F958           (         dasm.asm):00898                  lbsr pelink
07EC 2035             (         dasm.asm):00899                  bra  penter    
07EE 3550             (         dasm.asm):00900         pfatal   puls x,u
07F0 160089           (         dasm.asm):00901                  lbra pexit
07F3 3410             (         dasm.asm):00902         psnam    pshs x         
07F5 862F             (         dasm.asm):00903                  lda  #'/       
07F7 A184             (         dasm.asm):00904                  cmpa ,x        
07F9 2704             (         dasm.asm):00905                  beq  skip2     
07FB 301F             (         dasm.asm):00906                  leax -1,x      
07FD A784             (         dasm.asm):00907                  sta  ,x        
07FF 103F10           (         dasm.asm):00908         skip2    os9  f$prsnam  
0802 2562             (         dasm.asm):00909                  bcs  syntax     
0804 860D             (         dasm.asm):00910                  lda  #cr      
0806 A7A4             (         dasm.asm):00911                  sta  ,y        
0808 3510             (         dasm.asm):00912                  puls x         
080A 39               (         dasm.asm):00913                  rts            
080B 17F8C5           (         dasm.asm):00914         inputr   lbsr skip
080E A684             (         dasm.asm):00915                  lda  ,x
0810 810D             (         dasm.asm):00916                  cmpa #cr      
0812 2752             (         dasm.asm):00917                  beq  syntax     
0814 8605             (         dasm.asm):00918                  lda  #exec.+read.
0816 103F84           (         dasm.asm):00919                  os9  i$open    
0819 2561             (         dasm.asm):00920                  bcs  pexit     
081B 9701             (         dasm.asm):00921                  sta  dpath     
081D 17FC32           (         dasm.asm):00922                  lbsr moduread  
0820 17FC52           (         dasm.asm):00923                  lbsr moduadrs  
0823 6DC832           (         dasm.asm):00924         penter   tst  psflg,u
0826 271F             (         dasm.asm):00925                  beq  pent10
0828 6DC823           (         dasm.asm):00926                  tst  offsopt,u
082B 2607             (         dasm.asm):00927                  bne  pent05
082D ECC833           (         dasm.asm):00928                  ldd  paddress,u
0830 ED49             (         dasm.asm):00929                  std  address,u
0832 2013             (         dasm.asm):00930                  bra  pent10
0834 ECC833           (         dasm.asm):00931         pent05   ldd  paddress,u
0837 3406             (         dasm.asm):00932                  pshs d
0839 ECC811           (         dasm.asm):00933                  ldd  moduloc,u
083C E3E1             (         dasm.asm):00934                  addd ,s++
083E ED49             (         dasm.asm):00935                  std  address,u
0840 2005             (         dasm.asm):00936                  bra  pent10
0842 17FE65           (         dasm.asm):00937         pent20   lbsr ddentry
0845 203A             (         dasm.asm):00938                  bra  pnoerr
0847 6DC831           (         dasm.asm):00939         pent10   tst  peflg,u
084A 27F6             (         dasm.asm):00940                  beq  pent20
084C 6DC823           (         dasm.asm):00941                  tst  offsopt,u
084F 2607             (         dasm.asm):00942                  bne  pent15
0851 ECC835           (         dasm.asm):00943                  ldd  pendaddr,u
0854 ED4F             (         dasm.asm):00944                  std  endaddr,u
0856 20EA             (         dasm.asm):00945                  bra  pent20
0858 ECC835           (         dasm.asm):00946         pent15   ldd  pendaddr,u
085B 3406             (         dasm.asm):00947                  pshs d
085D ECC811           (         dasm.asm):00948                  ldd  moduloc,u
0860 E3E1             (         dasm.asm):00949                  addd ,s++
0862 ED4F             (         dasm.asm):00950                  std  endaddr,u
0864 20DC             (         dasm.asm):00951                  bra  pent20
0866 318D0C89         (         dasm.asm):00952         syntax   leay usemsg,pcr
086A 17F839           (         dasm.asm):00953         syntax1  lbsr echo
086D 2012             (         dasm.asm):00954                  bra  pnoerr    
086F 318D0C80         (         dasm.asm):00955         syntaxa  leay usemsg,pcr
0873 17F830           (         dasm.asm):00956                  lbsr echo
0876 318D0AA5         (         dasm.asm):00957                  leay adrmsg,pcr
087A 20EE             (         dasm.asm):00958                  bra  syntax1
087C 8602             (         dasm.asm):00959         pexit    lda  #2        
087E 103F0F           (         dasm.asm):00960                  os9  f$perr    
0881 5F               (         dasm.asm):00961         pnoerr   clrb           
0882 103F06           (         dasm.asm):00962                  os9  f$exit    
0885 3420             (         dasm.asm):00963         grp0     pshs y         
0887 8D3B             (         dasm.asm):00964                  bsr  set       
0889 8D50             (         dasm.asm):00965                  bsr  space2    
088B 8D59             (         dasm.asm):00966         g00      bsr  dsign     
088D 3520             (         dasm.asm):00967         g01      puls y         
088F E6A0             (         dasm.asm):00968                  ldb  ,y+       
0891 17008A           (         dasm.asm):00969                  lbsr outhex1   
0894 16FE76           (         dasm.asm):00970                  lbra next      
0897 8D08             (         dasm.asm):00971         grp20    bsr  sub20     
0899 8D40             (         dasm.asm):00972         g20      bsr  space2    
089B E6A0             (         dasm.asm):00973                  ldb  ,y+       
089D 1D               (         dasm.asm):00974                  sex            
089E 160169           (         dasm.asm):00975                  lbra sbr       
08A1 3420             (         dasm.asm):00976         sub20    pshs y         
08A3 318D05B7         (         dasm.asm):00977                  leay table2,pcr
08A7 8604             (         dasm.asm):00978                  lda  #4        
08A9 8D25             (         dasm.asm):00979                  bsr  match     
08AB 4A               (         dasm.asm):00980                  deca           
08AC 8D47             (         dasm.asm):00981                  bsr  put       
08AE 3520             (         dasm.asm):00982                  puls y         
08B0 39               (         dasm.asm):00983                  rts            
08B1 C40F             (         dasm.asm):00984         grp70    andb #$0F      
08B3 3420             (         dasm.asm):00985                  pshs y         
08B5 8D0D             (         dasm.asm):00986                  bsr  set       
08B7 8D22             (         dasm.asm):00987                  bsr  space2    
08B9 8D30             (         dasm.asm):00988         g70      bsr  esign     
08BB 3520             (         dasm.asm):00989         g71      puls y         
08BD ECA1             (         dasm.asm):00990                  ldd  ,y++      
08BF 8D41             (         dasm.asm):00991                  bsr  outhex2   
08C1 16FE49           (         dasm.asm):00992                  lbra next      
08C4 318D0556         (         dasm.asm):00993         set      leay table1,pcr
08C8 8604             (         dasm.asm):00994                  lda  #4        
08CA 8D04             (         dasm.asm):00995                  bsr  match     
08CC 4A               (         dasm.asm):00996                  deca           
08CD 8D26             (         dasm.asm):00997                  bsr  put       
08CF 39               (         dasm.asm):00998                  rts            
08D0 E1A4             (         dasm.asm):00999         match    cmpb ,y        
08D2 2704             (         dasm.asm):01000                  beq  itis      
08D4 31A6             (         dasm.asm):01001                  leay a,y       
08D6 20F8             (         dasm.asm):01002                  bra  match     
08D8 3121             (         dasm.asm):01003         itis     leay 1,y       
08DA 39               (         dasm.asm):01004                  rts            
08DB CC2020           (         dasm.asm):01005         space2   ldd  #$2020    
08DE ED81             (         dasm.asm):01006                  std  ,x++      
08E0 39               (         dasm.asm):01007                  rts            
08E1 8620             (         dasm.asm):01008         space1   lda  #$20      
08E3 A780             (         dasm.asm):01009                  sta  ,x+       
08E5 39               (         dasm.asm):01010                  rts            
08E6 863C             (         dasm.asm):01011         dsign    lda  #$3C      
08E8 A780             (         dasm.asm):01012                  sta  ,x+       
08EA 39               (         dasm.asm):01013                  rts            
08EB 863E             (         dasm.asm):01014         esign    lda  #$3E      
08ED A780             (         dasm.asm):01015                  sta  ,x+       
08EF 39               (         dasm.asm):01016                  rts            
08F0 862D             (         dasm.asm):01017         minus    lda  #'-       
08F2 A780             (         dasm.asm):01018                  sta  ,x+       
08F4 39               (         dasm.asm):01019                  rts            
08F5 E6A0             (         dasm.asm):01020         put      ldb  ,y+       
08F7 E780             (         dasm.asm):01021                  stb  ,x+       
08F9 4A               (         dasm.asm):01022                  deca           
08FA 26F9             (         dasm.asm):01023                  bne  put       
08FC 39               (         dasm.asm):01024                  rts            
08FD 862C             (         dasm.asm):01025         coma     lda  #',       
08FF A780             (         dasm.asm):01026                  sta  ,x+       
0901 39               (         dasm.asm):01027                  rts            
0902 6DC824           (         dasm.asm):01028         outhex2  tst  offsflg,u
0905 2711             (         dasm.asm):01029                  beq  outhex3
0907 6FC824           (         dasm.asm):01030                  clr  offsflg,u
090A 10A3C811         (         dasm.asm):01031                  cmpd moduloc,u
090E 2508             (         dasm.asm):01032                  blo  outhex3
0910 10A34F           (         dasm.asm):01033                  cmpd endaddr,u
0913 2203             (         dasm.asm):01034                  bhi  outhex3
0915 A3C811           (         dasm.asm):01035                  subd moduloc,u
0918 1E89             (         dasm.asm):01036         outhex3  exg  a,b
091A 8D02             (         dasm.asm):01037                  bsr  outhex1   
091C 1F89             (         dasm.asm):01038                  tfr  a,b       
091E 3404             (         dasm.asm):01039         outhex1  pshs b         
0920 C4F0             (         dasm.asm):01040                  andb #$F0      
0922 54               (         dasm.asm):01041                  lsrb           
0923 54               (         dasm.asm):01042                  lsrb           
0924 54               (         dasm.asm):01043                  lsrb           
0925 54               (         dasm.asm):01044                  lsrb           
0926 8D04             (         dasm.asm):01045                  bsr  v1        
0928 3504             (         dasm.asm):01046                  puls b         
092A C40F             (         dasm.asm):01047                  andb #$0F      
092C C109             (         dasm.asm):01048         v1       cmpb #9        
092E 2302             (         dasm.asm):01049                  bls  v2        
0930 CB07             (         dasm.asm):01050                  addb #7        
0932 CB30             (         dasm.asm):01051         v2       addb #$30      
0934 E780             (         dasm.asm):01052                  stb  ,x+       
0936 39               (         dasm.asm):01053                  rts            
0937 C40F             (         dasm.asm):01054         grp60    andb #$0F      
0939 3420             (         dasm.asm):01055                  pshs y         
093B 17FF86           (         dasm.asm):01056                  lbsr set
093E 17FF9A           (         dasm.asm):01057                  lbsr space2
0941 3520             (         dasm.asm):01058                  puls y         
0943 E6A0             (         dasm.asm):01059                  ldb  ,y+       
0945 1701B7           (         dasm.asm):01060                  lbsr index     
0948 16FDC2           (         dasm.asm):01061                  lbra next      
094B 3420             (         dasm.asm):01062         grp10    pshs y         
094D C110             (         dasm.asm):01063                  cmpb #$10      
094F 102702FA         (         dasm.asm):01064                  lbeq s10       
0953 C112             (         dasm.asm):01065                  cmpb #$12      
0955 10250393         (         dasm.asm):01066                  lblo s11       
0959 2766             (         dasm.asm):01067                  beq  grp12     
095B C113             (         dasm.asm):01068                  cmpb #$13      
095D 2768             (         dasm.asm):01069                  beq  grp13     
095F C119             (         dasm.asm):01070                  cmpb #$19      
0961 10250094         (         dasm.asm):01071                  lblo grpsb     
0965 2768             (         dasm.asm):01072                  beq  grp19     
0967 C11D             (         dasm.asm):01073                  cmpb #$1D      
0969 2578             (         dasm.asm):01074                  blo  grpccr    
096B 2768             (         dasm.asm):01075                  beq  grpsex    
096D 8605             (         dasm.asm):01076                  lda  #5        
096F C11F             (         dasm.asm):01077                  cmpb #$1F      
0971 2726             (         dasm.asm):01078                  beq  grp1f     
0973 318D03FF         (         dasm.asm):01079                  leay rexg,pcr  
0977 17FF7B           (         dasm.asm):01080         n1e      lbsr put       
097A 3520             (         dasm.asm):01081                  puls y         
097C E6A0             (         dasm.asm):01082                  ldb  ,y+       
097E 3420             (         dasm.asm):01083                  pshs y         
0980 3404             (         dasm.asm):01084                  pshs b         
0982 C4F0             (         dasm.asm):01085                  andb #$F0      
0984 54               (         dasm.asm):01086                  lsrb           
0985 54               (         dasm.asm):01087                  lsrb           
0986 54               (         dasm.asm):01088                  lsrb           
0987 54               (         dasm.asm):01089                  lsrb           
0988 8D15             (         dasm.asm):01090                  bsr  readreg   
098A 862C             (         dasm.asm):01091                  lda  #',       
098C A780             (         dasm.asm):01092                  sta  ,x+       
098E 3504             (         dasm.asm):01093                  puls b         
0990 C40F             (         dasm.asm):01094                  andb #$0F      
0992 8D0B             (         dasm.asm):01095                  bsr  readreg   
0994 3520             (         dasm.asm):01096                  puls y         
0996 16FD74           (         dasm.asm):01097                  lbra next      
0999 318D03DE         (         dasm.asm):01098         grp1f    leay rtfr,pcr  
099D 20D8             (         dasm.asm):01099                  bra  n1e       
099F 1F12             (         dasm.asm):01100         readreg  tfr  x,y       
09A1 308D03DB         (         dasm.asm):01101                  leax rbyte,pcr 
09A5 E184             (         dasm.asm):01102         loop2    cmpb ,x        
09A7 2704             (         dasm.asm):01103                  beq  gotit     
09A9 3003             (         dasm.asm):01104                  leax 3,x       
09AB 20F8             (         dasm.asm):01105                  bra  loop2     
09AD E601             (         dasm.asm):01106         gotit    ldb  1,x       
09AF 6D02             (         dasm.asm):01107                  tst  2,x       
09B1 3A               (         dasm.asm):01108                  abx            
09B2 2B06             (         dasm.asm):01109                  bmi  get2      
09B4 E684             (         dasm.asm):01110                  ldb  ,x        
09B6 E7A0             (         dasm.asm):01111                  stb  ,y+       
09B8 2004             (         dasm.asm):01112                  bra  rout      
09BA EC84             (         dasm.asm):01113         get2     ldd  ,x        
09BC EDA1             (         dasm.asm):01114                  std  ,y++      
09BE 1F21             (         dasm.asm):01115         rout     tfr  y,x       
09C0 39               (         dasm.asm):01116                  rts            
09C1 318D03F7         (         dasm.asm):01117         grp12    leay rnop,pcr  
09C5 2012             (         dasm.asm):01118                  bra  out10a    
09C7 318D03F4         (         dasm.asm):01119         grp13    leay rsync,pcr 
09CB 8604             (         dasm.asm):01120                  lda  #4        
09CD 200C             (         dasm.asm):01121                  bra  out10b    
09CF 318D03F0         (         dasm.asm):01122         grp19    leay rdaa,pcr  
09D3 2004             (         dasm.asm):01123                  bra  out10a    
09D5 318D03ED         (         dasm.asm):01124         grpsex   leay rsex,pcr  
09D9 8603             (         dasm.asm):01125         out10a   lda  #3        
09DB 17FF17           (         dasm.asm):01126         out10b   lbsr put       
09DE 3520             (         dasm.asm):01127                  puls y         
09E0 16FD2A           (         dasm.asm):01128                  lbra next      
09E3 C11A             (         dasm.asm):01129         grpccr   cmpb #$1A      
09E5 260C             (         dasm.asm):01130                  bne  grp1c     
09E7 318D03DE         (         dasm.asm):01131                  leay rorcc,pcr 
09EB 8607             (         dasm.asm):01132         outccr   lda  #7        
09ED 17FF05           (         dasm.asm):01133                  lbsr put       
09F0 16FE9A           (         dasm.asm):01134                  lbra g01       
09F3 318D03D9         (         dasm.asm):01135         grp1c    leay randcc,pcr
09F7 20F2             (         dasm.asm):01136                  bra  outccr    
09F9 C116             (         dasm.asm):01137         grpsb    cmpb #$16      
09FB 2624             (         dasm.asm):01138                  bne  grp17     
09FD 318D03D6         (         dasm.asm):01139                  leay rlbra,pcr 
0A01 8605             (         dasm.asm):01140         sbout    lda  #5        
0A03 17FEEF           (         dasm.asm):01141                  lbsr put       
0A06 3520             (         dasm.asm):01142         lbr      puls y         
0A08 ECA1             (         dasm.asm):01143                  ldd  ,y++      
0A0A 3420             (         dasm.asm):01144         sbr      pshs y         
0A0C E3E4             (         dasm.asm):01145                  addd ,s        
0A0E EDC821           (         dasm.asm):01146                  std  branchad,u
0A11 6DC823           (         dasm.asm):01147                  tst  offsopt,u
0A14 2703             (         dasm.asm):01148                  beq  srb2
0A16 17FC84           (         dasm.asm):01149                  lbsr setoffs
0A19 17FEE6           (         dasm.asm):01150         srb2     lbsr outhex2
0A1C 3520             (         dasm.asm):01151                  puls y         
0A1E 16FCEC           (         dasm.asm):01152                  lbra next      
0A21 318D03B7         (         dasm.asm):01153         grp17    leay rlbsr,pcr 
0A25 20DA             (         dasm.asm):01154                  bra  sbout     
0A27 3420             (         dasm.asm):01155         grp30    pshs y         
0A29 C138             (         dasm.asm):01156                  cmpb #$38      
0A2B 227C             (         dasm.asm):01157                  bhi  rest30    
0A2D C134             (         dasm.asm):01158                  cmpb #$34      
0A2F 10250098         (         dasm.asm):01159                  lblo lea30     
0A33 1F98             (         dasm.asm):01160                  tfr  b,a       
0A35 54               (         dasm.asm):01161                  lsrb           
0A36 241A             (         dasm.asm):01162                  bcc  push      
0A38 318D03A5         (         dasm.asm):01163                  leay  pull,pcr 
0A3C 8D47             (         dasm.asm):01164                  bsr  puss      
0A3E 3520             (         dasm.asm):01165                  puls y         
0A40 E6A0             (         dasm.asm):01166                  ldb  ,y+       
0A42 3420             (         dasm.asm):01167                  pshs y         
0A44 318D03AF         (         dasm.asm):01168                  leay order2,pcr
0A48 8608             (         dasm.asm):01169                  lda  #8        
0A4A 54               (         dasm.asm):01170         loop3    lsrb           
0A4B 8D1F             (         dasm.asm):01171                  bsr  tstbit    
0A4D 4A               (         dasm.asm):01172                  deca           
0A4E 26FA             (         dasm.asm):01173                  bne  loop3     
0A50 2050             (         dasm.asm):01174                  bra  out30     
0A52 318D038E         (         dasm.asm):01175         push     leay pshr,pcr  
0A56 8D2D             (         dasm.asm):01176                  bsr  puss      
0A58 3520             (         dasm.asm):01177                  puls y         
0A5A E6A0             (         dasm.asm):01178                  ldb  ,y+       
0A5C 3420             (         dasm.asm):01179                  pshs y         
0A5E 318D0385         (         dasm.asm):01180                  leay order1,pcr
0A62 8608             (         dasm.asm):01181                  lda  #8        
0A64 58               (         dasm.asm):01182         loop4    lslb           
0A65 8D05             (         dasm.asm):01183                  bsr  tstbit    
0A67 4A               (         dasm.asm):01184                  deca           
0A68 26FA             (         dasm.asm):01185                  bne  loop4     
0A6A 2036             (         dasm.asm):01186                  bra  out30     
0A6C 2503             (         dasm.asm):01187         tstbit   bcs  tst30     
0A6E 3122             (         dasm.asm):01188                  leay 2,y       
0A70 39               (         dasm.asm):01189                  rts            
0A71 3406             (         dasm.asm):01190         tst30    pshs d         
0A73 ECA1             (         dasm.asm):01191                  ldd  ,y++      
0A75 4D               (         dasm.asm):01192                  tsta           
0A76 2B09             (         dasm.asm):01193                  bmi  clrp      
0A78 ED81             (         dasm.asm):01194                  std  ,x++      
0A7A 862C             (         dasm.asm):01195         sep      lda  #',       
0A7C A780             (         dasm.asm):01196                  sta  ,x+       
0A7E 3506             (         dasm.asm):01197                  puls d         
0A80 39               (         dasm.asm):01198                  rts            
0A81 E780             (         dasm.asm):01199         clrp     stb  ,x+       
0A83 20F5             (         dasm.asm):01200                  bra  sep       
0A85 3402             (         dasm.asm):01201         puss     pshs a         
0A87 8603             (         dasm.asm):01202                  lda  #3        
0A89 17FE69           (         dasm.asm):01203                  lbsr put       
0A8C 3504             (         dasm.asm):01204                  puls b         
0A8E 8D01             (         dasm.asm):01205                  bsr  usreg     
0A90 39               (         dasm.asm):01206                  rts            
0A91 C402             (         dasm.asm):01207         usreg    andb #$02      
0A93 2609             (         dasm.asm):01208                  bne  rureg     
0A95 8673             (         dasm.asm):01209                  lda  #'s       
0A97 A780             (         dasm.asm):01210         pit      sta  ,x+       
0A99 8620             (         dasm.asm):01211                  lda  #$20      
0A9B A780             (         dasm.asm):01212                  sta  ,x+       
0A9D 39               (         dasm.asm):01213                  rts            
0A9E 8675             (         dasm.asm):01214         rureg    lda  #'u       
0AA0 20F5             (         dasm.asm):01215                  bra  pit       
0AA2 3520             (         dasm.asm):01216         out30    puls y         
0AA4 301F             (         dasm.asm):01217                  leax -1,x      
0AA6 16FC64           (         dasm.asm):01218                  lbra next      
0AA9 C13C             (         dasm.asm):01219         rest30   cmpb #$3C      
0AAB 2712             (         dasm.asm):01220                  beq  ccwait    
0AAD 318D0356         (         dasm.asm):01221                  leay table3,pcr
0AB1 8604             (         dasm.asm):01222                  lda  #4        
0AB3 17FE1A           (         dasm.asm):01223                  lbsr match     
0AB6 4A               (         dasm.asm):01224                  deca           
0AB7 17FE3B           (         dasm.asm):01225                  lbsr put       
0ABA 3520             (         dasm.asm):01226                  puls y         
0ABC 16FC4E           (         dasm.asm):01227                  lbra next      
0ABF 318D02E9         (         dasm.asm):01228         ccwait   leay rccwai,pcr
0AC3 8606             (         dasm.asm):01229                  lda  #6        
0AC5 17FE2D           (         dasm.asm):01230                  lbsr put       
0AC8 16FDC2           (         dasm.asm):01231                  lbra g01       
0ACB 318D02E3         (         dasm.asm):01232         lea30    leay rlea,pcr  
0ACF 8603             (         dasm.asm):01233                  lda  #3        
0AD1 3404             (         dasm.asm):01234                  pshs b         
0AD3 17FE1F           (         dasm.asm):01235                  lbsr put       
0AD6 3502             (         dasm.asm):01236                  puls a         
0AD8 5F               (         dasm.asm):01237                  clrb           
0AD9 840F             (         dasm.asm):01238                  anda #$0F      
0ADB 3402             (         dasm.asm):01239                  pshs a         
0ADD E1E4             (         dasm.asm):01240         loop5    cmpb ,s        
0ADF 2703             (         dasm.asm):01241                  beq  dpit      
0AE1 5C               (         dasm.asm):01242                  incb           
0AE2 20F9             (         dasm.asm):01243                  bra  loop5     
0AE4 3410             (         dasm.asm):01244         dpit     pshs x         
0AE6 308D02CB         (         dasm.asm):01245                  leax lregr,pcr 
0AEA 3A               (         dasm.asm):01246                  abx            
0AEB A684             (         dasm.asm):01247                  lda  ,x        
0AED 3510             (         dasm.asm):01248                  puls x         
0AEF A780             (         dasm.asm):01249                  sta  ,x+       
0AF1 17FDED           (         dasm.asm):01250                  lbsr space1    
0AF4 3502             (         dasm.asm):01251                  puls a         
0AF6 3520             (         dasm.asm):01252         dpit1    puls y         
0AF8 E6A0             (         dasm.asm):01253                  ldb  ,y+       
0AFA 8D03             (         dasm.asm):01254                  bsr  index     
0AFC 16FC0E           (         dasm.asm):01255                  lbra next      
0AFF 3404             (         dasm.asm):01256         index    pshs b         
0B01 5D               (         dasm.asm):01257                  tstb           
0B02 2B19             (         dasm.asm):01258                  bmi  not5      
0B04 C510             (         dasm.asm):01259         bit5     bitb #$10      
0B06 2711             (         dasm.asm):01260                  beq  posi      
0B08 CAF0             (         dasm.asm):01261                  orb  #$F0      
0B0A 50               (         dasm.asm):01262                  negb           
0B0B 17FDE2           (         dasm.asm):01263                  lbsr minus     
0B0E 17FE0D           (         dasm.asm):01264         b5out    lbsr outhex1   
0B11 17FDE9           (         dasm.asm):01265                  lbsr coma      
0B14 3504             (         dasm.asm):01266                  puls b         
0B16 8D48             (         dasm.asm):01267                  bsr  rr        
0B18 39               (         dasm.asm):01268                  rts            
0B19 C40F             (         dasm.asm):01269         posi     andb #$0F      
0B1B 20F1             (         dasm.asm):01270                  bra  b5out     
0B1D 58               (         dasm.asm):01271         not5     aslb           
0B1E 58               (         dasm.asm):01272                  aslb           
0B1F 58               (         dasm.asm):01273                  aslb           
0B20 58               (         dasm.asm):01274                  aslb           
0B21 10250105         (         dasm.asm):01275                  lbcs indirect  
0B25 2761             (         dasm.asm):01276                  beq  rplus1    
0B27 2B08             (         dasm.asm):01277                  bmi  first     
0B29 58               (         dasm.asm):01278                  aslb           
0B2A 2B19             (         dasm.asm):01279                  bmi  second    
0B2C 58               (         dasm.asm):01280                  aslb           
0B2D 2B21             (         dasm.asm):01281                  bmi  third     
0B2F 2060             (         dasm.asm):01282                  bra  rplus2    
0B31 58               (         dasm.asm):01283         first    aslb           
0B32 10270096         (         dasm.asm):01284                  lbeq bit8r     
0B36 2B20             (         dasm.asm):01285                  bmi  rpcrl     
0B38 58               (         dasm.asm):01286                  aslb           
0B39 102B0087         (         dasm.asm):01287                  lbmi dr        
0B3D 58               (         dasm.asm):01288                  aslb           
0B3E 102B009A         (         dasm.asm):01289                  lbmi bit16r    
0B42 160100           (         dasm.asm):01290                  lbra rqq       
0B45 58               (         dasm.asm):01291         second   aslb           
0B46 2B74             (         dasm.asm):01292                  bmi  ar        
0B48 276E             (         dasm.asm):01293                  beq  zoro      
0B4A 58               (         dasm.asm):01294                  aslb           
0B4B 2B73             (         dasm.asm):01295                  bmi  br        
0B4D 1600F5           (         dasm.asm):01296                  lbra rqq       
0B50 58               (         dasm.asm):01297         third    aslb           
0B51 2B59             (         dasm.asm):01298                  bmi  minus2    
0B53 274C             (         dasm.asm):01299                  beq  minus1    
0B55 1600ED           (         dasm.asm):01300                  lbra rqq       
0B58 58               (         dasm.asm):01301         rpcrl    aslb           
0B59 10270097         (         dasm.asm):01302                  lbeq bit8pr    
0B5D 1600B7           (         dasm.asm):01303                  lbra bit16p    
0B60 3404             (         dasm.asm):01304         rr       pshs b         
0B62 C460             (         dasm.asm):01305                  andb #$60      
0B64 270F             (         dasm.asm):01306                  beq  xregr     
0B66 C120             (         dasm.asm):01307                  cmpb #$20      
0B68 270F             (         dasm.asm):01308                  beq  yregr     
0B6A C140             (         dasm.asm):01309                  cmpb #$40      
0B6C 270F             (         dasm.asm):01310                  beq  uregr     
0B6E C160             (         dasm.asm):01311                  cmpb #$60      
0B70 270F             (         dasm.asm):01312                  beq  sregr     
0B72 1600D0           (         dasm.asm):01313                  lbra rqq       
0B75 8678             (         dasm.asm):01314         xregr    lda  #'x       
0B77 200A             (         dasm.asm):01315                  bra  store     
0B79 8679             (         dasm.asm):01316         yregr    lda  #'y       
0B7B 2006             (         dasm.asm):01317                  bra  store     
0B7D 8675             (         dasm.asm):01318         uregr    lda  #'u       
0B7F 2002             (         dasm.asm):01319                  bra  store     
0B81 8673             (         dasm.asm):01320         sregr    lda  #'s       
0B83 A780             (         dasm.asm):01321         store    sta  ,x+       
0B85 3504             (         dasm.asm):01322                  puls b         
0B87 39               (         dasm.asm):01323                  rts            
0B88 3504             (         dasm.asm):01324         rplus1   puls b         
0B8A 8D0F             (         dasm.asm):01325                  bsr  rplus3    
0B8C 862B             (         dasm.asm):01326                  lda  #'+       
0B8E A780             (         dasm.asm):01327                  sta  ,x+       
0B90 39               (         dasm.asm):01328                  rts            
0B91 3504             (         dasm.asm):01329         rplus2   puls b         
0B93 8D06             (         dasm.asm):01330                  bsr  rplus3    
0B95 CC2B2B           (         dasm.asm):01331                  ldd  #$2B2B    
0B98 ED81             (         dasm.asm):01332                  std  ,x++      
0B9A 39               (         dasm.asm):01333                  rts            
0B9B 17FD5F           (         dasm.asm):01334         rplus3   lbsr coma      
0B9E 8DC0             (         dasm.asm):01335                  bsr  rr        
0BA0 39               (         dasm.asm):01336                  rts            
0BA1 17FD59           (         dasm.asm):01337         minus1   lbsr coma      
0BA4 862D             (         dasm.asm):01338                  lda  #'-       
0BA6 A780             (         dasm.asm):01339                  sta  ,x+       
0BA8 3504             (         dasm.asm):01340                  puls b         
0BAA 20B4             (         dasm.asm):01341                  bra  rr        
0BAC 17FD4E           (         dasm.asm):01342         minus2   lbsr coma      
0BAF CC2D2D           (         dasm.asm):01343                  ldd  #$2D2D    
0BB2 ED81             (         dasm.asm):01344                  std  ,x++      
0BB4 3504             (         dasm.asm):01345                  puls b         
0BB6 20A8             (         dasm.asm):01346                  bra  rr        
0BB8 3504             (         dasm.asm):01347         zoro     puls b         
0BBA 20DF             (         dasm.asm):01348                  bra  rplus3    
0BBC 8661             (         dasm.asm):01349         ar       lda  #'a       
0BBE 2006             (         dasm.asm):01350                  bra  abd       
0BC0 8662             (         dasm.asm):01351         br       lda  #'b       
0BC2 2002             (         dasm.asm):01352                  bra  abd       
0BC4 8664             (         dasm.asm):01353         dr       lda  #'d       
0BC6 A780             (         dasm.asm):01354         abd      sta  ,x+       
0BC8 3504             (         dasm.asm):01355                  puls b         
0BCA 20CF             (         dasm.asm):01356                  bra  rplus3    
0BCC E6A0             (         dasm.asm):01357         bit8r    ldb  ,y+       
0BCE 5D               (         dasm.asm):01358                  tstb           
0BCF 2A04             (         dasm.asm):01359                  bpl  plus8     
0BD1 50               (         dasm.asm):01360                  negb           
0BD2 17FD1B           (         dasm.asm):01361                  lbsr minus     
0BD5 17FD46           (         dasm.asm):01362         plus8    lbsr outhex1   
0BD8 3504             (         dasm.asm):01363                  puls b         
0BDA 20BF             (         dasm.asm):01364                  bra  rplus3    
0BDC ECA1             (         dasm.asm):01365         bit16r   ldd  ,y++      
0BDE 4D               (         dasm.asm):01366                  tsta           
0BDF 2A0C             (         dasm.asm):01367                  bpl  plus16    
0BE1 43               (         dasm.asm):01368                  coma           
0BE2 53               (         dasm.asm):01369                  comb           
0BE3 C30001           (         dasm.asm):01370                  addd #1        
0BE6 3402             (         dasm.asm):01371                  pshs a         
0BE8 17FD05           (         dasm.asm):01372                  lbsr minus     
0BEB 3502             (         dasm.asm):01373                  puls a         
0BED 17FD12           (         dasm.asm):01374         plus16   lbsr outhex2   
0BF0 3504             (         dasm.asm):01375                  puls b         
0BF2 20A7             (         dasm.asm):01376                  bra  rplus3    
0BF4 E6A0             (         dasm.asm):01377         bit8pr   ldb  ,y+       
0BF6 1D               (         dasm.asm):01378                  sex            
0BF7 3420             (         dasm.asm):01379                  pshs y         
0BF9 E3E4             (         dasm.asm):01380                  addd ,s        
0BFB 6DC823           (         dasm.asm):01381                  tst  offsopt,u
0BFE 2703             (         dasm.asm):01382                  beq  bit8pr2
0C00 17FA9A           (         dasm.asm):01383                  lbsr setoffs
0C03 17FCFC           (         dasm.asm):01384         bit8pr2  lbsr outhex2
0C06 17FCF4           (         dasm.asm):01385         pcrn     lbsr coma      
0C09 318D01AC         (         dasm.asm):01386                  leay rpcr,pcr  
0C0D 8603             (         dasm.asm):01387                  lda  #3        
0C0F 17FCE3           (         dasm.asm):01388                  lbsr put       
0C12 3520             (         dasm.asm):01389                  puls y         
0C14 3504             (         dasm.asm):01390                  puls b         
0C16 39               (         dasm.asm):01391                  rts            
0C17 ECA1             (         dasm.asm):01392         bit16p   ldd  ,y++      
0C19 3420             (         dasm.asm):01393                  pshs y         
0C1B E3E4             (         dasm.asm):01394                  addd ,s        
0C1D 6DC823           (         dasm.asm):01395                  tst  offsopt,u
0C20 2703             (         dasm.asm):01396                  beq  bit16p2
0C22 17FA78           (         dasm.asm):01397                  lbsr setoffs
0C25 17FCDA           (         dasm.asm):01398         bit16p2  lbsr outhex2
0C28 20DC             (         dasm.asm):01399                  bra  pcrn      
0C2A 3504             (         dasm.asm):01400         indirect puls b         
0C2C 865B             (         dasm.asm):01401                  lda  #$5B      
0C2E A780             (         dasm.asm):01402                  sta  ,x+       
0C30 C19F             (         dasm.asm):01403                  cmpb #$9F      
0C32 270A             (         dasm.asm):01404                  beq  exdirect  
0C34 C4EF             (         dasm.asm):01405                  andb #$EF      
0C36 17FEC6           (         dasm.asm):01406                  lbsr index     
0C39 865D             (         dasm.asm):01407         indirout lda  #$5D      
0C3B A780             (         dasm.asm):01408                  sta  ,x+       
0C3D 39               (         dasm.asm):01409                  rts            
0C3E ECA1             (         dasm.asm):01410         exdirect ldd  ,y++      
0C40 17FCBF           (         dasm.asm):01411                  lbsr outhex2   
0C43 20F4             (         dasm.asm):01412                  bra  indirout  
0C45 CC3F3F           (         dasm.asm):01413         rqq      ldd  #$3F3F    
0C48 ED81             (         dasm.asm):01414                  std  ,x++      
0C4A 3504             (         dasm.asm):01415                  puls b         
0C4C 39               (         dasm.asm):01416                  rts            
0C4D 3520             (         dasm.asm):01417         s10      puls y         
0C4F E6A0             (         dasm.asm):01418                  ldb  ,y+       
0C51 3420             (         dasm.asm):01419                  pshs y         
0C53 C130             (         dasm.asm):01420                  cmpb #$30      
0C55 2510             (         dasm.asm):01421                  blo  cbr       
0C57 C13F             (         dasm.asm):01422                  cmpb #$3F      
0C59 271D             (         dasm.asm):01423                  beq  os9       
0C5B 2254             (         dasm.asm):01424                  bhi  srest     
0C5D 3520             (         dasm.asm):01425         x10      puls y         
0C5F CC3F3F           (         dasm.asm):01426                  ldd  #$3F3F    
0C62 ED81             (         dasm.asm):01427                  std  ,x++      
0C64 16FAA6           (         dasm.asm):01428                  lbra next      
0C67 C120             (         dasm.asm):01429         cbr      cmpb #$20      
0C69 25F2             (         dasm.asm):01430                  blo  x10       
0C6B 866C             (         dasm.asm):01431                  lda  #'l       
0C6D A780             (         dasm.asm):01432                  sta  ,x+       
0C6F 17FC2F           (         dasm.asm):01433                  lbsr sub20     
0C72 17FC6C           (         dasm.asm):01434                  lbsr space1    
0C75 16FD8E           (         dasm.asm):01435                  lbra lbr       
0C78 3520             (         dasm.asm):01436         os9      puls y         
0C7A E6A0             (         dasm.asm):01437                  ldb  ,y+       
0C7C 3420             (         dasm.asm):01438                  pshs y         
0C7E 3404             (         dasm.asm):01439                  pshs b         
0C80 318D0314         (         dasm.asm):01440                  leay ros9,pcr  
0C84 8605             (         dasm.asm):01441                  lda  #5        
0C86 17FC6C           (         dasm.asm):01442                  lbsr put       
0C89 318D0310         (         dasm.asm):01443                  leay os9table,pcr
0C8D 3504             (         dasm.asm):01444                  puls b         
0C8F E1A0             (         dasm.asm):01445         os9loop  cmpb ,y+       
0C91 260A             (         dasm.asm):01446                  bne  os9next   
0C93 A6A0             (         dasm.asm):01447                  lda  ,y+       
0C95 17FC5D           (         dasm.asm):01448                  lbsr put       
0C98 3520             (         dasm.asm):01449         os9out   puls y         
0C9A 16FA70           (         dasm.asm):01450                  lbra next      
0C9D 3404             (         dasm.asm):01451         os9next  pshs b         
0C9F E6A0             (         dasm.asm):01452                  ldb  ,y+       
0CA1 1E12             (         dasm.asm):01453                  exg  x,y       
0CA3 3A               (         dasm.asm):01454                  abx            
0CA4 1E12             (         dasm.asm):01455                  exg  x,y       
0CA6 3504             (         dasm.asm):01456                  puls b         
0CA8 10AC8D0644       (         dasm.asm):01457                  cmpy ros9end,pcr
0CAD 27E9             (         dasm.asm):01458                  beq  os9out    
0CAF 20DE             (         dasm.asm):01459                  bra  os9loop   
0CB1 1F98             (         dasm.asm):01460         srest    tfr  b,a       
0CB3 59               (         dasm.asm):01461                  rolb           
0CB4 2B2C             (         dasm.asm):01462                  bmi  overc     
0CB6 3404             (         dasm.asm):01463                  pshs b         
0CB8 1F89             (         dasm.asm):01464                  tfr  a,b       
0CBA 318D01E0         (         dasm.asm):01465                  leay tab1,pcr  
0CBE 8606             (         dasm.asm):01466         enter11  lda  #6        
0CC0 C40F             (         dasm.asm):01467         solve    andb #$0F      
0CC2 17FC0B           (         dasm.asm):01468                  lbsr match     
0CC5 4A               (         dasm.asm):01469                  deca           
0CC6 17FC2C           (         dasm.asm):01470                  lbsr put       
0CC9 3504             (         dasm.asm):01471                  puls b         
0CCB 59               (         dasm.asm):01472                  rolb           
0CCC 2B0C             (         dasm.asm):01473                  bmi  next10    
0CCE 59               (         dasm.asm):01474                  rolb           
0CCF 102BFBB8         (         dasm.asm):01475                  lbmi g00       
0CD3 8623             (         dasm.asm):01476                  lda  #'#       
0CD5 A780             (         dasm.asm):01477                  sta  ,x+       
0CD7 16FBE1           (         dasm.asm):01478                  lbra g71       
0CDA 59               (         dasm.asm):01479         next10   rolb           
0CDB 102BFBDA         (         dasm.asm):01480                  lbmi g70       
0CDF 16FE14           (         dasm.asm):01481                  lbra dpit1     
0CE2 3404             (         dasm.asm):01482         overc    pshs b         
0CE4 1F89             (         dasm.asm):01483                  tfr  a,b       
0CE6 318D01CC         (         dasm.asm):01484                  leay tab2,pcr  
0CEA 20D2             (         dasm.asm):01485                  bra  enter11   
0CEC 3520             (         dasm.asm):01486         s11      puls y         
0CEE E6A0             (         dasm.asm):01487                  ldb  ,y+       
0CF0 3420             (         dasm.asm):01488                  pshs y         
0CF2 C13F             (         dasm.asm):01489                  cmpb #$3F      
0CF4 1025FF65         (         dasm.asm):01490                  lblo x10       
0CF8 220E             (         dasm.asm):01491                  bhi  rest11    
0CFA 318D0290         (         dasm.asm):01492                  leay rswi3,pcr 
0CFE 8604             (         dasm.asm):01493                  lda  #4        
0D00 17FBF2           (         dasm.asm):01494                  lbsr put       
0D03 3520             (         dasm.asm):01495                  puls y         
0D05 16FA05           (         dasm.asm):01496                  lbra next      
0D08 1F98             (         dasm.asm):01497         rest11   tfr  b,a       
0D0A 59               (         dasm.asm):01498                  rolb           
0D0B 3404             (         dasm.asm):01499                  pshs b         
0D0D 1F89             (         dasm.asm):01500                  tfr  a,b       
0D0F 318D01AF         (         dasm.asm):01501                  leay tab11,pcr 
0D13 20A9             (         dasm.asm):01502                  bra  enter11
0D15 3420             (         dasm.asm):01503         grp80    pshs y
0D17 3404             (         dasm.asm):01504                  pshs b
0D19 1F98             (         dasm.asm):01505                  tfr  b,a
0D1B C4F0             (         dasm.asm):01506                  andb #$F0
0D1D 58               (         dasm.asm):01507                  lslb
0D1E 271A             (         dasm.asm):01508                  beq  check1
0D20 58               (         dasm.asm):01509                  lslb
0D21 273D             (         dasm.asm):01510                  beq  check2
0D23 3504             (         dasm.asm):01511         rein80   puls b
0D25 1F98             (         dasm.asm):01512                  tfr  b,a
0D27 59               (         dasm.asm):01513                  rolb
0D28 2B0A             (         dasm.asm):01514                  bmi  over8
0D2A 318D01A0         (         dasm.asm):01515                  leay tab80a,pcr
0D2E 3404             (         dasm.asm):01516         mm80     pshs b
0D30 1F89             (         dasm.asm):01517                  tfr  a,b
0D32 208A             (         dasm.asm):01518                  bra  enter11
0D34 318D01F6         (         dasm.asm):01519         over8    leay tab80b,pcr
0D38 20F4             (         dasm.asm):01520                  bra  mm80
0D3A 818D             (         dasm.asm):01521         check1   cmpa #$8D
0D3C 2728             (         dasm.asm):01522                  beq  rbr
0D3E 318D018C         (         dasm.asm):01523                  leay tab80a,pcr
0D42 840F             (         dasm.asm):01524         check    anda #$0F
0D44 810C             (         dasm.asm):01525                  cmpa #$0C
0D46 24DB             (         dasm.asm):01526                  bhs  rein80
0D48 8103             (         dasm.asm):01527                  cmpa #$03
0D4A 27D7             (         dasm.asm):01528                  beq  rein80
0D4C 1F89             (         dasm.asm):01529                  tfr  a,b
0D4E 8606             (         dasm.asm):01530                  lda  #6
0D50 17FB7D           (         dasm.asm):01531                  lbsr match
0D53 4A               (         dasm.asm):01532                  deca
0D54 17FB9E           (         dasm.asm):01533                  lbsr put
0D57 8623             (         dasm.asm):01534                  lda  #'#
0D59 A780             (         dasm.asm):01535                  sta  ,x+
0D5B 3504             (         dasm.asm):01536                  puls b
0D5D 16FB2D           (         dasm.asm):01537                  lbra g01
0D60 318D01CA         (         dasm.asm):01538         check2   leay tab80b,pcr
0D64 20DC             (         dasm.asm):01539                  bra  check
0D66 3504             (         dasm.asm):01540         rbr      puls b
0D68 318D00AF         (         dasm.asm):01541                  leay rbsr,pcr
0D6C 8603             (         dasm.asm):01542                  lda  #3
0D6E 17FB84           (         dasm.asm):01543                  lbsr put
0D71 3520             (         dasm.asm):01544                  puls y
0D73 16FB23           (         dasm.asm):01545                  lbra g20
0D76 6578672020       (         dasm.asm):01546         rexg     fcc  /exg  /
0D7B 7466722020       (         dasm.asm):01547         rtfr     fcc  /tfr  /
0D80 001E00011C00021A (         dasm.asm):01548         rbyte    fcb  0,30,0,1,28,0,2,26,0,3,24,0,4,22,0,5,20,128
     0003180004160005
     1480
0D92 0813000911000A0F (         dasm.asm):01549                  fcb  8,19,0,9,17,0,10,15,128,11,14,128
     800B0E80
0D9E 6478797573707063 (         dasm.asm):01550                  fcc  /dxyusppcabccdp/
     616263636470
0DAC 637761692023     (         dasm.asm):01551         rccwai   fcc  /cwai #/
0DB2 6C6561           (         dasm.asm):01552         rlea     fcc  /lea/
0DB5 78797375         (         dasm.asm):01553         lregr    fcc  /xysu/
0DB9 706372           (         dasm.asm):01554         rpcr     fcc  /pcr/
0DBC 6E6F70           (         dasm.asm):01555         rnop     fcc  /nop/
0DBF 73796E63         (         dasm.asm):01556         rsync    fcc  /sync/
0DC3 646161           (         dasm.asm):01557         rdaa     fcc  /daa/
0DC6 736578           (         dasm.asm):01558         rsex     fcc  /sex/
0DC9 6F726363202023   (         dasm.asm):01559         rorcc    fcc  /orcc  #/
0DD0 616E6463632023   (         dasm.asm):01560         randcc   fcc  /andcc #/
0DD7 6C62726120       (         dasm.asm):01561         rlbra    fcc  /lbra /
0DDC 6C62737220       (         dasm.asm):01562         rlbsr    fcc  /lbsr /
0DE1 70756C           (         dasm.asm):01563         pull     fcc  /pul/
0DE4 707368           (         dasm.asm):01564         pshr     fcc  /psh/
0DE7 7063807580798078 (         dasm.asm):01565         order1   fcb  112,99,128,117,128,121,128,120,100,112,128,98,128,97,99,99
     6470806280616363
0DF7 6363806180626470 (         dasm.asm):01566         order2   fcb  99,99,128,97,128,98,100,112,128,120,128,121,128,117,112,99
     8078807980757063
0E07 39               (         dasm.asm):01567         table3   fcb  $39
0E08 727473           (         dasm.asm):01568                  fcc  /rts/
0E0B 3A               (         dasm.asm):01569                  fcb  $3a
0E0C 616278           (         dasm.asm):01570                  fcc  /abx/
0E0F 3B               (         dasm.asm):01571                  fcb  $3b
0E10 727469           (         dasm.asm):01572                  fcc  /rti/
0E13 3D               (         dasm.asm):01573                  fcb  $3d
0E14 6D756C           (         dasm.asm):01574                  fcc  /mul/
0E17 3F               (         dasm.asm):01575                  fcb  $3f
0E18 737769           (         dasm.asm):01576                  fcc  /swi/
0E1B 627372           (         dasm.asm):01577         rbsr     fcc  /bsr/
0E1E 00               (         dasm.asm):01578         table1   fcb  $0
0E1F 6E6567           (         dasm.asm):01579                  fcc  /neg/
0E22 01               (         dasm.asm):01580                  fcb  $01
0E23 3F3F20           (         dasm.asm):01581                  fcc  /?? /
0E26 02               (         dasm.asm):01582                  fcb  $02
0E27 3F3F20           (         dasm.asm):01583                  fcc  /?? /
0E2A 03               (         dasm.asm):01584                  fcb  $03
0E2B 636F6D           (         dasm.asm):01585                  fcc  /com/
0E2E 04               (         dasm.asm):01586                  fcb  $04
0E2F 6C7372           (         dasm.asm):01587                  fcc  /lsr/
0E32 05               (         dasm.asm):01588                  fcb  $05
0E33 3F3F20           (         dasm.asm):01589                  fcc  /?? /
0E36 06               (         dasm.asm):01590                  fcb  $06
0E37 726F72           (         dasm.asm):01591                  fcc  /ror/
0E3A 07               (         dasm.asm):01592                  fcb  $07
0E3B 617372           (         dasm.asm):01593                  fcc  /asr/
0E3E 08               (         dasm.asm):01594                  fcb  $08
0E3F 61736C           (         dasm.asm):01595                  fcc  /asl/
0E42 09               (         dasm.asm):01596                  fcb  $09
0E43 726F6C           (         dasm.asm):01597                  fcc  /rol/
0E46 0A               (         dasm.asm):01598                  fcb  lf
0E47 646563           (         dasm.asm):01599                  fcc  /dec/
0E4A 0B               (         dasm.asm):01600                  fcb  $0b
0E4B 3F3F20           (         dasm.asm):01601                  fcc  /?? /
0E4E 0C               (         dasm.asm):01602                  fcb  $0c
0E4F 696E63           (         dasm.asm):01603                  fcc  /inc/
0E52 0D               (         dasm.asm):01604                  fcb  cr
0E53 747374           (         dasm.asm):01605                  fcc  /tst/
0E56 0E               (         dasm.asm):01606                  fcb  $0e
0E57 6A6D70           (         dasm.asm):01607                  fcc  /jmp/
0E5A 0F               (         dasm.asm):01608                  fcb  $0f
0E5B 636C72           (         dasm.asm):01609                  fcc  /clr/
0E5E 20               (         dasm.asm):01610         table2   fcb  $20
0E5F 627261           (         dasm.asm):01611                  fcc  /bra/
0E62 21               (         dasm.asm):01612                  fcb  $21
0E63 62726E           (         dasm.asm):01613                  fcc  /brn/
0E66 22               (         dasm.asm):01614                  fcb  $22
0E67 626869           (         dasm.asm):01615                  fcc  /bhi/
0E6A 23               (         dasm.asm):01616                  fcb  $23
0E6B 626C73           (         dasm.asm):01617                  fcc  /bls/
0E6E 24               (         dasm.asm):01618                  fcb  $24
0E6F 626363           (         dasm.asm):01619                  fcc  /bcc/
0E72 25               (         dasm.asm):01620                  fcb  $25
0E73 626373           (         dasm.asm):01621                  fcc  /bcs/
0E76 26               (         dasm.asm):01622                  fcb  $26
0E77 626E65           (         dasm.asm):01623                  fcc  /bne/
0E7A 27               (         dasm.asm):01624                  fcb  $27
0E7B 626571           (         dasm.asm):01625                  fcc  /beq/
0E7E 28               (         dasm.asm):01626                  fcb  $28
0E7F 627663           (         dasm.asm):01627                  fcc  /bvc/
0E82 29               (         dasm.asm):01628                  fcb  $29
0E83 627673           (         dasm.asm):01629                  fcc  /bvs/
0E86 2A               (         dasm.asm):01630                  fcb  $2a
0E87 62706C           (         dasm.asm):01631                  fcc  /bpl/
0E8A 2B               (         dasm.asm):01632                  fcb  $2b
0E8B 626D69           (         dasm.asm):01633                  fcc  /bmi/
0E8E 2C               (         dasm.asm):01634                  fcb  $2c
0E8F 626765           (         dasm.asm):01635                  fcc  /bge/
0E92 2D               (         dasm.asm):01636                  fcb  $2d
0E93 626C74           (         dasm.asm):01637                  fcc  /blt/
0E96 2E               (         dasm.asm):01638                  fcb  $2e
0E97 626774           (         dasm.asm):01639                  fcc  /bgt/
0E9A 2F               (         dasm.asm):01640                  fcb  $2f
0E9B 626C65           (         dasm.asm):01641                  fcc  /ble/
0E9E 03               (         dasm.asm):01642         tab1     fcb  $03
0E9F 636D706420       (         dasm.asm):01643                  fcc  /cmpd /
0EA4 0C               (         dasm.asm):01644                  fcb  $0c
0EA5 636D707920       (         dasm.asm):01645                  fcc  /cmpy /
0EAA 0E               (         dasm.asm):01646                  fcb  $0e
0EAB 6C64792020       (         dasm.asm):01647                  fcc  /ldy  /
0EB0 0F               (         dasm.asm):01648                  fcb  $0f
0EB1 7374792020       (         dasm.asm):01649                  fcc  /sty  /
0EB6 0E               (         dasm.asm):01650         tab2     fcb  $0e
0EB7 6C64732020       (         dasm.asm):01651                  fcc  /lds  /
0EBC 0F               (         dasm.asm):01652                  fcb  $0f
0EBD 7374732020       (         dasm.asm):01653                  fcc  /sts  /
0EC2 03               (         dasm.asm):01654         tab11    fcb  $03
0EC3 636D707520       (         dasm.asm):01655                  fcc  /cmpu /
0EC8 0C               (         dasm.asm):01656                  fcb  $0c
0EC9 636D707320       (         dasm.asm):01657                  fcc  /cmps /
0ECE 00               (         dasm.asm):01658         tab80a   fcb  $00
0ECF 7375626120       (         dasm.asm):01659                  fcc  /suba /
0ED4 01               (         dasm.asm):01660                  fcb  $01
0ED5 636D706120       (         dasm.asm):01661                  fcc  /cmpa /
0EDA 02               (         dasm.asm):01662                  fcb  $02
0EDB 7362636120       (         dasm.asm):01663                  fcc  /sbca /
0EE0 03               (         dasm.asm):01664                  fcb  $03
0EE1 7375626420       (         dasm.asm):01665                  fcc  /subd /
0EE6 04               (         dasm.asm):01666                  fcb  $04
0EE7 616E646120       (         dasm.asm):01667                  fcc  /anda /
0EEC 05               (         dasm.asm):01668                  fcb  $05
0EED 6269746120       (         dasm.asm):01669                  fcc  /bita /
0EF2 06               (         dasm.asm):01670                  fcb  $06
0EF3 6C64612020       (         dasm.asm):01671                  fcc  /lda  /
0EF8 07               (         dasm.asm):01672                  fcb  $07
0EF9 7374612020       (         dasm.asm):01673                  fcc  /sta  /
0EFE 08               (         dasm.asm):01674                  fcb  $08
0EFF 656F726120       (         dasm.asm):01675                  fcc  /eora /
0F04 09               (         dasm.asm):01676                  fcb  $09
0F05 6164636120       (         dasm.asm):01677                  fcc  /adca /
0F0A 0A               (         dasm.asm):01678                  fcb  lf
0F0B 6F72612020       (         dasm.asm):01679                  fcc  /ora  /
0F10 0B               (         dasm.asm):01680                  fcb  $0b
0F11 6164646120       (         dasm.asm):01681                  fcc  /adda /
0F16 0C               (         dasm.asm):01682                  fcb  $0c
0F17 636D707820       (         dasm.asm):01683                  fcc  /cmpx /
0F1C 0D               (         dasm.asm):01684                  fcb  cr
0F1D 6A73722020       (         dasm.asm):01685                  fcc  /jsr  /
0F22 0E               (         dasm.asm):01686                  fcb  $0e
0F23 6C64782020       (         dasm.asm):01687                  fcc  /ldx  /
0F28 0F               (         dasm.asm):01688                  fcb  $0f
0F29 7374782020       (         dasm.asm):01689                  fcc  /stx  /
0F2E 00               (         dasm.asm):01690         tab80b   fcb  $00
0F2F 7375626220       (         dasm.asm):01691                  fcc  /subb /
0F34 01               (         dasm.asm):01692                  fcb  $01
0F35 636D706220       (         dasm.asm):01693                  fcc  /cmpb /
0F3A 02               (         dasm.asm):01694                  fcb  $02
0F3B 7362636220       (         dasm.asm):01695                  fcc  /sbcb /
0F40 03               (         dasm.asm):01696                  fcb  $03
0F41 6164646420       (         dasm.asm):01697                  fcc  /addd /
0F46 04               (         dasm.asm):01698                  fcb  $04
0F47 616E646220       (         dasm.asm):01699                  fcc  /andb /
0F4C 05               (         dasm.asm):01700                  fcb  $05
0F4D 6269746220       (         dasm.asm):01701                  fcc  /bitb /
0F52 06               (         dasm.asm):01702                  fcb  $06
0F53 6C64622020       (         dasm.asm):01703                  fcc  /ldb  /
0F58 07               (         dasm.asm):01704                  fcb  $07
0F59 7374622020       (         dasm.asm):01705                  fcc  /stb  /
0F5E 08               (         dasm.asm):01706                  fcb  $08
0F5F 656F726220       (         dasm.asm):01707                  fcc  /eorb /
0F64 09               (         dasm.asm):01708                  fcb  $09
0F65 6164636220       (         dasm.asm):01709                  fcc  /adcb /
0F6A 0A               (         dasm.asm):01710                  fcb  lf
0F6B 6F72622020       (         dasm.asm):01711                  fcc  /orb  /
0F70 0B               (         dasm.asm):01712                  fcb  $0b
0F71 6164646220       (         dasm.asm):01713                  fcc  /addb /
0F76 0C               (         dasm.asm):01714                  fcb  $0c
0F77 6C64642020       (         dasm.asm):01715                  fcc  /ldd  /
0F7C 0D               (         dasm.asm):01716                  fcb  cr
0F7D 7374642020       (         dasm.asm):01717                  fcc  /std  /
0F82 0E               (         dasm.asm):01718                  fcb  $0e
0F83 6C64752020       (         dasm.asm):01719                  fcc  /ldu  /
0F88 0F               (         dasm.asm):01720                  fcb  $0f
0F89 7374752020       (         dasm.asm):01721                  fcc  /stu  /
0F8E 73776933         (         dasm.asm):01722         rswi3    fcc  /swi3/
0F92 7368656C6C       (         dasm.asm):01723         rshell   fcc  /shell/
0F97 0D               (         dasm.asm):01724                  fcb  cr
0F98 6F73392020       (         dasm.asm):01725         ros9     fcc  /os9  /
0F9D 0006             (         dasm.asm):01726         os9table fcb  $0,6
0F9F 46244C696E6B     (         dasm.asm):01727                  fcc  /F$Link/
0FA5 0106             (         dasm.asm):01728                  fcb  $01,6
0FA7 46244C6F6164     (         dasm.asm):01729                  fcc  /F$Load/
0FAD 0208             (         dasm.asm):01730                  fcb  $02,8
0FAF 4624556E4C696E6B (         dasm.asm):01731                  fcc  /F$UnLink/
0FB7 0306             (         dasm.asm):01732                  fcb  $03,6
0FB9 4624466F726B     (         dasm.asm):01733                  fcc  /F$Fork/
0FBF 0406             (         dasm.asm):01734                  fcb  $04,6
0FC1 462457616974     (         dasm.asm):01735                  fcc  /F$Wait/
0FC7 0507             (         dasm.asm):01736                  fcb  $05,7
0FC9 4624436861696E   (         dasm.asm):01737                  fcc  /F$Chain/
0FD0 0606             (         dasm.asm):01738                  fcb  $06,6
0FD2 462445786974     (         dasm.asm):01739                  fcc  /F$Exit/
0FD8 0705             (         dasm.asm):01740                  fcb  $07,5
0FDA 46244D656D       (         dasm.asm):01741                  fcc  /F$Mem/
0FDF 0806             (         dasm.asm):01742                  fcb  $08,6
0FE1 462453656E64     (         dasm.asm):01743                  fcc  /F$Send/
0FE7 0906             (         dasm.asm):01744                  fcb  $09,6
0FE9 462449637074     (         dasm.asm):01745                  fcc  /F$Icpt/
0FEF 0A07             (         dasm.asm):01746                  fcb  lf,7
0FF1 4624536C656570   (         dasm.asm):01747                  fcc  /F$Sleep/
0FF8 0C04             (         dasm.asm):01748                  fcb  $0C,4
0FFA 46244944         (         dasm.asm):01749                  fcc  /F$ID/
0FFE 0D08             (         dasm.asm):01750                  fcb  cr,8
1000 4624535072696F72 (         dasm.asm):01751                  fcc  /F$SPrior/
1008 0E06             (         dasm.asm):01752                  fcb  $0E,6
100A 462453535749     (         dasm.asm):01753                  fcc  /F$SSWI/
1010 0F06             (         dasm.asm):01754                  fcb  $0F,6
1012 462450657272     (         dasm.asm):01755                  fcc  /F$Perr/
1018 1008             (         dasm.asm):01756                  fcb  $10,8
101A 46245072734E616D (         dasm.asm):01757                  fcc  /F$PrsNam/
1022 1108             (         dasm.asm):01758                  fcb  $11,8
1024 4624436D704E616D (         dasm.asm):01759                  fcc  /F$CmpNam/
102C 1208             (         dasm.asm):01760                  fcb  $12,8
102E 4624536368426974 (         dasm.asm):01761                  fcc  /F$SchBit/
1036 1308             (         dasm.asm):01762                  fcb  $13,8
1038 4624416C6C426974 (         dasm.asm):01763                  fcc  /F$AllBit/
1040 1408             (         dasm.asm):01764                  fcb  $14,8
1042 462444656C426974 (         dasm.asm):01765                  fcc  /F$DelBit/
104A 1506             (         dasm.asm):01766                  fcb  $15,6
104C 462454696D65     (         dasm.asm):01767                  fcc  /F$Time/
1052 1607             (         dasm.asm):01768                  fcb  $16,7
1054 46245354696D65   (         dasm.asm):01769                  fcc  /F$STime/
105B 1705             (         dasm.asm):01770                  fcb  $17,5
105D 4624435243       (         dasm.asm):01771                  fcc  /F$CRC/
1062 1808             (         dasm.asm):01772                  fcb  $18,8
1064 4624475072447363 (         dasm.asm):01773                  fcc  /F$GPrDsc/
106C 1908             (         dasm.asm):01774                  fcb  $19,8
106E 462447426C6B4D70 (         dasm.asm):01775                  fcc  /F$GBlkMp/
1076 1A08             (         dasm.asm):01776                  fcb  $1A,8
1078 4624474D6F644472 (         dasm.asm):01777                  fcc  /F$GModDr/
1080 1B08             (         dasm.asm):01778                  fcb  $1B,8
1082 46244370794D656D (         dasm.asm):01779                  fcc  /F$CpyMem/
108A 1C07             (         dasm.asm):01780                  fcb  $1C,7
108C 46245355736572   (         dasm.asm):01781                  fcc  /F$SUser/
1093 1D08             (         dasm.asm):01782                  fcb  $1D,8
1095 4624556E4C6F6164 (         dasm.asm):01783                  fcc  /F$UnLoad/
109D 1E07             (         dasm.asm):01784                  fcb  $1E,7
109F 4624416C61726D   (         dasm.asm):01785                  fcc  /F$Alarm/
10A6 2108             (         dasm.asm):01786                  fcb  $21,8
10A8 46244E4D4C696E6B (         dasm.asm):01787                  fcc  /F$NMLink/
10B0 2208             (         dasm.asm):01788                  fcb  $22,8
10B2 46244E4D4C6F6164 (         dasm.asm):01789                  fcc  /F$NMLoad/
10BA 2706             (         dasm.asm):01790                  fcb  $27,6
10BC 462456495251     (         dasm.asm):01791                  fcc  /F$VIRQ/
10C2 2808             (         dasm.asm):01792                  fcb  $28,8
10C4 46245352714D656D (         dasm.asm):01793                  fcc  /F$SRqMem/
10CC 2908             (         dasm.asm):01794                  fcb  $29,8
10CE 46245352744D656D (         dasm.asm):01795                  fcc  /F$SRtMem/
10D6 2A05             (         dasm.asm):01796                  fcb  $2A,5
10D8 4624495251       (         dasm.asm):01797                  fcc  /F$IRQ/
10DD 2B06             (         dasm.asm):01798                  fcb  $2B,6
10DF 4624494F5175     (         dasm.asm):01799                  fcc  /F$IOQu/
10E5 2C07             (         dasm.asm):01800                  fcb  $2C,7
10E7 46244150726F63   (         dasm.asm):01801                  fcc  /F$AProc/
10EE 2D07             (         dasm.asm):01802                  fcb  $2D,7
10F0 46244E50726F63   (         dasm.asm):01803                  fcc  /F$NProc/
10F7 2E08             (         dasm.asm):01804                  fcb  $2E,8
10F9 4624564D6F64756C (         dasm.asm):01805                  fcc  /F$VModul/
1101 2F08             (         dasm.asm):01806                  fcb  $2F,8
1103 462446696E643634 (         dasm.asm):01807                  fcc  /F$Find64/
110B 3007             (         dasm.asm):01808                  fcb  $30,7
110D 4624416C6C3634   (         dasm.asm):01809                  fcc  /F$All64/
1114 3107             (         dasm.asm):01810                  fcb  $31,7
1116 46245265743634   (         dasm.asm):01811                  fcc  /F$Ret64/
111D 3206             (         dasm.asm):01812                  fcb  $32,6
111F 462453537663     (         dasm.asm):01813                  fcc  /F$SSvc/
1125 3307             (         dasm.asm):01814                  fcb  $33,7
1127 4624494F44656C   (         dasm.asm):01815                  fcc  /F$IODel/
112E 3407             (         dasm.asm):01816                  fcb  $34,7
1130 4624534C696E6B   (         dasm.asm):01817                  fcc  /F$SLink/
1137 3506             (         dasm.asm):01818                  fcb  $35,6
1139 4624426F6F74     (         dasm.asm):01819                  fcc  /F$Boot/
113F 3607             (         dasm.asm):01820                  fcb  $36,7
1141 462442744D656D   (         dasm.asm):01821                  fcc  /F$BtMem/
1148 3708             (         dasm.asm):01822                  fcb  $37,8
114A 46244750726F6350 (         dasm.asm):01823                  fcc  /F$GProcP/
1152 3806             (         dasm.asm):01824                  fcb  $38,6
1154 46244D6F7665     (         dasm.asm):01825                  fcc  /F$Move/
115A 3908             (         dasm.asm):01826                  fcb  $39,8
115C 4624416C6C52414D (         dasm.asm):01827                  fcc  /F$AllRAM/
1164 3A08             (         dasm.asm):01828                  fcb  $3A,8
1166 4624416C6C496D67 (         dasm.asm):01829                  fcc  /F$AllImg/
116E 3B08             (         dasm.asm):01830                  fcb  $3B,8
1170 462444656C496D67 (         dasm.asm):01831                  fcc  /F$DelImg/
1178 3C08             (         dasm.asm):01832                  fcb  $3C,8
117A 4624536574496D67 (         dasm.asm):01833                  fcc  /F$SetImg/
1182 3D08             (         dasm.asm):01834                  fcb  $3D,8
1184 4624467265654C42 (         dasm.asm):01835                  fcc  /F$FreeLB/
118C 3E08             (         dasm.asm):01836                  fcb  $3E,8
118E 4624467265654842 (         dasm.asm):01837                  fcc  /F$FreeHB/
1196 3F08             (         dasm.asm):01838                  fcb  $3F,8
1198 4624416C6C54736B (         dasm.asm):01839                  fcc  /F$AllTsk/
11A0 4008             (         dasm.asm):01840                  fcb  $40,8
11A2 462444656C54736B (         dasm.asm):01841                  fcc  /F$DelTsk/
11AA 4108             (         dasm.asm):01842                  fcb  $41,8
11AC 462453657454736B (         dasm.asm):01843                  fcc  /F$SetTsk/
11B4 4208             (         dasm.asm):01844                  fcb  $42,8
11B6 462452657354736B (         dasm.asm):01845                  fcc  /F$ResTsk/
11BE 4308             (         dasm.asm):01846                  fcb  $43,8
11C0 462452656C54736B (         dasm.asm):01847                  fcc  /F$RelTsk/
11C8 4408             (         dasm.asm):01848                  fcb  $44,8
11CA 46244441544C6F67 (         dasm.asm):01849                  fcc  /F$DATLog/
11D2 4607             (         dasm.asm):01850                  fcb  $46,7
11D4 46244C44415859   (         dasm.asm):01851                  fcc  /F$LDAXY/
11DB 4808             (         dasm.asm):01852                  fcb  $48,8
11DD 46244C4444445859 (         dasm.asm):01853                  fcc  /F$LDDDXY/
11E5 4907             (         dasm.asm):01854                  fcb  $49,7
11E7 46244C44414258   (         dasm.asm):01855                  fcc  /F$LDABX/
11EE 4A07             (         dasm.asm):01856                  fcb  $4A,7
11F0 46245354414258   (         dasm.asm):01857                  fcc  /F$STABX/
11F7 4B08             (         dasm.asm):01858                  fcb  $4B,8
11F9 4624416C6C507263 (         dasm.asm):01859                  fcc  /F$AllPrc/
1201 4C08             (         dasm.asm):01860                  fcb  $4C,8
1203 462444656C507263 (         dasm.asm):01861                  fcc  /F$DelPrc/
120B 4D07             (         dasm.asm):01862                  fcb  $4D,7
120D 4624454C696E6B   (         dasm.asm):01863                  fcc  /F$ELink/
1214 4E08             (         dasm.asm):01864                  fcb  $4E,8
1216 4624464D6F64756C (         dasm.asm):01865                  fcc  /F$FModul/
121E 4F08             (         dasm.asm):01866                  fcb  $4F,8
1220 46244D6170426C6B (         dasm.asm):01867                  fcc  /F$MapBlk/
1228 5008             (         dasm.asm):01868                  fcb  $50,8
122A 4624436C72426C6B (         dasm.asm):01869                  fcc  /F$ClrBlk/
1232 5108             (         dasm.asm):01870                  fcb  $51,8
1234 462444656C52414D (         dasm.asm):01871                  fcc  /F$DelRAM/
123C 5208             (         dasm.asm):01872                  fcb  $52,8
123E 462447434D446972 (         dasm.asm):01873                  fcc  /F$GCMDir/
1246 5308             (         dasm.asm):01874                  fcb  $53,8
1248 4624416C4852616D (         dasm.asm):01875                  fcc  /F$AlHRam/
1250 8008             (         dasm.asm):01876                  fcb  $80,8
1252 4924417474616368 (         dasm.asm):01877                  fcc  /I$Attach/
125A 8108             (         dasm.asm):01878                  fcb  $81,8
125C 4924446574616368 (         dasm.asm):01879                  fcc  /I$Detach/
1264 8205             (         dasm.asm):01880                  fcb  $82,5
1266 4924447570       (         dasm.asm):01881                  fcc  /I$Dup/
126B 8308             (         dasm.asm):01882                  fcb  $83,8
126D 4924437265617465 (         dasm.asm):01883                  fcc  /I$Create/
1275 8406             (         dasm.asm):01884                  fcb  $84,6
1277 49244F70656E     (         dasm.asm):01885                  fcc  /I$Open/
127D 8508             (         dasm.asm):01886                  fcb  $85,8
127F 49244D616B446972 (         dasm.asm):01887                  fcc  /I$MakDir/
1287 8608             (         dasm.asm):01888                  fcb  $86,8
1289 4924436867646972 (         dasm.asm):01889                  fcc  /I$Chgdir/
1291 8708             (         dasm.asm):01890                  fcb  $87,8
1293 492444656C657465 (         dasm.asm):01891                  fcc  /I$Delete/
129B 8806             (         dasm.asm):01892                  fcb  $88,6
129D 49245365656B     (         dasm.asm):01893                  fcc  /I$Seek/
12A3 8906             (         dasm.asm):01894                  fcb  $89,6
12A5 492452656164     (         dasm.asm):01895                  fcc  /I$Read/
12AB 8A07             (         dasm.asm):01896                  fcb  $8A,7
12AD 49245772697465   (         dasm.asm):01897                  fcc  /I$Write/
12B4 8B08             (         dasm.asm):01898                  fcb  $8B,8
12B6 4924526561644C6E (         dasm.asm):01899                  fcc  /I$ReadLn/
12BE 8C08             (         dasm.asm):01900                  fcb  $8C,8
12C0 4924577269744C6E (         dasm.asm):01901                  fcc  /I$WritLn/
12C8 8D08             (         dasm.asm):01902                  fcb  $8D,8
12CA 4924476574537474 (         dasm.asm):01903                  fcc  /I$GetStt/
12D2 8E08             (         dasm.asm):01904                  fcb  $8E,8
12D4 4924536574537474 (         dasm.asm):01905                  fcc  /I$SetStt/
12DC 8F07             (         dasm.asm):01906                  fcb  $8F,7
12DE 4924436C6F7365   (         dasm.asm):01907                  fcc  /I$Close/
12E5 9008             (         dasm.asm):01908                  fcb  $90,8
12E7 492444656C657458 (         dasm.asm):01909                  fcc  /I$DeletX/
12EF 0000             (         dasm.asm):01910                  fcb  0,0
     12F1             (         dasm.asm):01911         ros9end  equ  *
12F1 0C               (         dasm.asm):01912         copyr    fcb  $0C
12F2 07               (         dasm.asm):01913                  fcb  7
12F3 4441534D20284329 (         dasm.asm):01914                  fcc  "DASM (C) 1992"
     2031393932
1300 0A               (         dasm.asm):01915                  fcb  lf
1301 4A2E522E434F4C4C (         dasm.asm):01916                  fcc  "J.R.COLLYER"
     594552
130C 0A               (         dasm.asm):01917                  fcb  lf
130D 0D               (         dasm.asm):01918                  fcb  cr
130E 00               (         dasm.asm):01919                  fcb  0
130F 6461736D3A20     (         dasm.asm):01920         prompt   fcc  "dasm: "
1315 00               (         dasm.asm):01921                  fcb  0
1316 57484154203F3F   (         dasm.asm):01922         whatmsg  fcc  "WHAT ??"
131D 0D               (         dasm.asm):01923                  fcb  cr
131E 00               (         dasm.asm):01924                  fcb  0
131F 5553453A205B4845 (         dasm.asm):01925         adrmsg   fcc  "USE: [HEX DIGITS]"
     5820444947495453
     5D
1330 0D               (         dasm.asm):01926                  fcb  cr
1331 00               (         dasm.asm):01927                  fcb  0
1332 5354415254204144 (         dasm.asm):01928         jumpmsg  fcc  "START ADDRESS ? "
     4452455353203F20
1342 00               (         dasm.asm):01929                  fcb  0
1343 554E4C494E4B4544 (         dasm.asm):01930         ulinkmsg fcc  "UNLINKED MODULE COUNT"
     204D4F44554C4520
     434F554E54
1358 0D               (         dasm.asm):01931                  fcb  cr
1359 00               (         dasm.asm):01932                  fcb  0
135A 4D4F44554C45204C (         dasm.asm):01933         notlkmsg fcc  "MODULE LINK COUNT IS ZERO"
     494E4B20434F554E
     54204953205A4552
     4F
1373 0D               (         dasm.asm):01934                  fcb  cr
1374 00               (         dasm.asm):01935                  fcb  0
1375 4C494E4B203F20   (         dasm.asm):01936         linkmsg  fcc  "LINK ? "
137C 00               (         dasm.asm):01937                  fcb  0
137D 646173ED         (         dasm.asm):01938         dasmmsg  fcs  "dasm"
1381 00               (         dasm.asm):01939                  fcb  0
1382 5348454C4C203F20 (         dasm.asm):01940         shellmsg fcc  "SHELL ? "
138A 00               (         dasm.asm):01941                  fcb  0
138B 4155544F203F20   (         dasm.asm):01942         getmode  fcc  "AUTO ? "
1392 00               (         dasm.asm):01943                  fcb  0
1393 4155544F204F4E   (         dasm.asm):01944         modemsg1 fcc  "AUTO ON"
139A 0D               (         dasm.asm):01945                  fcb  cr
139B 00               (         dasm.asm):01946                  fcb  0
139C 4155544F204F4646 (         dasm.asm):01947         modemsg2 fcc  "AUTO OFF"
13A4 0D               (         dasm.asm):01948                  fcb  cr
13A5 00               (         dasm.asm):01949                  fcb  0
13A6 5052494E54455220 (         dasm.asm):01950         prtermsg fcc  "PRINTER ? "
     3F20
13B0 00               (         dasm.asm):01951                  fcb  0
13B1 5052494E54455220 (         dasm.asm):01952         prtmsg   fcc  "PRINTER  ON"
     204F4E
13BC 0D               (         dasm.asm):01953                  fcb  cr
13BD 00               (         dasm.asm):01954                  fcb  0
13BE 5052494E54455220 (         dasm.asm):01955         scrmsg   fcc  "PRINTER  OFF"
     204F4646
13CA 0D               (         dasm.asm):01956                  fcb  cr
13CB 00               (         dasm.asm):01957                  fcb  0
13CC 425546464552203F (         dasm.asm):01958         buffmsg  fcc  "BUFFER ? "
     20
13D5 00               (         dasm.asm):01959                  fcb  0
13D6 425546464552204F (         dasm.asm):01960         buff1    fcc  "BUFFER OFF"
     4646
13E0 0D               (         dasm.asm):01961                  fcb  cr
13E1 00               (         dasm.asm):01962                  fcb  0
13E2 425546464552204F (         dasm.asm):01963         buff2    fcc  "BUFFER ON"
     4E
13EB 0D               (         dasm.asm):01964                  fcb  cr
13EC 00               (         dasm.asm):01965                  fcb  0
13ED 4255464645522046 (         dasm.asm):01966         bfull    fcc  "BUFFER FULL"
     554C4C
13F8 0D               (         dasm.asm):01967                  fcb  cr
13F9 00               (         dasm.asm):01968                  fcb  0
13FA 4144445245535320 (         dasm.asm):01969         stackms1 fcc  "ADDRESS STACK IS FULL"
     535441434B204953
     2046554C4C
140F 0D               (         dasm.asm):01970                  fcb  cr
1410 00               (         dasm.asm):01971                  fcb  0
1411 4144445245535320 (         dasm.asm):01972         stackms2 fcc  "ADDRESS STACK IS EMPTY"
     535441434B204953
     20454D505459
1427 0D               (         dasm.asm):01973                  fcb  cr
1428 00               (         dasm.asm):01974                  fcb  0
1429 5553453A20415252 (         dasm.asm):01975         helpmsg  fcc  "USE: ARROW KEYS  $ ? A B E G L M O P Q R S U W"
     4F57204B45595320
     2024203F20412042
     20452047204C204D
     204F205020512052
     205320552057
1457 0D               (         dasm.asm):01976                  fcb  cr
1458 00               (         dasm.asm):01977                  fcb  0
1459 46494C454E414D45 (         dasm.asm):01978         fname    fcc  "FILENAME ? "
     203F20
1464 00               (         dasm.asm):01979                  fcb  0
1465 454E442041444452 (         dasm.asm):01980         endadmsg fcc  "END ADDRESS ? "
     455353203F20
1473 00               (         dasm.asm):01981                  fcb  0
1474 47494D49203F20   (         dasm.asm):01982         gimimsg  fcc  "GIMI ? "
147B 00               (         dasm.asm):01983                  fcb  0
147C 4558414D504C453A (         dasm.asm):01984         gimimsg1 fcc  "EXAMPLE: 3F,3E,3D [ENTER]"
     2033462C33452C33
     44205B454E544552
     5D
1495 0D               (         dasm.asm):01985                  fcb  cr
1496 00               (         dasm.asm):01986                  fcb  0
1497 4558414D504C453A (         dasm.asm):01987         gimimsg2 fcc  "EXAMPLE: FF FE FD [ENTER]"
     2046462046452046
     44205B454E544552
     5D
14B0 0D               (         dasm.asm):01988                  fcb  cr
14B1 00               (         dasm.asm):01989                  fcb  0
14B2 4F46465345545320 (         dasm.asm):01990         offsmsg  fcc  "OFFSETS ? "
     3F20
14BC 00               (         dasm.asm):01991                  fcb  0
14BD 4F46465345545320 (         dasm.asm):01992         offsmsg1 fcc  "OFFSETS ON"
     4F4E
14C7 0D               (         dasm.asm):01993                  fcb  cr
14C8 00               (         dasm.asm):01994                  fcb  0
14C9 4F46465345545320 (         dasm.asm):01995         offsmsg2 fcc  "OFFSETS OFF"
     4F4646
14D4 0D               (         dasm.asm):01996                  fcb  cr
14D5 00               (         dasm.asm):01997                  fcb  0
14D6 5155495420415245 (         dasm.asm):01998         exitmsg  fcc  "QUIT ARE YOU SURE (y/n) ? "
     20594F5520535552
     452028792F6E2920
     3F20
14F0 00               (         dasm.asm):01999                  fcb  0
14F1 2F70             (         dasm.asm):02000         pmsg     fcc  "/p"
14F3 07               (         dasm.asm):02001         usemsg   fcb  7
14F4 0A               (         dasm.asm):02002                  fcb  lf
14F5 2A2A2A2A2A2A2A2A (         dasm.asm):02003                  fcc  "*************************"
     2A2A2A2A2A2A2A2A
     2A2A2A2A2A2A2A2A
     2A
150E 0A               (         dasm.asm):02004                  fcb  lf
150F 2A2A204F53392044 (         dasm.asm):02005                  fcc  "** OS9 DASM"
     41534D
151A 0A               (         dasm.asm):02006                  fcb  lf
151B 2A2A202843293139 (         dasm.asm):02007                  fcc  "** (C)1992 J.R.COLLYER"
     3932204A2E522E43
     4F4C4C594552
1531 0A               (         dasm.asm):02008                  fcb  lf
1532 2A2A207573616765 (         dasm.asm):02009                  fcc  "** usage: dasm <opts> [path] [module]"
     3A206461736D203C
     6F7074733E205B70
     6174685D205B6D6F
     64756C655D
1557 0A               (         dasm.asm):02010                  fcb  lf
1558 2A2A206F7074733A (         dasm.asm):02011                  fcc  "** opts:     -o  use offset addresses"
     20202020202D6F20
     20757365206F6666
     7365742061646472
     6573736573
157D 0A               (         dasm.asm):02012                  fcb  lf
157E 2A2A202020202020 (         dasm.asm):02013                  fcc  "**           -s  start address"
     20202020202D7320
     2073746172742061
     646472657373
159C 0A               (         dasm.asm):02014                  fcb  lf
159D 2A2A202020202020 (         dasm.asm):02015                  fcc  "**           -e  end address"
     20202020202D6520
     20656E6420616464
     72657373
15B9 0A               (         dasm.asm):02016                  fcb  lf
15BA 2A2A202020202020 (         dasm.asm):02017                  fcc  "**           -m  use hard addresses"
     20202020202D6D20
     2075736520686172
     6420616464726573
     736573
15DD 0A               (         dasm.asm):02018                  fcb  lf
15DE 2A2A202020202020 (         dasm.asm):02019                  fcc  "**           -l  link os9 module"
     20202020202D6C20
     206C696E6B206F73
     39206D6F64756C65
15FE 0A               (         dasm.asm):02020                  fcb  lf
15FF 2A2A202020202020 (         dasm.asm):02021                  fcc  "**           -r  read os9 module"
     20202020202D7220
     2072656164206F73
     39206D6F64756C65
161F 0A               (         dasm.asm):02022                  fcb  lf
1620 2A2A202020202020 (         dasm.asm):02023                  fcc  "**           [ENTER] Interactive mode"
     20202020205B454E
     5445525D20496E74
     6572616374697665
     206D6F6465
1645 0A               (         dasm.asm):02024                  fcb  lf
1646 0D               (         dasm.asm):02025                  fcb  cr
1647 00               (         dasm.asm):02026                  fcb  0
1648 00               (         dasm.asm):02027         commands fcb  00    
1649 0000             (         dasm.asm):02028                  fdb 0000   
164B 08               (         dasm.asm):02029                  fcb  $08  left arrow
164C 0562             (         dasm.asm):02030                  fdb  return-begin
164E 09               (         dasm.asm):02031                  fcb  $09  right arrow
164F 053E             (         dasm.asm):02032                  fdb  branch-begin
1651 0A               (         dasm.asm):02033                  fcb  lf    down arrow
1652 06A7             (         dasm.asm):02034                  fdb  dentry-begin
1654 0C               (         dasm.asm):02035                  fcb  $0C    up arrow
1655 03DA             (         dasm.asm):02036                  fdb  back-begin
1657 24               (         dasm.asm):02037                  fcb  $24    shell command
1658 0106             (         dasm.asm):02038                  fdb  shell-begin
165A 3F               (         dasm.asm):02039                  fcb  $3F    help  command
165B 01FA             (         dasm.asm):02040                  fdb  help-begin
165D 41               (         dasm.asm):02041                  fcb  $41    ASCII command
165E 03F8             (         dasm.asm):02042                  fdb  ascii-begin
1660 42               (         dasm.asm):02043                  fcb  $42    buffer command
1661 0328             (         dasm.asm):02044                  fdb  bcom-begin
1663 45               (         dasm.asm):02045                  fcb  $45    end address for auto mode
1664 029F             (         dasm.asm):02046                  fdb  chngend-begin
1666 47               (         dasm.asm):02047                  fcb  $47    gimi
1667 05B2             (         dasm.asm):02048                  fdb  gimicom-begin
1669 4C               (         dasm.asm):02049                  fcb  $4C    link  command
166A 0132             (         dasm.asm):02050                  fdb  link-begin
166C 4D               (         dasm.asm):02051                  fcb  $4D    mode  command
166D 02C7             (         dasm.asm):02052                  fdb  setmode-begin
166F 4F               (         dasm.asm):02053                  fcb  $4F    offsets
1670 0587             (         dasm.asm):02054                  fdb  offscom-begin
1672 50               (         dasm.asm):02055                  fcb  $50    printer command
1673 02EF             (         dasm.asm):02056                  fdb  printer-begin
1675 51               (         dasm.asm):02057                  fcb  $51    quit command
1676 01E8             (         dasm.asm):02058                  fdb  quit-begin
1678 52               (         dasm.asm):02059                  fcb  $52    read disk file command
1679 0433             (         dasm.asm):02060                  fdb  read-begin
167B 53               (         dasm.asm):02061                  fcb  $53    start address
167C 0205             (         dasm.asm):02062                  fdb  jump-begin
167E 55               (         dasm.asm):02063                  fcb  $55    unlink command
167F 01B5             (         dasm.asm):02064                  fdb  unlink-begin
1681 57               (         dasm.asm):02065                  fcb  $57    disk write
1682 0492             (         dasm.asm):02066                  fdb  write-begin
1684 00               (         dasm.asm):02067                  fcb  0
1685 830BDC           (         dasm.asm):02068                  emod
     1688             (         dasm.asm):02069         len      equ  *
                      (         dasm.asm):02070                  end
