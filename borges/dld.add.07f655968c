                      (../cmds/DLD.add.a):00001                    nam    DLD.add
                      (../cmds/DLD.add.a):00002                    ttl    program module
                      (../cmds/DLD.add.a):00003         
                      (../cmds/DLD.add.a):00004                    ifp1
                      (../cmds/DLD.add.a):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/DLD.add.a):00006                    endc
                      (../cmds/DLD.add.a):00007         
     0011             (../cmds/DLD.add.a):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/DLD.add.a):00009         atrv       set    ReEnt+rev
     0001             (../cmds/DLD.add.a):00010         rev        set    $01
                      (../cmds/DLD.add.a):00011         
0000 87CD07F6000D1181 (../cmds/DLD.add.a):00012                    mod    eom,name,tylg,atrv,start,size
     D901D52228
                      (../cmds/DLD.add.a):00013         
0000.                 (../cmds/DLD.add.a):00014         U0000      rmb    1
0001.                 (../cmds/DLD.add.a):00015         U0001      rmb    1
0002.                 (../cmds/DLD.add.a):00016         U0002      rmb    1
0003.                 (../cmds/DLD.add.a):00017         U0003      rmb    1
0004.                 (../cmds/DLD.add.a):00018         U0004      rmb    1
0005.                 (../cmds/DLD.add.a):00019         U0005      rmb    80
0055.                 (../cmds/DLD.add.a):00020         U0055      rmb    32
0075.                 (../cmds/DLD.add.a):00021         U0075      rmb    27
0090.                 (../cmds/DLD.add.a):00022         U0090      rmb    2
0092.                 (../cmds/DLD.add.a):00023         U0092      rmb    2
0094.                 (../cmds/DLD.add.a):00024         U0094      rmb    1
0095.                 (../cmds/DLD.add.a):00025         U0095      rmb    64
00D5.                 (../cmds/DLD.add.a):00026         U00D5      rmb    31
00F4.                 (../cmds/DLD.add.a):00027         U00F4      rmb    65
0135.                 (../cmds/DLD.add.a):00028         U0135      rmb    12
0141.                 (../cmds/DLD.add.a):00029         U0141      rmb    2
0143.                 (../cmds/DLD.add.a):00030         U0143      rmb    2
0145.                 (../cmds/DLD.add.a):00031         U0145      rmb    2
0147.                 (../cmds/DLD.add.a):00032         U0147      rmb    3
014A.                 (../cmds/DLD.add.a):00033         U014A      rmb    1
014B.                 (../cmds/DLD.add.a):00034         U014B      rmb    1
014C.                 (../cmds/DLD.add.a):00035         U014C      rmb    1
014D.                 (../cmds/DLD.add.a):00036         U014D      rmb    2
014F.                 (../cmds/DLD.add.a):00037         U014F      rmb    1
0150.                 (../cmds/DLD.add.a):00038         U0150      rmb    1
0151.                 (../cmds/DLD.add.a):00039         U0151      rmb    2
0153.                 (../cmds/DLD.add.a):00040         U0153      rmb    2
0155.                 (../cmds/DLD.add.a):00041         U0155      rmb    3
0158.                 (../cmds/DLD.add.a):00042         U0158      rmb    1
0159.                 (../cmds/DLD.add.a):00043         U0159      rmb    8399
     2228             (../cmds/DLD.add.a):00044         size       equ    .
                      (../cmds/DLD.add.a):00045         
000D 444C442E6164E4   (../cmds/DLD.add.a):00046         name       fcs    /DLD.add/                                             * 000D 44 4C 44 2E 61 64 E4 DLD.add
0014 436F707972696768 (../cmds/DLD.add.a):00047                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0014 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
0071 EC               (../cmds/DLD.add.a):00048                    fcb    $EC                                                   * 0071 EC             l
0072 E6               (../cmds/DLD.add.a):00049                    fcb    $E6                                                   * 0072 E6             f
0073 EA               (../cmds/DLD.add.a):00050                    fcb    $EA                                                   * 0073 EA             j
0074 F5               (../cmds/DLD.add.a):00051                    fcb    $F5                                                   * 0074 F5             u
0075 E9               (../cmds/DLD.add.a):00052                    fcb    $E9                                                   * 0075 E9             i
0076 A0               (../cmds/DLD.add.a):00053                    fcb    $A0                                                   * 0076 A0
0077 E2               (../cmds/DLD.add.a):00054                    fcb    $E2                                                   * 0077 E2             b
0078 ED               (../cmds/DLD.add.a):00055                    fcb    $ED                                                   * 0078 ED             m
0079 F1               (../cmds/DLD.add.a):00056                    fcb    $F1                                                   * 0079 F1             q
007A E9               (../cmds/DLD.add.a):00057                    fcb    $E9                                                   * 007A E9             i
007B F0               (../cmds/DLD.add.a):00058                    fcb    $F0                                                   * 007B F0             p
007C EF               (../cmds/DLD.add.a):00059                    fcb    $EF                                                   * 007C EF             o
007D F4               (../cmds/DLD.add.a):00060                    fcb    $F4                                                   * 007D F4             t
007E F0               (../cmds/DLD.add.a):00061                    fcb    $F0                                                   * 007E F0             p
007F 456E746572206669 (../cmds/DLD.add.a):00062         L007F      fcc    "Enter filename to add:"                              * 007F 45 6E 74 65 72 20 66 69 6C 65 6E 61 6D 65 20 74 6F 20 61 64 64 3A Enter filename to add:
     6C656E616D652074
     6F206164643A
0095 444C442E6C7374   (../cmds/DLD.add.a):00063         L0095      fcc    "DLD.lst"                                             * 0095 44 4C 44 2E 6C 73 74 DLD.lst
009C 0D               (../cmds/DLD.add.a):00064                    fcb    $0D                                                   * 009C 0D             .
009D 444C442E6B6579   (../cmds/DLD.add.a):00065         L009D      fcc    "DLD.key"                                             * 009D 44 4C 44 2E 6B 65 79 DLD.key
00A4 0D               (../cmds/DLD.add.a):00066                    fcb    $0D                                                   * 00A4 0D             .
00A5 444C442E647363   (../cmds/DLD.add.a):00067         L00A5      fcc    "DLD.dsc"                                             * 00A5 44 4C 44 2E 64 73 63 DLD.dsc
00AC 0D               (../cmds/DLD.add.a):00068                    fcb    $0D                                                   * 00AC 0D             .
00AD 0D               (../cmds/DLD.add.a):00069                    fcb    $0D                                                   * 00AD 0D             .
00AE 0A               (../cmds/DLD.add.a):00070                    fcb    $0A                                                   * 00AE 0A             .
00AF 456E746572206120 (../cmds/DLD.add.a):00071         L00AF      fcc    "Enter a one-line description of this file"           * 00AF 45 6E 74 65 72 20 61 20 6F 6E 65 2D 6C 69 6E 65 20 64 65 73 63 72 69 70 74 69 6F 6E 20 6F 66 20 74 68 69 73 20 66 69 6C 65 Enter a one-line description of this file
     6F6E652D6C696E65
     2064657363726970
     74696F6E206F6620
     746869732066696C
     65
00D8 0D               (../cmds/DLD.add.a):00072                    fcb    $0D                                                   * 00D8 0D             .
00D9 2D2D2D2D2D2D2D2D (../cmds/DLD.add.a):00073         L00D9      fcc    "----------------------------------------------------------------" * 00D9 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
0119 0D               (../cmds/DLD.add.a):00074                    fcb    $0D                                                   * 0119 0D             .
011A 3E               (../cmds/DLD.add.a):00075         L011A      fcb    $3E                                                   * 011A 3E             >
011B 0D               (../cmds/DLD.add.a):00076                    fcb    $0D                                                   * 011B 0D             .
011C 2020202020456E74 (../cmds/DLD.add.a):00077         L011C      fcc    "     Enter file keywords now            (Blank line ends)" * 011C 20 20 20 20 20 45 6E 74 65 72 20 66 69 6C 65 20 6B 65 79 77 6F 72 64 73 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29      Enter file keywords now            (Blank line ends)
     65722066696C6520
     6B6579776F726473
     206E6F7720202020
     2020202020202020
     28426C616E6B206C
     696E6520656E6473
     29
0155 0D               (../cmds/DLD.add.a):00078                    fcb    $0D                                                   * 0155 0D             .
0156 0A               (../cmds/DLD.add.a):00079         L0156      fcb    $0A                                                   * 0156 0A             .
0157 0A               (../cmds/DLD.add.a):00080                    fcb    $0A                                                   * 0157 0A             .
0158 202020456E746572 (../cmds/DLD.add.a):00081                    fcc    "   Enter long description now          (Blank line ends)" * 0158 20 20 20 45 6E 74 65 72 20 6C 6F 6E 67 20 64 65 73 63 72 69 70 74 69 6F 6E 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29    Enter long description now          (Blank line ends)
     206C6F6E67206465
     736372697074696F
     6E206E6F77202020
     2020202020202028
     426C616E6B206C69
     6E6520656E647329
0190 0D               (../cmds/DLD.add.a):00082                    fcb    $0D                                                   * 0190 0D             .
0191 456E746572206B65 (../cmds/DLD.add.a):00083         L0191      fcc    "Enter keyword:"                                      * 0191 45 6E 74 65 72 20 6B 65 79 77 6F 72 64 3A Enter keyword:
     79776F72643A
019F 0A               (../cmds/DLD.add.a):00084         L019F      fcb    $0A                                                   * 019F 0A             .
01A0 5B445D6F6E65205B (../cmds/DLD.add.a):00085                    fcc    "[D]one [E]dit [C]ontinue or [L]ist"                  * 01A0 5B 44 5D 6F 6E 65 20 5B 45 5D 64 69 74 20 5B 43 5D 6F 6E 74 69 6E 75 65 20 6F 72 20 5B 4C 5D 69 73 74 [D]one [E]dit [C]ontinue or [L]ist
     455D646974205B43
     5D6F6E74696E7565
     206F72205B4C5D69
     7374
01C2 0D               (../cmds/DLD.add.a):00086                    fcb    $0D                                                   * 01C2 0D             .
01C3 0A               (../cmds/DLD.add.a):00087         L01C3      fcb    $0A                                                   * 01C3 0A             .
01C4 0D               (../cmds/DLD.add.a):00088                    fcb    $0D                                                   * 01C4 0D             .
01C5 456E746572206C69 (../cmds/DLD.add.a):00089         L01C5      fcc    "Enter line #"                                        * 01C5 45 6E 74 65 72 20 6C 69 6E 65 20 23 Enter line #
     6E652023
01D1 0D               (../cmds/DLD.add.a):00090                    fcb    $0D                                                   * 01D1 0D             .
01D2 08               (../cmds/DLD.add.a):00091         L01D2      fcb    $08                                                   * 01D2 08             .
01D3 20               (../cmds/DLD.add.a):00092                    fcb    $20                                                   * 01D3 20
01D4 08               (../cmds/DLD.add.a):00093                    fcb    $08                                                   * 01D4 08             .
01D5 A684             (../cmds/DLD.add.a):00094         start      lda    0,X                                                   * 01D5 A6 84          &.
01D7 810D             (../cmds/DLD.add.a):00095                    cmpa   #13                                                   * 01D7 81 0D          ..
01D9 2709             (../cmds/DLD.add.a):00096                    beq    L01E4                                                 * 01D9 27 09          '.
01DB 8601             (../cmds/DLD.add.a):00097                    lda    #1                                                    * 01DB 86 01          ..
01DD 103F86           (../cmds/DLD.add.a):00098                    os9    I$ChgDir                                              * 01DD 10 3F 86       .?.
01E0 102503B5         (../cmds/DLD.add.a):00099                    lbcs   L0599                                                 * 01E0 10 25 03 B5    .%.5
01E4 308DFEAD         (../cmds/DLD.add.a):00100         L01E4      leax   >L0095,PC                                             * 01E4 30 8D FE AD    0.~-
01E8 8603             (../cmds/DLD.add.a):00101                    lda    #3                                                    * 01E8 86 03          ..
01EA 103F84           (../cmds/DLD.add.a):00102                    os9    I$Open                                                * 01EA 10 3F 84       .?.
01ED 240F             (../cmds/DLD.add.a):00103                    bcc    L01FE                                                 * 01ED 24 0F          $.
01EF C1D8             (../cmds/DLD.add.a):00104                    cmpb   #216                                                  * 01EF C1 D8          AX
01F1 102603A4         (../cmds/DLD.add.a):00105                    lbne   L0599                                                 * 01F1 10 26 03 A4    .&.$
01F5 C61B             (../cmds/DLD.add.a):00106                    ldb    #27                                                   * 01F5 C6 1B          F.
01F7 103F83           (../cmds/DLD.add.a):00107                    os9    I$Create                                              * 01F7 10 3F 83       .?.
01FA 1025039B         (../cmds/DLD.add.a):00108                    lbcs   L0599                                                 * 01FA 10 25 03 9B    .%..
01FE A741             (../cmds/DLD.add.a):00109         L01FE      sta    U0001,U                                               * 01FE A7 41          'A
0200 308DFE99         (../cmds/DLD.add.a):00110                    leax   >L009D,PC                                             * 0200 30 8D FE 99    0.~.
0204 8602             (../cmds/DLD.add.a):00111                    lda    #2                                                    * 0204 86 02          ..
0206 103F84           (../cmds/DLD.add.a):00112                    os9    I$Open                                                * 0206 10 3F 84       .?.
0209 240F             (../cmds/DLD.add.a):00113                    bcc    L021A                                                 * 0209 24 0F          $.
020B C1D8             (../cmds/DLD.add.a):00114                    cmpb   #216                                                  * 020B C1 D8          AX
020D 10260388         (../cmds/DLD.add.a):00115                    lbne   L0599                                                 * 020D 10 26 03 88    .&..
0211 C61B             (../cmds/DLD.add.a):00116                    ldb    #27                                                   * 0211 C6 1B          F.
0213 103F83           (../cmds/DLD.add.a):00117                    os9    I$Create                                              * 0213 10 3F 83       .?.
0216 1025037F         (../cmds/DLD.add.a):00118                    lbcs   L0599                                                 * 0216 10 25 03 7F    .%..
021A A742             (../cmds/DLD.add.a):00119         L021A      sta    U0002,U                                               * 021A A7 42          'B
021C 308DFE85         (../cmds/DLD.add.a):00120                    leax   >L00A5,PC                                             * 021C 30 8D FE 85    0.~.
0220 8603             (../cmds/DLD.add.a):00121                    lda    #3                                                    * 0220 86 03          ..
0222 103F84           (../cmds/DLD.add.a):00122                    os9    I$Open                                                * 0222 10 3F 84       .?.
0225 240F             (../cmds/DLD.add.a):00123                    bcc    L0236                                                 * 0225 24 0F          $.
0227 C1D8             (../cmds/DLD.add.a):00124                    cmpb   #216                                                  * 0227 C1 D8          AX
0229 1026036C         (../cmds/DLD.add.a):00125                    lbne   L0599                                                 * 0229 10 26 03 6C    .&.l
022D C61B             (../cmds/DLD.add.a):00126                    ldb    #27                                                   * 022D C6 1B          F.
022F 103F83           (../cmds/DLD.add.a):00127                    os9    I$Create                                              * 022F 10 3F 83       .?.
0232 10250363         (../cmds/DLD.add.a):00128                    lbcs   L0599                                                 * 0232 10 25 03 63    .%.c
0236 A743             (../cmds/DLD.add.a):00129         L0236      sta    U0003,U                                               * 0236 A7 43          'C
0238 308DFE43         (../cmds/DLD.add.a):00130                    leax   >L007F,PC                                             * 0238 30 8D FE 43    0.~C
023C 108E0016         (../cmds/DLD.add.a):00131                    ldy    #22                                                   * 023C 10 8E 00 16    ....
0240 8601             (../cmds/DLD.add.a):00132                    lda    #1                                                    * 0240 86 01          ..
0242 103F8A           (../cmds/DLD.add.a):00133                    os9    I$Write                                               * 0242 10 3F 8A       .?.
0245 30C875           (../cmds/DLD.add.a):00134                    leax   <U0075,U                                              * 0245 30 C8 75       0Hu
0248 108E001B         (../cmds/DLD.add.a):00135                    ldy    #27                                                   * 0248 10 8E 00 1B    ....
024C 4F               (../cmds/DLD.add.a):00136                    clra                                                         * 024C 4F             O
024D 103F8B           (../cmds/DLD.add.a):00137                    os9    I$ReadLn                                              * 024D 10 3F 8B       .?.
0250 A641             (../cmds/DLD.add.a):00138         L0250      lda    U0001,U                                               * 0250 A6 41          &A
0252 30C900D5         (../cmds/DLD.add.a):00139                    leax   >U00D5,U                                              * 0252 30 C9 00 D5    0I.U
0256 108E0060         (../cmds/DLD.add.a):00140                    ldy    #96                                                   * 0256 10 8E 00 60    ...`
025A 103F89           (../cmds/DLD.add.a):00141                    os9    I$Read                                                * 025A 10 3F 89       .?.
025D 2514             (../cmds/DLD.add.a):00142                    bcs    L0273                                                 * 025D 25 14          %.
025F 31C875           (../cmds/DLD.add.a):00143                    leay   <U0075,U                                              * 025F 31 C8 75       1Hu
0262 A680             (../cmds/DLD.add.a):00144         L0262      lda    ,X+                                                   * 0262 A6 80          &.
0264 A1A0             (../cmds/DLD.add.a):00145                    cmpa   ,Y+                                                   * 0264 A1 A0          !
0266 26E8             (../cmds/DLD.add.a):00146                    bne    L0250                                                 * 0266 26 E8          &h
0268 810D             (../cmds/DLD.add.a):00147                    cmpa   #13                                                   * 0268 81 0D          ..
026A 2702             (../cmds/DLD.add.a):00148                    beq    L026E                                                 * 026A 27 02          '.
026C 20F4             (../cmds/DLD.add.a):00149                    bra    L0262                                                 * 026C 20 F4           t
026E C6DA             (../cmds/DLD.add.a):00150         L026E      ldb    #218                                                  * 026E C6 DA          FZ
0270 160326           (../cmds/DLD.add.a):00151                    lbra   L0599                                                 * 0270 16 03 26       ..&
0273 C1D3             (../cmds/DLD.add.a):00152         L0273      cmpb   #211                                                  * 0273 C1 D3          AS
0275 10260320         (../cmds/DLD.add.a):00153                    lbne   L0599                                                 * 0275 10 26 03 20    .&.
0279 A641             (../cmds/DLD.add.a):00154                    lda    U0001,U                                               * 0279 A6 41          &A
027B C605             (../cmds/DLD.add.a):00155                    ldb    #5                                                    * 027B C6 05          F.
027D 3440             (../cmds/DLD.add.a):00156                    pshs   U                                                     * 027D 34 40          4@
027F 103F8D           (../cmds/DLD.add.a):00157                    os9    I$GetStt                                              * 027F 10 3F 8D       .?.
0282 1F32             (../cmds/DLD.add.a):00158                    tfr    U,Y                                                   * 0282 1F 32          .2
0284 3540             (../cmds/DLD.add.a):00159                    puls   U                                                     * 0284 35 40          5@
0286 AFC90145         (../cmds/DLD.add.a):00160                    stx    >U0145,U                                              * 0286 AF C9 01 45    /I.E
028A 10AFC90147       (../cmds/DLD.add.a):00161                    sty    >U0147,U                                              * 028A 10 AF C9 01 47 ./I.G
028F 8E0000           (../cmds/DLD.add.a):00162                    ldx    #0                                                    * 028F 8E 00 00       ...
0292 3440             (../cmds/DLD.add.a):00163                    pshs   U                                                     * 0292 34 40          4@
0294 CE0000           (../cmds/DLD.add.a):00164                    ldu    #0                                                    * 0294 CE 00 00       N..
0297 103F88           (../cmds/DLD.add.a):00165                    os9    I$Seek                                                * 0297 10 3F 88       .?.
029A 3540             (../cmds/DLD.add.a):00166                    puls   U                                                     * 029A 35 40          5@
029C A641             (../cmds/DLD.add.a):00167         L029C      lda    U0001,U                                               * 029C A6 41          &A
029E 30C900D5         (../cmds/DLD.add.a):00168                    leax   >U00D5,U                                              * 029E 30 C9 00 D5    0I.U
02A2 108E0060         (../cmds/DLD.add.a):00169                    ldy    #96                                                   * 02A2 10 8E 00 60    ...`
02A6 103F89           (../cmds/DLD.add.a):00170                    os9    I$Read                                                * 02A6 10 3F 89       .?.
02A9 2537             (../cmds/DLD.add.a):00171                    bcs    L02E2                                                 * 02A9 25 37          %7
02AB A6C900F4         (../cmds/DLD.add.a):00172                    lda    >U00F4,U                                              * 02AB A6 C9 00 F4    &I.t
02AF 8101             (../cmds/DLD.add.a):00173                    cmpa   #1                                                    * 02AF 81 01          ..
02B1 26E9             (../cmds/DLD.add.a):00174                    bne    L029C                                                 * 02B1 26 E9          &i
02B3 A641             (../cmds/DLD.add.a):00175                    lda    U0001,U                                               * 02B3 A6 41          &A
02B5 C605             (../cmds/DLD.add.a):00176                    ldb    #5                                                    * 02B5 C6 05          F.
02B7 3440             (../cmds/DLD.add.a):00177                    pshs   U                                                     * 02B7 34 40          4@
02B9 103F8D           (../cmds/DLD.add.a):00178                    os9    I$GetStt                                              * 02B9 10 3F 8D       .?.
02BC 1F30             (../cmds/DLD.add.a):00179                    tfr    U,D                                                   * 02BC 1F 30          .0
02BE 830060           (../cmds/DLD.add.a):00180                    subd   #96                                                   * 02BE 83 00 60       ..`
02C1 2C02             (../cmds/DLD.add.a):00181                    bge    L02C5                                                 * 02C1 2C 02          ,.
02C3 301F             (../cmds/DLD.add.a):00182                    leax   -$01,X                                                * 02C3 30 1F          0.
02C5 1F03             (../cmds/DLD.add.a):00183         L02C5      tfr    D,U                                                   * 02C5 1F 03          ..
02C7 10AEE4           (../cmds/DLD.add.a):00184                    ldy    0,S                                                   * 02C7 10 AE E4       ..d
02CA A621             (../cmds/DLD.add.a):00185                    lda    $01,Y                                                 * 02CA A6 21          &!
02CC 103F88           (../cmds/DLD.add.a):00186                    os9    I$Seek                                                * 02CC 10 3F 88       .?.
02CF 102502C6         (../cmds/DLD.add.a):00187                    lbcs   L0599                                                 * 02CF 10 25 02 C6    .%.F
02D3 1F32             (../cmds/DLD.add.a):00188                    tfr    U,Y                                                   * 02D3 1F 32          .2
02D5 3540             (../cmds/DLD.add.a):00189                    puls   U                                                     * 02D5 35 40          5@
02D7 AFC90145         (../cmds/DLD.add.a):00190                    stx    >U0145,U                                              * 02D7 AF C9 01 45    /I.E
02DB 10AFC90147       (../cmds/DLD.add.a):00191                    sty    >U0147,U                                              * 02DB 10 AF C9 01 47 ./I.G
02E0 2006             (../cmds/DLD.add.a):00192                    bra    L02E8                                                 * 02E0 20 06           .
02E2 C1D3             (../cmds/DLD.add.a):00193         L02E2      cmpb   #211                                                  * 02E2 C1 D3          AS
02E4 102602B1         (../cmds/DLD.add.a):00194                    lbne   L0599                                                 * 02E4 10 26 02 B1    .&.1
02E8 308DFDC3         (../cmds/DLD.add.a):00195         L02E8      leax   >L00AF,PC                                             * 02E8 30 8D FD C3    0.}C
02EC 108E00C8         (../cmds/DLD.add.a):00196                    ldy    #200                                                  * 02EC 10 8E 00 C8    ...H
02F0 8601             (../cmds/DLD.add.a):00197                    lda    #1                                                    * 02F0 86 01          ..
02F2 103F8C           (../cmds/DLD.add.a):00198                    os9    I$WritLn                                              * 02F2 10 3F 8C       .?.
02F5 308DFE21         (../cmds/DLD.add.a):00199                    leax   >L011A,PC                                             * 02F5 30 8D FE 21    0.~!
02F9 108E0001         (../cmds/DLD.add.a):00200                    ldy    #1                                                    * 02F9 10 8E 00 01    ....
02FD 103F8A           (../cmds/DLD.add.a):00201                    os9    I$Write                                               * 02FD 10 3F 8A       .?.
0300 30C90095         (../cmds/DLD.add.a):00202                    leax   >U0095,U                                              * 0300 30 C9 00 95    0I..
0304 108E0040         (../cmds/DLD.add.a):00203                    ldy    #64                                                   * 0304 10 8E 00 40    ...@
0308 4F               (../cmds/DLD.add.a):00204                    clra                                                         * 0308 4F             O
0309 103F8B           (../cmds/DLD.add.a):00205                    os9    I$ReadLn                                              * 0309 10 3F 8B       .?.
030C 86FF             (../cmds/DLD.add.a):00206                    lda    #255                                                  * 030C 86 FF          ..
030E A7C90094         (../cmds/DLD.add.a):00207                    sta    >U0094,U                                              * 030E A7 C9 00 94    'I..
0312 30C875           (../cmds/DLD.add.a):00208                    leax   <U0075,U                                              * 0312 30 C8 75       0Hu
0315 A643             (../cmds/DLD.add.a):00209                    lda    U0003,U                                               * 0315 A6 43          &C
0317 C602             (../cmds/DLD.add.a):00210                    ldb    #2                                                    * 0317 C6 02          F.
0319 3440             (../cmds/DLD.add.a):00211                    pshs   U                                                     * 0319 34 40          4@
031B 103F8D           (../cmds/DLD.add.a):00212                    os9    I$GetStt                                              * 031B 10 3F 8D       .?.
031E 10250277         (../cmds/DLD.add.a):00213                    lbcs   L0599                                                 * 031E 10 25 02 77    .%.w
0322 103F88           (../cmds/DLD.add.a):00214                    os9    I$Seek                                                * 0322 10 3F 88       .?.
0325 10250270         (../cmds/DLD.add.a):00215                    lbcs   L0599                                                 * 0325 10 25 02 70    .%.p
0329 1F32             (../cmds/DLD.add.a):00216                    tfr    U,Y                                                   * 0329 1F 32          .2
032B 3540             (../cmds/DLD.add.a):00217                    puls   U                                                     * 032B 35 40          5@
032D AFC90090         (../cmds/DLD.add.a):00218                    stx    >U0090,U                                              * 032D AF C9 00 90    /I..
0331 10AFC90092       (../cmds/DLD.add.a):00219                    sty    >U0092,U                                              * 0331 10 AF C9 00 92 ./I..
0336 108E0060         (../cmds/DLD.add.a):00220                    ldy    #96                                                   * 0336 10 8E 00 60    ...`
033A 30C875           (../cmds/DLD.add.a):00221                    leax   <U0075,U                                              * 033A 30 C8 75       0Hu
033D A641             (../cmds/DLD.add.a):00222                    lda    U0001,U                                               * 033D A6 41          &A
033F 103F8A           (../cmds/DLD.add.a):00223                    os9    I$Write                                               * 033F 10 3F 8A       .?.
0342 A642             (../cmds/DLD.add.a):00224                    lda    U0002,U                                               * 0342 A6 42          &B
0344 C602             (../cmds/DLD.add.a):00225                    ldb    #2                                                    * 0344 C6 02          F.
0346 3440             (../cmds/DLD.add.a):00226                    pshs   U                                                     * 0346 34 40          4@
0348 103F8D           (../cmds/DLD.add.a):00227                    os9    I$GetStt                                              * 0348 10 3F 8D       .?.
034B 1025024A         (../cmds/DLD.add.a):00228                    lbcs   L0599                                                 * 034B 10 25 02 4A    .%.J
034F 103F88           (../cmds/DLD.add.a):00229                    os9    I$Seek                                                * 034F 10 3F 88       .?.
0352 10250243         (../cmds/DLD.add.a):00230                    lbcs   L0599                                                 * 0352 10 25 02 43    .%.C
0356 3540             (../cmds/DLD.add.a):00231                    puls   U                                                     * 0356 35 40          5@
0358 308DFDC0         (../cmds/DLD.add.a):00232                    leax   >L011C,PC                                             * 0358 30 8D FD C0    0.}@
035C 108E00C8         (../cmds/DLD.add.a):00233                    ldy    #200                                                  * 035C 10 8E 00 C8    ...H
0360 8601             (../cmds/DLD.add.a):00234                    lda    #1                                                    * 0360 86 01          ..
0362 103F8C           (../cmds/DLD.add.a):00235                    os9    I$WritLn                                              * 0362 10 3F 8C       .?.
0365 308DFD70         (../cmds/DLD.add.a):00236                    leax   >L00D9,PC                                             * 0365 30 8D FD 70    0.}p
0369 108E0041         (../cmds/DLD.add.a):00237                    ldy    #65                                                   * 0369 10 8E 00 41    ...A
036D 8601             (../cmds/DLD.add.a):00238                    lda    #1                                                    * 036D 86 01          ..
036F 103F8C           (../cmds/DLD.add.a):00239                    os9    I$WritLn                                              * 036F 10 3F 8C       .?.
0372 ECC90145         (../cmds/DLD.add.a):00240                    ldd    >U0145,U                                              * 0372 EC C9 01 45    lI.E
0376 EDC90141         (../cmds/DLD.add.a):00241                    std    >U0141,U                                              * 0376 ED C9 01 41    mI.A
037A ECC90147         (../cmds/DLD.add.a):00242                    ldd    >U0147,U                                              * 037A EC C9 01 47    lI.G
037E EDC90143         (../cmds/DLD.add.a):00243                    std    >U0143,U                                              * 037E ED C9 01 43    mI.C
0382 308DFE0B         (../cmds/DLD.add.a):00244         L0382      leax   >L0191,PC                                             * 0382 30 8D FE 0B    0.~.
0386 108E000E         (../cmds/DLD.add.a):00245                    ldy    #14                                                   * 0386 10 8E 00 0E    ....
038A 8601             (../cmds/DLD.add.a):00246                    lda    #1                                                    * 038A 86 01          ..
038C 103F8A           (../cmds/DLD.add.a):00247                    os9    I$Write                                               * 038C 10 3F 8A       .?.
038F 30C90135         (../cmds/DLD.add.a):00248                    leax   >U0135,U                                              * 038F 30 C9 01 35    0I.5
0393 108E000C         (../cmds/DLD.add.a):00249                    ldy    #12                                                   * 0393 10 8E 00 0C    ....
0397 4F               (../cmds/DLD.add.a):00250                    clra                                                         * 0397 4F             O
0398 103F8B           (../cmds/DLD.add.a):00251                    os9    I$ReadLn                                              * 0398 10 3F 8B       .?.
039B 1025FFE3         (../cmds/DLD.add.a):00252                    lbcs   L0382                                                 * 039B 10 25 FF E3    .%.c
039F 108C0001         (../cmds/DLD.add.a):00253                    cmpy   #1                                                    * 039F 10 8C 00 01    ....
03A3 1023000B         (../cmds/DLD.add.a):00254                    lbls   L03B2                                                 * 03A3 10 23 00 0B    .#..
03A7 A642             (../cmds/DLD.add.a):00255                    lda    U0002,U                                               * 03A7 A6 42          &B
03A9 108E0010         (../cmds/DLD.add.a):00256                    ldy    #16                                                   * 03A9 10 8E 00 10    ....
03AD 103F8A           (../cmds/DLD.add.a):00257                    os9    I$Write                                               * 03AD 10 3F 8A       .?.
03B0 20D0             (../cmds/DLD.add.a):00258                    bra    L0382                                                 * 03B0 20 D0           P
03B2 308DFDA0         (../cmds/DLD.add.a):00259         L03B2      leax   >L0156,PC                                             * 03B2 30 8D FD A0    0.}
03B6 108E00C8         (../cmds/DLD.add.a):00260                    ldy    #200                                                  * 03B6 10 8E 00 C8    ...H
03BA 8601             (../cmds/DLD.add.a):00261                    lda    #1                                                    * 03BA 86 01          ..
03BC 103F8C           (../cmds/DLD.add.a):00262                    os9    I$WritLn                                              * 03BC 10 3F 8C       .?.
03BF 102501D6         (../cmds/DLD.add.a):00263                    lbcs   L0599                                                 * 03BF 10 25 01 D6    .%.V
03C3 308DFD12         (../cmds/DLD.add.a):00264                    leax   >L00D9,PC                                             * 03C3 30 8D FD 12    0.}.
03C7 108E0050         (../cmds/DLD.add.a):00265                    ldy    #80                                                   * 03C7 10 8E 00 50    ...P
03CB 103F8C           (../cmds/DLD.add.a):00266                    os9    I$WritLn                                              * 03CB 10 3F 8C       .?.
03CE 102501C7         (../cmds/DLD.add.a):00267                    lbcs   L0599                                                 * 03CE 10 25 01 C7    .%.G
03D2 CC0000           (../cmds/DLD.add.a):00268                    ldd    #0                                                    * 03D2 CC 00 00       L..
03D5 EDC9014B         (../cmds/DLD.add.a):00269                    std    >U014B,U                                              * 03D5 ED C9 01 4B    mI.K
03D9 A744             (../cmds/DLD.add.a):00270                    sta    U0004,U                                               * 03D9 A7 44          'D
03DB ECC9014B         (../cmds/DLD.add.a):00271         L03DB      ldd    >U014B,U                                              * 03DB EC C9 01 4B    lI.K
03DF C30001           (../cmds/DLD.add.a):00272                    addd   #1                                                    * 03DF C3 00 01       C..
03E2 EDC9014B         (../cmds/DLD.add.a):00273                    std    >U014B,U                                              * 03E2 ED C9 01 4B    mI.K
03E6 10830063         (../cmds/DLD.add.a):00274                    cmpd   #99                                                   * 03E6 10 83 00 63    ...c
03EA 2C0B             (../cmds/DLD.add.a):00275                    bge    L03F7                                                 * 03EA 2C 0B          ,.
03EC 170121           (../cmds/DLD.add.a):00276                    lbsr   L0510                                                 * 03EC 17 01 21       ..!
03EF 108C0001         (../cmds/DLD.add.a):00277                    cmpy   #1                                                    * 03EF 10 8C 00 01    ....
03F3 2302             (../cmds/DLD.add.a):00278                    bls    L03F7                                                 * 03F3 23 02          #.
03F5 20E4             (../cmds/DLD.add.a):00279                    bra    L03DB                                                 * 03F5 20 E4           d
03F7 308DFDA4         (../cmds/DLD.add.a):00280         L03F7      leax   >L019F,PC                                             * 03F7 30 8D FD A4    0.}$
03FB 108E00C8         (../cmds/DLD.add.a):00281                    ldy    #200                                                  * 03FB 10 8E 00 C8    ...H
03FF 8601             (../cmds/DLD.add.a):00282                    lda    #1                                                    * 03FF 86 01          ..
0401 103F8C           (../cmds/DLD.add.a):00283                    os9    I$WritLn                                              * 0401 10 3F 8C       .?.
0404 308DFD12         (../cmds/DLD.add.a):00284                    leax   >L011A,PC                                             * 0404 30 8D FD 12    0.}.
0408 108E0001         (../cmds/DLD.add.a):00285                    ldy    #1                                                    * 0408 10 8E 00 01    ....
040C 103F8A           (../cmds/DLD.add.a):00286                    os9    I$Write                                               * 040C 10 3F 8A       .?.
040F 30C4             (../cmds/DLD.add.a):00287                    leax   U0000,U                                               * 040F 30 C4          0D
0411 4F               (../cmds/DLD.add.a):00288                    clra                                                         * 0411 4F             O
0412 108E0001         (../cmds/DLD.add.a):00289                    ldy    #1                                                    * 0412 10 8E 00 01    ....
0416 103F89           (../cmds/DLD.add.a):00290                    os9    I$Read                                                * 0416 10 3F 89       .?.
0419 308DFDA6         (../cmds/DLD.add.a):00291                    leax   >L01C3,PC                                             * 0419 30 8D FD A6    0.}&
041D 108E0001         (../cmds/DLD.add.a):00292                    ldy    #1                                                    * 041D 10 8E 00 01    ....
0421 8601             (../cmds/DLD.add.a):00293                    lda    #1                                                    * 0421 86 01          ..
0423 103F8C           (../cmds/DLD.add.a):00294                    os9    I$WritLn                                              * 0423 10 3F 8C       .?.
0426 A6C4             (../cmds/DLD.add.a):00295                    lda    U0000,U                                               * 0426 A6 C4          &D
0428 84DF             (../cmds/DLD.add.a):00296                    anda   #223                                                  * 0428 84 DF          ._
042A 8144             (../cmds/DLD.add.a):00297                    cmpa   #68                                                   * 042A 81 44          .D
042C 10270133         (../cmds/DLD.add.a):00298                    lbeq   L0563                                                 * 042C 10 27 01 33    .'.3
0430 8145             (../cmds/DLD.add.a):00299                    cmpa   #69                                                   * 0430 81 45          .E
0432 2719             (../cmds/DLD.add.a):00300                    beq    L044D                                                 * 0432 27 19          '.
0434 8143             (../cmds/DLD.add.a):00301                    cmpa   #67                                                   * 0434 81 43          .C
0436 2708             (../cmds/DLD.add.a):00302                    beq    L0440                                                 * 0436 27 08          '.
0438 814C             (../cmds/DLD.add.a):00303                    cmpa   #76                                                   * 0438 81 4C          .L
043A 10270089         (../cmds/DLD.add.a):00304                    lbeq   L04C7                                                 * 043A 10 27 00 89    .'..
043E 20B7             (../cmds/DLD.add.a):00305                    bra    L03F7                                                 * 043E 20 B7           7
0440 ECC9014B         (../cmds/DLD.add.a):00306         L0440      ldd    >U014B,U                                              * 0440 EC C9 01 4B    lI.K
0444 830001           (../cmds/DLD.add.a):00307                    subd   #1                                                    * 0444 83 00 01       ...
0447 EDC9014B         (../cmds/DLD.add.a):00308                    std    >U014B,U                                              * 0447 ED C9 01 4B    mI.K
044B 208E             (../cmds/DLD.add.a):00309                    bra    L03DB                                                 * 044B 20 8E           .
044D 308DFD74         (../cmds/DLD.add.a):00310         L044D      leax   >L01C5,PC                                             * 044D 30 8D FD 74    0.}t
0451 108E00C8         (../cmds/DLD.add.a):00311                    ldy    #200                                                  * 0451 10 8E 00 C8    ...H
0455 8601             (../cmds/DLD.add.a):00312                    lda    #1                                                    * 0455 86 01          ..
0457 103F8C           (../cmds/DLD.add.a):00313                    os9    I$WritLn                                              * 0457 10 3F 8C       .?.
045A 308DFCBC         (../cmds/DLD.add.a):00314                    leax   >L011A,PC                                             * 045A 30 8D FC BC    0.|<
045E 108E0001         (../cmds/DLD.add.a):00315                    ldy    #1                                                    * 045E 10 8E 00 01    ....
0462 103F8A           (../cmds/DLD.add.a):00316                    os9    I$Write                                               * 0462 10 3F 8A       .?.
0465 4F               (../cmds/DLD.add.a):00317                    clra                                                         * 0465 4F             O
0466 30C90155         (../cmds/DLD.add.a):00318                    leax   >U0155,U                                              * 0466 30 C9 01 55    0I.U
046A 108E0003         (../cmds/DLD.add.a):00319                    ldy    #3                                                    * 046A 10 8E 00 03    ....
046E 103F8B           (../cmds/DLD.add.a):00320                    os9    I$ReadLn                                              * 046E 10 3F 8B       .?.
0471 1702B4           (../cmds/DLD.add.a):00321                    lbsr   L0728                                                 * 0471 17 02 B4       ..4
0474 10A3C9014B       (../cmds/DLD.add.a):00322                    cmpd   >U014B,U                                              * 0474 10 A3 C9 01 4B .#I.K
0479 1024FF7A         (../cmds/DLD.add.a):00323                    lbcc   L03F7                                                 * 0479 10 24 FF 7A    .$.z
047D EDC90153         (../cmds/DLD.add.a):00324                    std    >U0153,U                                              * 047D ED C9 01 53    mI.S
0481 30C90155         (../cmds/DLD.add.a):00325                    leax   >U0155,U                                              * 0481 30 C9 01 55    0I.U
0485 170325           (../cmds/DLD.add.a):00326                    lbsr   L07AD                                                 * 0485 17 03 25       ..%
0488 30C90155         (../cmds/DLD.add.a):00327                    leax   >U0155,U                                              * 0488 30 C9 01 55    0I.U
048C 863A             (../cmds/DLD.add.a):00328                    lda    #58                                                   * 048C 86 3A          .:
048E A702             (../cmds/DLD.add.a):00329                    sta    $02,X                                                 * 048E A7 02          '.
0490 108E0003         (../cmds/DLD.add.a):00330                    ldy    #3                                                    * 0490 10 8E 00 03    ....
0494 8601             (../cmds/DLD.add.a):00331                    lda    #1                                                    * 0494 86 01          ..
0496 103F8A           (../cmds/DLD.add.a):00332                    os9    I$Write                                               * 0496 10 3F 8A       .?.
0499 ECC90153         (../cmds/DLD.add.a):00333                    ldd    >U0153,U                                              * 0499 EC C9 01 53    lI.S
049D 30C90158         (../cmds/DLD.add.a):00334                    leax   >U0158,U                                              * 049D 30 C9 01 58    0I.X
04A1 8650             (../cmds/DLD.add.a):00335                    lda    #80                                                   * 04A1 86 50          .P
04A3 3D               (../cmds/DLD.add.a):00336                    mul                                                          * 04A3 3D             =
04A4 308B             (../cmds/DLD.add.a):00337                    leax   D,X                                                   * 04A4 30 8B          0.
04A6 108E0050         (../cmds/DLD.add.a):00338                    ldy    #80                                                   * 04A6 10 8E 00 50    ...P
04AA 8601             (../cmds/DLD.add.a):00339                    lda    #1                                                    * 04AA 86 01          ..
04AC 103F8C           (../cmds/DLD.add.a):00340                    os9    I$WritLn                                              * 04AC 10 3F 8C       .?.
04AF 1F20             (../cmds/DLD.add.a):00341                    tfr    Y,D                                                   * 04AF 1F 20          .
04B1 E744             (../cmds/DLD.add.a):00342                    stb    U0004,U                                               * 04B1 E7 44          gD
04B3 6A44             (../cmds/DLD.add.a):00343                    dec    U0004,U                                               * 04B3 6A 44          jD
04B5 3145             (../cmds/DLD.add.a):00344                    leay   U0005,U                                               * 04B5 31 45          1E
04B7 A680             (../cmds/DLD.add.a):00345         L04B7      lda    ,X+                                                   * 04B7 A6 80          &.
04B9 A7A0             (../cmds/DLD.add.a):00346                    sta    ,Y+                                                   * 04B9 A7 A0          '
04BB 5A               (../cmds/DLD.add.a):00347                    decb                                                         * 04BB 5A             Z
04BC 26F9             (../cmds/DLD.add.a):00348                    bne    L04B7                                                 * 04BC 26 F9          &y
04BE ECC90153         (../cmds/DLD.add.a):00349                    ldd    >U0153,U                                              * 04BE EC C9 01 53    lI.S
04C2 8D4C             (../cmds/DLD.add.a):00350                    bsr    L0510                                                 * 04C2 8D 4C          .L
04C4 16FF30           (../cmds/DLD.add.a):00351                    lbra   L03F7                                                 * 04C4 16 FF 30       ..0
04C7 CC0000           (../cmds/DLD.add.a):00352         L04C7      ldd    #0                                                    * 04C7 CC 00 00       L..
04CA EDC9014B         (../cmds/DLD.add.a):00353                    std    >U014B,U                                              * 04CA ED C9 01 4B    mI.K
04CE ECC9014B         (../cmds/DLD.add.a):00354         L04CE      ldd    >U014B,U                                              * 04CE EC C9 01 4B    lI.K
04D2 C30001           (../cmds/DLD.add.a):00355                    addd   #1                                                    * 04D2 C3 00 01       C..
04D5 EDC9014B         (../cmds/DLD.add.a):00356                    std    >U014B,U                                              * 04D5 ED C9 01 4B    mI.K
04D9 30C90155         (../cmds/DLD.add.a):00357                    leax   >U0155,U                                              * 04D9 30 C9 01 55    0I.U
04DD 1702CD           (../cmds/DLD.add.a):00358                    lbsr   L07AD                                                 * 04DD 17 02 CD       ..M
04E0 30C90155         (../cmds/DLD.add.a):00359                    leax   >U0155,U                                              * 04E0 30 C9 01 55    0I.U
04E4 863A             (../cmds/DLD.add.a):00360                    lda    #58                                                   * 04E4 86 3A          .:
04E6 A702             (../cmds/DLD.add.a):00361                    sta    $02,X                                                 * 04E6 A7 02          '.
04E8 8601             (../cmds/DLD.add.a):00362                    lda    #1                                                    * 04E8 86 01          ..
04EA 108E0003         (../cmds/DLD.add.a):00363                    ldy    #3                                                    * 04EA 10 8E 00 03    ....
04EE 103F8A           (../cmds/DLD.add.a):00364                    os9    I$Write                                               * 04EE 10 3F 8A       .?.
04F1 30C90158         (../cmds/DLD.add.a):00365                    leax   >U0158,U                                              * 04F1 30 C9 01 58    0I.X
04F5 ECC9014B         (../cmds/DLD.add.a):00366                    ldd    >U014B,U                                              * 04F5 EC C9 01 4B    lI.K
04F9 8650             (../cmds/DLD.add.a):00367                    lda    #80                                                   * 04F9 86 50          .P
04FB 3D               (../cmds/DLD.add.a):00368                    mul                                                          * 04FB 3D             =
04FC 308B             (../cmds/DLD.add.a):00369                    leax   D,X                                                   * 04FC 30 8B          0.
04FE 108E0050         (../cmds/DLD.add.a):00370                    ldy    #80                                                   * 04FE 10 8E 00 50    ...P
0502 8601             (../cmds/DLD.add.a):00371                    lda    #1                                                    * 0502 86 01          ..
0504 103F8C           (../cmds/DLD.add.a):00372                    os9    I$WritLn                                              * 0504 10 3F 8C       .?.
0507 108C0001         (../cmds/DLD.add.a):00373                    cmpy   #1                                                    * 0507 10 8C 00 01    ....
050B 22C1             (../cmds/DLD.add.a):00374                    bhi    L04CE                                                 * 050B 22 C1          "A
050D 16FEE7           (../cmds/DLD.add.a):00375                    lbra   L03F7                                                 * 050D 16 FE E7       .~g
0510 30C90155         (../cmds/DLD.add.a):00376         L0510      leax   >U0155,U                                              * 0510 30 C9 01 55    0I.U
0514 3406             (../cmds/DLD.add.a):00377                    pshs   D                                                     * 0514 34 06          4.
0516 170294           (../cmds/DLD.add.a):00378                    lbsr   L07AD                                                 * 0516 17 02 94       ...
0519 30C90155         (../cmds/DLD.add.a):00379                    leax   >U0155,U                                              * 0519 30 C9 01 55    0I.U
051D 863A             (../cmds/DLD.add.a):00380                    lda    #58                                                   * 051D 86 3A          .:
051F A702             (../cmds/DLD.add.a):00381                    sta    $02,X                                                 * 051F A7 02          '.
0521 8601             (../cmds/DLD.add.a):00382                    lda    #1                                                    * 0521 86 01          ..
0523 108E0003         (../cmds/DLD.add.a):00383                    ldy    #3                                                    * 0523 10 8E 00 03    ....
0527 103F8A           (../cmds/DLD.add.a):00384                    os9    I$Write                                               * 0527 10 3F 8A       .?.
052A 1025006B         (../cmds/DLD.add.a):00385                    lbcs   L0599                                                 * 052A 10 25 00 6B    .%.k
052E 3045             (../cmds/DLD.add.a):00386                    leax   U0005,U                                               * 052E 30 45          0E
0530 E644             (../cmds/DLD.add.a):00387                    ldb    U0004,U                                               * 0530 E6 44          fD
0532 4F               (../cmds/DLD.add.a):00388                    clra                                                         * 0532 4F             O
0533 1F02             (../cmds/DLD.add.a):00389                    tfr    D,Y                                                   * 0533 1F 02          ..
0535 8601             (../cmds/DLD.add.a):00390                    lda    #1                                                    * 0535 86 01          ..
0537 103F8A           (../cmds/DLD.add.a):00391                    os9    I$Write                                               * 0537 10 3F 8A       .?.
053A 3506             (../cmds/DLD.add.a):00392                    puls   D                                                     * 053A 35 06          5.
053C 8650             (../cmds/DLD.add.a):00393                    lda    #80                                                   * 053C 86 50          .P
053E 3D               (../cmds/DLD.add.a):00394                    mul                                                          * 053E 3D             =
053F 30C90158         (../cmds/DLD.add.a):00395                    leax   >U0158,U                                              * 053F 30 C9 01 58    0I.X
0543 308B             (../cmds/DLD.add.a):00396                    leax   D,X                                                   * 0543 30 8B          0.
0545 3145             (../cmds/DLD.add.a):00397                    leay   U0005,U                                               * 0545 31 45          1E
0547 C650             (../cmds/DLD.add.a):00398                    ldb    #80                                                   * 0547 C6 50          FP
0549 A644             (../cmds/DLD.add.a):00399                    lda    U0004,U                                               * 0549 A6 44          &D
054B 270F             (../cmds/DLD.add.a):00400                    beq    L055C                                                 * 054B 27 0F          '.
054D A7C9014F         (../cmds/DLD.add.a):00401                    sta    >U014F,U                                              * 054D A7 C9 01 4F    'I.O
0551 A6A0             (../cmds/DLD.add.a):00402         L0551      lda    ,Y+                                                   * 0551 A6 A0          &
0553 A780             (../cmds/DLD.add.a):00403                    sta    ,X+                                                   * 0553 A7 80          '.
0555 5A               (../cmds/DLD.add.a):00404                    decb                                                         * 0555 5A             Z
0556 6AC9014F         (../cmds/DLD.add.a):00405                    dec    >U014F,U                                              * 0556 6A C9 01 4F    jI.O
055A 26F5             (../cmds/DLD.add.a):00406                    bne    L0551                                                 * 055A 26 F5          &u
055C 4F               (../cmds/DLD.add.a):00407         L055C      clra                                                         * 055C 4F             O
055D 1F02             (../cmds/DLD.add.a):00408                    tfr    D,Y                                                   * 055D 1F 02          ..
055F 17003A           (../cmds/DLD.add.a):00409                    lbsr   L059C                                                 * 055F 17 00 3A       ..:
0562 39               (../cmds/DLD.add.a):00410                    rts                                                          * 0562 39             9
0563 8600             (../cmds/DLD.add.a):00411         L0563      lda    #0                                                    * 0563 86 00          ..
0565 A7C9014D         (../cmds/DLD.add.a):00412                    sta    >U014D,U                                              * 0565 A7 C9 01 4D    'I.M
0569 A6C9014D         (../cmds/DLD.add.a):00413         L0569      lda    >U014D,U                                              * 0569 A6 C9 01 4D    &I.M
056D 4C               (../cmds/DLD.add.a):00414                    inca                                                         * 056D 4C             L
056E A7C9014D         (../cmds/DLD.add.a):00415                    sta    >U014D,U                                              * 056E A7 C9 01 4D    'I.M
0572 A1C9014C         (../cmds/DLD.add.a):00416                    cmpa   >U014C,U                                              * 0572 A1 C9 01 4C    !I.L
0576 2220             (../cmds/DLD.add.a):00417                    bhi    L0598                                                 * 0576 22 20          "
0578 C650             (../cmds/DLD.add.a):00418                    ldb    #80                                                   * 0578 C6 50          FP
057A 3D               (../cmds/DLD.add.a):00419                    mul                                                          * 057A 3D             =
057B 30C90158         (../cmds/DLD.add.a):00420                    leax   >U0158,U                                              * 057B 30 C9 01 58    0I.X
057F 308B             (../cmds/DLD.add.a):00421                    leax   D,X                                                   * 057F 30 8B          0.
0581 108E0050         (../cmds/DLD.add.a):00422                    ldy    #80                                                   * 0581 10 8E 00 50    ...P
0585 A643             (../cmds/DLD.add.a):00423                    lda    U0003,U                                               * 0585 A6 43          &C
0587 103F8C           (../cmds/DLD.add.a):00424                    os9    I$WritLn                                              * 0587 10 3F 8C       .?.
058A 1025000B         (../cmds/DLD.add.a):00425                    lbcs   L0599                                                 * 058A 10 25 00 0B    .%..
058E 108C0001         (../cmds/DLD.add.a):00426                    cmpy   #1                                                    * 058E 10 8C 00 01    ....
0592 2304             (../cmds/DLD.add.a):00427                    bls    L0598                                                 * 0592 23 04          #.
0594 1F20             (../cmds/DLD.add.a):00428                    tfr    Y,D                                                   * 0594 1F 20          .
0596 20D1             (../cmds/DLD.add.a):00429                    bra    L0569                                                 * 0596 20 D1           Q
0598 5F               (../cmds/DLD.add.a):00430         L0598      clrb                                                         * 0598 5F             _
0599 103F06           (../cmds/DLD.add.a):00431         L0599      os9    F$Exit                                                * 0599 10 3F 06       .?.
059C 170154           (../cmds/DLD.add.a):00432         L059C      lbsr   L06F3                                                 * 059C 17 01 54       ..T
059F E644             (../cmds/DLD.add.a):00433                    ldb    U0004,U                                               * 059F E6 44          fD
05A1 31A5             (../cmds/DLD.add.a):00434                    leay   B,Y                                                   * 05A1 31 A5          1%
05A3 3420             (../cmds/DLD.add.a):00435                    pshs   Y                                                     * 05A3 34 20          4
05A5 50               (../cmds/DLD.add.a):00436                    negb                                                         * 05A5 50             P
05A6 1D               (../cmds/DLD.add.a):00437                    sex                                                          * 05A6 1D             .
05A7 31AB             (../cmds/DLD.add.a):00438                    leay   D,Y                                                   * 05A7 31 AB          1+
05A9 6F44             (../cmds/DLD.add.a):00439                    clr    U0004,U                                               * 05A9 6F 44          oD
05AB 108C0000         (../cmds/DLD.add.a):00440                    cmpy   #0                                                    * 05AB 10 8C 00 00    ....
05AF 102700B8         (../cmds/DLD.add.a):00441                    lbeq   L066B                                                 * 05AF 10 27 00 B8    .'.8
05B3 3430             (../cmds/DLD.add.a):00442                    pshs   Y,X                                                   * 05B3 34 30          40
05B5 860D             (../cmds/DLD.add.a):00443                    lda    #13                                                   * 05B5 86 0D          ..
05B7 A780             (../cmds/DLD.add.a):00444         L05B7      sta    ,X+                                                   * 05B7 A7 80          '.
05B9 313F             (../cmds/DLD.add.a):00445                    leay   -$01,Y                                                * 05B9 31 3F          1?
05BB 26FA             (../cmds/DLD.add.a):00446                    bne    L05B7                                                 * 05BB 26 FA          &z
05BD 3530             (../cmds/DLD.add.a):00447                    puls   Y,X                                                   * 05BD 35 30          50
05BF 3430             (../cmds/DLD.add.a):00448         L05BF      pshs   Y,X                                                   * 05BF 34 30          40
05C1 30C4             (../cmds/DLD.add.a):00449                    leax   U0000,U                                               * 05C1 30 C4          0D
05C3 108E0001         (../cmds/DLD.add.a):00450                    ldy    #1                                                    * 05C3 10 8E 00 01    ....
05C7 4F               (../cmds/DLD.add.a):00451                    clra                                                         * 05C7 4F             O
05C8 103F89           (../cmds/DLD.add.a):00452                    os9    I$Read                                                * 05C8 10 3F 89       .?.
05CB 252B             (../cmds/DLD.add.a):00453                    bcs    L05F8                                                 * 05CB 25 2B          %+
05CD A6C4             (../cmds/DLD.add.a):00454                    lda    U0000,U                                               * 05CD A6 C4          &D
05CF 8101             (../cmds/DLD.add.a):00455                    cmpa   #1                                                    * 05CF 81 01          ..
05D1 2729             (../cmds/DLD.add.a):00456                    beq    L05FC                                                 * 05D1 27 29          ')
05D3 8108             (../cmds/DLD.add.a):00457                    cmpa   #8                                                    * 05D3 81 08          ..
05D5 2747             (../cmds/DLD.add.a):00458                    beq    L061E                                                 * 05D5 27 47          'G
05D7 8118             (../cmds/DLD.add.a):00459                    cmpa   #24                                                   * 05D7 81 18          ..
05D9 2767             (../cmds/DLD.add.a):00460                    beq    L0642                                                 * 05D9 27 67          'g
05DB 810D             (../cmds/DLD.add.a):00461                    cmpa   #13                                                   * 05DB 81 0D          ..
05DD 10270088         (../cmds/DLD.add.a):00462                    lbeq   L0669                                                 * 05DD 10 27 00 88    .'..
05E1 8120             (../cmds/DLD.add.a):00463                    cmpa   #32                                                   * 05E1 81 20          .
05E3 2513             (../cmds/DLD.add.a):00464                    bcs    L05F8                                                 * 05E3 25 13          %.
05E5 8601             (../cmds/DLD.add.a):00465                    lda    #1                                                    * 05E5 86 01          ..
05E7 103F8A           (../cmds/DLD.add.a):00466                    os9    I$Write                                               * 05E7 10 3F 8A       .?.
05EA 3530             (../cmds/DLD.add.a):00467                    puls   Y,X                                                   * 05EA 35 30          50
05EC A6C4             (../cmds/DLD.add.a):00468                    lda    U0000,U                                               * 05EC A6 C4          &D
05EE A780             (../cmds/DLD.add.a):00469                    sta    ,X+                                                   * 05EE A7 80          '.
05F0 313F             (../cmds/DLD.add.a):00470                    leay   -$01,Y                                                * 05F0 31 3F          1?
05F2 1027009C         (../cmds/DLD.add.a):00471                    lbeq   L0692                                                 * 05F2 10 27 00 9C    .'..
05F6 20C7             (../cmds/DLD.add.a):00472                    bra    L05BF                                                 * 05F6 20 C7           G
05F8 3530             (../cmds/DLD.add.a):00473         L05F8      puls   Y,X                                                   * 05F8 35 30          50
05FA 20C3             (../cmds/DLD.add.a):00474                    bra    L05BF                                                 * 05FA 20 C3           C
05FC 3530             (../cmds/DLD.add.a):00475         L05FC      puls   Y,X                                                   * 05FC 35 30          50
05FE 313F             (../cmds/DLD.add.a):00476                    leay   -$01,Y                                                * 05FE 31 3F          1?
0600 2717             (../cmds/DLD.add.a):00477                    beq    L0619                                                 * 0600 27 17          '.
0602 A680             (../cmds/DLD.add.a):00478                    lda    ,X+                                                   * 0602 A6 80          &.
0604 810D             (../cmds/DLD.add.a):00479                    cmpa   #13                                                   * 0604 81 0D          ..
0606 270F             (../cmds/DLD.add.a):00480                    beq    L0617                                                 * 0606 27 0F          '.
0608 3430             (../cmds/DLD.add.a):00481                    pshs   Y,X                                                   * 0608 34 30          40
060A 301F             (../cmds/DLD.add.a):00482                    leax   -$01,X                                                * 060A 30 1F          0.
060C 108E0001         (../cmds/DLD.add.a):00483                    ldy    #1                                                    * 060C 10 8E 00 01    ....
0610 8601             (../cmds/DLD.add.a):00484                    lda    #1                                                    * 0610 86 01          ..
0612 103F8A           (../cmds/DLD.add.a):00485                    os9    I$Write                                               * 0612 10 3F 8A       .?.
0615 20E5             (../cmds/DLD.add.a):00486                    bra    L05FC                                                 * 0615 20 E5           e
0617 301F             (../cmds/DLD.add.a):00487         L0617      leax   -$01,X                                                * 0617 30 1F          0.
0619 3121             (../cmds/DLD.add.a):00488         L0619      leay   $01,Y                                                 * 0619 31 21          1!
061B 16FFA1           (../cmds/DLD.add.a):00489                    lbra   L05BF                                                 * 061B 16 FF A1       ..!
061E 3530             (../cmds/DLD.add.a):00490         L061E      puls   Y,X                                                   * 061E 35 30          50
0620 3121             (../cmds/DLD.add.a):00491                    leay   $01,Y                                                 * 0620 31 21          1!
0622 10ACE4           (../cmds/DLD.add.a):00492                    cmpy   0,S                                                   * 0622 10 AC E4       .,d
0625 2216             (../cmds/DLD.add.a):00493                    bhi    L063D                                                 * 0625 22 16          ".
0627 3430             (../cmds/DLD.add.a):00494                    pshs   Y,X                                                   * 0627 34 30          40
0629 308DFBA5         (../cmds/DLD.add.a):00495                    leax   >L01D2,PC                                             * 0629 30 8D FB A5    0.{%
062D 108E0003         (../cmds/DLD.add.a):00496                    ldy    #3                                                    * 062D 10 8E 00 03    ....
0631 8601             (../cmds/DLD.add.a):00497                    lda    #1                                                    * 0631 86 01          ..
0633 103F8A           (../cmds/DLD.add.a):00498                    os9    I$Write                                               * 0633 10 3F 8A       .?.
0636 3530             (../cmds/DLD.add.a):00499                    puls   Y,X                                                   * 0636 35 30          50
0638 301F             (../cmds/DLD.add.a):00500                    leax   -$01,X                                                * 0638 30 1F          0.
063A 16FF82           (../cmds/DLD.add.a):00501                    lbra   L05BF                                                 * 063A 16 FF 82       ...
063D 313F             (../cmds/DLD.add.a):00502         L063D      leay   -$01,Y                                                * 063D 31 3F          1?
063F 16FF7D           (../cmds/DLD.add.a):00503                    lbra   L05BF                                                 * 063F 16 FF 7D       ..}
0642 3530             (../cmds/DLD.add.a):00504         L0642      puls   Y,X                                                   * 0642 35 30          50
0644 3121             (../cmds/DLD.add.a):00505                    leay   $01,Y                                                 * 0644 31 21          1!
0646 10ACE4           (../cmds/DLD.add.a):00506                    cmpy   0,S                                                   * 0646 10 AC E4       .,d
0649 22F2             (../cmds/DLD.add.a):00507                    bhi    L063D                                                 * 0649 22 F2          "r
064B 3430             (../cmds/DLD.add.a):00508                    pshs   Y,X                                                   * 064B 34 30          40
064D 308DFB81         (../cmds/DLD.add.a):00509                    leax   >L01D2,PC                                             * 064D 30 8D FB 81    0.{.
0651 108E0003         (../cmds/DLD.add.a):00510                    ldy    #3                                                    * 0651 10 8E 00 03    ....
0655 8601             (../cmds/DLD.add.a):00511                    lda    #1                                                    * 0655 86 01          ..
0657 103F8A           (../cmds/DLD.add.a):00512                    os9    I$Write                                               * 0657 10 3F 8A       .?.
065A 3530             (../cmds/DLD.add.a):00513                    puls   Y,X                                                   * 065A 35 30          50
065C 301F             (../cmds/DLD.add.a):00514                    leax   -$01,X                                                * 065C 30 1F          0.
065E 10ACE4           (../cmds/DLD.add.a):00515                    cmpy   0,S                                                   * 065E 10 AC E4       .,d
0661 1022FF5A         (../cmds/DLD.add.a):00516                    lbhi   L05BF                                                 * 0661 10 22 FF 5A    .".Z
0665 3430             (../cmds/DLD.add.a):00517                    pshs   Y,X                                                   * 0665 34 30          40
0667 20D9             (../cmds/DLD.add.a):00518                    bra    L0642                                                 * 0667 20 D9           Y
0669 3530             (../cmds/DLD.add.a):00519         L0669      puls   Y,X                                                   * 0669 35 30          50
066B 860D             (../cmds/DLD.add.a):00520         L066B      lda    #13                                                   * 066B 86 0D          ..
066D A780             (../cmds/DLD.add.a):00521                    sta    ,X+                                                   * 066D A7 80          '.
066F 3430             (../cmds/DLD.add.a):00522                    pshs   Y,X                                                   * 066F 34 30          40
0671 308DFB4E         (../cmds/DLD.add.a):00523                    leax   >L01C3,PC                                             * 0671 30 8D FB 4E    0.{N
0675 108E0001         (../cmds/DLD.add.a):00524                    ldy    #1                                                    * 0675 10 8E 00 01    ....
0679 8601             (../cmds/DLD.add.a):00525                    lda    #1                                                    * 0679 86 01          ..
067B 103F8C           (../cmds/DLD.add.a):00526                    os9    I$WritLn                                              * 067B 10 3F 8C       .?.
067E 3530             (../cmds/DLD.add.a):00527                    puls   Y,X                                                   * 067E 35 30          50
0680 3506             (../cmds/DLD.add.a):00528                    puls   D                                                     * 0680 35 06          5.
0682 3420             (../cmds/DLD.add.a):00529                    pshs   Y                                                     * 0682 34 20          4
0684 A3E4             (../cmds/DLD.add.a):00530                    subd   0,S                                                   * 0684 A3 E4          #d
0686 3262             (../cmds/DLD.add.a):00531                    leas   $02,S                                                 * 0686 32 62          2b
0688 1F02             (../cmds/DLD.add.a):00532                    tfr    D,Y                                                   * 0688 1F 02          ..
068A 3121             (../cmds/DLD.add.a):00533                    leay   $01,Y                                                 * 068A 31 21          1!
068C 17007D           (../cmds/DLD.add.a):00534                    lbsr   L070C                                                 * 068C 17 00 7D       ..}
068F 39               (../cmds/DLD.add.a):00535                    rts                                                          * 068F 39             9
0690 3530             (../cmds/DLD.add.a):00536                    fcc    "50"                                                  * 0690 35 30          50
0692 3506             (../cmds/DLD.add.a):00537         L0692      puls   D                                                     * 0692 35 06          5.
0694 3420             (../cmds/DLD.add.a):00538                    pshs   Y                                                     * 0694 34 20          4
0696 A3E4             (../cmds/DLD.add.a):00539                    subd   0,S                                                   * 0696 A3 E4          #d
0698 3262             (../cmds/DLD.add.a):00540                    leas   $02,S                                                 * 0698 32 62          2b
069A C30001           (../cmds/DLD.add.a):00541                    addd   #1                                                    * 069A C3 00 01       C..
069D 1F02             (../cmds/DLD.add.a):00542                    tfr    D,Y                                                   * 069D 1F 02          ..
069F 5F               (../cmds/DLD.add.a):00543                    clrb                                                         * 069F 5F             _
06A0 313F             (../cmds/DLD.add.a):00544         L06A0      leay   -$01,Y                                                * 06A0 31 3F          1?
06A2 271A             (../cmds/DLD.add.a):00545                    beq    L06BE                                                 * 06A2 27 1A          '.
06A4 A682             (../cmds/DLD.add.a):00546                    lda    ,-X                                                   * 06A4 A6 82          &.
06A6 8120             (../cmds/DLD.add.a):00547                    cmpa   #32                                                   * 06A6 81 20          .
06A8 2725             (../cmds/DLD.add.a):00548                    beq    L06CF                                                 * 06A8 27 25          '%
06AA 3430             (../cmds/DLD.add.a):00549                    pshs   Y,X                                                   * 06AA 34 30          40
06AC 308DFB22         (../cmds/DLD.add.a):00550                    leax   >L01D2,PC                                             * 06AC 30 8D FB 22    0.{"
06B0 108E0003         (../cmds/DLD.add.a):00551                    ldy    #3                                                    * 06B0 10 8E 00 03    ....
06B4 8601             (../cmds/DLD.add.a):00552                    lda    #1                                                    * 06B4 86 01          ..
06B6 103F8A           (../cmds/DLD.add.a):00553                    os9    I$Write                                               * 06B6 10 3F 8A       .?.
06B9 5C               (../cmds/DLD.add.a):00554                    incb                                                         * 06B9 5C             \
06BA 3530             (../cmds/DLD.add.a):00555                    puls   Y,X                                                   * 06BA 35 30          50
06BC 20E2             (../cmds/DLD.add.a):00556                    bra    L06A0                                                 * 06BC 20 E2           b
06BE 860D             (../cmds/DLD.add.a):00557         L06BE      lda    #13                                                   * 06BE 86 0D          ..
06C0 A7884F           (../cmds/DLD.add.a):00558                    sta    <$004F,X                                              * 06C0 A7 88 4F       '.O
06C3 108E00C8         (../cmds/DLD.add.a):00559                    ldy    #200                                                  * 06C3 10 8E 00 C8    ...H
06C7 8601             (../cmds/DLD.add.a):00560                    lda    #1                                                    * 06C7 86 01          ..
06C9 103F8C           (../cmds/DLD.add.a):00561                    os9    I$WritLn                                              * 06C9 10 3F 8C       .?.
06CC 3520             (../cmds/DLD.add.a):00562                    puls   Y                                                     * 06CC 35 20          5
06CE 39               (../cmds/DLD.add.a):00563                    rts                                                          * 06CE 39             9
06CF 860D             (../cmds/DLD.add.a):00564         L06CF      lda    #13                                                   * 06CF 86 0D          ..
06D1 A780             (../cmds/DLD.add.a):00565                    sta    ,X+                                                   * 06D1 A7 80          '.
06D3 3430             (../cmds/DLD.add.a):00566                    pshs   Y,X                                                   * 06D3 34 30          40
06D5 E744             (../cmds/DLD.add.a):00567                    stb    U0004,U                                               * 06D5 E7 44          gD
06D7 3145             (../cmds/DLD.add.a):00568                    leay   U0005,U                                               * 06D7 31 45          1E
06D9 A680             (../cmds/DLD.add.a):00569         L06D9      lda    ,X+                                                   * 06D9 A6 80          &.
06DB A7A0             (../cmds/DLD.add.a):00570                    sta    ,Y+                                                   * 06DB A7 A0          '
06DD 5A               (../cmds/DLD.add.a):00571                    decb                                                         * 06DD 5A             Z
06DE 26F9             (../cmds/DLD.add.a):00572                    bne    L06D9                                                 * 06DE 26 F9          &y
06E0 308DFADF         (../cmds/DLD.add.a):00573                    leax   >L01C3,PC                                             * 06E0 30 8D FA DF    0.z_
06E4 108E0001         (../cmds/DLD.add.a):00574                    ldy    #1                                                    * 06E4 10 8E 00 01    ....
06E8 8601             (../cmds/DLD.add.a):00575                    lda    #1                                                    * 06E8 86 01          ..
06EA 103F8C           (../cmds/DLD.add.a):00576                    os9    I$WritLn                                              * 06EA 10 3F 8C       .?.
06ED 3530             (../cmds/DLD.add.a):00577                    puls   Y,X                                                   * 06ED 35 30          50
06EF 17001A           (../cmds/DLD.add.a):00578                    lbsr   L070C                                                 * 06EF 17 00 1A       ...
06F2 39               (../cmds/DLD.add.a):00579                    rts                                                          * 06F2 39             9
06F3 3436             (../cmds/DLD.add.a):00580         L06F3      pshs   Y,X,D                                                 * 06F3 34 36          46
06F5 30C855           (../cmds/DLD.add.a):00581                    leax   <U0055,U                                              * 06F5 30 C8 55       0HU
06F8 4F               (../cmds/DLD.add.a):00582                    clra                                                         * 06F8 4F             O
06F9 C600             (../cmds/DLD.add.a):00583                    ldb    #0                                                    * 06F9 C6 00          F.
06FB 103F8D           (../cmds/DLD.add.a):00584                    os9    I$GetStt                                              * 06FB 10 3F 8D       .?.
06FE 3088E0           (../cmds/DLD.add.a):00585                    leax   -$20,X                                                * 06FE 30 88 E0       0.`
0701 6F8824           (../cmds/DLD.add.a):00586                    clr    <$0024,X                                              * 0701 6F 88 24       o.$
0704 308820           (../cmds/DLD.add.a):00587                    leax   <$0020,X                                              * 0704 30 88 20       0.
0707 103F8E           (../cmds/DLD.add.a):00588                    os9    I$SetStt                                              * 0707 10 3F 8E       .?.
070A 35B6             (../cmds/DLD.add.a):00589                    puls   PC,Y,X,D                                              * 070A 35 B6          56
070C 3436             (../cmds/DLD.add.a):00590         L070C      pshs   Y,X,D                                                 * 070C 34 36          46
070E 30C855           (../cmds/DLD.add.a):00591                    leax   <U0055,U                                              * 070E 30 C8 55       0HU
0711 4F               (../cmds/DLD.add.a):00592                    clra                                                         * 0711 4F             O
0712 C600             (../cmds/DLD.add.a):00593                    ldb    #0                                                    * 0712 C6 00          F.
0714 103F8D           (../cmds/DLD.add.a):00594                    os9    I$GetStt                                              * 0714 10 3F 8D       .?.
0717 3088E0           (../cmds/DLD.add.a):00595                    leax   -$20,X                                                * 0717 30 88 E0       0.`
071A 8601             (../cmds/DLD.add.a):00596                    lda    #1                                                    * 071A 86 01          ..
071C A78824           (../cmds/DLD.add.a):00597                    sta    <$0024,X                                              * 071C A7 88 24       '.$
071F 308820           (../cmds/DLD.add.a):00598                    leax   <$0020,X                                              * 071F 30 88 20       0.
0722 4F               (../cmds/DLD.add.a):00599                    clra                                                         * 0722 4F             O
0723 103F8E           (../cmds/DLD.add.a):00600                    os9    I$SetStt                                              * 0723 10 3F 8E       .?.
0726 35B6             (../cmds/DLD.add.a):00601                    puls   PC,Y,X,D                                              * 0726 35 B6          56
0728 3420             (../cmds/DLD.add.a):00602         L0728      pshs   Y                                                     * 0728 34 20          4
072A A680             (../cmds/DLD.add.a):00603         L072A      lda    ,X+                                                   * 072A A6 80          &.
072C 810D             (../cmds/DLD.add.a):00604                    cmpa   #13                                                   * 072C 81 0D          ..
072E 102700BC         (../cmds/DLD.add.a):00605                    lbeq   L07EE                                                 * 072E 10 27 00 BC    .'.<
0732 8130             (../cmds/DLD.add.a):00606                    cmpa   #48                                                   * 0732 81 30          .0
0734 25F4             (../cmds/DLD.add.a):00607                    bcs    L072A                                                 * 0734 25 F4          %t
0736 8139             (../cmds/DLD.add.a):00608                    cmpa   #57                                                   * 0736 81 39          .9
0738 22F0             (../cmds/DLD.add.a):00609                    bhi    L072A                                                 * 0738 22 F0          "p
073A 301F             (../cmds/DLD.add.a):00610                    leax   -$01,X                                                * 073A 30 1F          0.
073C A680             (../cmds/DLD.add.a):00611         L073C      lda    ,X+                                                   * 073C A6 80          &.
073E 8130             (../cmds/DLD.add.a):00612                    cmpa   #48                                                   * 073E 81 30          .0
0740 2506             (../cmds/DLD.add.a):00613                    bcs    L0748                                                 * 0740 25 06          %.
0742 8139             (../cmds/DLD.add.a):00614                    cmpa   #57                                                   * 0742 81 39          .9
0744 2202             (../cmds/DLD.add.a):00615                    bhi    L0748                                                 * 0744 22 02          ".
0746 20F4             (../cmds/DLD.add.a):00616                    bra    L073C                                                 * 0746 20 F4           t
0748 3410             (../cmds/DLD.add.a):00617         L0748      pshs   X                                                     * 0748 34 10          4.
074A 301F             (../cmds/DLD.add.a):00618                    leax   -$01,X                                                * 074A 30 1F          0.
074C 6FC9014F         (../cmds/DLD.add.a):00619                    clr    >U014F,U                                              * 074C 6F C9 01 4F    oI.O
0750 6FC90150         (../cmds/DLD.add.a):00620                    clr    >U0150,U                                              * 0750 6F C9 01 50    oI.P
0754 CC0001           (../cmds/DLD.add.a):00621                    ldd    #1                                                    * 0754 CC 00 01       L..
0757 EDC90151         (../cmds/DLD.add.a):00622                    std    >U0151,U                                              * 0757 ED C9 01 51    mI.Q
075B A682             (../cmds/DLD.add.a):00623         L075B      lda    ,-X                                                   * 075B A6 82          &.
075D 8130             (../cmds/DLD.add.a):00624                    cmpa   #48                                                   * 075D 81 30          .0
075F 2544             (../cmds/DLD.add.a):00625                    bcs    L07A5                                                 * 075F 25 44          %D
0761 8139             (../cmds/DLD.add.a):00626                    cmpa   #57                                                   * 0761 81 39          .9
0763 2240             (../cmds/DLD.add.a):00627                    bhi    L07A5                                                 * 0763 22 40          "@
0765 8030             (../cmds/DLD.add.a):00628                    suba   #48                                                   * 0765 80 30          .0
0767 A7C9014A         (../cmds/DLD.add.a):00629                    sta    >U014A,U                                              * 0767 A7 C9 01 4A    'I.J
076B CC0000           (../cmds/DLD.add.a):00630                    ldd    #0                                                    * 076B CC 00 00       L..
076E 6DC9014A         (../cmds/DLD.add.a):00631         L076E      tst    >U014A,U                                              * 076E 6D C9 01 4A    mI.J
0772 270A             (../cmds/DLD.add.a):00632                    beq    L077E                                                 * 0772 27 0A          '.
0774 E3C90151         (../cmds/DLD.add.a):00633                    addd   >U0151,U                                              * 0774 E3 C9 01 51    cI.Q
0778 6AC9014A         (../cmds/DLD.add.a):00634                    dec    >U014A,U                                              * 0778 6A C9 01 4A    jI.J
077C 20F0             (../cmds/DLD.add.a):00635                    bra    L076E                                                 * 077C 20 F0           p
077E E3C9014F         (../cmds/DLD.add.a):00636         L077E      addd   >U014F,U                                              * 077E E3 C9 01 4F    cI.O
0782 EDC9014F         (../cmds/DLD.add.a):00637                    std    >U014F,U                                              * 0782 ED C9 01 4F    mI.O
0786 860A             (../cmds/DLD.add.a):00638                    lda    #10                                                   * 0786 86 0A          ..
0788 A7C9014A         (../cmds/DLD.add.a):00639                    sta    >U014A,U                                              * 0788 A7 C9 01 4A    'I.J
078C CC0000           (../cmds/DLD.add.a):00640                    ldd    #0                                                    * 078C CC 00 00       L..
078F 6DC9014A         (../cmds/DLD.add.a):00641         L078F      tst    >U014A,U                                              * 078F 6D C9 01 4A    mI.J
0793 270A             (../cmds/DLD.add.a):00642                    beq    L079F                                                 * 0793 27 0A          '.
0795 E3C90151         (../cmds/DLD.add.a):00643                    addd   >U0151,U                                              * 0795 E3 C9 01 51    cI.Q
0799 6AC9014A         (../cmds/DLD.add.a):00644                    dec    >U014A,U                                              * 0799 6A C9 01 4A    jI.J
079D 20F0             (../cmds/DLD.add.a):00645                    bra    L078F                                                 * 079D 20 F0           p
079F EDC90151         (../cmds/DLD.add.a):00646         L079F      std    >U0151,U                                              * 079F ED C9 01 51    mI.Q
07A3 20B6             (../cmds/DLD.add.a):00647                    bra    L075B                                                 * 07A3 20 B6           6
07A5 ECC9014F         (../cmds/DLD.add.a):00648         L07A5      ldd    >U014F,U                                              * 07A5 EC C9 01 4F    lI.O
07A9 3510             (../cmds/DLD.add.a):00649                    puls   X                                                     * 07A9 35 10          5.
07AB 35A0             (../cmds/DLD.add.a):00650                    puls   PC,Y                                                  * 07AB 35 A0          5
07AD 3420             (../cmds/DLD.add.a):00651         L07AD      pshs   Y                                                     * 07AD 34 20          4
07AF EDC9014F         (../cmds/DLD.add.a):00652                    std    >U014F,U                                              * 07AF ED C9 01 4F    mI.O
07B3 8630             (../cmds/DLD.add.a):00653                    lda    #48                                                   * 07B3 86 30          .0
07B5 A784             (../cmds/DLD.add.a):00654                    sta    0,X                                                   * 07B5 A7 84          '.
07B7 A701             (../cmds/DLD.add.a):00655                    sta    $01,X                                                 * 07B7 A7 01          '.
07B9 CC000A           (../cmds/DLD.add.a):00656                    ldd    #10                                                   * 07B9 CC 00 0A       L..
07BC EDC90151         (../cmds/DLD.add.a):00657                    std    >U0151,U                                              * 07BC ED C9 01 51    mI.Q
07C0 ECC9014F         (../cmds/DLD.add.a):00658                    ldd    >U014F,U                                              * 07C0 EC C9 01 4F    lI.O
07C4 8D13             (../cmds/DLD.add.a):00659                    bsr    L07D9                                                 * 07C4 8D 13          ..
07C6 CC0001           (../cmds/DLD.add.a):00660                    ldd    #1                                                    * 07C6 CC 00 01       L..
07C9 EDC90151         (../cmds/DLD.add.a):00661                    std    >U0151,U                                              * 07C9 ED C9 01 51    mI.Q
07CD ECC9014F         (../cmds/DLD.add.a):00662                    ldd    >U014F,U                                              * 07CD EC C9 01 4F    lI.O
07D1 8D06             (../cmds/DLD.add.a):00663                    bsr    L07D9                                                 * 07D1 8D 06          ..
07D3 860D             (../cmds/DLD.add.a):00664                    lda    #13                                                   * 07D3 86 0D          ..
07D5 A784             (../cmds/DLD.add.a):00665                    sta    0,X                                                   * 07D5 A7 84          '.
07D7 35A0             (../cmds/DLD.add.a):00666                    puls   PC,Y                                                  * 07D7 35 A0          5
07D9 A3C90151         (../cmds/DLD.add.a):00667         L07D9      subd   >U0151,U                                              * 07D9 A3 C9 01 51    #I.Q
07DD 2504             (../cmds/DLD.add.a):00668                    bcs    L07E3                                                 * 07DD 25 04          %.
07DF 6C84             (../cmds/DLD.add.a):00669                    inc    0,X                                                   * 07DF 6C 84          l.
07E1 20F6             (../cmds/DLD.add.a):00670                    bra    L07D9                                                 * 07E1 20 F6           v
07E3 E3C90151         (../cmds/DLD.add.a):00671         L07E3      addd   >U0151,U                                              * 07E3 E3 C9 01 51    cI.Q
07E7 EDC9014F         (../cmds/DLD.add.a):00672                    std    >U014F,U                                              * 07E7 ED C9 01 4F    mI.O
07EB 3001             (../cmds/DLD.add.a):00673                    leax   $01,X                                                 * 07EB 30 01          0.
07ED 39               (../cmds/DLD.add.a):00674                    rts                                                          * 07ED 39             9
07EE CCFFFF           (../cmds/DLD.add.a):00675         L07EE      ldd    #-1                                                   * 07EE CC FF FF       L..
07F1 35A0             (../cmds/DLD.add.a):00676                    puls   PC,Y                                                  * 07F1 35 A0          5
                      (../cmds/DLD.add.a):00677         
07F3 55968C           (../cmds/DLD.add.a):00678                    emod
     07F6             (../cmds/DLD.add.a):00679         eom        equ    *
                      (../cmds/DLD.add.a):00680                    end
