                      (/home/strick/6809):00001         ********************************************************************
                      (/home/strick/6809):00002         * XMode/TMode - SCF device/path descriptor utility
                      (/home/strick/6809):00003         *
                      (/home/strick/6809):00004         * $Id$
                      (/home/strick/6809):00005         *
                      (/home/strick/6809):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (/home/strick/6809):00007         * Comment
                      (/home/strick/6809):00008         * ------------------------------------------------------------------
                      (/home/strick/6809):00009         *   1      1989/06/21  Bruce Isted
                      (/home/strick/6809):00010         * Released to public domain.
                      (/home/strick/6809):00011         *
                      (/home/strick/6809):00012         *   2      2004/07/29  Boisy G. Pitre
                      (/home/strick/6809):00013         * Revamped to also assemble as tmode
                      (/home/strick/6809):00014         
                      (/home/strick/6809):00015                  nam   XMode/TMode
                      (/home/strick/6809):00016                  ttl   SCF device/path descriptor utility
                      (/home/strick/6809):00017         
     0000             (/home/strick/6809):00018         DOHELP   set   0
                      (/home/strick/6809):00019         
                      (/home/strick/6809):00020                  ifp1            
                      (/home/strick/6809):00021                  use   defsfile
                      (         defsfile):00001                   use    ../defsfile
     0001             (      ../defsfile):00001         Level    equ   1
                      (      ../defsfile):00002         
                      (      ../defsfile):00003                  use   os9.d
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0018                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
0018                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
0018                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
0018                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
0018                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
0018                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
                      (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0018                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0018                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
0018                  (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0024                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0024                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0034                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0034                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0034                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0034                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0034                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
0034                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
0034                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
0034                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
0034                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
0034                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
0034                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0034                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0034                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0034                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0034                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0034                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0034                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0034                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0034                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0034                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0034                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
0034                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
0034                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
0034                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
0034                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
0034                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
0034                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0034                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0034                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0034                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0034                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0034                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0034                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0034                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0034                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
0070                  (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0080                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0080                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
                      (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
00B1                  (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
00B1                  (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
00B1                  (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
00B1                  (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
00B1                  (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
00B1                  (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
00B1                  (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
00B1                  (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
00B1                  (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
00B1                  (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
00B1                  (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
00B1                  (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
00B1                  (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
00B1                  (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
00B1                  (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
00B1                  (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
00B1                  (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0024                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0026                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
002A                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
002C                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
002E                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0030                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0032                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0034                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0036                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0038                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
003A                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
003C                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
003E                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0040                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0042                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0044                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0046                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0048                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0049                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
004B                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
004D                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
004F                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0051                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
     0053             (            os9.d):00456         D.Time         EQU       .                   Time
0053                  (            os9.d):00457         D.Year         RMB       1                   $53
0054                  (            os9.d):00458         D.Month        RMB       1                   $54
0055                  (            os9.d):00459         D.Day          RMB       1                   $55
0056                  (            os9.d):00460         D.Hour         RMB       1                   $56
0057                  (            os9.d):00461         D.Min          RMB       1                   $57
0058                  (            os9.d):00462         D.Sec          RMB       1                   $58
0059                  (            os9.d):00463         D.Tick         RMB       1                   $59
005A                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
005B                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
005C                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
005E                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0060                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0062                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0064                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0066                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0068                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
006A                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
006B                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
006D                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
006F                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0071                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0081                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0083                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0084                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0086                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0088                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0089                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
008A                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0100                  (            os9.d):00494         D.XSWI3        RMB       3
0103                  (            os9.d):00495         D.XSWI2        RMB       3
0106                  (            os9.d):00496         D.XSWI         RMB       3
0109                  (            os9.d):00497         D.XNMI         RMB       3
010C                  (            os9.d):00498         D.XIRQ         RMB       3
010F                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
     0020             (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
     0002             (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
     006E             (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0112                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0112                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0112                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0112                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
0112                  (            os9.d):00513         D.Time         EQU       .                   System Time
0112                  (            os9.d):00514         D.Year         RMB       1
0112                  (            os9.d):00515         D.Month        RMB       1
0112                  (            os9.d):00516         D.Day          RMB       1
0112                  (            os9.d):00517         D.Hour         RMB       1
0112                  (            os9.d):00518         D.Min          RMB       1
0112                  (            os9.d):00519         D.Sec          RMB       1
0112                  (            os9.d):00520         D.Tick         RMB       1
0112                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0112                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0112                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0112                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0112                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0112                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0112                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0112                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0112                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
0112                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
                      (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
0112                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
0112                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
0112                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
0112                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
0112                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0112                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0112                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0112                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
0112                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
0112                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
0112                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0112                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0112                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0112                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0112                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0112                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
0112                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
0112                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
0112                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0112                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
0112                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0112                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
0112                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0112                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0112                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
                      (            os9.d):00569                        RMB       4                   reserved
0112                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
0112                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0112                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0112                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0112                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0112                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0112                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0112                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0112                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0112                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0112                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0112                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
0112                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
0112                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
0112                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
0112                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
0112                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
0112                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
0112                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
0112                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
0112                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
0112                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
0112                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
0112                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
0112                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
0112                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
0112                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
0112                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
0112                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
0112                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
0112                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
0112                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
0112                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
0112                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
0112                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
0112                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
0112                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
0112                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
0112                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
0112                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
0112                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
0112                  (            os9.d):00619         D.Clock        RMB       2
0112                  (            os9.d):00620         D.XSWI3        RMB       2
0112                  (            os9.d):00621         D.XSWI2        RMB       2
0112                  (            os9.d):00622         D.XFIRQ        RMB       2
0112                  (            os9.d):00623         D.XIRQ         RMB       2
0112                  (            os9.d):00624         D.XSWI         RMB       2
0112                  (            os9.d):00625         D.XNMI         RMB       2
0112                  (            os9.d):00626         D.ErrRst       RMB       2
0112                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
0112                  (            os9.d):00628         D.SWI3         RMB       2
0112                  (            os9.d):00629         D.SWI2         RMB       2
0112                  (            os9.d):00630         D.FIRQ         RMB       2
0112                  (            os9.d):00631         D.IRQ          RMB       2
0112                  (            os9.d):00632         D.SWI          RMB       2
0112                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
0112                  (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
0112                  (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
0112                  (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
0112                  (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
0112                  (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0000                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0000                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0002                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0004             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0025                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0025                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0025                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
     000C             (            os9.d):00820         DefIOSiz       EQU       12
     0010             (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
0000                  (            os9.d):00824         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
0007                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
0008                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
0009                  (            os9.d):00832         P$User         RMB       2                   User Index $09
000B                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
000C                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
000D                  (            os9.d):00835         P$State        RMB       1                   Status $0D
000E                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
0010                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
0011                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
0012                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
0014                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
0016                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
0018                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
001A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
0026                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
0036                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
0037                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
0039                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
003B                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
003F                  (            os9.d):00849                        RMB       $40-.               unused
     0040             (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
     0080             (            os9.d):00855         SysState       EQU       %10000000
     0040             (            os9.d):00856         TimSleep       EQU       %01000000
     0020             (            os9.d):00857         TimOut         EQU       %00100000
     0010             (            os9.d):00858         ImgChg         EQU       %00010000
     0002             (            os9.d):00859         Condem         EQU       %00000010
     0001             (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
0040                  (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
0040                  (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
0040                  (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0040                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0040                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0040                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0040                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0040                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0040                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0040                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0040                  (            os9.d):00877         P$User         RMB       2                   User Index
0040                  (            os9.d):00878         P$Prior        RMB       1                   Priority
0040                  (            os9.d):00879         P$Age          RMB       1                   Age
0040                  (            os9.d):00880         P$State        RMB       1                   Status
0040                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
0040                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0040                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0040                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0040                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0040                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0040                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0040                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
0040                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
0040                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
0040                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
                      (            os9.d):00892                        RMB       $20-.               unused
0040                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0040                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0040                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
0040                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
0040                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
0040                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
0040                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
0040                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
0040                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
0040                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
0040                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
0040                  (            os9.d):00905         P$Alarm        RMB       6
                      (            os9.d):00906                        RMB       $200-.              Local stack
0040                  (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
0040                  (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
0040                  (            os9.d):00913         SysState       EQU       %10000000
0040                  (            os9.d):00914         TimSleep       EQU       %01000000
0040                  (            os9.d):00915         TimOut         EQU       %00100000
0040                  (            os9.d):00916         ImgChg         EQU       %00010000
0040                  (            os9.d):00917         Suspend        EQU       %00001000
0040                  (            os9.d):00918         Condem         EQU       %00000010
0040                  (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
0009                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     0009             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     0009             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
     EE00             (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
     1080             (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
00FF                  (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
00FF                  (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
00FF                  (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
00FF                  (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (      ../defsfile):00004                  use   scf.d
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002F                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
002F                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
002F                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
002F                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
002F                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
002F                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
002F                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (      ../defsfile):00005                  use   rbf.d
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0040                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0040                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0040                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0040                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0040                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0040                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
0040                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0040                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0040                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0040                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0040                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0040                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0040                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0040                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
                      (            rbf.d):00239                        RMB       32-.                Reserved
0040                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
0040                  (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
0040                  (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
0040                  (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
0040                  (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (      ../defsfile):00006                  use   dragon.d
                      (         dragon.d):00001                  IFNE   DRAGON.D-1
     0001             (         dragon.d):00002         DRAGON.D set   1         
                      (         dragon.d):00003                                  
                      (         dragon.d):00004         ********************************************************************
                      (         dragon.d):00005         * DgnDefs - Dragon I/O Definitions
                      (         dragon.d):00006         *
                      (         dragon.d):00007         * $Id$
                      (         dragon.d):00008         *
                      (         dragon.d):00009         * Edt/Rev  YYYY/MM/DD  Modified by
                      (         dragon.d):00010         * Comment
                      (         dragon.d):00011         * ------------------------------------------------------------------
                      (         dragon.d):00012         *          2004/11/16  P.Harvey-Smith.
                      (         dragon.d):00013         * Fixed the stupid error I made in the defines below that made all the
                      (         dragon.d):00014         * non DPxxxxx defines equal to FF00 !!!
                      (         dragon.d):00015         *
                      (         dragon.d):00016         *          2005/04/14  P.Harvey-Smith
                      (         dragon.d):00017         * Added non DP defines for ACIA on Dragon 64/Alpha
                      (         dragon.d):00018         *
                      (         dragon.d):00019         *          2005/04/21  P.Harvey-Smith
                      (         dragon.d):00020         * Fixed errors in defines for WD2797 non-DP registers.
                      (         dragon.d):00021         *
                      (         dragon.d):00022         
                      (         dragon.d):00023                  nam   DgnDefs  
                      (         dragon.d):00024                  ttl   Dragon I/O Definitions
                      (         dragon.d):00025                                  
                      (         dragon.d):00026         *************************************************
                      (         dragon.d):00027         *
                      (         dragon.d):00028         * NitrOS-9 Level 1 Section
                      (         dragon.d):00029         *
                      (         dragon.d):00030         *************************************************
                      (         dragon.d):00031         
     00FF             (         dragon.d):00032         HW.Page        SET       $FF                 Device descriptor hardware page
                      (         dragon.d):00033         
                      (         dragon.d):00034         **********************************
                      (         dragon.d):00035         * Power Line Frequency Definitions
                      (         dragon.d):00036         *
     0001             (         dragon.d):00037         Hz50           EQU       1                   Assemble clock for 50 hz power
     0002             (         dragon.d):00038         Hz60           EQU       2                   Assemble clock for 60 hz power
                      (         dragon.d):00039                        IFNDEF    PwrLnFrq
     0002             (         dragon.d):00040         PwrLnFrq       SET       Hz60                Set to Appropriate freq
                      (         dragon.d):00041                        ENDC
                      (         dragon.d):00042         
                      (         dragon.d):00043         
                      (         dragon.d):00044         **********************************
                      (         dragon.d):00045         * Ticks per second
                      (         dragon.d):00046         *
                      (         dragon.d):00047                        IFNDEF    TkPerSec
                      (         dragon.d):00048                        IFEQ      PwrLnFrq-Hz50
0026                  (         dragon.d):00049         TkPerSec       SET       50
                      (         dragon.d):00050                        ELSE      
     003C             (         dragon.d):00051         TkPerSec       SET       60
                      (         dragon.d):00052                        ENDC      
                      (         dragon.d):00053                        ENDC
                      (         dragon.d):00054         
                      (         dragon.d):00055         
                      (         dragon.d):00056         ****************************************
                      (         dragon.d):00057         * Special character Bit position equates
                      (         dragon.d):00058         *
     0001             (         dragon.d):00059         SHIFTBIT       EQU       %00000001
     0002             (         dragon.d):00060         CNTRLBIT       EQU       %00000010
     0004             (         dragon.d):00061         ALTERBIT       EQU       %00000100
     0008             (         dragon.d):00062         UPBIT          EQU       %00001000
     0010             (         dragon.d):00063         DOWNBIT        EQU       %00010000
     0020             (         dragon.d):00064         LEFTBIT        EQU       %00100000
     0040             (         dragon.d):00065         RIGHTBIT       EQU       %01000000
     0080             (         dragon.d):00066         SPACEBIT       EQU       %10000000
                      (         dragon.d):00067         
                      (         dragon.d):00068         ******************
                      (         dragon.d):00069         * VDG Devices
                      (         dragon.d):00070         *
     FFC0             (         dragon.d):00071         A.TermV        SET       $FFC0               VDG Term
     FFC1             (         dragon.d):00072         A.V1           SET       $FFC1               Possible additional VDG Devices
     FFC2             (         dragon.d):00073         A.V2           SET       $FFC2
     FFC3             (         dragon.d):00074         A.V3           SET       $FFC3
     FFC4             (         dragon.d):00075         A.V4           SET       $FFC4
     FFC5             (         dragon.d):00076         A.V5           SET       $FFC5
     FFC6             (         dragon.d):00077         A.V6           SET       $FFC6
     FFC7             (         dragon.d):00078         A.V7           SET       $FFC7
                      (         dragon.d):00079         
                      (         dragon.d):00080         ********************
                      (         dragon.d):00081         * VTIO Static Memory
                      (         dragon.d):00082         *
                      (         dragon.d):00083         * Definitions for ports on Dragon 32/64/Alpha.
                      (         dragon.d):00084         *
                      (         dragon.d):00085         *
     FF00             (         dragon.d):00086         IO              equ             $ff00           IO page on Dragon
                      (         dragon.d):00087         
                      (         dragon.d):00088         *
                      (         dragon.d):00089         * Most of these symbols will be defined twice, as some 
                      (         dragon.d):00090         * of the Dragon code, sets DP=$FF, and uses direct page
                      (         dragon.d):00091         * addressing to access the io ports, whilst some of it
                      (         dragon.d):00092         * uses absolute addressing.
                      (         dragon.d):00093         * The versions starting DP must be used with DP=$FF.
                      (         dragon.d):00094         *
                      (         dragon.d):00095         
                      (         dragon.d):00096         * PIA 0 and 1 standard on all Dragons.
     0000             (         dragon.d):00097         DPPIA0DA        EQU             $00             Side A Data/DDR
     FF00             (         dragon.d):00098         PIA0Base  EQU       DPPIA0DA+IO
     0001             (         dragon.d):00099         DPPIA0CRA       EQU             $01             Side A Control.
     0002             (         dragon.d):00100         DPPIA0DB        EQU             $02             Side B Data/DDR
     0003             (         dragon.d):00101         DPPIA0CRB       EQU             $03             Side B Control.
                      (         dragon.d):00102         
     FF00             (         dragon.d):00103         PIA0DA          EQU             DPPIA0DA+IO     Side A Data/DDR
     FF01             (         dragon.d):00104         PIA0CRA         EQU             DPPIA0CRA+IO    Side A Control.
     FF02             (         dragon.d):00105         PIA0DB          EQU             DPPIA0DB+IO     Side A Data/DDR
     FF03             (         dragon.d):00106         PIA0CRB         EQU             DPPIA0CRB+IO    Side A Control.
                      (         dragon.d):00107         
     0020             (         dragon.d):00108         DPPIA1DA        EQU             $20             Side A Data/DDR
     FF20             (         dragon.d):00109         PIA1Base  EQU       DPPIA1DA+IO
     0021             (         dragon.d):00110         DPPIA1CRA       EQU             $21             Side A Control.
     0022             (         dragon.d):00111         DPPIA1DB        EQU             $22             Side B Data/DDR
     0023             (         dragon.d):00112         DPPIA1CRB       EQU             $23             Side B Control.
                      (         dragon.d):00113         
     FF20             (         dragon.d):00114         PIA1DA          EQU             DPPIA1DA+IO     Side A Data/DDR
     FF21             (         dragon.d):00115         PIA1CRA         EQU             DPPIA1CRA+IO    Side A Control.
     FF22             (         dragon.d):00116         PIA1DB          EQU             DPPIA1DB+IO     Side A Data/DDR
     FF23             (         dragon.d):00117         PIA1CRB         EQU             DPPIA1CRB+IO    Side A Control.
                      (         dragon.d):00118         
                      (         dragon.d):00119         * Dragon Alpha has a third PIA at $FF24.
     0024             (         dragon.d):00120         DPPIA2DA        EQU             $24             Side A Data/DDR
     0025             (         dragon.d):00121         DPPIA2CRA       EQU             $25             Side A Control.
     0026             (         dragon.d):00122         DPPIA2DB        EQU             $26             Side B Data/DDR
     0027             (         dragon.d):00123         DPPIA2CRB       EQU             $27             Side B Control.
                      (         dragon.d):00124         
     FF24             (         dragon.d):00125         PIA2DA          EQU             DPPIA2DA+IO     Side A Data/DDR
     FF25             (         dragon.d):00126         PIA2CRA         EQU             DPPIA2CRA+IO    Side A Control.
     FF26             (         dragon.d):00127         PIA2DB          EQU             DPPIA2DB+IO     Side A Data/DDR
     FF27             (         dragon.d):00128         PIA2CRB         EQU             DPPIA2CRB+IO    Side A Control.
                      (         dragon.d):00129         
                      (         dragon.d):00130         * WD2797 Floppy disk controler, used in Alpha Note registers in reverse order !
     002F             (         dragon.d):00131         DPCmdRegA       EQU             $2F             command/status                  
     002E             (         dragon.d):00132         DPTrkRegA       EQU             $2E             Track register
     002D             (         dragon.d):00133         DPSecRegA       EQU             $2D             Sector register
     002C             (         dragon.d):00134         DPDataRegA      EQU             $2C             Data register
                      (         dragon.d):00135         
     FF2F             (         dragon.d):00136         CmdRegA         EQU             DPCMDREGA+IO    command/status                  
     FF2E             (         dragon.d):00137         TrkRegA         EQU             DPTRKREGA+IO    Track register
     FF2D             (         dragon.d):00138         SecRegA         EQU             DPSECREGA+IO    Sector register
     FF2C             (         dragon.d):00139         DataRegA        EQU             DPDATAREGA+IO   Data register
                      (         dragon.d):00140         
     FF2C             (         dragon.d):00141         DPort          SET       DataRegA               Disk controller base address
                      (         dragon.d):00142         
                      (         dragon.d):00143         * Constants for Alpha AY-8912 sound chip, which is used to control
                      (         dragon.d):00144         * Drive select and motor on the Alpha
     000E             (         dragon.d):00145         AYIOREG         EQU             $0E             AY-8912, IO Register number.
     0000             (         dragon.d):00146         AYIdle          EQU             $00             Make AY Idle.
     0001             (         dragon.d):00147         AYWriteReg      EQU             $01             Write AY Register
     0002             (         dragon.d):00148         AYReadReg       EQU             $02             Read AY Register
     0003             (         dragon.d):00149         AYREGLatch      EQU             $03             Latch register into AY
                      (         dragon.d):00150         
     0003             (         dragon.d):00151         DSMask          EQU             $03             Drive select mask.
     0004             (         dragon.d):00152         MotorMask       EQU             $04             Motor enable mask
     0008             (         dragon.d):00153         DDENMask        EQU             $08             DDEN Mask
     0010             (         dragon.d):00154         ENPMask         EQU             $10             Enable Precomp mask
     0020             (         dragon.d):00155         NMIMask         EQU             $20             NMI enable Mask
                      (         dragon.d):00156         
                      (         dragon.d):00157         * Dragon 64/Alpha Serial port.
     0004             (         dragon.d):00158         DPAciaData      EQU             $04             ACIA Rx/Tx Register
     0005             (         dragon.d):00159         DPAciaStat      EQU             $05             ACIA status register
     0006             (         dragon.d):00160         DPAciaCmd       EQU             $06             ACIA command register
     0007             (         dragon.d):00161         DPAciaCtrl      EQU             $07             ACIA control register
                      (         dragon.d):00162         
     FF04             (         dragon.d):00163         AciaData        EQU             DPAciaData+IO   ACIA Rx/Tx Register
     FF05             (         dragon.d):00164         AciaStat        EQU             DPAciaStat+IO   ACIA status register
     FF06             (         dragon.d):00165         AciaCmd         EQU             DPAciaCmd+IO    ACIA command register
     FF07             (         dragon.d):00166         AciaCtrl        EQU             DPAciaCtrl+IO   ACIA control register
                      (         dragon.d):00167         
                      (         dragon.d):00168         * DragonDos Cartrage IO for WD2797
                      (         dragon.d):00169         * WD2797 Floppy disk controler, used in DragonDos.
     0040             (         dragon.d):00170         DPCmdRegD       EQU             $40             command/status                  
     0041             (         dragon.d):00171         DPTrkRegD       EQU             $41             Track register
     0042             (         dragon.d):00172         DPSecRegD       EQU             $42             Sector register
     0043             (         dragon.d):00173         DPDataRegD      EQU             $43             Data register
                      (         dragon.d):00174         
     FF40             (         dragon.d):00175         CmdRegD         EQU             DPCMDREGD+IO    command/status                  
     FF41             (         dragon.d):00176         TrkRegD         EQU             DPTRKREGD+IO    Track register
     FF42             (         dragon.d):00177         SecRegD         EQU             DPSECREGD+IO    Sector register
     FF43             (         dragon.d):00178         DataRegD        EQU             DPDATAREGD+IO   Data register
                      (         dragon.d):00179         
     0048             (         dragon.d):00180         DPDSKCTL        EQU             $48             Disk DS/motor control reg
     FF48             (         dragon.d):00181         DSKCTL          EQU             DPDSKCTL+IO             
                      (         dragon.d):00182         
                      (         dragon.d):00183         * Disk IO bitmasks (DragonDos).
     0020             (         dragon.d):00184         NMIEnD          EQU             %00100000 
     0010             (         dragon.d):00185         WPCEnD          EQU             %00010000 
     0008             (         dragon.d):00186         SDensEnD        EQU             %00001000 
     0004             (         dragon.d):00187         MotorOnD        EQU             %00000100 
     0000             (         dragon.d):00188         Drive0D         EQU             %00000000
     0001             (         dragon.d):00189         Drive1D         EQU             %00000001
     0002             (         dragon.d):00190         Drive2D         EQU             %00000010
     0003             (         dragon.d):00191         Drive3D         EQU             %00000011
     0003             (         dragon.d):00192         DDosDriveMask   EQU             %00000011       Mask out all non drive select bits
     00FC             (         dragon.d):00193         DDosCtrlMask    EQU             %11111100       Mask in all non drive select bits
                      (         dragon.d):00194         
                      (         dragon.d):00195         
                      (         dragon.d):00196         * Disk IO bitmasks (Dragon Alpha).
     0008             (         dragon.d):00197         PIANMIEnA       EQU             %00001000       PIA2, CA2, used to enable/disable NMI 
     00F7             (         dragon.d):00198         PIANMIDisA      EQU             %11110111       Bitmask to force CA2 off, and disable NMI
                      (         dragon.d):00199         
     0080             (         dragon.d):00200         NMIEnA          EQU             %10000000       Flag to enable disable NMI, passed to AlphaDskCtl
     0040             (         dragon.d):00201         WPCEnA          EQU             %01000000       According to circuit trace by R.Harding.
     0020             (         dragon.d):00202         SDensEnA        EQU             %00100000       DDen, from circuit trace on R.Harding's machine.
     0010             (         dragon.d):00203         MotorOnA        EQU             %00010000       
     0001             (         dragon.d):00204         Drive0A         EQU             %00000001
     0002             (         dragon.d):00205         Drive1A         EQU             %00000010
     0004             (         dragon.d):00206         Drive2A         EQU             %00000100
     0008             (         dragon.d):00207         Drive3A         EQU             %00001000
     000F             (         dragon.d):00208         AlphaDrvMask    EQU             %00001111       Mask out all non drive select bits
     00F0             (         dragon.d):00209         AlphaCtrlMask   EQU             %11110000       Mask in all non drive select bits
                      (         dragon.d):00210         
     007F             (         dragon.d):00211         Mask58          EQU             %01111111       And mask to make sure 5.25" clock selected by WD2797
                      (         dragon.d):00212         
     003C             (         dragon.d):00213         NMICA2En        EQU             $3C             Value for PIA CRA to enable NMI
     0034             (         dragon.d):00214         NMICA2Dis       EQU             $34             Value for PIA CRA to disable NMI
                      (         dragon.d):00215         
                      (         dragon.d):00216         * Disk Commands
     00D0             (         dragon.d):00217         FrcInt          EQU     %11010000 
     0088             (         dragon.d):00218         ReadCmnd        EQU     %10001000 
     0000             (         dragon.d):00219         RestCmnd        EQU     %00000000 
     0010             (         dragon.d):00220         SeekCmnd        EQU     %00010000 
     0040             (         dragon.d):00221         StpICmnd        EQU     %01000000 
     00A8             (         dragon.d):00222         WritCmnd        EQU     %10101000 
     00F0             (         dragon.d):00223         WtTkCmnd        EQU     %11110000 
     0002             (         dragon.d):00224         Sid2Sel         EQU     %00000010 
                      (         dragon.d):00225         
                      (         dragon.d):00226         * Disk Status Bits
     0001             (         dragon.d):00227         BusyMask        EQU     %00000001 
     0004             (         dragon.d):00228         LostMask        EQU     %00000100 
     00F8             (         dragon.d):00229         ErrMask         EQU     %11111000 
     0008             (         dragon.d):00230         CRCMask         EQU     %00001000 
     0010             (         dragon.d):00231         RNFMask         EQU     %00010000 
     0020             (         dragon.d):00232         RTypMask        EQU     %00100000 
     0040             (         dragon.d):00233         WPMask          EQU     %01000000 
     0080             (         dragon.d):00234         NotRMask        EQU     %10000000 
                      (         dragon.d):00235         
     0001             (         dragon.d):00236         DensMask        EQU     %00000001 
     0002             (         dragon.d):00237         T80Mask         EQU     %00000010 
                      (         dragon.d):00238         
                      (         dragon.d):00239                         ENDC
                      (/home/strick/6809):00022                  endc            
                      (/home/strick/6809):00023         
     0022             (/home/strick/6809):00024         BuffSize equ   34         max. CHAR string length
     0002             (/home/strick/6809):00025         Edtn     equ   2         
     0080             (/home/strick/6809):00026         MaxSize  equ   $80        maximum module size
     0004             (/home/strick/6809):00027         NameSize equ   4          maximum module name length
     0000             (/home/strick/6809):00028         rev      equ   0         
                      (/home/strick/6809):00029         
                      (/home/strick/6809):00030                  org   0         
0000                  (/home/strick/6809):00031         Count    rmb   1          number of option bytes
0001                  (/home/strick/6809):00032         DataPtr  rmb   2          current option ptr
0003                  (/home/strick/6809):00033         HexIn    rmb   2          2 byte hex number
                      (/home/strick/6809):00034                  IFNE  XMODE
0005                  (/home/strick/6809):00035         ModAddr  rmb   2          module address
0007                  (/home/strick/6809):00036         ModSize  rmb   2          module size
0009                  (/home/strick/6809):00037         OptEnd   rmb   2          option table end offset
                      (/home/strick/6809):00038                  ENDC
000B                  (/home/strick/6809):00039         PathNmbr rmb   1          file path
000C                  (/home/strick/6809):00040         ParmPtr  rmb   2          next name DataPtr
000E                  (/home/strick/6809):00041         TxtPtr   rmb   2          option name ptr
0010                  (/home/strick/6809):00042         Buffer   rmb   BuffSize   miscellaneous output buffer
0032                  (/home/strick/6809):00043         ModBuff  rmb   MaxSize    module work copy buffer
00B2                  (/home/strick/6809):00044         stack    rmb   $0200      stack and parameter space
     02B2             (/home/strick/6809):00045         MemSize  equ   .         
                      (/home/strick/6809):00046         
0000 87CD0401000D1180 (/home/strick/6809):00047                  mod   Size,Name,Prgrm+Objct,ReEnt+rev,Entry,MemSize
     2C012102B2
                      (/home/strick/6809):00048         
     000D             (/home/strick/6809):00049         Name     equ   *
                      (/home/strick/6809):00050                  IFNE  XMODE
000D 58               (/home/strick/6809):00051                  fcc   "X"   
                      (/home/strick/6809):00052                  ELSE
                      (/home/strick/6809):00053                  fcc   "T"   
                      (/home/strick/6809):00054                  ENDC
000E 4D6F64E5         (/home/strick/6809):00055                  fcs   "Mode"   
0012 02               (/home/strick/6809):00056                  fcb   Edtn       edition number
                      (/home/strick/6809):00057         
0013                  (/home/strick/6809):00058         OptTable                 
                      (/home/strick/6809):00059                  IFNE  XMODE
0013 206E616D         (/home/strick/6809):00060                  fcc   " nam"     option name
0017 8404             (/home/strick/6809):00061                  fcb   Sign+M$Name,NameSize offset to string offset & max. byte count to change
0019 206D6772         (/home/strick/6809):00062                  fcc   " mgr"    
001D 8900             (/home/strick/6809):00063                  fcb   Sign+M$FMgr,0 offset to string offset & no changes allowed
001F 20646472         (/home/strick/6809):00064                  fcc   " ddr"    
0023 8B00             (/home/strick/6809):00065                  fcb   Sign+M$PDev,0
0025 2068706E         (/home/strick/6809):00066                  fcc   " hpn"    
0029 0E01             (/home/strick/6809):00067                  fcb   M$Port,1   option offset & byte count
002B 20687061         (/home/strick/6809):00068                  fcc   " hpa"    
002F 0F02             (/home/strick/6809):00069                  fcb   M$Port+1,2
                      (/home/strick/6809):00070                  ENDC
0031 20757063         (/home/strick/6809):00071                  fcc   " upc"    
                      (/home/strick/6809):00072                  IFNE  XMODE
0035 1301             (/home/strick/6809):00073                  fcb   IT.UPC,1  
                      (/home/strick/6809):00074                  ELSE
                      (/home/strick/6809):00075                  fcb   PD.UPC-PD.OPT,1  
                      (/home/strick/6809):00076                  ENDC
0037 2062736F         (/home/strick/6809):00077                  fcc   " bso"    
                      (/home/strick/6809):00078                  IFNE  XMODE
003B 1401             (/home/strick/6809):00079                  fcb   IT.BSO,1  
                      (/home/strick/6809):00080                  ELSE
                      (/home/strick/6809):00081                  fcb   PD.BSO-PD.OPT,1  
                      (/home/strick/6809):00082                  ENDC
003D 20646C6F         (/home/strick/6809):00083                  fcc   " dlo"    
                      (/home/strick/6809):00084                  IFNE  XMODE
0041 1501             (/home/strick/6809):00085                  fcb   IT.DLO,1  
                      (/home/strick/6809):00086                  ELSE
                      (/home/strick/6809):00087                  fcb   PD.DLO-PD.OPT,1  
                      (/home/strick/6809):00088                  ENDC
0043 20656B6F         (/home/strick/6809):00089                  fcc   " eko"    
                      (/home/strick/6809):00090                  IFNE  XMODE
0047 1601             (/home/strick/6809):00091                  fcb   IT.EKO,1  
                      (/home/strick/6809):00092                  ELSE
                      (/home/strick/6809):00093                  fcb   PD.EKO-PD.OPT,1  
                      (/home/strick/6809):00094                  ENDC
0049 20616C66         (/home/strick/6809):00095                  fcc   " alf"    
                      (/home/strick/6809):00096                  IFNE  XMODE
004D 1701             (/home/strick/6809):00097                  fcb   IT.ALF,1  
                      (/home/strick/6809):00098                  ELSE
                      (/home/strick/6809):00099                  fcb   PD.ALF-PD.OPT,1  
                      (/home/strick/6809):00100                  ENDC
004F 206E756C         (/home/strick/6809):00101                  fcc   " nul"    
                      (/home/strick/6809):00102                  IFNE  XMODE
0053 1801             (/home/strick/6809):00103                  fcb   IT.NUL,1  
                      (/home/strick/6809):00104                  ELSE
                      (/home/strick/6809):00105                  fcb   PD.NUL-PD.OPT,1  
                      (/home/strick/6809):00106                  ENDC
0055 20706175         (/home/strick/6809):00107                  fcc   " pau"    
                      (/home/strick/6809):00108                  IFNE  XMODE
0059 1901             (/home/strick/6809):00109                  fcb   IT.PAU,1  
                      (/home/strick/6809):00110                  ELSE
                      (/home/strick/6809):00111                  fcb   PD.PAU-PD.OPT,1  
                      (/home/strick/6809):00112                  ENDC
005B 20706167         (/home/strick/6809):00113                  fcc   " pag"    
                      (/home/strick/6809):00114                  IFNE  XMODE
005F 1A01             (/home/strick/6809):00115                  fcb   IT.PAG,1  
                      (/home/strick/6809):00116                  ELSE
                      (/home/strick/6809):00117                  fcb   PD.PAG-PD.OPT,1  
                      (/home/strick/6809):00118                  ENDC
0061 20627370         (/home/strick/6809):00119                  fcc   " bsp"    
                      (/home/strick/6809):00120                  IFNE  XMODE
0065 1B01             (/home/strick/6809):00121                  fcb   IT.BSP,1  
                      (/home/strick/6809):00122                  ELSE
                      (/home/strick/6809):00123                  fcb   PD.BSP-PD.OPT,1  
                      (/home/strick/6809):00124                  ENDC
0067 2064656C         (/home/strick/6809):00125                  fcc   " del"    
                      (/home/strick/6809):00126                  IFNE  XMODE
006B 1C01             (/home/strick/6809):00127                  fcb   IT.DEL,1  
                      (/home/strick/6809):00128                  ELSE
                      (/home/strick/6809):00129                  fcb   PD.DEL-PD.OPT,1  
                      (/home/strick/6809):00130                  ENDC
006D 20656F72         (/home/strick/6809):00131                  fcc   " eor"    
                      (/home/strick/6809):00132                  IFNE  XMODE
0071 1D01             (/home/strick/6809):00133                  fcb   IT.EOR,1  
                      (/home/strick/6809):00134                  ELSE
                      (/home/strick/6809):00135                  fcb   PD.EOR-PD.OPT,1  
                      (/home/strick/6809):00136                  ENDC
0073 20656F66         (/home/strick/6809):00137                  fcc   " eof"    
                      (/home/strick/6809):00138                  IFNE  XMODE
0077 1E01             (/home/strick/6809):00139                  fcb   IT.EOF,1  
                      (/home/strick/6809):00140                  ELSE
                      (/home/strick/6809):00141                  fcb   PD.EOF-PD.OPT,1  
                      (/home/strick/6809):00142                  ENDC
0079 20727072         (/home/strick/6809):00143                  fcc   " rpr"    
                      (/home/strick/6809):00144                  IFNE  XMODE
007D 1F01             (/home/strick/6809):00145                  fcb   IT.RPR,1  
                      (/home/strick/6809):00146                  ELSE
                      (/home/strick/6809):00147                  fcb   PD.RPR-PD.OPT,1  
                      (/home/strick/6809):00148                  ENDC
007F 20647570         (/home/strick/6809):00149                  fcc   " dup"    
                      (/home/strick/6809):00150                  IFNE  XMODE
0083 2001             (/home/strick/6809):00151                  fcb   IT.DUP,1  
                      (/home/strick/6809):00152                  ELSE
                      (/home/strick/6809):00153                  fcb   PD.DUP-PD.OPT,1  
                      (/home/strick/6809):00154                  ENDC
0085 20707363         (/home/strick/6809):00155                  fcc   " psc"    
                      (/home/strick/6809):00156                  IFNE  XMODE
0089 2101             (/home/strick/6809):00157                  fcb   IT.PSC,1  
                      (/home/strick/6809):00158                  ELSE
                      (/home/strick/6809):00159                  fcb   PD.PSC-PD.OPT,1  
                      (/home/strick/6809):00160                  ENDC
008B 20696E74         (/home/strick/6809):00161                  fcc   " int"    
                      (/home/strick/6809):00162                  IFNE  XMODE
008F 2201             (/home/strick/6809):00163                  fcb   IT.INT,1  
                      (/home/strick/6809):00164                  ELSE
                      (/home/strick/6809):00165                  fcb   PD.INT-PD.OPT,1  
                      (/home/strick/6809):00166                  ENDC
0091 20717574         (/home/strick/6809):00167                  fcc   " qut"    
                      (/home/strick/6809):00168                  IFNE  XMODE
0095 2301             (/home/strick/6809):00169                  fcb   IT.QUT,1  
                      (/home/strick/6809):00170                  ELSE
                      (/home/strick/6809):00171                  fcb   PD.QUT-PD.OPT,1  
                      (/home/strick/6809):00172                  ENDC
0097 20627365         (/home/strick/6809):00173                  fcc   " bse"    
                      (/home/strick/6809):00174                  IFNE  XMODE
009B 2401             (/home/strick/6809):00175                  fcb   IT.BSE,1  
                      (/home/strick/6809):00176                  ELSE
                      (/home/strick/6809):00177                  fcb   PD.BSE-PD.OPT,1  
                      (/home/strick/6809):00178                  ENDC
009D 206F7666         (/home/strick/6809):00179                  fcc   " ovf"    
                      (/home/strick/6809):00180                  IFNE  XMODE
00A1 2501             (/home/strick/6809):00181                  fcb   IT.OVF,1  
                      (/home/strick/6809):00182                  ELSE
                      (/home/strick/6809):00183                  fcb   PD.OVF-PD.OPT,1  
                      (/home/strick/6809):00184                  ENDC
00A3 20706172         (/home/strick/6809):00185                  fcc   " par"    
                      (/home/strick/6809):00186                  IFNE  XMODE
00A7 2601             (/home/strick/6809):00187                  fcb   IT.PAR,1  
                      (/home/strick/6809):00188                  ELSE
                      (/home/strick/6809):00189                  fcb   PD.PAR-PD.OPT,1  
                      (/home/strick/6809):00190                  ENDC
00A9 20626175         (/home/strick/6809):00191                  fcc   " bau"    
                      (/home/strick/6809):00192                  IFNE  XMODE
00AD 2701             (/home/strick/6809):00193                  fcb   IT.BAU,1  
                      (/home/strick/6809):00194                  ELSE
                      (/home/strick/6809):00195                  fcb   PD.BAU-PD.OPT,1  
                      (/home/strick/6809):00196                  ENDC
00AF 20786F6E         (/home/strick/6809):00197                  fcc   " xon"    
                      (/home/strick/6809):00198                  IFNE  XMODE
00B3 2A01             (/home/strick/6809):00199                  fcb   IT.XON,1  
                      (/home/strick/6809):00200                  ELSE
                      (/home/strick/6809):00201                  fcb   PD.XON-PD.OPT,1  
                      (/home/strick/6809):00202                  ENDC
00B5 20786F66         (/home/strick/6809):00203                  fcc   " xof"    
                      (/home/strick/6809):00204                  IFNE  XMODE
00B9 2B01             (/home/strick/6809):00205                  fcb   IT.XOFF,1  
                      (/home/strick/6809):00206                  ELSE
                      (/home/strick/6809):00207                  fcb   PD.XOFF-PD.OPT,1  
                      (/home/strick/6809):00208                  ENDC
                      (/home/strick/6809):00209                  IFNE  XMODE
00BB 20636F6C         (/home/strick/6809):00210                  fcc   " col"    
00BF 2C01             (/home/strick/6809):00211                  fcb   IT.COL,1  
00C1 20726F77         (/home/strick/6809):00212                  fcc   " row"    
00C5 2D01             (/home/strick/6809):00213                  fcb   IT.ROW,1  
                      (/home/strick/6809):00214                  IFGT  Level-1
                      (/home/strick/6809):00215                  fcc   " xtp"    
                      (/home/strick/6809):00216                  fcb   IT.XTYP,1 
                      (/home/strick/6809):00217                  fcc   " wnd"    
                      (/home/strick/6809):00218                  fcb   IT.WND,1  
                      (/home/strick/6809):00219                  fcc   " val"    
                      (/home/strick/6809):00220                  fcb   IT.VAL,1  
                      (/home/strick/6809):00221                  fcc   " sty"    
                      (/home/strick/6809):00222                  fcb   IT.STY,1  
                      (/home/strick/6809):00223                  fcc   " cpx"    
                      (/home/strick/6809):00224                  fcb   IT.CPX,1  
                      (/home/strick/6809):00225                  fcc   " cpy"    
                      (/home/strick/6809):00226                  fcb   IT.CPY,1  
                      (/home/strick/6809):00227                  fcc   " fgc"    
                      (/home/strick/6809):00228                  fcb   IT.FGC,1  
                      (/home/strick/6809):00229                  fcc   " bgc"    
                      (/home/strick/6809):00230                  fcb   IT.BGC,1  
                      (/home/strick/6809):00231                  fcc   " bdc"    
                      (/home/strick/6809):00232                  fcb   IT.BDC,1  
                      (/home/strick/6809):00233                  ENDC
                      (/home/strick/6809):00234                  ENDC
     001E             (/home/strick/6809):00235         TablOpts equ   (*-OptTable)/6 number of table entries
00C7 80               (/home/strick/6809):00236                  fcb   $80        end of option table
                      (/home/strick/6809):00237         
                      (/home/strick/6809):00238                  IFNE  DOHELP
00C8                  (/home/strick/6809):00239         UseMsg                   
                      (/home/strick/6809):00240                  fcb   C$LF      
                      (/home/strick/6809):00241                  fcc   "Usage:  XMode [/<device> || -<pathlist> || -?] [option] [option] [...]"
                      (/home/strick/6809):00242                  fcb   C$LF,C$LF 
                      (/home/strick/6809):00243                  fcc   "Purpose:  To report or alter current option settings of SCF device"
                      (/home/strick/6809):00244                  fcb   C$LF      
                      (/home/strick/6809):00245                  fcc   "          descriptors in memory or on disk in single module files."
                      (/home/strick/6809):00246                  fcb   C$LF,C$LF 
                      (/home/strick/6809):00247                  fcc   "Options:  nam, mgr, ddr, hpn, hpa, upc, bso, dlo, eko, alf, nul, pau,"
                      (/home/strick/6809):00248                  fcb   C$LF      
                      (/home/strick/6809):00249                  fcc   "          pag, bsp, del, eor, eof, rpr, dup, psc, int, qut, bse, ovf,"
                      (/home/strick/6809):00250                  fcb   C$LF      
                      (/home/strick/6809):00251                  fcc   "          par, bau, xon, xof, col, row, xtp, wnd, val, sty, cpx, cpy,"
                      (/home/strick/6809):00252                  fcb   C$LF      
                      (/home/strick/6809):00253                  fcc   "          fgc, bgc, bdc"
                      (/home/strick/6809):00254                  fcb   C$LF,C$LF 
                      (/home/strick/6809):00255                  fcc   "Examples:  xmode /t2"
                      (/home/strick/6809):00256                  fcb   C$LF      
                      (/home/strick/6809):00257                  fcc   "               Prints the current option settings of the /T2 descriptor"
                      (/home/strick/6809):00258                  fcb   C$LF      
                      (/home/strick/6809):00259                  fcc   "               in memory."
                      (/home/strick/6809):00260                  fcb   C$LF      
                      (/home/strick/6809):00261                  fcc   "           xmode -modules/t4.dd nam=T2 bau=6 hpa=ff6c eof=1B"
                      (/home/strick/6809):00262                  fcb   C$LF      
                      (/home/strick/6809):00263                  fcc   "               Changes the module name in the MODULES/T4.dd file to T2,"
                      (/home/strick/6809):00264                  fcb   C$LF      
                      (/home/strick/6809):00265                  fcc   "               sets the baud rate code to 6,  the hardware port address"
                      (/home/strick/6809):00266                  fcb   C$LF      
                      (/home/strick/6809):00267                  fcc   "               to $FF6C, and the end of file character to $1B."
                      (/home/strick/6809):00268                  fcb   C$LF      
                      (/home/strick/6809):00269                  fcc   "           xmode -?"
                      (/home/strick/6809):00270                  fcb   C$LF      
                      (/home/strick/6809):00271                  fcc   "               Prints more complete information on all of the options."
                      (/home/strick/6809):00272                  fcb   C$CR      
00C8                  (/home/strick/6809):00273         UseLen   equ   *-UseMsg  
                      (/home/strick/6809):00274         
00C8                  (/home/strick/6809):00275         HelpMsg                  
                      (/home/strick/6809):00276                  fcb   C$LF      
                      (/home/strick/6809):00277                  fcc   "The NAM option accepts only a legal OS-9 module name with a maximum of"
                      (/home/strick/6809):00278                  fcb   C$LF      
                      (/home/strick/6809):00279                  fcc   "4 characters.  It is up to the user to ensure that there is adequate"
                      (/home/strick/6809):00280                  fcb   C$LF      
                      (/home/strick/6809):00281                  fcc   "room for the module name, and if required to rename the disk file to"
                      (/home/strick/6809):00282                  fcb   C$LF      
                      (/home/strick/6809):00283                  fcc   "suit the new module name.  The MGR and DDR options can't be changed."
                      (/home/strick/6809):00284                  fcb   C$LF      
                      (/home/strick/6809):00285                  fcc   "All other options require hexadecimal numbers (0 through FFFF).  XTP is"
                      (/home/strick/6809):00286                  fcb   C$LF      
                      (/home/strick/6809):00287                  fcc   "for certain ACIA descriptors only.  WND, VAL, STY, CPX, CPY, FGC, BGC,"
                      (/home/strick/6809):00288                  fcb   C$LF      
                      (/home/strick/6809):00289                  fcc   "and BDC are for window descriptors only."
                      (/home/strick/6809):00290                  fcb   C$LF,C$LF 
                      (/home/strick/6809):00291                  fcc   "nam Device Name         mgr File Manager Name   ddr Device Driver Name"
                      (/home/strick/6809):00292                  fcb   C$LF      
                      (/home/strick/6809):00293                  fcc   "hpn H'ware Page Number  hpa H'ware Port Address upc Case Lock Flag"
                      (/home/strick/6809):00294                  fcb   C$LF      
                      (/home/strick/6809):00295                  fcc   "bso Backspace Method    dlo Delete Line Method  eko Screen Echo Flag"
                      (/home/strick/6809):00296                  fcb   C$LF      
                      (/home/strick/6809):00297                  fcc   "alf Auto Linefeed Flag  nul End Of Line Nulls   pau Page Pause Flag"
                      (/home/strick/6809):00298                  fcb   C$LF      
                      (/home/strick/6809):00299                  fcc   "pag Page Length         bsp Backspace Character del Delete Line Char"
                      (/home/strick/6809):00300                  fcb   C$LF      
                      (/home/strick/6809):00301                  fcc   "eor End Of Record Char  eof End Of File Char    rpr Reprint Line Char"
                      (/home/strick/6809):00302                  fcb   C$LF      
                      (/home/strick/6809):00303                  fcc   "dup Duplicate Line Char psc Pause Character     int Interrupt Character"
                      (/home/strick/6809):00304                  fcb   C$LF      
                      (/home/strick/6809):00305                  fcc   "qut Quit Character      bse Backspace Echo Char ovf Overflow Character"
                      (/home/strick/6809):00306                  fcb   C$LF      
                      (/home/strick/6809):00307                  fcc   "par Type (Parity) Code  bau Baud Rate Code      xon XON Character"
                      (/home/strick/6809):00308                  fcb   C$LF      
                      (/home/strick/6809):00309                  fcc   "xof XOFF Character      col Display Columns     row Display Rows"
                      (/home/strick/6809):00310                  fcb   C$LF      
                      (/home/strick/6809):00311                  fcc   "xtp Extended Type Code  wnd Window Number       val Valid Window Flag"
                      (/home/strick/6809):00312                  fcb   C$LF      
                      (/home/strick/6809):00313                  fcc   "sty Window Screen Type  cpx X Corner Position   cpy Y Corner Position"
                      (/home/strick/6809):00314                  fcb   C$LF      
                      (/home/strick/6809):00315                  fcc   "fgc Foreground Colour   bgc Background Colour   bdc Border Colour"
                      (/home/strick/6809):00316                  fcb   C$CR      
00C8                  (/home/strick/6809):00317         HelpLen  equ   *-HelpMsg 
                      (/home/strick/6809):00318                  ENDC
                      (/home/strick/6809):00319         
00C8 3D               (/home/strick/6809):00320         Equal    fcc   "="       
                      (/home/strick/6809):00321         
00C9                  (/home/strick/6809):00322         TypeMsg                  
00C9 4E6F7420616E2053 (/home/strick/6809):00323                  fcc   "Not an SCF "
     434620
                      (/home/strick/6809):00324                  IFNE  XMODE
00D4 6465736372697074 (/home/strick/6809):00325                  fcc   "descriptor!"
     6F7221
                      (/home/strick/6809):00326                  ELSE
                      (/home/strick/6809):00327                  fcc   "path!"
                      (/home/strick/6809):00328                  ENDC
00DF 0D               (/home/strick/6809):00329         CR       fcb   C$CR      
     0017             (/home/strick/6809):00330         TypeLen  equ   *-TypeMsg 
                      (/home/strick/6809):00331         
                      (/home/strick/6809):00332                  IFNE  XMODE
00E0                  (/home/strick/6809):00333         Sizemsg                  
00E0 4D6F64756C652073 (/home/strick/6809):00334                  fcc   "Module size out of range!"
     697A65206F757420
     6F662072616E6765
     21
00F9 0D               (/home/strick/6809):00335                  fcb   C$CR      
     001A             (/home/strick/6809):00336         Sizelen  equ   *-Sizemsg 
                      (/home/strick/6809):00337                  ENDC
                      (/home/strick/6809):00338         
00FA                  (/home/strick/6809):00339         SynMsg                   
00FA 53796E7461782065 (/home/strick/6809):00340                  fcc   "Syntax error:  "
     72726F723A2020
     000F             (/home/strick/6809):00341         SynLen   equ   *-SynMsg  
                      (/home/strick/6809):00342         
                      (/home/strick/6809):00343         ****************
                      (/home/strick/6809):00344         * miscellaneous error and help routines
                      (/home/strick/6809):00345         
                      (/home/strick/6809):00346                  IFNE  DOHELP
0109                  (/home/strick/6809):00347         MuchHelp                 
                      (/home/strick/6809):00348                  leax  HelpMsg,pc
                      (/home/strick/6809):00349                  ldy   #HelpLen  
                      (/home/strick/6809):00350                  bra   Helpprnt  
                      (/home/strick/6809):00351                  ENDC
                      (/home/strick/6809):00352         
                      (/home/strick/6809):00353                  IFNE  XMODE
0109                  (/home/strick/6809):00354         BadSize                  
0109 308CD4           (/home/strick/6809):00355                  leax  Sizemsg,pc
010C 108E001A         (/home/strick/6809):00356                  ldy   #Sizelen  
0110 2007             (/home/strick/6809):00357                  bra   AddHelp   
                      (/home/strick/6809):00358                  ENDC
                      (/home/strick/6809):00359         
0112                  (/home/strick/6809):00360         BadType                  
0112 308CB4           (/home/strick/6809):00361                  leax  TypeMsg,pc
0115 108E0017         (/home/strick/6809):00362                  ldy   #TypeLen  
                      (/home/strick/6809):00363         
0119                  (/home/strick/6809):00364         AddHelp                  
0119 8602             (/home/strick/6809):00365                  lda   #2        
011B 103F8C           (/home/strick/6809):00366                  os9   I$WritLn  
011E                  (/home/strick/6809):00367         Help                     
                      (/home/strick/6809):00368                  IFNE  DOHelp
                      (/home/strick/6809):00369                  leax  UseMsg,pc 
                      (/home/strick/6809):00370                  ldy   #UseLen   
011E                  (/home/strick/6809):00371         Helpprnt                 
                      (/home/strick/6809):00372                  lda   #2        
                      (/home/strick/6809):00373                  os9   I$WritLn  
                      (/home/strick/6809):00374                  ENDC
011E 160205           (/home/strick/6809):00375                  lbra  OkayEnd2  
                      (/home/strick/6809):00376         
                      (/home/strick/6809):00377         ****************
0121                  (/home/strick/6809):00378         Entry                    
                      (/home/strick/6809):00379                  IFNE  XMODE
0121 CC0000           (/home/strick/6809):00380                  ldd   #0        
0124 DD05             (/home/strick/6809):00381                  std   <ModAddr   zero mod flag
0126 970B             (/home/strick/6809):00382                  sta   <PathNmbr  zero file flag
                      (/home/strick/6809):00383                  ENDC
0128 EC80             (/home/strick/6809):00384                  ldd   ,x+        check for device name
                      (/home/strick/6809):00385                  IFNE  XMODE
012A 812D             (/home/strick/6809):00386                  cmpa  #'-        file option?
012C 262E             (/home/strick/6809):00387                  bne   Link      
                      (/home/strick/6809):00388                  ELSE
                      (/home/strick/6809):00389                  stx   <ParmPtr
                      (/home/strick/6809):00390                  clr   <PathNmbr
                      (/home/strick/6809):00391                  cmpa  #'.              dot? (for path specification)
                      (/home/strick/6809):00392                  bne   Process          if not, process as option
                      (/home/strick/6809):00393                  subb  #$30
                      (/home/strick/6809):00394                  lbmi  Syntax
                      (/home/strick/6809):00395                  cmpb  #$02
                      (/home/strick/6809):00396                  lbgt  Syntax
                      (/home/strick/6809):00397                  stb   <PathNmbr
                      (/home/strick/6809):00398                  leax  2,x              point passed char after '.'
                      (/home/strick/6809):00399                  ENDC
                      (/home/strick/6809):00400                  IFNE  DOHELP
                      (/home/strick/6809):00401                  cmpb  #'?        help option?
                      (/home/strick/6809):00402                  beq   MuchHelp  
                      (/home/strick/6809):00403                  ENDC
                      (/home/strick/6809):00404                  IFNE  XMODE
                      (/home/strick/6809):00405         * Use Filename to Get Desc:
012E 8603             (/home/strick/6809):00406                  lda   #UPDAT.    open path to module file
0130 103F84           (/home/strick/6809):00407                  os9   I$Open    
0133 25E9             (/home/strick/6809):00408                  bcs   Help      
0135 9F0C             (/home/strick/6809):00409                  stx   <ParmPtr  
0137 970B             (/home/strick/6809):00410                  sta   <PathNmbr  save path number
0139 108E0080         (/home/strick/6809):00411                  ldy   #MaxSize   max size
013D 30C832           (/home/strick/6809):00412                  leax  ModBuff,u  module buff
0140 103F89           (/home/strick/6809):00413                  os9   I$Read     get it
0143 102501E0         (/home/strick/6809):00414                  lbcs  Error     
0147 E68811           (/home/strick/6809):00415                  ldb   M$Opt,x   
014A 4F               (/home/strick/6809):00416                  clra             [D] = option table size
014B C30012           (/home/strick/6809):00417                  addd  #M$DTyp    add options start offset
014E DD09             (/home/strick/6809):00418                  std   <OptEnd    save options end offset
0150 EC02             (/home/strick/6809):00419                  ldd   M$Size,x   get module size
0152 10830080         (/home/strick/6809):00420                  cmpd  #MaxSize   module size OK?
0156 22B1             (/home/strick/6809):00421                  bhi   BadSize    no, go return error...
0158 DD07             (/home/strick/6809):00422                  std   <ModSize  
015A 203B             (/home/strick/6809):00423                  bra   GotIt     
015C                  (/home/strick/6809):00424         Link                     
015C 812F             (/home/strick/6809):00425                  cmpa  #'/        else must be /<devicename>
015E 26BE             (/home/strick/6809):00426                  bne   Help      
0160 3440             (/home/strick/6809):00427                  pshs  u         
0162 86F0             (/home/strick/6809):00428                  lda   #Devic    
0164 103F00           (/home/strick/6809):00429                  os9   F$Link     link to module
0167 25B5             (/home/strick/6809):00430                  bcs   Help      
0169 9F0C             (/home/strick/6809):00431                  stx   <ParmPtr   update after name
016B 1F31             (/home/strick/6809):00432                  tfr   u,x       
016D 3540             (/home/strick/6809):00433                  puls  u         
016F 9F05             (/home/strick/6809):00434                  stx   <ModAddr  
0171 E68811           (/home/strick/6809):00435                  ldb   M$Opt,x   
0174 4F               (/home/strick/6809):00436                  clra             [D] = option table size
0175 C30012           (/home/strick/6809):00437                  addd  #M$DTyp    add options start offset
0178 DD09             (/home/strick/6809):00438                  std   <OptEnd    save options end offset
017A EC02             (/home/strick/6809):00439                  ldd   M$Size,x   get module size
017C 10830080         (/home/strick/6809):00440                  cmpd  #MaxSize   module size OK?
0180 1022FF85         (/home/strick/6809):00441                  lbhi  BadSize    no, go report error...
0184 DD07             (/home/strick/6809):00442                  std   <ModSize  
0186 1F02             (/home/strick/6809):00443                  tfr   d,y        copy module size...
0188 3440             (/home/strick/6809):00444                  pshs  u          save data area pointer
018A 33C832           (/home/strick/6809):00445                  leau  ModBuff,u 
                      (/home/strick/6809):00446         
018D                  (/home/strick/6809):00447         GetModLp                 
018D A680             (/home/strick/6809):00448                  lda   ,x+       
018F A7C0             (/home/strick/6809):00449                  sta   ,u+       
0191 313F             (/home/strick/6809):00450                  leay  -1,y      
0193 26F8             (/home/strick/6809):00451                  bne   GetModLp  
0195 3540             (/home/strick/6809):00452                  puls  u          recover data area pointer
                      (/home/strick/6809):00453         
0197                  (/home/strick/6809):00454         GotIt                    
0197 DC09             (/home/strick/6809):00455                  ldd   <OptEnd    get option table end offset
0199 109307           (/home/strick/6809):00456                  cmpd  <ModSize   is option table size OK?
019C 1024FF69         (/home/strick/6809):00457                  lbhs  BadSize    no, go report error...
01A0 30C832           (/home/strick/6809):00458                  leax  ModBuff,u 
01A3 A68812           (/home/strick/6809):00459                  lda   M$DTyp,x   get device type
01A6 1026FF68         (/home/strick/6809):00460                  lbne  BadType    SCF = $00
01AA 9E0C             (/home/strick/6809):00461                  ldx   <ParmPtr   point to input parms
01AC 17011A           (/home/strick/6809):00462                  lbsr  SkipSpac   go skip leading spaces...
01AF 810D             (/home/strick/6809):00463                  cmpa  #C$CR      no options?
01B1 1027018E         (/home/strick/6809):00464                  lbeq  Info       ..yes, give info
01B5 301F             (/home/strick/6809):00465                  leax  -1,x      
                      (/home/strick/6809):00466                  ELSE
01B7                  (/home/strick/6809):00467         Process
                      (/home/strick/6809):00468                  leax  -1,x
                      (/home/strick/6809):00469                  stx   <ParmPtr   save for syntax error use
                      (/home/strick/6809):00470                  leax  ModBuff,u 
                      (/home/strick/6809):00471                  lda   <PathNmbr
                      (/home/strick/6809):00472                  clrb
                      (/home/strick/6809):00473                  os9   I$GetStt
                      (/home/strick/6809):00474                  tst   ,x
                      (/home/strick/6809):00475                  lbne  BadType
                      (/home/strick/6809):00476                  ldx   <ParmPtr
                      (/home/strick/6809):00477                  lbsr  SkipSpac   go skip leading spaces...
                      (/home/strick/6809):00478                  cmpa  #C$CR      no options?
                      (/home/strick/6809):00479                  lbeq  Info       ..yes, give info
                      (/home/strick/6809):00480                  leax  -1,x      
                      (/home/strick/6809):00481                  ENDC
                      (/home/strick/6809):00482         
                      (/home/strick/6809):00483         ****************
                      (/home/strick/6809):00484         * X=ParmPtr
                      (/home/strick/6809):00485         * Find and Set Options:
                      (/home/strick/6809):00486         
01B7                  (/home/strick/6809):00487         FindLp10                 
01B7 17010F           (/home/strick/6809):00488                  lbsr  SkipSpac   get next input param
01BA 9F0C             (/home/strick/6809):00489                  stx   <ParmPtr   save for syntax error use
01BC 810D             (/home/strick/6809):00490                  cmpa  #C$CR      end?
01BE 1027010E         (/home/strick/6809):00491                  lbeq  Verify     ..yes, update module CRC
01C2 318DFE47         (/home/strick/6809):00492                  leay  OptTable-6,pc ready option table ptr
01C6 3440             (/home/strick/6809):00493                  pshs  u         
01C8 EE81             (/home/strick/6809):00494                  ldu   ,x++       get next two chars
01CA 8A20             (/home/strick/6809):00495                  ora   #$20       convert 1st param char to lower case
01CC 1E03             (/home/strick/6809):00496                  exg   d,u        move [U] where we can convert param chars
01CE 8A20             (/home/strick/6809):00497                  ora   #$20       convert 2nd param char...
01D0 CA20             (/home/strick/6809):00498                  orb   #$20       convert 3rd...
01D2 1E03             (/home/strick/6809):00499                  exg   d,u        move back again
                      (/home/strick/6809):00500         
01D4                  (/home/strick/6809):00501         FindLp20                 
01D4 3126             (/home/strick/6809):00502                  leay  6,y        next option entry
01D6 6DA4             (/home/strick/6809):00503                  tst   ,y         last entry?
01D8 2B5F             (/home/strick/6809):00504                  bmi   Syntax     ..yes, bad option
01DA A121             (/home/strick/6809):00505                  cmpa  1,y       
01DC 26F6             (/home/strick/6809):00506                  bne   FindLp20   same name?
01DE 11A322           (/home/strick/6809):00507                  cmpu  2,y       
01E1 26F1             (/home/strick/6809):00508                  bne   FindLp20   ..no, loop
                      (/home/strick/6809):00509         * Found Option
01E3 3540             (/home/strick/6809):00510                  puls  u         
01E5 109F0E           (/home/strick/6809):00511                  sty   <TxtPtr   
01E8 EC80             (/home/strick/6809):00512                  ldd   ,x+        must be followed by "=", leave [X] pointing at char after "="
01EA 813D             (/home/strick/6809):00513                  cmpa  #'=       
01EC 264B             (/home/strick/6809):00514                  bne   Syntax    
01EE C10D             (/home/strick/6809):00515                  cmpb  #C$CR      rest of option missing?
01F0 2747             (/home/strick/6809):00516                  beq   Syntax     yes, go report error
01F2 C120             (/home/strick/6809):00517                  cmpb  #C$SPAC    rest of option missing?
01F4 2743             (/home/strick/6809):00518                  beq   Syntax     yes, go report error
01F6 E625             (/home/strick/6809):00519                  ldb   5,y        get # of bytes
01F8 273F             (/home/strick/6809):00520                  beq   Syntax     0 bytes, not allowed to change this option
01FA D700             (/home/strick/6809):00521                  stb   <Count    
01FC E624             (/home/strick/6809):00522                  ldb   4,y        get option offset or offset to option offset
                      (/home/strick/6809):00523                  IFNE  XMODE
01FE 2A66             (/home/strick/6809):00524                  bpl   NumOpt     option offset, go set hexadecimal option
                      (/home/strick/6809):00525         * Get CHAR input and set option:
0200 C47F             (/home/strick/6809):00526                  andb  #^Sign     clear sign bit of offset to string offset
0202 4F               (/home/strick/6809):00527                  clra             [D] = offset to string offset within module
0203 109307           (/home/strick/6809):00528                  cmpd  <ModSize   is it OK?
0206 2431             (/home/strick/6809):00529                  bhs   Syntax     no, go report error...
0208 31C832           (/home/strick/6809):00530                  leay  ModBuff,u  point to module
020B ECA5             (/home/strick/6809):00531                  ldd   b,y        get offset to string
020D 109307           (/home/strick/6809):00532                  cmpd  <ModSize   is it OK?
0210 2427             (/home/strick/6809):00533                  bhs   Syntax     no, go report error...
0212 31AB             (/home/strick/6809):00534                  leay  d,y        point to option
0214 3420             (/home/strick/6809):00535                  pshs  y          save option pointer
0216 103F10           (/home/strick/6809):00536                  os9   F$PrsNam   valid OS-9 name?
0219 3520             (/home/strick/6809):00537                  puls  y          recover option pointer (end of name pointer lost)
021B 251C             (/home/strick/6809):00538                  bcs   Syntax     no, go report error
021D 8120             (/home/strick/6809):00539                  cmpa  #C$SPAC    space delimiter char?
021F 2704             (/home/strick/6809):00540                  beq   ChkLen     yes, go check name length...
0221 810D             (/home/strick/6809):00541                  cmpa  #C$CR      <CR> delimiter char?
0223 2614             (/home/strick/6809):00542                  bne   Syntax     no, go report error
                      (/home/strick/6809):00543         
0225                  (/home/strick/6809):00544         ChkLen                   
0225 D100             (/home/strick/6809):00545                  cmpb  <Count     name length OK?
0227 2210             (/home/strick/6809):00546                  bhi   Syntax     no, go report error...
                      (/home/strick/6809):00547         
0229                  (/home/strick/6809):00548         SetChrLp                 
0229 A680             (/home/strick/6809):00549                  lda   ,x+        get character
022B A7A0             (/home/strick/6809):00550                  sta   ,y+        save it to module copy
022D 5A               (/home/strick/6809):00551                  decb             done yet?
022E 26F9             (/home/strick/6809):00552                  bne   SetChrLp   no, go copy another char...
0230 A63F             (/home/strick/6809):00553                  lda   -1,y       get last char
0232 8A80             (/home/strick/6809):00554                  ora   #Sign      set sign bit
0234 A73F             (/home/strick/6809):00555                  sta   -1,y       save last char
0236 16FF7E           (/home/strick/6809):00556                  lbra  FindLp10   go do next...
                      (/home/strick/6809):00557                  ELSE
                      (/home/strick/6809):00558                  lbra  NumOpt     option offset, go set hexadecimal option
                      (/home/strick/6809):00559                  ENDC
                      (/home/strick/6809):00560         
                      (/home/strick/6809):00561         * Syntax Error:
0239                  (/home/strick/6809):00562         Syntax                   
0239 308DFEBD         (/home/strick/6809):00563                  leax  SynMsg,pc 
023D 108E000F         (/home/strick/6809):00564                  ldy   #SynLen   
0241 8602             (/home/strick/6809):00565                  lda   #2        
0243 103F8A           (/home/strick/6809):00566                  os9   I$Write   
0246 9E0C             (/home/strick/6809):00567                  ldx   <ParmPtr  
0248 301F             (/home/strick/6809):00568                  leax  -1,x      
024A 3410             (/home/strick/6809):00569                  pshs  x         
024C 108E0000         (/home/strick/6809):00570                  ldy   #0        
                      (/home/strick/6809):00571         
0250                  (/home/strick/6809):00572         CntLoop                  
0250 3121             (/home/strick/6809):00573                  leay  1,y       
0252 A680             (/home/strick/6809):00574                  lda   ,x+       
0254 810D             (/home/strick/6809):00575                  cmpa  #C$CR     
0256 2704             (/home/strick/6809):00576                  beq   SynSay    
0258 8120             (/home/strick/6809):00577                  cmpa  #C$SPAC   
025A 26F4             (/home/strick/6809):00578                  bne   CntLoop   
                      (/home/strick/6809):00579         
025C                  (/home/strick/6809):00580         SynSay                   
025C 3510             (/home/strick/6809):00581                  puls  x         
025E 8602             (/home/strick/6809):00582                  lda   #2        
0260 103F8A           (/home/strick/6809):00583                  os9   I$Write    output err
0263 1600C0           (/home/strick/6809):00584                  lbra  OkayEnd   
                      (/home/strick/6809):00585         
                      (/home/strick/6809):00586         * Get Hex Input and Set Option:
0266                  (/home/strick/6809):00587         NumOpt                   
                      (/home/strick/6809):00588                  IFNE  XMODE
0266 4F               (/home/strick/6809):00589                  clra             [D] = option offset within module
0267 109309           (/home/strick/6809):00590                  cmpd  <OptEnd    is it OK?
026A 24CD             (/home/strick/6809):00591                  bhs   Syntax     no, go report error...
                      (/home/strick/6809):00592                  ENDC
026C 0F03             (/home/strick/6809):00593                  clr   <HexIn     zero hex input bytes
026E 0F04             (/home/strick/6809):00594                  clr   <HexIn+1  
                      (/home/strick/6809):00595         
0270                  (/home/strick/6809):00596         SetNumLp                 
0270 A680             (/home/strick/6809):00597                  lda   ,x+        get next #
0272 8120             (/home/strick/6809):00598                  cmpa  #C$SPAC    end of number?
0274 2737             (/home/strick/6809):00599                  beq   SetNum2    ..yes, set option
0276 810D             (/home/strick/6809):00600                  cmpa  #C$CR      end of line?
0278 2731             (/home/strick/6809):00601                  beq   SetNum1    ..yes, set option
                      (/home/strick/6809):00602         * Convert ASCII Hex-->Byte:
027A 8030             (/home/strick/6809):00603                  suba  #$30       make number from ASCII
027C 2BBB             (/home/strick/6809):00604                  bmi   Syntax    
027E 810A             (/home/strick/6809):00605                  cmpa  #10        is it number?
0280 250C             (/home/strick/6809):00606                  bcs   Num       
0282 845F             (/home/strick/6809):00607                  anda  #$5F       make uppercase
0284 8007             (/home/strick/6809):00608                  suba  #$11-$0A   make hex $A-$F
0286 810A             (/home/strick/6809):00609                  cmpa  #$0A      
0288 25AF             (/home/strick/6809):00610                  bcs   Syntax    
028A 8110             (/home/strick/6809):00611                  cmpa  #$10       not hex char?
028C 24AB             (/home/strick/6809):00612                  bcc   Syntax    
                      (/home/strick/6809):00613         
028E                  (/home/strick/6809):00614         Num                      
028E C610             (/home/strick/6809):00615                  ldb   #16        fancy asl *4
0290 3D               (/home/strick/6809):00616                  mul             
0291 3404             (/home/strick/6809):00617                  pshs  b          save top 4 bits
0293 DC03             (/home/strick/6809):00618                  ldd   <HexIn    
0295 69E4             (/home/strick/6809):00619                  rol   ,s        
0297 59               (/home/strick/6809):00620                  rolb            
0298 49               (/home/strick/6809):00621                  rola            
0299 69E4             (/home/strick/6809):00622                  rol   ,s        
029B 59               (/home/strick/6809):00623                  rolb            
029C 49               (/home/strick/6809):00624                  rola            
029D 69E4             (/home/strick/6809):00625                  rol   ,s        
029F 59               (/home/strick/6809):00626                  rolb            
02A0 49               (/home/strick/6809):00627                  rola            
02A1 69E4             (/home/strick/6809):00628                  rol   ,s        
02A3 59               (/home/strick/6809):00629                  rolb            
02A4 49               (/home/strick/6809):00630                  rola            
02A5 DD03             (/home/strick/6809):00631                  std   <HexIn    
02A7 3504             (/home/strick/6809):00632                  puls  b          drop temp
02A9 20C5             (/home/strick/6809):00633                  bra   SetNumLp   ..loop
                      (/home/strick/6809):00634         
02AB                  (/home/strick/6809):00635         SetNum1                  
02AB 301F             (/home/strick/6809):00636                  leax  -1,x       reset so can find <CR>
                      (/home/strick/6809):00637         
02AD                  (/home/strick/6809):00638         SetNum2                  
02AD E624             (/home/strick/6809):00639                  ldb   4,y        get option offset
02AF 31C832           (/home/strick/6809):00640                  leay  ModBuff,u  point to module
02B2 31A5             (/home/strick/6809):00641                  leay  b,y        point to option
02B4 DC03             (/home/strick/6809):00642                  ldd   <HexIn     pick up hex input
02B6 0A00             (/home/strick/6809):00643                  dec   <Count    
02B8 2705             (/home/strick/6809):00644                  beq   SetOne    
02BA EDA4             (/home/strick/6809):00645                  std   ,y         set two byte option
02BC 16FEF8           (/home/strick/6809):00646                  lbra  FindLp10  
                      (/home/strick/6809):00647         
02BF                  (/home/strick/6809):00648         SetOne                   
02BF 4D               (/home/strick/6809):00649                  tsta            
02C0 1026FF75         (/home/strick/6809):00650                  lbne  Syntax    
02C4 E7A4             (/home/strick/6809):00651                  stb   ,y         set one byte option
                      (/home/strick/6809):00652         
02C6                  (/home/strick/6809):00653         SetNDone                 
02C6 16FEEE           (/home/strick/6809):00654                  lbra  FindLp10  
                      (/home/strick/6809):00655         
                      (/home/strick/6809):00656         * --------------
                      (/home/strick/6809):00657         * Skip Spaces:
02C9                  (/home/strick/6809):00658         SkipSpac                 
02C9 A680             (/home/strick/6809):00659                  lda   ,x+       
02CB 8120             (/home/strick/6809):00660                  cmpa  #C$SPAC   
02CD 27FA             (/home/strick/6809):00661                  beq   SkipSpac  
02CF 39               (/home/strick/6809):00662                  rts             
                      (/home/strick/6809):00663         
                      (/home/strick/6809):00664         * --------------
                      (/home/strick/6809):00665         * Update Module CRC:
02D0                  (/home/strick/6809):00666         Verify                   
                      (/home/strick/6809):00667                  IFNE  XMODE
02D0 3440             (/home/strick/6809):00668                  pshs  u          save data ptr
02D2 33C832           (/home/strick/6809):00669                  leau  ModBuff,u 
02D5 1F31             (/home/strick/6809):00670                  tfr   u,x        X is mod address
02D7 10AE02           (/home/strick/6809):00671                  ldy   M$Size,x   Y is mod size
02DA 313D             (/home/strick/6809):00672                  leay  -3,y       beginning of chksum
02DC 1F20             (/home/strick/6809):00673                  tfr   y,d        Y is byte count
02DE 33CB             (/home/strick/6809):00674                  leau  d,u        set U to chksum
02E0 86FF             (/home/strick/6809):00675                  lda   #$FF       init chksum
02E2 A7C4             (/home/strick/6809):00676                  sta   ,u        
02E4 A741             (/home/strick/6809):00677                  sta   1,u       
02E6 A742             (/home/strick/6809):00678                  sta   2,u       
02E8 3440             (/home/strick/6809):00679                  pshs  u         
02EA 103F17           (/home/strick/6809):00680                  os9   F$CRC      calc new crc
02ED 3540             (/home/strick/6809):00681                  puls  u         
02EF 63C0             (/home/strick/6809):00682                  com   ,u+        fix it up right
02F1 63C0             (/home/strick/6809):00683                  com   ,u+       
02F3 63C4             (/home/strick/6809):00684                  com   ,u        
02F5 960B             (/home/strick/6809):00685                  lda   <PathNmbr  was it file?
02F7 2717             (/home/strick/6809):00686                  beq   MemMod     ..no, in memory
02F9 8E0000           (/home/strick/6809):00687                  ldx   #0        
02FC 1F13             (/home/strick/6809):00688                  tfr   x,u       
02FE 103F88           (/home/strick/6809):00689                  os9   I$Seek     go back to file begin
0301 2524             (/home/strick/6809):00690                  bcs   Error     
0303 3540             (/home/strick/6809):00691                  puls  u         
0305 30C832           (/home/strick/6809):00692                  leax  ModBuff,u 
0308 109E07           (/home/strick/6809):00693                  ldy   <ModSize  
030B 103F8A           (/home/strick/6809):00694                  os9   I$Write    update module file
                      (/home/strick/6809):00695                  ELSE
                      (/home/strick/6809):00696                  leax  ModBuff,u
                      (/home/strick/6809):00697                  lda   <PathNmbr
                      (/home/strick/6809):00698                  clrb
                      (/home/strick/6809):00699                  os9   I$SetStt
                      (/home/strick/6809):00700                  ENDC
030E 2016             (/home/strick/6809):00701                  bra   OkayEnd   
                      (/home/strick/6809):00702         
                      (/home/strick/6809):00703                  IFNE  XMODE
0310                  (/home/strick/6809):00704         MemMod                   
0310 EEE4             (/home/strick/6809):00705                  ldu   ,s         get data area pointer
0312 30C832           (/home/strick/6809):00706                  leax  ModBuff,u 
0315 109E07           (/home/strick/6809):00707                  ldy   <ModSize  
0318 DE05             (/home/strick/6809):00708                  ldu   <ModAddr  
                      (/home/strick/6809):00709         
031A                  (/home/strick/6809):00710         PutModLp                 
031A A680             (/home/strick/6809):00711                  lda   ,x+       
031C A7C0             (/home/strick/6809):00712                  sta   ,u+       
031E 313F             (/home/strick/6809):00713                  leay  -1,y      
0320 26F8             (/home/strick/6809):00714                  bne   PutModLp  
0322 3540             (/home/strick/6809):00715                  puls  u          recover data area pointer
0324 2000             (/home/strick/6809):00716                  bra   OkayEnd2  
                      (/home/strick/6809):00717                  ENDC
                      (/home/strick/6809):00718         
0326                  (/home/strick/6809):00719         OkayEnd                  
                      (/home/strick/6809):00720         *         bsr   OutCR     
                      (/home/strick/6809):00721         
0326                  (/home/strick/6809):00722         OkayEnd2                 
0326 5F               (/home/strick/6809):00723                  clrb             okay
0327                  (/home/strick/6809):00724         Error                    
                      (/home/strick/6809):00725                  IFNE  XMODE
0327 3405             (/home/strick/6809):00726                  pshs  b,cc      
0329 DE05             (/home/strick/6809):00727                  ldu   <ModAddr  
032B 2703             (/home/strick/6809):00728                  beq   Bye       
032D 103F02           (/home/strick/6809):00729                  os9   F$UnLink  
                      (/home/strick/6809):00730         
0330                  (/home/strick/6809):00731         Bye                      
0330 3505             (/home/strick/6809):00732                  puls  b,cc      
                      (/home/strick/6809):00733                  ENDC
0332 103F06           (/home/strick/6809):00734                  os9   F$Exit     we're done...
                      (/home/strick/6809):00735         
                      (/home/strick/6809):00736         * --------------
                      (/home/strick/6809):00737         * Print a <CR>:
0335                  (/home/strick/6809):00738         OutCR                    
0335 308DFDA6         (/home/strick/6809):00739                  leax  CR,pc     
0339 108E0001         (/home/strick/6809):00740                  ldy   #1        
033D 8601             (/home/strick/6809):00741                  lda   #1        
033F 103F8C           (/home/strick/6809):00742                  os9   I$WritLn  
0342 39               (/home/strick/6809):00743                  rts             
                      (/home/strick/6809):00744         
                      (/home/strick/6809):00745         ****************
                      (/home/strick/6809):00746         * Output Current Desc Info:
0343                  (/home/strick/6809):00747         Info                     
                      (/home/strick/6809):00748                  IFNE  TMODE
                      (/home/strick/6809):00749                  lda   <PathNmbr
                      (/home/strick/6809):00750                  leax  Buffer,u
                      (/home/strick/6809):00751                  ldb   #PDELIM
                      (/home/strick/6809):00752                  stb   ,x+
                      (/home/strick/6809):00753                  ldb   #SS.DevNm
                      (/home/strick/6809):00754                  os9   I$GetStt
0343                  (/home/strick/6809):00755         go@      ldb   ,x+
                      (/home/strick/6809):00756                  bpl   go@
                      (/home/strick/6809):00757                  andb  #$7F
                      (/home/strick/6809):00758                  stb   -1,x
                      (/home/strick/6809):00759                  ldb   #C$CR
                      (/home/strick/6809):00760                  stb   ,x
                      (/home/strick/6809):00761                  leax  Buffer,u
                      (/home/strick/6809):00762                  ldy   #80
                      (/home/strick/6809):00763                  lda   #$01
                      (/home/strick/6809):00764                  os9   I$WritLn
                      (/home/strick/6809):00765                  ENDC
                      (/home/strick/6809):00766         
0343 308DFCCC         (/home/strick/6809):00767                  leax  OptTable,pc point to text table
0347 9F0E             (/home/strick/6809):00768                  stx   <TxtPtr   
                      (/home/strick/6809):00769         
0349 6FE2             (/home/strick/6809):00770                  clr   ,-s
034B                  (/home/strick/6809):00771         InfoLoop                 
034B 9E0E             (/home/strick/6809):00772                  ldx   <TxtPtr   
034D 108E0004         (/home/strick/6809):00773                  ldy   #4        
0351 1700A0           (/home/strick/6809):00774                  lbsr  OutPut     print option name
0354 308DFD70         (/home/strick/6809):00775                  leax  Equal,pc  
0358 108E0001         (/home/strick/6809):00776                  ldy   #1        
035C 170095           (/home/strick/6809):00777                  lbsr  OutPut     print =
035F 9E0E             (/home/strick/6809):00778                  ldx   <TxtPtr   
0361 E604             (/home/strick/6809):00779                  ldb   4,x        get offset to HEX option;  if minus, offset to option offset
                      (/home/strick/6809):00780                  IFNE  XMODE
0363 2A35             (/home/strick/6809):00781                  bpl   PrintHex   go do simple offset to HEX option
0365 C47F             (/home/strick/6809):00782                  andb  #^Sign     clear sign bit
0367 4F               (/home/strick/6809):00783                  clra             [D] = offset to string offset within module
0368 109307           (/home/strick/6809):00784                  cmpd  <ModSize   is it OK?
036B 2459             (/home/strick/6809):00785                  bhs   MovePtr    no, skip this option...
036D 31C832           (/home/strick/6809):00786                  leay  ModBuff,u  point [Y] to module work copy
0370 ECA5             (/home/strick/6809):00787                  ldd   b,y        get string offset within module
0372 109307           (/home/strick/6809):00788                  cmpd  <ModSize   is string offset OK?
0375 244F             (/home/strick/6809):00789                  bhs   MovePtr    no, skip this option...
0377 31AB             (/home/strick/6809):00790                  leay  d,y        point [Y] to CHAR string
0379 8622             (/home/strick/6809):00791                  lda   #BuffSize  get max. chars to print
037B 30C810           (/home/strick/6809):00792                  leax  Buffer,u   point [X] to CHAR string buffer
037E 0F00             (/home/strick/6809):00793                  clr   <Count     init counter
                      (/home/strick/6809):00794         
0380 E6A0             (/home/strick/6809):00795         CharCopy ldb   ,y+        get char
0382 2A04             (/home/strick/6809):00796                  bpl   NotLast    sign bit clear so not last, go on...
0384 C47F             (/home/strick/6809):00797                  andb  #^Sign     clear sign bit
0386 8601             (/home/strick/6809):00798                  lda   #1         set up as last char
                      (/home/strick/6809):00799         
0388 E780             (/home/strick/6809):00800         NotLast  stb   ,x+       
038A 0C00             (/home/strick/6809):00801                  inc   <Count     count chars in string
038C 4A               (/home/strick/6809):00802                  deca             done yet?
038D 26F1             (/home/strick/6809):00803                  bne   CharCopy   no, go do another char...
038F D600             (/home/strick/6809):00804                  ldb   <Count     get chars in string ([A]=0, so [D]=char count)
0391 1F02             (/home/strick/6809):00805                  tfr   d,y        module name length into [Y]
0393 30C810           (/home/strick/6809):00806                  leax  Buffer,u   point [X] to CHAR string copy
0396 8D5C             (/home/strick/6809):00807                  bsr   OutPut     print CHAR string
0398 202C             (/home/strick/6809):00808                  bra   MovePtr    skip HEX output routine
                      (/home/strick/6809):00809                  ENDC
                      (/home/strick/6809):00810         
                      (/home/strick/6809):00811         * Print Hex Option Values:
039A                  (/home/strick/6809):00812         PrintHex                 
039A 9E0E             (/home/strick/6809):00813                  ldx   <TxtPtr   
039C E605             (/home/strick/6809):00814                  ldb   5,x        get # of digits
039E D700             (/home/strick/6809):00815                  stb   <Count    
03A0 E604             (/home/strick/6809):00816                  ldb   4,x        get option offset in module
                      (/home/strick/6809):00817                  IFNE  XMODE
03A2 4F               (/home/strick/6809):00818                  clra             [D] = option offset within module
03A3 109309           (/home/strick/6809):00819                  cmpd  <OptEnd    is option offset OK?
03A6 241E             (/home/strick/6809):00820                  bhs   MovePtr    no, skip this option...
                      (/home/strick/6809):00821                  ENDC
03A8 30C832           (/home/strick/6809):00822                  leax  ModBuff,u  point [X] to module work copy
03AB 3A               (/home/strick/6809):00823                  abx              point [X] to option
03AC 9F01             (/home/strick/6809):00824                  stx   <DataPtr  
                      (/home/strick/6809):00825         
                      (/home/strick/6809):00826         * Print One Byte:
03AE                  (/home/strick/6809):00827         NumLoop                  
03AE 9E01             (/home/strick/6809):00828                  ldx   <DataPtr  
03B0 A680             (/home/strick/6809):00829                  lda   ,x+       
03B2 9F01             (/home/strick/6809):00830                  stx   <DataPtr  
03B4 3402             (/home/strick/6809):00831                  pshs  a         
03B6 44               (/home/strick/6809):00832                  lsra            
03B7 44               (/home/strick/6809):00833                  lsra            
03B8 44               (/home/strick/6809):00834                  lsra            
03B9 44               (/home/strick/6809):00835                  lsra            
03BA 8D27             (/home/strick/6809):00836                  bsr   OutOne    
03BC 3502             (/home/strick/6809):00837                  puls  a         
03BE 840F             (/home/strick/6809):00838                  anda  #$0F      
03C0 8D21             (/home/strick/6809):00839                  bsr   OutOne    
03C2 0A00             (/home/strick/6809):00840                  dec   <Count    
03C4 26E8             (/home/strick/6809):00841                  bne   NumLoop   
                      (/home/strick/6809):00842         
03C6                  (/home/strick/6809):00843         MovePtr                  
03C6 9E0E             (/home/strick/6809):00844                  ldx   <TxtPtr   
03C8 3006             (/home/strick/6809):00845                  leax  6,x       
03CA 9F0E             (/home/strick/6809):00846                  stx   <TxtPtr   
03CC E6E0             (/home/strick/6809):00847                  ldb   ,s+
03CE 5C               (/home/strick/6809):00848                  incb
03CF C11E             (/home/strick/6809):00849                  cmpb  #TablOpts
03D1 1027FF51         (/home/strick/6809):00850                  lbeq  OkayEnd    done...
03D5 3404             (/home/strick/6809):00851                  pshs  b
03D7 C507             (/home/strick/6809):00852                  bitb  #$07       # of options remaining evenly divisible by eight?
03D9 1026FF6E         (/home/strick/6809):00853                  lbne  InfoLoop   no, go print next option on same line
03DD 17FF55           (/home/strick/6809):00854                  lbsr  OutCR      <CR> after every 8th option
03E0 16FF68           (/home/strick/6809):00855                  lbra  InfoLoop   ..loop
                      (/home/strick/6809):00856         
                      (/home/strick/6809):00857         * --------------
                      (/home/strick/6809):00858         * Print 1/2 Byte Hex Char:
03E3                  (/home/strick/6809):00859         OutOne                   
03E3 810A             (/home/strick/6809):00860                  cmpa  #10       
03E5 2502             (/home/strick/6809):00861                  bcs   Number    
03E7 8B07             (/home/strick/6809):00862                  adda  #$11-10    make alpha
                      (/home/strick/6809):00863         
03E9                  (/home/strick/6809):00864         Number                   
03E9 8B30             (/home/strick/6809):00865                  adda  #$30       make ASCII
03EB 9710             (/home/strick/6809):00866                  sta   <Buffer   
03ED 30C810           (/home/strick/6809):00867                  leax  Buffer,u  
03F0 108E0001         (/home/strick/6809):00868                  ldy   #1        
                      (/home/strick/6809):00869         
03F4                  (/home/strick/6809):00870         OutPut                   
03F4 8601             (/home/strick/6809):00871                  lda   #$01
03F6 103F8A           (/home/strick/6809):00872                  os9   I$Write
03F9 1025FF2A         (/home/strick/6809):00873                  lbcs  Error     
03FD 39               (/home/strick/6809):00874                  rts             
                      (/home/strick/6809):00875         
03FE EA9633           (/home/strick/6809):00876                  emod            
     0401             (/home/strick/6809):00877         Size     equ   *         
                      (/home/strick/6809):00878                  end             
