                      ( ../cmds/Menu.asm):00001                    nam    menu
                      ( ../cmds/Menu.asm):00002                    ttl    program module
                      ( ../cmds/Menu.asm):00003         
                      ( ../cmds/Menu.asm):00004                    ifp1
                      ( ../cmds/Menu.asm):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      ( ../cmds/Menu.asm):00006                    endc
                      ( ../cmds/Menu.asm):00007         
     0011             ( ../cmds/Menu.asm):00008         tylg       set    Prgrm+Objct
     0081             ( ../cmds/Menu.asm):00009         atrv       set    ReEnt+rev
     0001             ( ../cmds/Menu.asm):00010         rev        set    $01
                      ( ../cmds/Menu.asm):00011         
0000 87CD0663000D1181 ( ../cmds/Menu.asm):00012                    mod    eom,name,tylg,atrv,start,size
     4D01892027
                      ( ../cmds/Menu.asm):00013         
0000.                 ( ../cmds/Menu.asm):00014         U0000      rmb    1
0001.                 ( ../cmds/Menu.asm):00015         U0001      rmb    1
0002.                 ( ../cmds/Menu.asm):00016         U0002      rmb    1
0003.                 ( ../cmds/Menu.asm):00017         U0003      rmb    1
0004.                 ( ../cmds/Menu.asm):00018         U0004      rmb    1
0005.                 ( ../cmds/Menu.asm):00019         U0005      rmb    2
0007.                 ( ../cmds/Menu.asm):00020         U0007      rmb    2
0009.                 ( ../cmds/Menu.asm):00021         U0009      rmb    2
000B.                 ( ../cmds/Menu.asm):00022         U000B      rmb    1
000C.                 ( ../cmds/Menu.asm):00023         U000C      rmb    1
000D.                 ( ../cmds/Menu.asm):00024         U000D      rmb    2
000F.                 ( ../cmds/Menu.asm):00025         U000F      rmb    2
0011.                 ( ../cmds/Menu.asm):00026         U0011      rmb    2
0013.                 ( ../cmds/Menu.asm):00027         U0013      rmb    2
0015.                 ( ../cmds/Menu.asm):00028         U0015      rmb    4
0019.                 ( ../cmds/Menu.asm):00029         U0019      rmb    4
001D.                 ( ../cmds/Menu.asm):00030         U001D      rmb    1
001E.                 ( ../cmds/Menu.asm):00031         U001E      rmb    1
001F.                 ( ../cmds/Menu.asm):00032         U001F      rmb    1
0020.                 ( ../cmds/Menu.asm):00033         U0020      rmb    1
0021.                 ( ../cmds/Menu.asm):00034         U0021      rmb    16
0031.                 ( ../cmds/Menu.asm):00035         U0031      rmb    8
0039.                 ( ../cmds/Menu.asm):00036         U0039      rmb    3
003C.                 ( ../cmds/Menu.asm):00037         U003C      rmb    3
003F.                 ( ../cmds/Menu.asm):00038         U003F      rmb    3
0042.                 ( ../cmds/Menu.asm):00039         U0042      rmb    3
0045.                 ( ../cmds/Menu.asm):00040         U0045      rmb    9
004E.                 ( ../cmds/Menu.asm):00041         U004E      rmb    23
0065.                 ( ../cmds/Menu.asm):00042         U0065      rmb    32
0085.                 ( ../cmds/Menu.asm):00043         U0085      rmb    206
0153.                 ( ../cmds/Menu.asm):00044         U0153      rmb    40
017B.                 ( ../cmds/Menu.asm):00045         U017B      rmb    120
01F3.                 ( ../cmds/Menu.asm):00046         U01F3      rmb    3200
0E73.                 ( ../cmds/Menu.asm):00047         U0E73      rmb    2
0E75.                 ( ../cmds/Menu.asm):00048         U0E75      rmb    80
0EC5.                 ( ../cmds/Menu.asm):00049         U0EC5      rmb    1
0EC6.                 ( ../cmds/Menu.asm):00050         U0EC6      rmb    4449
     2027             ( ../cmds/Menu.asm):00051         size       equ    .
                      ( ../cmds/Menu.asm):00052         
000D 6D656EF5         ( ../cmds/Menu.asm):00053         name       fcs    /menu/                                                * 000D 6D 65 6E F5    menu
0011 436F707972696768 ( ../cmds/Menu.asm):00054                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0011 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
006E EC               ( ../cmds/Menu.asm):00055                    fcb    $EC                                                   * 006E EC             l
006F E6               ( ../cmds/Menu.asm):00056                    fcb    $E6                                                   * 006F E6             f
0070 EA               ( ../cmds/Menu.asm):00057                    fcb    $EA                                                   * 0070 EA             j
0071 F5               ( ../cmds/Menu.asm):00058                    fcb    $F5                                                   * 0071 F5             u
0072 E9               ( ../cmds/Menu.asm):00059                    fcb    $E9                                                   * 0072 E9             i
0073 A0               ( ../cmds/Menu.asm):00060                    fcb    $A0                                                   * 0073 A0
0074 E2               ( ../cmds/Menu.asm):00061                    fcb    $E2                                                   * 0074 E2             b
0075 ED               ( ../cmds/Menu.asm):00062                    fcb    $ED                                                   * 0075 ED             m
0076 F1               ( ../cmds/Menu.asm):00063                    fcb    $F1                                                   * 0076 F1             q
0077 E9               ( ../cmds/Menu.asm):00064                    fcb    $E9                                                   * 0077 E9             i
0078 F0               ( ../cmds/Menu.asm):00065                    fcb    $F0                                                   * 0078 F0             p
0079 EF               ( ../cmds/Menu.asm):00066                    fcb    $EF                                                   * 0079 EF             o
007A F4               ( ../cmds/Menu.asm):00067                    fcb    $F4                                                   * 007A F4             t
007B F0               ( ../cmds/Menu.asm):00068                    fcb    $F0                                                   * 007B F0             p
007C 7368656C6C       ( ../cmds/Menu.asm):00069         L007C      fcc    "shell"                                               * 007C 73 68 65 6C 6C shell
0081 0D               ( ../cmds/Menu.asm):00070                    fcb    $0D                                                   * 0081 0D             .
0082 5573616765206973 ( ../cmds/Menu.asm):00071         L0082      fcc    "Usage is:"                                           * 0082 55 73 61 67 65 20 69 73 3A Usage is:
     3A
008B 0A               ( ../cmds/Menu.asm):00072                    fcb    $0A                                                   * 008B 0A             .
008C 4D454E55203C6D65 ( ../cmds/Menu.asm):00073                    fcc    "MENU <menuname> <cmdname>"                           * 008C 4D 45 4E 55 20 3C 6D 65 6E 75 6E 61 6D 65 3E 20 3C 63 6D 64 6E 61 6D 65 3E MENU <menuname> <cmdname>
     6E756E616D653E20
     3C636D646E616D65
     3E
00A5 0A               ( ../cmds/Menu.asm):00074                    fcb    $0A                                                   * 00A5 0A             .
00A6 0D               ( ../cmds/Menu.asm):00075                    fcb    $0D                                                   * 00A6 0D             .
00A7 0A               ( ../cmds/Menu.asm):00076         L00A7      fcb    $0A                                                   * 00A7 0A             .
00A8 0A               ( ../cmds/Menu.asm):00077                    fcb    $0A                                                   * 00A8 0A             .
00A9 0D               ( ../cmds/Menu.asm):00078                    fcb    $0D                                                   * 00A9 0D             .
00AA 536F7272792C2079 ( ../cmds/Menu.asm):00079         L00AA      fcc    "Sorry, you do not have access to that option"        * 00AA 53 6F 72 72 79 2C 20 79 6F 75 20 64 6F 20 6E 6F 74 20 68 61 76 65 20 61 63 63 65 73 73 20 74 6F 20 74 68 61 74 20 6F 70 74 69 6F 6E Sorry, you do not have access to that option
     6F7520646F206E6F
     7420686176652061
     636365737320746F
     2074686174206F70
     74696F6E
00D6 0D               ( ../cmds/Menu.asm):00080                    fcb    $0D                                                   * 00D6 0D             .
00D7 4120757365722070 ( ../cmds/Menu.asm):00081         L00D7      fcc    "A user priority level has been specified incorrectly!" * 00D7 41 20 75 73 65 72 20 70 72 69 6F 72 69 74 79 20 6C 65 76 65 6C 20 68 61 73 20 62 65 65 6E 20 73 70 65 63 69 66 69 65 64 20 69 6E 63 6F 72 72 65 63 74 6C 79 21 A user priority level has been specified incorrectly!
     72696F7269747920
     6C6576656C206861
     73206265656E2073
     7065636966696564
     20696E636F727265
     63746C7921
010C 0D               ( ../cmds/Menu.asm):00082                    fcb    $0D                                                   * 010C 0D             .
010D 2F64642F6262732F ( ../cmds/Menu.asm):00083         L010D      fcc    "/dd/bbs/BBS.userstats"                               * 010D 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
0122 0D               ( ../cmds/Menu.asm):00084                    fcb    $0D                                                   * 0122 0D             .
0123 49276D20736F7272 ( ../cmds/Menu.asm):00085         L0123      fcc    "I'm sorry, but your time has expired!"               * 0123 49 27 6D 20 73 6F 72 72 79 2C 20 62 75 74 20 79 6F 75 72 20 74 69 6D 65 20 68 61 73 20 65 78 70 69 72 65 64 21 I'm sorry, but your time has expired!
     792C206275742079
     6F75722074696D65
     2068617320657870
     6972656421
0148 0D               ( ../cmds/Menu.asm):00086                    fcb    $0D                                                   * 0148 0D             .
0149 5741524E494E4721 ( ../cmds/Menu.asm):00087         L0149      fcc    "WARNING!!  You have only a few minutes left online!" * 0149 57 41 52 4E 49 4E 47 21 21 20 20 59 6F 75 20 68 61 76 65 20 6F 6E 6C 79 20 61 20 66 65 77 20 6D 69 6E 75 74 65 73 20 6C 65 66 74 20 6F 6E 6C 69 6E 65 21 WARNING!!  You have only a few minutes left online!
     212020596F752068
     617665206F6E6C79
     206120666577206D
     696E75746573206C
     656674206F6E6C69
     6E6521
017C 0D               ( ../cmds/Menu.asm):00088                    fcb    $0D                                                   * 017C 0D             .
017D 1F               ( ../cmds/Menu.asm):00089         L017D      fcb    $1F                                                   * 017D 1F             .
017E 1C               ( ../cmds/Menu.asm):00090                    fcb    $1C                                                   * 017E 1C             .
017F 1F               ( ../cmds/Menu.asm):00091                    fcb    $1F                                                   * 017F 1F             .
0180 1E               ( ../cmds/Menu.asm):00092                    fcb    $1E                                                   * 0180 1E             .
0181 1F               ( ../cmds/Menu.asm):00093                    fcb    $1F                                                   * 0181 1F             .
0182 1E               ( ../cmds/Menu.asm):00094                    fcb    $1E                                                   * 0182 1E             .
0183 1F               ( ../cmds/Menu.asm):00095                    fcb    $1F                                                   * 0183 1F             .
0184 1F               ( ../cmds/Menu.asm):00096                    fcb    $1F                                                   * 0184 1F             .
0185 1E               ( ../cmds/Menu.asm):00097                    fcb    $1E                                                   * 0185 1E             .
0186 1F               ( ../cmds/Menu.asm):00098                    fcb    $1F                                                   * 0186 1F             .
0187 1E               ( ../cmds/Menu.asm):00099                    fcb    $1E                                                   * 0187 1E             .
0188 1F               ( ../cmds/Menu.asm):00100                    fcb    $1F                                                   * 0188 1F             .
0189 3476             ( ../cmds/Menu.asm):00101         start      pshs   U,Y,X,D                                               * 0189 34 76          4v
018B 103F0C           ( ../cmds/Menu.asm):00102                    os9    F$ID                                                  * 018B 10 3F 0C       .?.
018E 10AFC813         ( ../cmds/Menu.asm):00103                    sty    <U0013,U                                              * 018E 10 AF C8 13    ./H.
0192 3576             ( ../cmds/Menu.asm):00104                    puls   U,Y,X,D                                               * 0192 35 76          5v
0194 CC0A0D           ( ../cmds/Menu.asm):00105                    ldd    #2573                                                 * 0194 CC 0A 0D       L..
0197 EDC90E73         ( ../cmds/Menu.asm):00106                    std    >U0E73,U                                              * 0197 ED C9 0E 73    mI.s
019B 10AF4B           ( ../cmds/Menu.asm):00107                    sty    U000B,U                                               * 019B 10 AF 4B       ./K
019E 31C845           ( ../cmds/Menu.asm):00108                    leay   <U0045,U                                              * 019E 31 C8 45       1HE
01A1 A680             ( ../cmds/Menu.asm):00109         L01A1      lda    ,X+                                                   * 01A1 A6 80          &.
01A3 AC4B             ( ../cmds/Menu.asm):00110                    cmpx   U000B,U                                               * 01A3 AC 4B          ,K
01A5 102203DD         ( ../cmds/Menu.asm):00111                    lbhi   L0586                                                 * 01A5 10 22 03 DD    .".]
01A9 A7A0             ( ../cmds/Menu.asm):00112                    sta    ,Y+                                                   * 01A9 A7 A0          '
01AB 8120             ( ../cmds/Menu.asm):00113                    cmpa   #32                                                   * 01AB 81 20          .
01AD 26F2             ( ../cmds/Menu.asm):00114                    bne    L01A1                                                 * 01AD 26 F2          &r
01AF 860D             ( ../cmds/Menu.asm):00115                    lda    #13                                                   * 01AF 86 0D          ..
01B1 A73F             ( ../cmds/Menu.asm):00116                    sta    -$01,Y                                                * 01B1 A7 3F          '?
01B3 31C865           ( ../cmds/Menu.asm):00117                    leay   <U0065,U                                              * 01B3 31 C8 65       1He
01B6 A680             ( ../cmds/Menu.asm):00118         L01B6      lda    ,X+                                                   * 01B6 A6 80          &.
01B8 AC4B             ( ../cmds/Menu.asm):00119                    cmpx   U000B,U                                               * 01B8 AC 4B          ,K
01BA 102203C8         ( ../cmds/Menu.asm):00120                    lbhi   L0586                                                 * 01BA 10 22 03 C8    .".H
01BE A7A0             ( ../cmds/Menu.asm):00121                    sta    ,Y+                                                   * 01BE A7 A0          '
01C0 810D             ( ../cmds/Menu.asm):00122                    cmpa   #13                                                   * 01C0 81 0D          ..
01C2 26F2             ( ../cmds/Menu.asm):00123                    bne    L01B6                                                 * 01C2 26 F2          &r
01C4 308DFF45         ( ../cmds/Menu.asm):00124                    leax   >L010D,PC                                             * 01C4 30 8D FF 45    0..E
01C8 8601             ( ../cmds/Menu.asm):00125                    lda    #1                                                    * 01C8 86 01          ..
01CA 103F84           ( ../cmds/Menu.asm):00126                    os9    I$Open                                                * 01CA 10 3F 84       .?.
01CD 102500AB         ( ../cmds/Menu.asm):00127                    lbcs   L027C                                                 * 01CD 10 25 00 AB    .%.+
01D1 A7C4             ( ../cmds/Menu.asm):00128                    sta    U0000,U                                               * 01D1 A7 C4          'D
01D3 30C819           ( ../cmds/Menu.asm):00129         L01D3      leax   <U0019,U                                              * 01D3 30 C8 19       0H.
01D6 108E0020         ( ../cmds/Menu.asm):00130                    ldy    #32                                                   * 01D6 10 8E 00 20    ...
01DA A6C4             ( ../cmds/Menu.asm):00131                    lda    U0000,U                                               * 01DA A6 C4          &D
01DC 103F89           ( ../cmds/Menu.asm):00132                    os9    I$Read                                                * 01DC 10 3F 89       .?.
01DF 250B             ( ../cmds/Menu.asm):00133                    bcs    L01EC                                                 * 01DF 25 0B          %.
01E1 ECC813           ( ../cmds/Menu.asm):00134                    ldd    <U0013,U                                              * 01E1 EC C8 13       lH.
01E4 10A3C819         ( ../cmds/Menu.asm):00135                    cmpd   <U0019,U                                              * 01E4 10 A3 C8 19    .#H.
01E8 26E9             ( ../cmds/Menu.asm):00136                    bne    L01D3                                                 * 01E8 26 E9          &i
01EA 2008             ( ../cmds/Menu.asm):00137                    bra    L01F4                                                 * 01EA 20 08           .
01EC A6C4             ( ../cmds/Menu.asm):00138         L01EC      lda    U0000,U                                               * 01EC A6 C4          &D
01EE 103F8F           ( ../cmds/Menu.asm):00139                    os9    I$Close                                               * 01EE 10 3F 8F       .?.
01F1 160088           ( ../cmds/Menu.asm):00140                    lbra   L027C                                                 * 01F1 16 00 88       ...
01F4 ECC831           ( ../cmds/Menu.asm):00141         L01F4      ldd    <U0031,U                                              * 01F4 EC C8 31       lH1
01F7 10830000         ( ../cmds/Menu.asm):00142                    cmpd   #0                                                    * 01F7 10 83 00 00    ....
01FB 10270078         ( ../cmds/Menu.asm):00143                    lbeq   L0277                                                 * 01FB 10 27 00 78    .'.x
01FF E6C821           ( ../cmds/Menu.asm):00144                    ldb    <U0021,U                                              * 01FF E6 C8 21       fH!
0202 4F               ( ../cmds/Menu.asm):00145                    clra                                                         * 0202 4F             O
0203 E3C831           ( ../cmds/Menu.asm):00146                    addd   <U0031,U                                              * 0203 E3 C8 31       cH1
0206 1083003C         ( ../cmds/Menu.asm):00147                    cmpd   #60                                                   * 0206 10 83 00 3C    ...<
020A 2557             ( ../cmds/Menu.asm):00148                    bcs    L0263                                                 * 020A 25 57          %W
020C 83003C           ( ../cmds/Menu.asm):00149         L020C      subd   #60                                                   * 020C 83 00 3C       ..<
020F 3406             ( ../cmds/Menu.asm):00150                    pshs   D                                                     * 020F 34 06          4.
0211 A6C820           ( ../cmds/Menu.asm):00151                    lda    <U0020,U                                              * 0211 A6 C8 20       &H
0214 4C               ( ../cmds/Menu.asm):00152                    inca                                                         * 0214 4C             L
0215 8118             ( ../cmds/Menu.asm):00153                    cmpa   #24                                                   * 0215 81 18          ..
0217 253F             ( ../cmds/Menu.asm):00154                    bcs    L0258                                                 * 0217 25 3F          %?
0219 6FC820           ( ../cmds/Menu.asm):00155                    clr    <U0020,U                                              * 0219 6F C8 20       oH
021C A6C81F           ( ../cmds/Menu.asm):00156                    lda    <U001F,U                                              * 021C A6 C8 1F       &H.
021F 4C               ( ../cmds/Menu.asm):00157                    inca                                                         * 021F 4C             L
0220 308DFF59         ( ../cmds/Menu.asm):00158                    leax   >L017D,PC                                             * 0220 30 8D FF 59    0..Y
0224 E6C81E           ( ../cmds/Menu.asm):00159                    ldb    <U001E,U                                              * 0224 E6 C8 1E       fH.
0227 5A               ( ../cmds/Menu.asm):00160                    decb                                                         * 0227 5A             Z
0228 3085             ( ../cmds/Menu.asm):00161                    leax   B,X                                                   * 0228 30 85          0.
022A A184             ( ../cmds/Menu.asm):00162                    cmpa   0,X                                                   * 022A A1 84          !.
022C 2525             ( ../cmds/Menu.asm):00163                    bcs    L0253                                                 * 022C 25 25          %%
022E 8601             ( ../cmds/Menu.asm):00164                    lda    #1                                                    * 022E 86 01          ..
0230 A7C81F           ( ../cmds/Menu.asm):00165                    sta    <U001F,U                                              * 0230 A7 C8 1F       'H.
0233 A6C81E           ( ../cmds/Menu.asm):00166                    lda    <U001E,U                                              * 0233 A6 C8 1E       &H.
0236 4C               ( ../cmds/Menu.asm):00167                    inca                                                         * 0236 4C             L
0237 810C             ( ../cmds/Menu.asm):00168                    cmpa   #12                                                   * 0237 81 0C          ..
0239 2D13             ( ../cmds/Menu.asm):00169                    blt    L024E                                                 * 0239 2D 13          -.
023B 8601             ( ../cmds/Menu.asm):00170                    lda    #1                                                    * 023B 86 01          ..
023D A7C81E           ( ../cmds/Menu.asm):00171                    sta    <U001E,U                                              * 023D A7 C8 1E       'H.
0240 A6C81D           ( ../cmds/Menu.asm):00172                    lda    <U001D,U                                              * 0240 A6 C8 1D       &H.
0243 4C               ( ../cmds/Menu.asm):00173                    inca                                                         * 0243 4C             L
0244 8164             ( ../cmds/Menu.asm):00174                    cmpa   #100                                                  * 0244 81 64          .d
0246 2501             ( ../cmds/Menu.asm):00175                    bcs    L0249                                                 * 0246 25 01          %.
0248 4F               ( ../cmds/Menu.asm):00176                    clra                                                         * 0248 4F             O
0249 A7C81D           ( ../cmds/Menu.asm):00177         L0249      sta    <U001D,U                                              * 0249 A7 C8 1D       'H.
024C 200D             ( ../cmds/Menu.asm):00178                    bra    L025B                                                 * 024C 20 0D           .
024E A7C81E           ( ../cmds/Menu.asm):00179         L024E      sta    <U001E,U                                              * 024E A7 C8 1E       'H.
0251 2008             ( ../cmds/Menu.asm):00180                    bra    L025B                                                 * 0251 20 08           .
0253 A7C81F           ( ../cmds/Menu.asm):00181         L0253      sta    <U001F,U                                              * 0253 A7 C8 1F       'H.
0256 2003             ( ../cmds/Menu.asm):00182                    bra    L025B                                                 * 0256 20 03           .
0258 A7C820           ( ../cmds/Menu.asm):00183         L0258      sta    <U0020,U                                              * 0258 A7 C8 20       'H
025B 3506             ( ../cmds/Menu.asm):00184         L025B      puls   D                                                     * 025B 35 06          5.
025D 1083003C         ( ../cmds/Menu.asm):00185                    cmpd   #60                                                   * 025D 10 83 00 3C    ...<
0261 24A9             ( ../cmds/Menu.asm):00186                    bcc    L020C                                                 * 0261 24 A9          $)
0263 E7C821           ( ../cmds/Menu.asm):00187         L0263      stb    <U0021,U                                              * 0263 E7 C8 21       gH!
0266 8606             ( ../cmds/Menu.asm):00188                    lda    #6                                                    * 0266 86 06          ..
0268 30C81D           ( ../cmds/Menu.asm):00189                    leax   <U001D,U                                              * 0268 30 C8 1D       0H.
026B 31C83F           ( ../cmds/Menu.asm):00190                    leay   <U003F,U                                              * 026B 31 C8 3F       1H?
026E E680             ( ../cmds/Menu.asm):00191         L026E      ldb    ,X+                                                   * 026E E6 80          f.
0270 E7A0             ( ../cmds/Menu.asm):00192                    stb    ,Y+                                                   * 0270 E7 A0          g
0272 4A               ( ../cmds/Menu.asm):00193                    deca                                                         * 0272 4A             J
0273 26F9             ( ../cmds/Menu.asm):00194                    bne    L026E                                                 * 0273 26 F9          &y
0275 2005             ( ../cmds/Menu.asm):00195                    bra    L027C                                                 * 0275 20 05           .
0277 8665             ( ../cmds/Menu.asm):00196         L0277      lda    #101                                                  * 0277 86 65          .e
0279 A7C83F           ( ../cmds/Menu.asm):00197                    sta    <U003F,U                                              * 0279 A7 C8 3F       'H?
027C 30C90153         ( ../cmds/Menu.asm):00198         L027C      leax   >U0153,U                                              * 027C 30 C9 01 53    0I.S
0280 AF45             ( ../cmds/Menu.asm):00199                    stx    U0005,U                                               * 0280 AF 45          /E
0282 30C901F3         ( ../cmds/Menu.asm):00200                    leax   >U01F3,U                                              * 0282 30 C9 01 F3    0I.s
0286 AF47             ( ../cmds/Menu.asm):00201                    stx    U0007,U                                               * 0286 AF 47          /G
0288 30C9017B         ( ../cmds/Menu.asm):00202                    leax   >U017B,U                                              * 0288 30 C9 01 7B    0I.{
028C AF49             ( ../cmds/Menu.asm):00203                    stx    U0009,U                                               * 028C AF 49          /I
028E 30C865           ( ../cmds/Menu.asm):00204                    leax   <U0065,U                                              * 028E 30 C8 65       0He
0291 8601             ( ../cmds/Menu.asm):00205                    lda    #1                                                    * 0291 86 01          ..
0293 103F84           ( ../cmds/Menu.asm):00206                    os9    I$Open                                                * 0293 10 3F 84       .?.
0296 102502FA         ( ../cmds/Menu.asm):00207                    lbcs   L0594                                                 * 0296 10 25 02 FA    .%.z
029A A742             ( ../cmds/Menu.asm):00208                    sta    U0002,U                                               * 029A A7 42          'B
029C AE45             ( ../cmds/Menu.asm):00209         L029C      ldx    U0005,U                                               * 029C AE 45          .E
029E 108E0001         ( ../cmds/Menu.asm):00210                    ldy    #1                                                    * 029E 10 8E 00 01    ....
02A2 103F89           ( ../cmds/Menu.asm):00211                    os9    I$Read                                                * 02A2 10 3F 89       .?.
02A5 E684             ( ../cmds/Menu.asm):00212                    ldb    0,X                                                   * 02A5 E6 84          f.
02A7 C12F             ( ../cmds/Menu.asm):00213                    cmpb   #47                                                   * 02A7 C1 2F          A/
02A9 2749             ( ../cmds/Menu.asm):00214                    beq    L02F4                                                 * 02A9 27 49          'I
02AB C13E             ( ../cmds/Menu.asm):00215                    cmpb   #62                                                   * 02AB C1 3E          A>
02AD 102700FA         ( ../cmds/Menu.asm):00216                    lbeq   L03AB                                                 * 02AD 10 27 00 FA    .'.z
02B1 C13C             ( ../cmds/Menu.asm):00217                    cmpb   #60                                                   * 02B1 C1 3C          A<
02B3 102700F4         ( ../cmds/Menu.asm):00218                    lbeq   L03AB                                                 * 02B3 10 27 00 F4    .'.t
02B7 C13D             ( ../cmds/Menu.asm):00219                    cmpb   #61                                                   * 02B7 C1 3D          A=
02B9 102700EE         ( ../cmds/Menu.asm):00220                    lbeq   L03AB                                                 * 02B9 10 27 00 EE    .'.n
02BD 10AE49           ( ../cmds/Menu.asm):00221                    ldy    U0009,U                                               * 02BD 10 AE 49       ..I
02C0 3406             ( ../cmds/Menu.asm):00222                    pshs   D                                                     * 02C0 34 06          4.
02C2 862D             ( ../cmds/Menu.asm):00223                    lda    #45                                                   * 02C2 86 2D          .-
02C4 A7A0             ( ../cmds/Menu.asm):00224                    sta    ,Y+                                                   * 02C4 A7 A0          '
02C6 CCFFFF           ( ../cmds/Menu.asm):00225                    ldd    #-1                                                   * 02C6 CC FF FF       L..
02C9 EDA1             ( ../cmds/Menu.asm):00226                    std    ,Y++                                                  * 02C9 ED A1          m!
02CB 3506             ( ../cmds/Menu.asm):00227                    puls   D                                                     * 02CB 35 06          5.
02CD 10AF49           ( ../cmds/Menu.asm):00228                    sty    U0009,U                                               * 02CD 10 AF 49       ./I
02D0 C161             ( ../cmds/Menu.asm):00229         L02D0      cmpb   #97                                                   * 02D0 C1 61          Aa
02D2 2504             ( ../cmds/Menu.asm):00230                    bcs    L02D8                                                 * 02D2 25 04          %.
02D4 C4DF             ( ../cmds/Menu.asm):00231                    andb   #223                                                  * 02D4 C4 DF          D_
02D6 E784             ( ../cmds/Menu.asm):00232                    stb    0,X                                                   * 02D6 E7 84          g.
02D8 3001             ( ../cmds/Menu.asm):00233         L02D8      leax   $01,X                                                 * 02D8 30 01          0.
02DA AF45             ( ../cmds/Menu.asm):00234                    stx    U0005,U                                               * 02DA AF 45          /E
02DC AE47             ( ../cmds/Menu.asm):00235                    ldx    U0007,U                                               * 02DC AE 47          .G
02DE 108E0050         ( ../cmds/Menu.asm):00236                    ldy    #80                                                   * 02DE 10 8E 00 50    ...P
02E2 103F8B           ( ../cmds/Menu.asm):00237                    os9    I$ReadLn                                              * 02E2 10 3F 8B       .?.
02E5 102502AB         ( ../cmds/Menu.asm):00238                    lbcs   L0594                                                 * 02E5 10 25 02 AB    .%.+
02E9 10AF884E         ( ../cmds/Menu.asm):00239                    sty    <$004E,X                                              * 02E9 10 AF 88 4E    ./.N
02ED 308850           ( ../cmds/Menu.asm):00240                    leax   <$0050,X                                              * 02ED 30 88 50       0.P
02F0 AF47             ( ../cmds/Menu.asm):00241                    stx    U0007,U                                               * 02F0 AF 47          /G
02F2 20A8             ( ../cmds/Menu.asm):00242                    bra    L029C                                                 * 02F2 20 A8           (
02F4 30C90E75         ( ../cmds/Menu.asm):00243         L02F4      leax   >U0E75,U                                              * 02F4 30 C9 0E 75    0I.u
02F8 108E0050         ( ../cmds/Menu.asm):00244                    ldy    #80                                                   * 02F8 10 8E 00 50    ...P
02FC 103F8B           ( ../cmds/Menu.asm):00245                    os9    I$ReadLn                                              * 02FC 10 3F 8B       .?.
02FF 10250291         ( ../cmds/Menu.asm):00246                    lbcs   L0594                                                 * 02FF 10 25 02 91    .%..
0303 10AFC811         ( ../cmds/Menu.asm):00247                    sty    <U0011,U                                              * 0303 10 AF C8 11    ./H.
0307 AE45             ( ../cmds/Menu.asm):00248                    ldx    U0005,U                                               * 0307 AE 45          .E
0309 86FF             ( ../cmds/Menu.asm):00249                    lda    #255                                                  * 0309 86 FF          ..
030B A784             ( ../cmds/Menu.asm):00250                    sta    0,X                                                   * 030B A7 84          '.
030D A642             ( ../cmds/Menu.asm):00251                    lda    U0002,U                                               * 030D A6 42          &B
030F 103F8F           ( ../cmds/Menu.asm):00252                    os9    I$Close                                               * 030F 10 3F 8F       .?.
0312 1025027E         ( ../cmds/Menu.asm):00253                    lbcs   L0594                                                 * 0312 10 25 02 7E    .%.~
0316 30C845           ( ../cmds/Menu.asm):00254                    leax   <U0045,U                                              * 0316 30 C8 45       0HE
0319 8601             ( ../cmds/Menu.asm):00255                    lda    #1                                                    * 0319 86 01          ..
031B 103F84           ( ../cmds/Menu.asm):00256                    os9    I$Open                                                * 031B 10 3F 84       .?.
031E 10250272         ( ../cmds/Menu.asm):00257                    lbcs   L0594                                                 * 031E 10 25 02 72    .%.r
0322 A741             ( ../cmds/Menu.asm):00258                    sta    U0001,U                                               * 0322 A7 41          'A
0324 30C90EC5         ( ../cmds/Menu.asm):00259                    leax   >U0EC5,U                                              * 0324 30 C9 0E C5    0I.E
0328 108E0FA0         ( ../cmds/Menu.asm):00260                    ldy    #4000                                                 * 0328 10 8E 0F A0    ...
032C A641             ( ../cmds/Menu.asm):00261                    lda    U0001,U                                               * 032C A6 41          &A
032E 103F89           ( ../cmds/Menu.asm):00262                    os9    I$Read                                                * 032E 10 3F 89       .?.
0331 10AFC815         ( ../cmds/Menu.asm):00263                    sty    <U0015,U                                              * 0331 10 AF C8 15    ./H.
0335 1025025B         ( ../cmds/Menu.asm):00264                    lbcs   L0594                                                 * 0335 10 25 02 5B    .%.[
0339 103F8F           ( ../cmds/Menu.asm):00265                    os9    I$Close                                               * 0339 10 3F 8F       .?.
033C AF4B             ( ../cmds/Menu.asm):00266                    stx    U000B,U                                               * 033C AF 4B          /K
033E 1F20             ( ../cmds/Menu.asm):00267                    tfr    Y,D                                                   * 033E 1F 20          .
0340 308B             ( ../cmds/Menu.asm):00268                    leax   D,X                                                   * 0340 30 8B          0.
0342 AF4F             ( ../cmds/Menu.asm):00269                    stx    U000F,U                                               * 0342 AF 4F          /O
0344 AE4B             ( ../cmds/Menu.asm):00270                    ldx    U000B,U                                               * 0344 AE 4B          .K
0346 108E0001         ( ../cmds/Menu.asm):00271                    ldy    #1                                                    * 0346 10 8E 00 01    ....
034A 3410             ( ../cmds/Menu.asm):00272         L034A      pshs   X                                                     * 034A 34 10          4.
034C 8601             ( ../cmds/Menu.asm):00273                    lda    #1                                                    * 034C 86 01          ..
034E C601             ( ../cmds/Menu.asm):00274                    ldb    #1                                                    * 034E C6 01          F.
0350 103F8D           ( ../cmds/Menu.asm):00275                    os9    I$GetStt                                              * 0350 10 3F 8D       .?.
0353 102400E9         ( ../cmds/Menu.asm):00276                    lbcc   L0440                                                 * 0353 10 24 00 E9    .$.i
0357 10AEC815         ( ../cmds/Menu.asm):00277                    ldy    <U0015,U                                              * 0357 10 AE C8 15    ..H.
035B AEE4             ( ../cmds/Menu.asm):00278                    ldx    0,S                                                   * 035B AE E4          .d
035D A680             ( ../cmds/Menu.asm):00279         L035D      lda    ,X+                                                   * 035D A6 80          &.
035F 810D             ( ../cmds/Menu.asm):00280                    cmpa   #13                                                   * 035F 81 0D          ..
0361 2711             ( ../cmds/Menu.asm):00281                    beq    L0374                                                 * 0361 27 11          '.
0363 313F             ( ../cmds/Menu.asm):00282                    leay   -$01,Y                                                * 0363 31 3F          1?
0365 26F6             ( ../cmds/Menu.asm):00283                    bne    L035D                                                 * 0365 26 F6          &v
0367 3510             ( ../cmds/Menu.asm):00284                    puls   X                                                     * 0367 35 10          5.
0369 8601             ( ../cmds/Menu.asm):00285                    lda    #1                                                    * 0369 86 01          ..
036B 10AEC815         ( ../cmds/Menu.asm):00286                    ldy    <U0015,U                                              * 036B 10 AE C8 15    ..H.
036F 103F8A           ( ../cmds/Menu.asm):00287                    os9    I$Write                                               * 036F 10 3F 8A       .?.
0372 200B             ( ../cmds/Menu.asm):00288                    bra    L037F                                                 * 0372 20 0B           .
0374 3510             ( ../cmds/Menu.asm):00289         L0374      puls   X                                                     * 0374 35 10          5.
0376 8601             ( ../cmds/Menu.asm):00290                    lda    #1                                                    * 0376 86 01          ..
0378 10AEC815         ( ../cmds/Menu.asm):00291                    ldy    <U0015,U                                              * 0378 10 AE C8 15    ..H.
037C 103F8C           ( ../cmds/Menu.asm):00292                    os9    I$WritLn                                              * 037C 10 3F 8C       .?.
037F 10250211         ( ../cmds/Menu.asm):00293         L037F      lbcs   L0594                                                 * 037F 10 25 02 11    .%..
0383 3420             ( ../cmds/Menu.asm):00294                    pshs   Y                                                     * 0383 34 20          4
0385 ECC815           ( ../cmds/Menu.asm):00295                    ldd    <U0015,U                                              * 0385 EC C8 15       lH.
0388 A3E4             ( ../cmds/Menu.asm):00296                    subd   0,S                                                   * 0388 A3 E4          #d
038A EDC815           ( ../cmds/Menu.asm):00297                    std    <U0015,U                                              * 038A ED C8 15       mH.
038D 10830000         ( ../cmds/Menu.asm):00298                    cmpd   #0                                                    * 038D 10 83 00 00    ....
0391 2F15             ( ../cmds/Menu.asm):00299                    ble    L03A8                                                 * 0391 2F 15          /.
0393 3506             ( ../cmds/Menu.asm):00300                    puls   D                                                     * 0393 35 06          5.
0395 308B             ( ../cmds/Menu.asm):00301                    leax   D,X                                                   * 0395 30 8B          0.
0397 8601             ( ../cmds/Menu.asm):00302                    lda    #1                                                    * 0397 86 01          ..
0399 C601             ( ../cmds/Menu.asm):00303                    ldb    #1                                                    * 0399 C6 01          F.
039B 103F8D           ( ../cmds/Menu.asm):00304                    os9    I$GetStt                                              * 039B 10 3F 8D       .?.
039E 1024009E         ( ../cmds/Menu.asm):00305                    lbcc   L0440                                                 * 039E 10 24 00 9E    .$..
03A2 AC4F             ( ../cmds/Menu.asm):00306                    cmpx   U000F,U                                               * 03A2 AC 4F          ,O
03A4 2202             ( ../cmds/Menu.asm):00307                    bhi    L03A8                                                 * 03A4 22 02          ".
03A6 20A2             ( ../cmds/Menu.asm):00308                    bra    L034A                                                 * 03A6 20 A2           "
03A8 16004E           ( ../cmds/Menu.asm):00309         L03A8      lbra   L03F9                                                 * 03A8 16 00 4E       ..N
03AB 3412             ( ../cmds/Menu.asm):00310         L03AB      pshs   X,A                                                   * 03AB 34 12          4.
03AD 10AE49           ( ../cmds/Menu.asm):00311                    ldy    U0009,U                                               * 03AD 10 AE 49       ..I
03B0 E7A0             ( ../cmds/Menu.asm):00312                    stb    ,Y+                                                   * 03B0 E7 A0          g
03B2 30C90085         ( ../cmds/Menu.asm):00313                    leax   >U0085,U                                              * 03B2 30 C9 00 85    0I..
03B6 3420             ( ../cmds/Menu.asm):00314                    pshs   Y                                                     * 03B6 34 20          4
03B8 108E0006         ( ../cmds/Menu.asm):00315                    ldy    #6                                                    * 03B8 10 8E 00 06    ....
03BC 103F89           ( ../cmds/Menu.asm):00316                    os9    I$Read                                                * 03BC 10 3F 89       .?.
03BF 30C90085         ( ../cmds/Menu.asm):00317                    leax   >U0085,U                                              * 03BF 30 C9 00 85    0I..
03C3 1701D1           ( ../cmds/Menu.asm):00318                    lbsr   L0597                                                 * 03C3 17 01 D1       ..Q
03C6 3520             ( ../cmds/Menu.asm):00319                    puls   Y                                                     * 03C6 35 20          5
03C8 EDA1             ( ../cmds/Menu.asm):00320                    std    ,Y++                                                  * 03C8 ED A1          m!
03CA 10AF49           ( ../cmds/Menu.asm):00321                    sty    U0009,U                                               * 03CA 10 AF 49       ./I
03CD 3512             ( ../cmds/Menu.asm):00322                    puls   X,A                                                   * 03CD 35 12          5.
03CF 108E0001         ( ../cmds/Menu.asm):00323                    ldy    #1                                                    * 03CF 10 8E 00 01    ....
03D3 103F89           ( ../cmds/Menu.asm):00324                    os9    I$Read                                                * 03D3 10 3F 89       .?.
03D6 E684             ( ../cmds/Menu.asm):00325                    ldb    0,X                                                   * 03D6 E6 84          f.
03D8 16FEF5           ( ../cmds/Menu.asm):00326                    lbra   L02D0                                                 * 03D8 16 FE F5       .~u
03DB 308DFD44         ( ../cmds/Menu.asm):00327         L03DB      leax   >L0123,PC                                             * 03DB 30 8D FD 44    0.}D
03DF 108E00C8         ( ../cmds/Menu.asm):00328                    ldy    #200                                                  * 03DF 10 8E 00 C8    ...H
03E3 8601             ( ../cmds/Menu.asm):00329                    lda    #1                                                    * 03E3 86 01          ..
03E5 103F8C           ( ../cmds/Menu.asm):00330                    os9    I$WritLn                                              * 03E5 10 3F 8C       .?.
03E8 160197           ( ../cmds/Menu.asm):00331                    lbra   L0582                                                 * 03E8 16 01 97       ...
03EB 308DFD5A         ( ../cmds/Menu.asm):00332         L03EB      leax   >L0149,PC                                             * 03EB 30 8D FD 5A    0.}Z
03EF 108E00C8         ( ../cmds/Menu.asm):00333                    ldy    #200                                                  * 03EF 10 8E 00 C8    ...H
03F3 8601             ( ../cmds/Menu.asm):00334                    lda    #1                                                    * 03F3 86 01          ..
03F5 103F8C           ( ../cmds/Menu.asm):00335                    os9    I$WritLn                                              * 03F5 10 3F 8C       .?.
03F8 39               ( ../cmds/Menu.asm):00336                    rts                                                          * 03F8 39             9
03F9 30C839           ( ../cmds/Menu.asm):00337         L03F9      leax   <U0039,U                                              * 03F9 30 C8 39       0H9
03FC 103F15           ( ../cmds/Menu.asm):00338                    os9    F$Time                                                * 03FC 10 3F 15       .?.
03FF C606             ( ../cmds/Menu.asm):00339                    ldb    #6                                                    * 03FF C6 06          F.
0401 30C839           ( ../cmds/Menu.asm):00340                    leax   <U0039,U                                              * 0401 30 C8 39       0H9
0404 31C83F           ( ../cmds/Menu.asm):00341                    leay   <U003F,U                                              * 0404 31 C8 3F       1H?
0407 A680             ( ../cmds/Menu.asm):00342         L0407      lda    ,X+                                                   * 0407 A6 80          &.
0409 A1A0             ( ../cmds/Menu.asm):00343                    cmpa   ,Y+                                                   * 0409 A1 A0          !
040B 1022FFCC         ( ../cmds/Menu.asm):00344                    lbhi   L03DB                                                 * 040B 10 22 FF CC    .".L
040F 2503             ( ../cmds/Menu.asm):00345                    bcs    L0414                                                 * 040F 25 03          %.
0411 5A               ( ../cmds/Menu.asm):00346                    decb                                                         * 0411 5A             Z
0412 26F3             ( ../cmds/Menu.asm):00347                    bne    L0407                                                 * 0412 26 F3          &s
0414 C103             ( ../cmds/Menu.asm):00348         L0414      cmpb   #3                                                    * 0414 C1 03          A.
0416 2E19             ( ../cmds/Menu.asm):00349                    bgt    L0431                                                 * 0416 2E 19          ..
0418 ECC83C           ( ../cmds/Menu.asm):00350                    ldd    <U003C,U                                              * 0418 EC C8 3C       lH<
041B CB05             ( ../cmds/Menu.asm):00351                    addb   #5                                                    * 041B CB 05          K.
041D C13C             ( ../cmds/Menu.asm):00352                    cmpb   #60                                                   * 041D C1 3C          A<
041F 2508             ( ../cmds/Menu.asm):00353                    bcs    L0429                                                 * 041F 25 08          %.
0421 C03C             ( ../cmds/Menu.asm):00354                    subb   #60                                                   * 0421 C0 3C          @<
0423 4C               ( ../cmds/Menu.asm):00355                    inca                                                         * 0423 4C             L
0424 8118             ( ../cmds/Menu.asm):00356                    cmpa   #24                                                   * 0424 81 18          ..
0426 2501             ( ../cmds/Menu.asm):00357                    bcs    L0429                                                 * 0426 25 01          %.
0428 4F               ( ../cmds/Menu.asm):00358                    clra                                                         * 0428 4F             O
0429 10A3C842         ( ../cmds/Menu.asm):00359         L0429      cmpd   <U0042,U                                              * 0429 10 A3 C8 42    .#HB
042D 2302             ( ../cmds/Menu.asm):00360                    bls    L0431                                                 * 042D 23 02          #.
042F 8DBA             ( ../cmds/Menu.asm):00361                    bsr    L03EB                                                 * 042F 8D BA          .:
0431 30C90E75         ( ../cmds/Menu.asm):00362         L0431      leax   >U0E75,U                                              * 0431 30 C9 0E 75    0I.u
0435 10AEC811         ( ../cmds/Menu.asm):00363                    ldy    <U0011,U                                              * 0435 10 AE C8 11    ..H.
0439 313F             ( ../cmds/Menu.asm):00364                    leay   -$01,Y                                                * 0439 31 3F          1?
043B 8601             ( ../cmds/Menu.asm):00365                    lda    #1                                                    * 043B 86 01          ..
043D 103F8A           ( ../cmds/Menu.asm):00366                    os9    I$Write                                               * 043D 10 3F 8A       .?.
0440 3043             ( ../cmds/Menu.asm):00367         L0440      leax   U0003,U                                               * 0440 30 43          0C
0442 108E0001         ( ../cmds/Menu.asm):00368                    ldy    #1                                                    * 0442 10 8E 00 01    ....
0446 4F               ( ../cmds/Menu.asm):00369                    clra                                                         * 0446 4F             O
0447 103F89           ( ../cmds/Menu.asm):00370                    os9    I$Read                                                * 0447 10 3F 89       .?.
044A 108E0002         ( ../cmds/Menu.asm):00371                    ldy    #2                                                    * 044A 10 8E 00 02    ....
044E 8601             ( ../cmds/Menu.asm):00372                    lda    #1                                                    * 044E 86 01          ..
0450 3410             ( ../cmds/Menu.asm):00373                    pshs   X                                                     * 0450 34 10          4.
0452 308DFC51         ( ../cmds/Menu.asm):00374                    leax   >L00A7,PC                                             * 0452 30 8D FC 51    0.|Q
0456 103F8C           ( ../cmds/Menu.asm):00375                    os9    I$WritLn                                              * 0456 10 3F 8C       .?.
0459 3510             ( ../cmds/Menu.asm):00376                    puls   X                                                     * 0459 35 10          5.
045B A684             ( ../cmds/Menu.asm):00377                    lda    0,X                                                   * 045B A6 84          &.
045D 813F             ( ../cmds/Menu.asm):00378                    cmpa   #63                                                   * 045D 81 3F          .?
045F 1027FE19         ( ../cmds/Menu.asm):00379                    lbeq   L027C                                                 * 045F 10 27 FE 19    .'~.
0463 8161             ( ../cmds/Menu.asm):00380                    cmpa   #97                                                   * 0463 81 61          .a
0465 2504             ( ../cmds/Menu.asm):00381                    bcs    L046B                                                 * 0465 25 04          %.
0467 84DF             ( ../cmds/Menu.asm):00382                    anda   #223                                                  * 0467 84 DF          ._
0469 A784             ( ../cmds/Menu.asm):00383                    sta    0,X                                                   * 0469 A7 84          '.
046B A684             ( ../cmds/Menu.asm):00384         L046B      lda    0,X                                                   * 046B A6 84          &.
046D 30C90153         ( ../cmds/Menu.asm):00385                    leax   >U0153,U                                              * 046D 30 C9 01 53    0I.S
0471 5F               ( ../cmds/Menu.asm):00386                    clrb                                                         * 0471 5F             _
0472 6D84             ( ../cmds/Menu.asm):00387         L0472      tst    0,X                                                   * 0472 6D 84          m.
0474 2B83             ( ../cmds/Menu.asm):00388                    bmi    L03F9                                                 * 0474 2B 83          +.
0476 A180             ( ../cmds/Menu.asm):00389                    cmpa   ,X+                                                   * 0476 A1 80          !.
0478 2708             ( ../cmds/Menu.asm):00390                    beq    L0482                                                 * 0478 27 08          '.
047A 5C               ( ../cmds/Menu.asm):00391                    incb                                                         * 047A 5C             \
047B C128             ( ../cmds/Menu.asm):00392                    cmpb   #40                                                   * 047B C1 28          A(
047D 23F3             ( ../cmds/Menu.asm):00393                    bls    L0472                                                 * 047D 23 F3          #s
047F 16FF77           ( ../cmds/Menu.asm):00394                    lbra   L03F9                                                 * 047F 16 FF 77       ..w
0482 3404             ( ../cmds/Menu.asm):00395         L0482      pshs   B                                                     * 0482 34 04          4.
0484 8603             ( ../cmds/Menu.asm):00396                    lda    #3                                                    * 0484 86 03          ..
0486 3D               ( ../cmds/Menu.asm):00397                    mul                                                          * 0486 3D             =
0487 30C9017B         ( ../cmds/Menu.asm):00398                    leax   >U017B,U                                              * 0487 30 C9 01 7B    0I.{
048B 308B             ( ../cmds/Menu.asm):00399                    leax   D,X                                                   * 048B 30 8B          0.
048D A680             ( ../cmds/Menu.asm):00400                    lda    ,X+                                                   * 048D A6 80          &.
048F 813C             ( ../cmds/Menu.asm):00401                    cmpa   #60                                                   * 048F 81 3C          .<
0491 274C             ( ../cmds/Menu.asm):00402                    beq    L04DF                                                 * 0491 27 4C          'L
0493 813E             ( ../cmds/Menu.asm):00403                    cmpa   #62                                                   * 0493 81 3E          .>
0495 2758             ( ../cmds/Menu.asm):00404                    beq    L04EF                                                 * 0495 27 58          'X
0497 813D             ( ../cmds/Menu.asm):00405                    cmpa   #61                                                   * 0497 81 3D          .=
0499 2764             ( ../cmds/Menu.asm):00406                    beq    L04FF                                                 * 0499 27 64          'd
049B 3504             ( ../cmds/Menu.asm):00407         L049B      puls   B                                                     * 049B 35 04          5.
049D 8650             ( ../cmds/Menu.asm):00408                    lda    #80                                                   * 049D 86 50          .P
049F 3D               ( ../cmds/Menu.asm):00409                    mul                                                          * 049F 3D             =
04A0 3440             ( ../cmds/Menu.asm):00410                    pshs   U                                                     * 04A0 34 40          4@
04A2 33C901F3         ( ../cmds/Menu.asm):00411                    leau   >U01F3,U                                              * 04A2 33 C9 01 F3    3I.s
04A6 33CB             ( ../cmds/Menu.asm):00412                    leau   D,U                                                   * 04A6 33 CB          3K
04A8 A641             ( ../cmds/Menu.asm):00413                    lda    U0001,U                                               * 04A8 A6 41          &A
04AA 84DF             ( ../cmds/Menu.asm):00414                    anda   #223                                                  * 04AA 84 DF          ._
04AC 8143             ( ../cmds/Menu.asm):00415                    cmpa   #67                                                   * 04AC 81 43          .C
04AE 261C             ( ../cmds/Menu.asm):00416                    bne    L04CC                                                 * 04AE 26 1C          &.
04B0 A642             ( ../cmds/Menu.asm):00417                    lda    U0002,U                                               * 04B0 A6 42          &B
04B2 84DF             ( ../cmds/Menu.asm):00418                    anda   #223                                                  * 04B2 84 DF          ._
04B4 8148             ( ../cmds/Menu.asm):00419                    cmpa   #72                                                   * 04B4 81 48          .H
04B6 2614             ( ../cmds/Menu.asm):00420                    bne    L04CC                                                 * 04B6 26 14          &.
04B8 A643             ( ../cmds/Menu.asm):00421                    lda    U0003,U                                               * 04B8 A6 43          &C
04BA 84DF             ( ../cmds/Menu.asm):00422                    anda   #223                                                  * 04BA 84 DF          ._
04BC 814D             ( ../cmds/Menu.asm):00423                    cmpa   #77                                                   * 04BC 81 4D          .M
04BE 10270095         ( ../cmds/Menu.asm):00424                    lbeq   L0557                                                 * 04BE 10 27 00 95    .'..
04C2 8158             ( ../cmds/Menu.asm):00425                    cmpa   #88                                                   * 04C2 81 58          .X
04C4 10270081         ( ../cmds/Menu.asm):00426                    lbeq   L0549                                                 * 04C4 10 27 00 81    .'..
04C8 8144             ( ../cmds/Menu.asm):00427                    cmpa   #68                                                   * 04C8 81 44          .D
04CA 276F             ( ../cmds/Menu.asm):00428                    beq    L053B                                                 * 04CA 27 6F          'o
04CC A641             ( ../cmds/Menu.asm):00429         L04CC      lda    U0001,U                                               * 04CC A6 41          &A
04CE 84DF             ( ../cmds/Menu.asm):00430                    anda   #223                                                  * 04CE 84 DF          ._
04D0 8145             ( ../cmds/Menu.asm):00431                    cmpa   #69                                                   * 04D0 81 45          .E
04D2 264B             ( ../cmds/Menu.asm):00432                    bne    L051F                                                 * 04D2 26 4B          &K
04D4 A642             ( ../cmds/Menu.asm):00433                    lda    U0002,U                                               * 04D4 A6 42          &B
04D6 84DF             ( ../cmds/Menu.asm):00434                    anda   #223                                                  * 04D6 84 DF          ._
04D8 8158             ( ../cmds/Menu.asm):00435                    cmpa   #88                                                   * 04D8 81 58          .X
04DA 2643             ( ../cmds/Menu.asm):00436                    bne    L051F                                                 * 04DA 26 43          &C
04DC 1600A3           ( ../cmds/Menu.asm):00437                    lbra   L0582                                                 * 04DC 16 00 A3       ..#
04DF ECC813           ( ../cmds/Menu.asm):00438         L04DF      ldd    <U0013,U                                              * 04DF EC C8 13       lH.
04E2 1027FFB5         ( ../cmds/Menu.asm):00439                    lbeq   L049B                                                 * 04E2 10 27 FF B5    .'.5
04E6 10A384           ( ../cmds/Menu.asm):00440                    cmpd   0,X                                                   * 04E6 10 A3 84       .#.
04E9 1025FFAE         ( ../cmds/Menu.asm):00441                    lbcs   L049B                                                 * 04E9 10 25 FF AE    .%..
04ED 201E             ( ../cmds/Menu.asm):00442                    bra    L050D                                                 * 04ED 20 1E           .
04EF ECC813           ( ../cmds/Menu.asm):00443         L04EF      ldd    <U0013,U                                              * 04EF EC C8 13       lH.
04F2 1027FFA5         ( ../cmds/Menu.asm):00444                    lbeq   L049B                                                 * 04F2 10 27 FF A5    .'.%
04F6 10A384           ( ../cmds/Menu.asm):00445                    cmpd   0,X                                                   * 04F6 10 A3 84       .#.
04F9 1022FF9E         ( ../cmds/Menu.asm):00446                    lbhi   L049B                                                 * 04F9 10 22 FF 9E    ."..
04FD 200E             ( ../cmds/Menu.asm):00447                    bra    L050D                                                 * 04FD 20 0E           .
04FF ECC813           ( ../cmds/Menu.asm):00448         L04FF      ldd    <U0013,U                                              * 04FF EC C8 13       lH.
0502 1027FF95         ( ../cmds/Menu.asm):00449                    lbeq   L049B                                                 * 0502 10 27 FF 95    .'..
0506 10A384           ( ../cmds/Menu.asm):00450                    cmpd   0,X                                                   * 0506 10 A3 84       .#.
0509 1027FF8E         ( ../cmds/Menu.asm):00451                    lbeq   L049B                                                 * 0509 10 27 FF 8E    .'..
050D 308DFB99         ( ../cmds/Menu.asm):00452         L050D      leax   >L00AA,PC                                             * 050D 30 8D FB 99    0.{.
0511 108E00C8         ( ../cmds/Menu.asm):00453                    ldy    #200                                                  * 0511 10 8E 00 C8    ...H
0515 8601             ( ../cmds/Menu.asm):00454                    lda    #1                                                    * 0515 86 01          ..
0517 103F8C           ( ../cmds/Menu.asm):00455                    os9    I$WritLn                                              * 0517 10 3F 8C       .?.
051A 3504             ( ../cmds/Menu.asm):00456                    puls   B                                                     * 051A 35 04          5.
051C 16FEDA           ( ../cmds/Menu.asm):00457                    lbra   L03F9                                                 * 051C 16 FE DA       .~Z
051F 10AEC84E         ( ../cmds/Menu.asm):00458         L051F      ldy    <U004E,U                                              * 051F 10 AE C8 4E    ..HN
0523 308DFB55         ( ../cmds/Menu.asm):00459                    leax   >L007C,PC                                             * 0523 30 8D FB 55    0.{U
0527 C603             ( ../cmds/Menu.asm):00460                    ldb    #3                                                    * 0527 C6 03          F.
0529 8611             ( ../cmds/Menu.asm):00461                    lda    #17                                                   * 0529 86 11          ..
052B 103F03           ( ../cmds/Menu.asm):00462                    os9    F$Fork                                                * 052B 10 3F 03       .?.
052E 3540             ( ../cmds/Menu.asm):00463                    puls   U                                                     * 052E 35 40          5@
0530 2403             ( ../cmds/Menu.asm):00464                    bcc    L0535                                                 * 0530 24 03          $.
0532 103F0F           ( ../cmds/Menu.asm):00465                    os9    F$PErr                                                * 0532 10 3F 0F       .?.
0535 103F04           ( ../cmds/Menu.asm):00466         L0535      os9    F$Wait                                                * 0535 10 3F 04       .?.
0538 16FEBE           ( ../cmds/Menu.asm):00467                    lbra   L03F9                                                 * 0538 16 FE BE       .~>
053B 1F31             ( ../cmds/Menu.asm):00468         L053B      tfr    U,X                                                   * 053B 1F 31          .1
053D 3540             ( ../cmds/Menu.asm):00469                    puls   U                                                     * 053D 35 40          5@
053F 3004             ( ../cmds/Menu.asm):00470                    leax   $04,X                                                 * 053F 30 04          0.
0541 8601             ( ../cmds/Menu.asm):00471                    lda    #1                                                    * 0541 86 01          ..
0543 103F86           ( ../cmds/Menu.asm):00472                    os9    I$ChgDir                                              * 0543 10 3F 86       .?.
0546 16FD33           ( ../cmds/Menu.asm):00473                    lbra   L027C                                                 * 0546 16 FD 33       .}3
0549 1F31             ( ../cmds/Menu.asm):00474         L0549      tfr    U,X                                                   * 0549 1F 31          .1
054B 3540             ( ../cmds/Menu.asm):00475                    puls   U                                                     * 054B 35 40          5@
054D 3004             ( ../cmds/Menu.asm):00476                    leax   $04,X                                                 * 054D 30 04          0.
054F 8604             ( ../cmds/Menu.asm):00477                    lda    #4                                                    * 054F 86 04          ..
0551 103F86           ( ../cmds/Menu.asm):00478                    os9    I$ChgDir                                              * 0551 10 3F 86       .?.
0554 16FD25           ( ../cmds/Menu.asm):00479                    lbra   L027C                                                 * 0554 16 FD 25       .}%
0557 1F31             ( ../cmds/Menu.asm):00480         L0557      tfr    U,X                                                   * 0557 1F 31          .1
0559 3540             ( ../cmds/Menu.asm):00481                    puls   U                                                     * 0559 35 40          5@
055B 31C845           ( ../cmds/Menu.asm):00482                    leay   <U0045,U                                              * 055B 31 C8 45       1HE
055E 3004             ( ../cmds/Menu.asm):00483                    leax   $04,X                                                 * 055E 30 04          0.
0560 A680             ( ../cmds/Menu.asm):00484         L0560      lda    ,X+                                                   * 0560 A6 80          &.
0562 8120             ( ../cmds/Menu.asm):00485                    cmpa   #32                                                   * 0562 81 20          .
0564 27FA             ( ../cmds/Menu.asm):00486                    beq    L0560                                                 * 0564 27 FA          'z
0566 301F             ( ../cmds/Menu.asm):00487                    leax   -$01,X                                                * 0566 30 1F          0.
0568 A680             ( ../cmds/Menu.asm):00488         L0568      lda    ,X+                                                   * 0568 A6 80          &.
056A A7A0             ( ../cmds/Menu.asm):00489                    sta    ,Y+                                                   * 056A A7 A0          '
056C 8120             ( ../cmds/Menu.asm):00490                    cmpa   #32                                                   * 056C 81 20          .
056E 26F8             ( ../cmds/Menu.asm):00491                    bne    L0568                                                 * 056E 26 F8          &x
0570 860D             ( ../cmds/Menu.asm):00492                    lda    #13                                                   * 0570 86 0D          ..
0572 A73F             ( ../cmds/Menu.asm):00493                    sta    -$01,Y                                                * 0572 A7 3F          '?
0574 31C865           ( ../cmds/Menu.asm):00494                    leay   <U0065,U                                              * 0574 31 C8 65       1He
0577 A680             ( ../cmds/Menu.asm):00495         L0577      lda    ,X+                                                   * 0577 A6 80          &.
0579 A7A0             ( ../cmds/Menu.asm):00496                    sta    ,Y+                                                   * 0579 A7 A0          '
057B 810D             ( ../cmds/Menu.asm):00497                    cmpa   #13                                                   * 057B 81 0D          ..
057D 26F8             ( ../cmds/Menu.asm):00498                    bne    L0577                                                 * 057D 26 F8          &x
057F 16FCFA           ( ../cmds/Menu.asm):00499                    lbra   L027C                                                 * 057F 16 FC FA       .|z
0582 5F               ( ../cmds/Menu.asm):00500         L0582      clrb                                                         * 0582 5F             _
0583 103F06           ( ../cmds/Menu.asm):00501                    os9    F$Exit                                                * 0583 10 3F 06       .?.
0586 308DFAF8         ( ../cmds/Menu.asm):00502         L0586      leax   >L0082,PC                                             * 0586 30 8D FA F8    0.zx
058A 108E00C8         ( ../cmds/Menu.asm):00503                    ldy    #200                                                  * 058A 10 8E 00 C8    ...H
058E 8601             ( ../cmds/Menu.asm):00504                    lda    #1                                                    * 058E 86 01          ..
0590 103F8C           ( ../cmds/Menu.asm):00505                    os9    I$WritLn                                              * 0590 10 3F 8C       .?.
0593 5F               ( ../cmds/Menu.asm):00506                    clrb                                                         * 0593 5F             _
0594 103F06           ( ../cmds/Menu.asm):00507         L0594      os9    F$Exit                                                * 0594 10 3F 06       .?.
0597 3420             ( ../cmds/Menu.asm):00508         L0597      pshs   Y                                                     * 0597 34 20          4
0599 A680             ( ../cmds/Menu.asm):00509         L0599      lda    ,X+                                                   * 0599 A6 80          &.
059B 810D             ( ../cmds/Menu.asm):00510                    cmpa   #13                                                   * 059B 81 0D          ..
059D 102700AD         ( ../cmds/Menu.asm):00511                    lbeq   L064E                                                 * 059D 10 27 00 AD    .'.-
05A1 8130             ( ../cmds/Menu.asm):00512                    cmpa   #48                                                   * 05A1 81 30          .0
05A3 25F4             ( ../cmds/Menu.asm):00513                    bcs    L0599                                                 * 05A3 25 F4          %t
05A5 8139             ( ../cmds/Menu.asm):00514                    cmpa   #57                                                   * 05A5 81 39          .9
05A7 22F0             ( ../cmds/Menu.asm):00515                    bhi    L0599                                                 * 05A7 22 F0          "p
05A9 301F             ( ../cmds/Menu.asm):00516                    leax   -$01,X                                                * 05A9 30 1F          0.
05AB A680             ( ../cmds/Menu.asm):00517         L05AB      lda    ,X+                                                   * 05AB A6 80          &.
05AD 8130             ( ../cmds/Menu.asm):00518                    cmpa   #48                                                   * 05AD 81 30          .0
05AF 2506             ( ../cmds/Menu.asm):00519                    bcs    L05B7                                                 * 05AF 25 06          %.
05B1 8139             ( ../cmds/Menu.asm):00520                    cmpa   #57                                                   * 05B1 81 39          .9
05B3 2202             ( ../cmds/Menu.asm):00521                    bhi    L05B7                                                 * 05B3 22 02          ".
05B5 20F4             ( ../cmds/Menu.asm):00522                    bra    L05AB                                                 * 05B5 20 F4           t
05B7 3410             ( ../cmds/Menu.asm):00523         L05B7      pshs   X                                                     * 05B7 34 10          4.
05B9 301F             ( ../cmds/Menu.asm):00524                    leax   -$01,X                                                * 05B9 30 1F          0.
05BB 6F4B             ( ../cmds/Menu.asm):00525                    clr    U000B,U                                               * 05BB 6F 4B          oK
05BD 6F4C             ( ../cmds/Menu.asm):00526                    clr    U000C,U                                               * 05BD 6F 4C          oL
05BF CC0001           ( ../cmds/Menu.asm):00527                    ldd    #1                                                    * 05BF CC 00 01       L..
05C2 ED4D             ( ../cmds/Menu.asm):00528                    std    U000D,U                                               * 05C2 ED 4D          mM
05C4 A682             ( ../cmds/Menu.asm):00529         L05C4      lda    ,-X                                                   * 05C4 A6 82          &.
05C6 8130             ( ../cmds/Menu.asm):00530                    cmpa   #48                                                   * 05C6 81 30          .0
05C8 252E             ( ../cmds/Menu.asm):00531                    bcs    L05F8                                                 * 05C8 25 2E          %.
05CA 8139             ( ../cmds/Menu.asm):00532                    cmpa   #57                                                   * 05CA 81 39          .9
05CC 222A             ( ../cmds/Menu.asm):00533                    bhi    L05F8                                                 * 05CC 22 2A          "*
05CE 8030             ( ../cmds/Menu.asm):00534                    suba   #48                                                   * 05CE 80 30          .0
05D0 A744             ( ../cmds/Menu.asm):00535                    sta    U0004,U                                               * 05D0 A7 44          'D
05D2 CC0000           ( ../cmds/Menu.asm):00536                    ldd    #0                                                    * 05D2 CC 00 00       L..
05D5 6D44             ( ../cmds/Menu.asm):00537         L05D5      tst    U0004,U                                               * 05D5 6D 44          mD
05D7 2706             ( ../cmds/Menu.asm):00538                    beq    L05DF                                                 * 05D7 27 06          '.
05D9 E34D             ( ../cmds/Menu.asm):00539                    addd   U000D,U                                               * 05D9 E3 4D          cM
05DB 6A44             ( ../cmds/Menu.asm):00540                    dec    U0004,U                                               * 05DB 6A 44          jD
05DD 20F6             ( ../cmds/Menu.asm):00541                    bra    L05D5                                                 * 05DD 20 F6           v
05DF E34B             ( ../cmds/Menu.asm):00542         L05DF      addd   U000B,U                                               * 05DF E3 4B          cK
05E1 ED4B             ( ../cmds/Menu.asm):00543                    std    U000B,U                                               * 05E1 ED 4B          mK
05E3 860A             ( ../cmds/Menu.asm):00544                    lda    #10                                                   * 05E3 86 0A          ..
05E5 A744             ( ../cmds/Menu.asm):00545                    sta    U0004,U                                               * 05E5 A7 44          'D
05E7 CC0000           ( ../cmds/Menu.asm):00546                    ldd    #0                                                    * 05E7 CC 00 00       L..
05EA 6D44             ( ../cmds/Menu.asm):00547         L05EA      tst    U0004,U                                               * 05EA 6D 44          mD
05EC 2706             ( ../cmds/Menu.asm):00548                    beq    L05F4                                                 * 05EC 27 06          '.
05EE E34D             ( ../cmds/Menu.asm):00549                    addd   U000D,U                                               * 05EE E3 4D          cM
05F0 6A44             ( ../cmds/Menu.asm):00550                    dec    U0004,U                                               * 05F0 6A 44          jD
05F2 20F6             ( ../cmds/Menu.asm):00551                    bra    L05EA                                                 * 05F2 20 F6           v
05F4 ED4D             ( ../cmds/Menu.asm):00552         L05F4      std    U000D,U                                               * 05F4 ED 4D          mM
05F6 20CC             ( ../cmds/Menu.asm):00553                    bra    L05C4                                                 * 05F6 20 CC           L
05F8 EC4B             ( ../cmds/Menu.asm):00554         L05F8      ldd    U000B,U                                               * 05F8 EC 4B          lK
05FA 3510             ( ../cmds/Menu.asm):00555                    puls   X                                                     * 05FA 35 10          5.
05FC 35A0             ( ../cmds/Menu.asm):00556                    puls   PC,Y                                                  * 05FC 35 A0          5
05FE ED               ( ../cmds/Menu.asm):00557                    fcb    $ED                                                   * 05FE ED             m
05FF 4B               ( ../cmds/Menu.asm):00558                    fcb    $4B                                                   * 05FF 4B             K
0600 86               ( ../cmds/Menu.asm):00559                    fcb    $86                                                   * 0600 86             .
0601 30               ( ../cmds/Menu.asm):00560                    fcb    $30                                                   * 0601 30             0
0602 A7               ( ../cmds/Menu.asm):00561                    fcb    $A7                                                   * 0602 A7             '
0603 84               ( ../cmds/Menu.asm):00562                    fcb    $84                                                   * 0603 84             .
0604 A7               ( ../cmds/Menu.asm):00563                    fcb    $A7                                                   * 0604 A7             '
0605 01               ( ../cmds/Menu.asm):00564                    fcb    $01                                                   * 0605 01             .
0606 A7               ( ../cmds/Menu.asm):00565                    fcb    $A7                                                   * 0606 A7             '
0607 02               ( ../cmds/Menu.asm):00566                    fcb    $02                                                   * 0607 02             .
0608 A7               ( ../cmds/Menu.asm):00567                    fcb    $A7                                                   * 0608 A7             '
0609 03               ( ../cmds/Menu.asm):00568                    fcb    $03                                                   * 0609 03             .
060A A7               ( ../cmds/Menu.asm):00569                    fcb    $A7                                                   * 060A A7             '
060B 04               ( ../cmds/Menu.asm):00570                    fcb    $04                                                   * 060B 04             .
060C CC               ( ../cmds/Menu.asm):00571                    fcb    $CC                                                   * 060C CC             L
060D 27               ( ../cmds/Menu.asm):00572                    fcb    $27                                                   * 060D 27             '
060E 10               ( ../cmds/Menu.asm):00573                    fcb    $10                                                   * 060E 10             .
060F ED               ( ../cmds/Menu.asm):00574                    fcb    $ED                                                   * 060F ED             m
0610 4D               ( ../cmds/Menu.asm):00575                    fcb    $4D                                                   * 0610 4D             M
0611 EC               ( ../cmds/Menu.asm):00576                    fcb    $EC                                                   * 0611 EC             l
0612 4B               ( ../cmds/Menu.asm):00577                    fcb    $4B                                                   * 0612 4B             K
0613 17               ( ../cmds/Menu.asm):00578                    fcb    $17                                                   * 0613 17             .
0614 00               ( ../cmds/Menu.asm):00579                    fcb    $00                                                   * 0614 00             .
0615 29               ( ../cmds/Menu.asm):00580                    fcb    $29                                                   * 0615 29             )
0616 CC               ( ../cmds/Menu.asm):00581                    fcb    $CC                                                   * 0616 CC             L
0617 03               ( ../cmds/Menu.asm):00582                    fcb    $03                                                   * 0617 03             .
0618 E8               ( ../cmds/Menu.asm):00583                    fcb    $E8                                                   * 0618 E8             h
0619 ED               ( ../cmds/Menu.asm):00584                    fcb    $ED                                                   * 0619 ED             m
061A 4D               ( ../cmds/Menu.asm):00585                    fcb    $4D                                                   * 061A 4D             M
061B EC               ( ../cmds/Menu.asm):00586                    fcb    $EC                                                   * 061B EC             l
061C 4B               ( ../cmds/Menu.asm):00587                    fcb    $4B                                                   * 061C 4B             K
061D 8D               ( ../cmds/Menu.asm):00588                    fcb    $8D                                                   * 061D 8D             .
061E 20               ( ../cmds/Menu.asm):00589                    fcb    $20                                                   * 061E 20
061F CC               ( ../cmds/Menu.asm):00590                    fcb    $CC                                                   * 061F CC             L
0620 00               ( ../cmds/Menu.asm):00591                    fcb    $00                                                   * 0620 00             .
0621 64               ( ../cmds/Menu.asm):00592                    fcb    $64                                                   * 0621 64             d
0622 ED               ( ../cmds/Menu.asm):00593                    fcb    $ED                                                   * 0622 ED             m
0623 4D               ( ../cmds/Menu.asm):00594                    fcb    $4D                                                   * 0623 4D             M
0624 EC               ( ../cmds/Menu.asm):00595                    fcb    $EC                                                   * 0624 EC             l
0625 4B               ( ../cmds/Menu.asm):00596                    fcb    $4B                                                   * 0625 4B             K
0626 8D               ( ../cmds/Menu.asm):00597                    fcb    $8D                                                   * 0626 8D             .
0627 17               ( ../cmds/Menu.asm):00598                    fcb    $17                                                   * 0627 17             .
0628 CC               ( ../cmds/Menu.asm):00599                    fcb    $CC                                                   * 0628 CC             L
0629 00               ( ../cmds/Menu.asm):00600                    fcb    $00                                                   * 0629 00             .
062A 0A               ( ../cmds/Menu.asm):00601                    fcb    $0A                                                   * 062A 0A             .
062B ED               ( ../cmds/Menu.asm):00602                    fcb    $ED                                                   * 062B ED             m
062C 4D               ( ../cmds/Menu.asm):00603                    fcb    $4D                                                   * 062C 4D             M
062D EC               ( ../cmds/Menu.asm):00604                    fcb    $EC                                                   * 062D EC             l
062E 4B               ( ../cmds/Menu.asm):00605                    fcb    $4B                                                   * 062E 4B             K
062F 8D               ( ../cmds/Menu.asm):00606                    fcb    $8D                                                   * 062F 8D             .
0630 0E               ( ../cmds/Menu.asm):00607                    fcb    $0E                                                   * 0630 0E             .
0631 CC               ( ../cmds/Menu.asm):00608                    fcb    $CC                                                   * 0631 CC             L
0632 00               ( ../cmds/Menu.asm):00609                    fcb    $00                                                   * 0632 00             .
0633 01               ( ../cmds/Menu.asm):00610                    fcb    $01                                                   * 0633 01             .
0634 ED               ( ../cmds/Menu.asm):00611                    fcb    $ED                                                   * 0634 ED             m
0635 4D               ( ../cmds/Menu.asm):00612                    fcb    $4D                                                   * 0635 4D             M
0636 EC               ( ../cmds/Menu.asm):00613                    fcb    $EC                                                   * 0636 EC             l
0637 4B               ( ../cmds/Menu.asm):00614                    fcb    $4B                                                   * 0637 4B             K
0638 8D               ( ../cmds/Menu.asm):00615                    fcb    $8D                                                   * 0638 8D             .
0639 05               ( ../cmds/Menu.asm):00616                    fcb    $05                                                   * 0639 05             .
063A 86               ( ../cmds/Menu.asm):00617                    fcb    $86                                                   * 063A 86             .
063B 0D               ( ../cmds/Menu.asm):00618                    fcb    $0D                                                   * 063B 0D             .
063C A7               ( ../cmds/Menu.asm):00619                    fcb    $A7                                                   * 063C A7             '
063D 84               ( ../cmds/Menu.asm):00620                    fcb    $84                                                   * 063D 84             .
063E 39               ( ../cmds/Menu.asm):00621                    fcb    $39                                                   * 063E 39             9
063F A3               ( ../cmds/Menu.asm):00622                    fcb    $A3                                                   * 063F A3             #
0640 4D               ( ../cmds/Menu.asm):00623                    fcb    $4D                                                   * 0640 4D             M
0641 25               ( ../cmds/Menu.asm):00624                    fcb    $25                                                   * 0641 25             %
0642 04               ( ../cmds/Menu.asm):00625                    fcb    $04                                                   * 0642 04             .
0643 6C               ( ../cmds/Menu.asm):00626                    fcb    $6C                                                   * 0643 6C             l
0644 84               ( ../cmds/Menu.asm):00627                    fcb    $84                                                   * 0644 84             .
0645 20               ( ../cmds/Menu.asm):00628                    fcb    $20                                                   * 0645 20
0646 F8               ( ../cmds/Menu.asm):00629                    fcb    $F8                                                   * 0646 F8             x
0647 E3               ( ../cmds/Menu.asm):00630                    fcb    $E3                                                   * 0647 E3             c
0648 4D               ( ../cmds/Menu.asm):00631                    fcb    $4D                                                   * 0648 4D             M
0649 ED               ( ../cmds/Menu.asm):00632                    fcb    $ED                                                   * 0649 ED             m
064A 4B               ( ../cmds/Menu.asm):00633                    fcb    $4B                                                   * 064A 4B             K
064B 30               ( ../cmds/Menu.asm):00634                    fcb    $30                                                   * 064B 30             0
064C 01               ( ../cmds/Menu.asm):00635                    fcb    $01                                                   * 064C 01             .
064D 39               ( ../cmds/Menu.asm):00636                    fcb    $39                                                   * 064D 39             9
064E 308DFA85         ( ../cmds/Menu.asm):00637         L064E      leax   >L00D7,PC                                             * 064E 30 8D FA 85    0.z.
0652 108E00C8         ( ../cmds/Menu.asm):00638                    ldy    #200                                                  * 0652 10 8E 00 C8    ...H
0656 8601             ( ../cmds/Menu.asm):00639                    lda    #1                                                    * 0656 86 01          ..
0658 103F8C           ( ../cmds/Menu.asm):00640                    os9    I$WritLn                                              * 0658 10 3F 8C       .?.
065B 8601             ( ../cmds/Menu.asm):00641                    lda    #1                                                    * 065B 86 01          ..
065D 16FF34           ( ../cmds/Menu.asm):00642                    lbra   L0594                                                 * 065D 16 FF 34       ..4
                      ( ../cmds/Menu.asm):00643         
0660 53DE37           ( ../cmds/Menu.asm):00644                    emod
     0663             ( ../cmds/Menu.asm):00645         eom        equ    *
                      ( ../cmds/Menu.asm):00646                    end
