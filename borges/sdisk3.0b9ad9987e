                      (   sdisk3_dmc.asm):00001         *******************************************************************
                      (   sdisk3_dmc.asm):00002         *
                      (   sdisk3_dmc.asm):00003         *     Sdisk3 - floopy disk controller driver by D.P. Johnson
                      (   sdisk3_dmc.asm):00004         *      and Sardis Technologies for the DMC no-halt controllers.
                      (   sdisk3_dmc.asm):00005         *
                      (   sdisk3_dmc.asm):00006         *******************************************************************
                      (   sdisk3_dmc.asm):00007         
                      (   sdisk3_dmc.asm):00008         * Sardis DMC controller registers
     FF40             (   sdisk3_dmc.asm):00009         fdcdrv   equ   $ff40
     FF48             (   sdisk3_dmc.asm):00010         fdccmd   equ   $ff48
     FF48             (   sdisk3_dmc.asm):00011         fdcsta   equ   $ff48
     FF49             (   sdisk3_dmc.asm):00012         fdctrk   equ   $ff49
     FF4A             (   sdisk3_dmc.asm):00013         fdcsec   equ   $ff4A
     FF4B             (   sdisk3_dmc.asm):00014         fdcdta   equ   $ff4B
     FF44             (   sdisk3_dmc.asm):00015         fdwrit   equ   $ff44
     FF4C             (   sdisk3_dmc.asm):00016         fdread   equ   $ff4c
     FF44             (   sdisk3_dmc.asm):00017         disdma   equ   $ff44
     FF46             (   sdisk3_dmc.asm):00018         fdptrh   equ   $ff46
     FF42             (   sdisk3_dmc.asm):00019         fdptrl   equ   $ff42
     FF4E             (   sdisk3_dmc.asm):00020         buffer   equ   $ff4e
                      (   sdisk3_dmc.asm):00021         
                      (   sdisk3_dmc.asm):00022                  nam   SDisk3
                      (   sdisk3_dmc.asm):00023                  ttl   os9 device driver    
                      (   sdisk3_dmc.asm):00024         
                      (   sdisk3_dmc.asm):00025                  ifp1
                      (   sdisk3_dmc.asm):00026                  use   defsfile
     0002             (         defsfile):00001         Level   equ 2
                      (         defsfile):00002         
                      (         defsfile):00003                 use os9.d
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00004                 use rbf.d
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (         defsfile):00005                 use coco.d
                      (           coco.d):00001                        IFNE      COCO.D-1
     0001             (           coco.d):00002         COCO.D         SET       1
                      (           coco.d):00003         
                      (           coco.d):00004         ********************************************************************
                      (           coco.d):00005         * CoCoDefs - NitrOS-9 System Definitions for the Tandy Color Computer
                      (           coco.d):00006         *
                      (           coco.d):00007         * $Id$
                      (           coco.d):00008         *
                      (           coco.d):00009         * Edt/Rev  YYYY/MM/DD  Modified by
                      (           coco.d):00010         * Comment
                      (           coco.d):00011         * ------------------------------------------------------------------
                      (           coco.d):00012         *          1998/10/13  Boisy G. Pitre
                      (           coco.d):00013         * Added defs by Bruce Isted from his Eliminator archive.
                      (           coco.d):00014         *
                      (           coco.d):00015         *          1998/10/31  Boisy G. Pitre
                      (           coco.d):00016         * Merged cc3global.defs into this file.
                      (           coco.d):00017         *
                      (           coco.d):00018         *          2002/04/30  Boisy G. Pitre
                      (           coco.d):00019         * Merged Level One and Level Two sysdefs.
                      (           coco.d):00020         *
                      (           coco.d):00021         *          2002/06/22  Boisy G. Pitre
                      (           coco.d):00022         * Removed PIA.U4 and PIA.U8, improved comments
                      (           coco.d):00023         *
                      (           coco.d):00024         *          2003/11/05  Robert Gault
                      (           coco.d):00025         * Made changes in window globals and grfdrv memory to handle regW
                      (           coco.d):00026         * in 6809 systems.
                      (           coco.d):00027         *
                      (           coco.d):00028         *          2003/11/30  Boisy G. Pitre
                      (           coco.d):00029         * Statics now are prefaced with V. to identify them easier in source.
                      (           coco.d):00030         *
                      (           coco.d):00031         *          2004/07/18  Boisy G. Pitre
                      (           coco.d):00032         * Moved CoCo 3 Window stuff into cc3iodefs
                      (           coco.d):00033         *
                      (           coco.d):00034         *          2012/02/24  Boisy G. Pitre
                      (           coco.d):00035         * Consolidated all CoCo-specific defs files into here.
                      (           coco.d):00036         
                      (           coco.d):00037                        NAM       CoCoDefs
                      (           coco.d):00038                        IFEQ      Level-1
                      (           coco.d):00039                        TTL       NitrOS-9 System Definitions for the Tandy Color Computer
                      (           coco.d):00040                        ELSE      
                      (           coco.d):00041                        IFEQ      Level-2
                      (           coco.d):00042                        TTL       NitrOS-9 Level 2 System Type Definitions
                      (           coco.d):00043                        ELSE      
                      (           coco.d):00044                        IFEQ      Level-3
                      (           coco.d):00045                        TTL       NitrOS-9 Level 3 System Type Definitions
                      (           coco.d):00046                        ENDC      
                      (           coco.d):00047                        ENDC      
                      (           coco.d):00048                        ENDC      
                      (           coco.d):00049         
                      (           coco.d):00050         
                      (           coco.d):00051         **********************
                      (           coco.d):00052         * CPU Type Definitions
                      (           coco.d):00053         *
     0001             (           coco.d):00054         Color          SET       1
     0002             (           coco.d):00055         Color3         SET       2
                      (           coco.d):00056                        IFEQ      Level-1
0026                  (           coco.d):00057         CPUType        SET       Color
                      (           coco.d):00058                        ELSE      
     0002             (           coco.d):00059         CPUType        SET       Color3
                      (           coco.d):00060                        ENDC      
                      (           coco.d):00061         
                      (           coco.d):00062         
                      (           coco.d):00063         ******************************
                      (           coco.d):00064         * Clock Speed Type Definitions
                      (           coco.d):00065         *
     0001             (           coco.d):00066         OneMHz         EQU       1
     0002             (           coco.d):00067         TwoMHz         EQU       2
                      (           coco.d):00068                        IFEQ      CPUType-Color
0026                  (           coco.d):00069         CPUSpeed       SET       OneMHz
                      (           coco.d):00070                        ELSE      
     0002             (           coco.d):00071         CPUSpeed       SET       TwoMHz
                      (           coco.d):00072                        ENDC      
                      (           coco.d):00073         
                      (           coco.d):00074         
                      (           coco.d):00075         **********************************
                      (           coco.d):00076         * Power Line Frequency Definitions
                      (           coco.d):00077         *
     0001             (           coco.d):00078         Hz50           EQU       1                   Assemble clock for 50 hz power
     0002             (           coco.d):00079         Hz60           EQU       2                   Assemble clock for 60 hz power
                      (           coco.d):00080                        IFNDEF    PwrLnFrq
     0002             (           coco.d):00081         PwrLnFrq       SET       Hz60                Set to Appropriate freq
                      (           coco.d):00082                        ENDC
                      (           coco.d):00083         
                      (           coco.d):00084         
                      (           coco.d):00085         **********************************
                      (           coco.d):00086         * Ticks per second
                      (           coco.d):00087         *
                      (           coco.d):00088                        IFNDEF    TkPerSec
                      (           coco.d):00089                        IFEQ      PwrLnFrq-Hz50
0026                  (           coco.d):00090         TkPerSec       SET       50
                      (           coco.d):00091                        ELSE      
     003C             (           coco.d):00092         TkPerSec       SET       60
                      (           coco.d):00093                        ENDC      
                      (           coco.d):00094                        ENDC
                      (           coco.d):00095         
                      (           coco.d):00096         
                      (           coco.d):00097         ******************
                      (           coco.d):00098         * ACIA type set up
                      (           coco.d):00099         *
                      (           coco.d):00100                        ORG       1
0001                  (           coco.d):00101         ACIA6850       RMB       1                   MC6850 acia.
0002                  (           coco.d):00102         ACIA6551       RMB       1                   SY6551 acia.
0003                  (           coco.d):00103         ACIA2661       RMB       1                   SC2661 acia.
     0002             (           coco.d):00104         ACIATYPE       SET       ACIA6551
                      (           coco.d):00105         
                      (           coco.d):00106         
                      (           coco.d):00107         ****************************************
                      (           coco.d):00108         * Special character Bit position equates
                      (           coco.d):00109         *
     0001             (           coco.d):00110         SHIFTBIT       EQU       %00000001
     0002             (           coco.d):00111         CNTRLBIT       EQU       %00000010
     0004             (           coco.d):00112         ALTERBIT       EQU       %00000100
     0008             (           coco.d):00113         UPBIT          EQU       %00001000
     0010             (           coco.d):00114         DOWNBIT        EQU       %00010000
     0020             (           coco.d):00115         LEFTBIT        EQU       %00100000
     0040             (           coco.d):00116         RIGHTBIT       EQU       %01000000
     0080             (           coco.d):00117         SPACEBIT       EQU       %10000000
                      (           coco.d):00118         
                      (           coco.d):00119         
                      (           coco.d):00120         ******************
                      (           coco.d):00121         * Device addresses for miscellaneous hardware
                      (           coco.d):00122         *
     FF68             (           coco.d):00123         A.AciaP        SET       $FF68               Aciapak Address
     FF6C             (           coco.d):00124         A.ModP         SET       $FF6C               ModPak Address
     FF40             (           coco.d):00125         DPort          SET       $FF40               Disk controller base address
     FF7F             (           coco.d):00126         MPI.Slct       SET       $FF7F               Multi-Pak slot select
     0003             (           coco.d):00127         MPI.Slot       SET       $03                 Multi-Pak default slot
     FF00             (           coco.d):00128         PIA0Base       EQU       $FF00
     FF20             (           coco.d):00129         PIA1Base       EQU       $FF20
                      (           coco.d):00130         
                      (           coco.d):00131         
                      (           coco.d):00132         ******************
                      (           coco.d):00133         * VDG Devices
                      (           coco.d):00134         *
     FFC0             (           coco.d):00135         A.TermV        SET       $FFC0               VDG Term
     FFC1             (           coco.d):00136         A.V1           SET       $FFC1               Possible additional VDG Devices
     FFC2             (           coco.d):00137         A.V2           SET       $FFC2
     FFC3             (           coco.d):00138         A.V3           SET       $FFC3
     FFC4             (           coco.d):00139         A.V4           SET       $FFC4
     FFC5             (           coco.d):00140         A.V5           SET       $FFC5
     FFC6             (           coco.d):00141         A.V6           SET       $FFC6
     FFC7             (           coco.d):00142         A.V7           SET       $FFC7
                      (           coco.d):00143         
                      (           coco.d):00144         
                      (           coco.d):00145                        IFEQ      Level-1
                      (           coco.d):00146         
                      (           coco.d):00147         *************************************************
                      (           coco.d):00148         *
                      (           coco.d):00149         * NitrOS-9 Level 1 Section
                      (           coco.d):00150         *
                      (           coco.d):00151         *************************************************
                      (           coco.d):00152         
0004                  (           coco.d):00153         HW.Page        SET       $FF                 Device descriptor hardware page
                      (           coco.d):00154         
                      (           coco.d):00155                        ELSE      
                      (           coco.d):00156         
                      (           coco.d):00157         *************************************************
                      (           coco.d):00158         *
                      (           coco.d):00159         * NitrOS-9 Level 2 Section
                      (           coco.d):00160         *
                      (           coco.d):00161         *************************************************
                      (           coco.d):00162         
                      (           coco.d):00163         ****************************************
                      (           coco.d):00164         * Dynamic Address Translator Definitions
                      (           coco.d):00165         *
     0008             (           coco.d):00166         DAT.BlCt       EQU       8                   D.A.T. blocks/address space
     2000             (           coco.d):00167         DAT.BlSz       EQU       (256/DAT.BlCt)*256  D.A.T. block size
     0010             (           coco.d):00168         DAT.ImSz       EQU       DAT.BlCt*2          D.A.T. Image size
     FFE0             (           coco.d):00169         DAT.Addr       EQU       -(DAT.BlSz/256)     D.A.T. MSB Address bits
     FF91             (           coco.d):00170         DAT.Task       EQU       $FF91               Task Register address
     0020             (           coco.d):00171         DAT.TkCt       EQU       32                  Number of DAT Tasks
     FFA0             (           coco.d):00172         DAT.Regs       EQU       $FFA0               DAT Block Registers base address
     333E             (           coco.d):00173         DAT.Free       EQU       $333E               Free Block Number
     003F             (           coco.d):00174         DAT.BlMx       EQU       $3F                 Maximum Block number
     0040             (           coco.d):00175         DAT.BMSz       EQU       $40                 Memory Block Map size
     0000             (           coco.d):00176         DAT.WrPr       EQU       0                   no write protect
     0000             (           coco.d):00177         DAT.WrEn       EQU       0                   no write enable
     0000             (           coco.d):00178         SysTask        EQU       0                   Coco System Task number
     003F             (           coco.d):00179         IOBlock        EQU       $3F
     003F             (           coco.d):00180         ROMBlock       EQU       $3F
     007F             (           coco.d):00181         IOAddr         EQU       $7F
     0001             (           coco.d):00182         ROMCount       EQU       1                   number of blocks of ROM (High RAM Block)
     0001             (           coco.d):00183         RAMCount       EQU       1                   initial blocks of RAM
     0005             (           coco.d):00184         MoveBlks       EQU       DAT.BlCt-ROMCount-2 Block numbers used for copies
     0001             (           coco.d):00185         BlockTyp       EQU       1                   chk only first bytes of RAM block
     0002             (           coco.d):00186         ByteType       EQU       2                   chk entire block of RAM
     0001             (           coco.d):00187         Limited        EQU       1                   chk only upper memory for ROM modules
     0002             (           coco.d):00188         UnLimitd       EQU       2                   chk all NotRAM for modules
                      (           coco.d):00189         * NOTE: this check assumes any NotRAM with a module will
                      (           coco.d):00190         *       always start with $87CD in first two bytes of block
     0001             (           coco.d):00191         RAMCheck       EQU       BlockTyp            chk only beg bytes of block
     0001             (           coco.d):00192         ROMCheck       EQU       Limited             chk only upper few blocks for ROM
     003F             (           coco.d):00193         LastRAM        EQU       IOBlock             maximum RAM block number
                      (           coco.d):00194         
                      (           coco.d):00195         ***************************
                      (           coco.d):00196         * Color Computer 3 Specific
                      (           coco.d):00197         *
     0001             (           coco.d):00198         MappedIO       EQU       true                (Actually False but it works better this way)
                      (           coco.d):00199         
                      (           coco.d):00200         ********************
                      (           coco.d):00201         * Hardware addresses
                      (           coco.d):00202         *
     FF00             (           coco.d):00203         GIMERegs       EQU       $FF00               Base address of GIME registers
     FF92             (           coco.d):00204         IrqEnR         EQU       $FF92               GIME IRQ enable/status register
     FF9A             (           coco.d):00205         BordReg        EQU       $FF9A               Border color register
     FFB0             (           coco.d):00206         PalAdr         EQU       $FFB0               Palette registers
                      (           coco.d):00207         
     0007             (           coco.d):00208         HW.Page        SET       $07                 Device descriptor hardware page
                      (           coco.d):00209         
                      (           coco.d):00210                        ENDC
                      (           coco.d):00211                        
                      (           coco.d):00212                        ENDC      
                      (           coco.d):00213         
                      (   sdisk3_dmc.asm):00027                  endc
                      (   sdisk3_dmc.asm):00028         
     0001             (   sdisk3_dmc.asm):00029         rev      set   $01
                      (   sdisk3_dmc.asm):00030         
0000 87CD0B9A000EE181 (   sdisk3_dmc.asm):00031                  mod   eom,name,Drivr+Objct,ReEnt+rev,start,size
     4A00980223
                      (   sdisk3_dmc.asm):00032         
                      (   sdisk3_dmc.asm):00033                  org   V.USER
0006.                 (   sdisk3_dmc.asm):00034         u0006    rmb   9
000F.                 (   sdisk3_dmc.asm):00035         drvtab   rmb   35
0032.                 (   sdisk3_dmc.asm):00036         u0032    rmb   24
004A.                 (   sdisk3_dmc.asm):00037         u004A    rmb   4
004E.                 (   sdisk3_dmc.asm):00038         u004E    rmb   2
0050.                 (   sdisk3_dmc.asm):00039         u0050    rmb   49
0081.                 (   sdisk3_dmc.asm):00040         u0081    rmb   2
0083.                 (   sdisk3_dmc.asm):00041         u0083    rmb   2
0085.                 (   sdisk3_dmc.asm):00042         u0085    rmb   1
0086.                 (   sdisk3_dmc.asm):00043         u0086    rmb   1
0087.                 (   sdisk3_dmc.asm):00044         u0087    rmb   1
0088.                 (   sdisk3_dmc.asm):00045         u0088    rmb   1
0089.                 (   sdisk3_dmc.asm):00046         u0089    rmb   1
008A.                 (   sdisk3_dmc.asm):00047         u008A    rmb   1
008B.                 (   sdisk3_dmc.asm):00048         u008B    rmb   1
008C.                 (   sdisk3_dmc.asm):00049         u008C    rmb   1
008D.                 (   sdisk3_dmc.asm):00050         u008D    rmb   1
008E.                 (   sdisk3_dmc.asm):00051         u008E    rmb   1
008F.                 (   sdisk3_dmc.asm):00052         u008F    rmb   2
0091.                 (   sdisk3_dmc.asm):00053         u0091    rmb   1
0092.                 (   sdisk3_dmc.asm):00054         u0092    rmb   1
0093.                 (   sdisk3_dmc.asm):00055         u0093    rmb   1
0094.                 (   sdisk3_dmc.asm):00056         u0094    rmb   1
0095.                 (   sdisk3_dmc.asm):00057         u0095    rmb   1
0096.                 (   sdisk3_dmc.asm):00058         u0096    rmb   2
0098.                 (   sdisk3_dmc.asm):00059         u0098    rmb   1
0099.                 (   sdisk3_dmc.asm):00060         u0099    rmb   1
009A.                 (   sdisk3_dmc.asm):00061         virq1    rmb   4
009E.                 (   sdisk3_dmc.asm):00062         u009E    rmb   1
009F.                 (   sdisk3_dmc.asm):00063         virq2    rmb   1
00A0.                 (   sdisk3_dmc.asm):00064         u00A0    rmb   1
00A1.                 (   sdisk3_dmc.asm):00065         u00A1    rmb   1
00A2.                 (   sdisk3_dmc.asm):00066         u00A2    rmb   1
00A3.                 (   sdisk3_dmc.asm):00067         u00A3    rmb   1
00A4.                 (   sdisk3_dmc.asm):00068         u00A4    rmb   1
00A5.                 (   sdisk3_dmc.asm):00069         u00A5    rmb   1
00A6.                 (   sdisk3_dmc.asm):00070         u00A6    rmb   1
00A7.                 (   sdisk3_dmc.asm):00071         u00A7    rmb   1
00A8.                 (   sdisk3_dmc.asm):00072         u00A8    rmb   1
00A9.                 (   sdisk3_dmc.asm):00073         u00A9    rmb   1
00AA.                 (   sdisk3_dmc.asm):00074         u00AA    rmb   2
00AC.                 (   sdisk3_dmc.asm):00075         u00AC    rmb   12
00B8.                 (   sdisk3_dmc.asm):00076         u00B8    rmb   60
00F4.                 (   sdisk3_dmc.asm):00077         u00F4    rmb   1
00F5.                 (   sdisk3_dmc.asm):00078         u00F5    rmb   299
0220.                 (   sdisk3_dmc.asm):00079         u0220    rmb   3
     0223             (   sdisk3_dmc.asm):00080         size     equ   .
                      (   sdisk3_dmc.asm):00081         
000D FF               (   sdisk3_dmc.asm):00082                  fcb   $FF 
000E 534469736BB3     (   sdisk3_dmc.asm):00083         name     fcs   /SDisk3/
0014 01               (   sdisk3_dmc.asm):00084                  fcb   $01 
                      (   sdisk3_dmc.asm):00085         
0015 00               (   sdisk3_dmc.asm):00086                  fcb   $00 
                      (   sdisk3_dmc.asm):00087         
0016 00F2             (   sdisk3_dmc.asm):00088         L0016    fdb   $00f2        drive motor on time
0018 0020             (   sdisk3_dmc.asm):00089         L0018    fdb   $0020        motor startup delay
001A 0003             (   sdisk3_dmc.asm):00090         L001A    fdb   $0003        head settle time
001C 0100             (   sdisk3_dmc.asm):00091         L001C    fdb   $0100        default sector size
001E 1E00             (   sdisk3_dmc.asm):00092         L001E    fdb   $1E00        delay-after-write before deselect
0020 23162828002B     (   sdisk3_dmc.asm):00093         L0020    fcb   $23,$16,$28,$28,$00,$2b write precomp table
0026 01020440         (   sdisk3_dmc.asm):00094         L0026    fcb   $01,$02,$04,$40 drive select codes
002A 0836             (   sdisk3_dmc.asm):00095         L002A    fdb   $0836
002C 009E             (   sdisk3_dmc.asm):00096         L002C    fdb   $009e        timeout for restore to track 0
002E 0B               (   sdisk3_dmc.asm):00097                  fcb   $0B 
002F 0836             (   sdisk3_dmc.asm):00098         L002F    fdb   $0836
0031 0005             (   sdisk3_dmc.asm):00099         L0031    fdb   $0005        timeout for step in one track
0033 4B               (   sdisk3_dmc.asm):00100                  fcb   $4B
0034 0836             (   sdisk3_dmc.asm):00101         L0034    fdb   $0836
0036 0098             (   sdisk3_dmc.asm):00102         L0036    fdb   $0098        timeout value for seek
0038 1B               (   sdisk3_dmc.asm):00103                  fcb   $1B 
0039 084E             (   sdisk3_dmc.asm):00104         L0039    fdb   $084e
003B 005C             (   sdisk3_dmc.asm):00105         L003B    fdb   $005c        timeout value for read sector
003D 80               (   sdisk3_dmc.asm):00106                  fcb   $80 
003E 083F             (   sdisk3_dmc.asm):00107         L003E    fdb   $083f
0040 005C             (   sdisk3_dmc.asm):00108         L0040    fdb   $005c        timeout for write sector
0042 A0               (   sdisk3_dmc.asm):00109                  fcb   $A0 
0043 083F             (   sdisk3_dmc.asm):00110         L0043    fdb   $083f
0045 0020             (   sdisk3_dmc.asm):00111         L0045    fdb   $0020        timeout value for write track
0047 F0               (   sdisk3_dmc.asm):00112                  fcb   $F0
0048 03               (   sdisk3_dmc.asm):00113         L0048    fcb   $03          Multipak slot
                      (   sdisk3_dmc.asm):00114         * IRQ packet #1
0049 00               (   sdisk3_dmc.asm):00115         L0049    fcb   $00          IRQ flip byte
004A 01               (   sdisk3_dmc.asm):00116                  fcb   $01          IRQ mask byte
004B 0A               (   sdisk3_dmc.asm):00117         L004B    fcb   $0A          interupt priority for motor timer
                      (   sdisk3_dmc.asm):00118         * IRQ packet #2
004C 00               (   sdisk3_dmc.asm):00119         L004C    fcb   $00          IRQ flip byte
004D 01               (   sdisk3_dmc.asm):00120                  fcb   $01          IRQ mask byte
004E 14               (   sdisk3_dmc.asm):00121         L004E    fcb   $14          interupt priority code
                      (   sdisk3_dmc.asm):00122         
004F 436F707972696768 (   sdisk3_dmc.asm):00123                  fcc   /Copyright 1984,1986 D.P.Johnson & Sardis Technologies/
     7420313938342C31
     39383620442E502E
     4A6F686E736F6E20
     2620536172646973
     20546563686E6F6C
     6F67696573
0084 0D               (   sdisk3_dmc.asm):00124                  fcb   $0D 
0085 416C6C2072696768 (   sdisk3_dmc.asm):00125                  fcc   /All rights reserved/
     7473207265736572
     766564
                      (   sdisk3_dmc.asm):00126         
0098 160030           (   sdisk3_dmc.asm):00127         start    lbra  INIT
009B 1600CC           (   sdisk3_dmc.asm):00128                  lbra  READ
009E 16015C           (   sdisk3_dmc.asm):00129                  lbra  WRITE
00A1 160419           (   sdisk3_dmc.asm):00130                  lbra  GETSTA
00A4 16049D           (   sdisk3_dmc.asm):00131                  lbra  SETSTA
                      (   sdisk3_dmc.asm):00132         
                      (   sdisk3_dmc.asm):00133         * Terminate routine
00A7 8E0000           (   sdisk3_dmc.asm):00134                  ldx   #$0000
00AA 31C9009A         (   sdisk3_dmc.asm):00135                  leay  >virq1,u
00AE 103F27           (   sdisk3_dmc.asm):00136                  os9   F$VIRQ   
00B1 31C9009F         (   sdisk3_dmc.asm):00137                  leay  >virq2,u
00B5 103F27           (   sdisk3_dmc.asm):00138                  os9   F$VIRQ   
00B8 103F2A           (   sdisk3_dmc.asm):00139                  os9   F$IRQ    
00BB 3341             (   sdisk3_dmc.asm):00140                  leau  1,u
00BD 103F2A           (   sdisk3_dmc.asm):00141                  os9   F$IRQ    
00C0 335F             (   sdisk3_dmc.asm):00142                  leau  -1,u
00C2 4F               (   sdisk3_dmc.asm):00143                  clra  
00C3 B7FF41           (   sdisk3_dmc.asm):00144                  sta   >$FF41
00C6 A7C90087         (   sdisk3_dmc.asm):00145                  sta   >u0087,u
00CA 39               (   sdisk3_dmc.asm):00146                  rts   
                      (   sdisk3_dmc.asm):00147         
                      (   sdisk3_dmc.asm):00148         * Init routine
00CB 1703DD           (   sdisk3_dmc.asm):00149         INIT     lbsr  L04AB
00CE 3401             (   sdisk3_dmc.asm):00150                  pshs  cc
00D0 1A50             (   sdisk3_dmc.asm):00151                  orcc  #IntMasks
00D2 EC8DFF40         (   sdisk3_dmc.asm):00152                  ldd   >L0016,pc    get drive motor on time
00D6 EDC90096         (   sdisk3_dmc.asm):00153                  std   >u0096,u
00DA 4F               (   sdisk3_dmc.asm):00154                  clra  
00DB A7C90088         (   sdisk3_dmc.asm):00155                  sta   >u0088,u
00DF A7C90083         (   sdisk3_dmc.asm):00156                  sta   >u0083,u
00E3 A7C90087         (   sdisk3_dmc.asm):00157                  sta   >u0087,u
00E7 F6FF44           (   sdisk3_dmc.asm):00158                  ldb   >fdwrit
00EA B7FF41           (   sdisk3_dmc.asm):00159                  sta   >$FF41
00ED 9732             (   sdisk3_dmc.asm):00160                  sta   <D.MotOn
00EF A7C90099         (   sdisk3_dmc.asm):00161                  sta   >u0099,u
00F3 4C               (   sdisk3_dmc.asm):00162                  inca  
00F4 A7C90092         (   sdisk3_dmc.asm):00163                  sta   >u0092,u
00F8 A7C90093         (   sdisk3_dmc.asm):00164                  sta   >u0093,u
00FC A7C90094         (   sdisk3_dmc.asm):00165                  sta   >u0094,u
0100 3501             (   sdisk3_dmc.asm):00166                  puls  cc
0102 8D47             (   sdisk3_dmc.asm):00167                  bsr   L014B
0104 2544             (   sdisk3_dmc.asm):00168                  bcs   L014A
0106 17094C           (   sdisk3_dmc.asm):00169                  lbsr  L0A55
                      (   sdisk3_dmc.asm):00170         * Setup drive tables
0109 C603             (   sdisk3_dmc.asm):00171                  ldb   #$03         get default # drives
010B E746             (   sdisk3_dmc.asm):00172                  stb   V.NDRV,u     save it
010D 86FF             (   sdisk3_dmc.asm):00173                  lda   #$FF
010F 304F             (   sdisk3_dmc.asm):00174                  leax  DRVBEG,u     point to drive table start
0111 A701             (   sdisk3_dmc.asm):00175         L0111    sta   DD.TOT+1,x
0113 A78815           (   sdisk3_dmc.asm):00176                  sta   <V.TRAK,x
0116 308826           (   sdisk3_dmc.asm):00177                  leax  <DRVMEM,x
0119 5A               (   sdisk3_dmc.asm):00178                  decb  
011A 26F5             (   sdisk3_dmc.asm):00179                  bne   L0111
                      (   sdisk3_dmc.asm):00180         
011C 3460             (   sdisk3_dmc.asm):00181                  pshs  u,y
011E 31C9009E         (   sdisk3_dmc.asm):00182                  leay  >u009E,u
0122 6FA4             (   sdisk3_dmc.asm):00183                  clr   ,y
0124 1F20             (   sdisk3_dmc.asm):00184                  tfr   y,d
0126 318D0900         (   sdisk3_dmc.asm):00185                  leay  >L0A2A,pcr
012A 308DFF1B         (   sdisk3_dmc.asm):00186                  leax  >L0049,pcr
012E 103F2A           (   sdisk3_dmc.asm):00187                  os9   F$IRQ    
0131 2515             (   sdisk3_dmc.asm):00188                  bcs   L0148
0133 31C900A3         (   sdisk3_dmc.asm):00189                  leay  >u00A3,u
0137 6FA4             (   sdisk3_dmc.asm):00190                  clr   ,y
0139 1F20             (   sdisk3_dmc.asm):00191                  tfr   y,d
013B 3341             (   sdisk3_dmc.asm):00192                  leau  1,u
013D 318D0728         (   sdisk3_dmc.asm):00193                  leay  >L0869,pcr
0141 308DFF07         (   sdisk3_dmc.asm):00194                  leax  >L004C,pcr
0145 103F2A           (   sdisk3_dmc.asm):00195                  os9   F$IRQ    
0148 3560             (   sdisk3_dmc.asm):00196         L0148    puls  u,y
014A 39               (   sdisk3_dmc.asm):00197         L014A    rts   
                      (   sdisk3_dmc.asm):00198         
014B C6D0             (   sdisk3_dmc.asm):00199         L014B    ldb   #$D0
014D F7FF4C           (   sdisk3_dmc.asm):00200                  stb   >fdread
0150 12               (   sdisk3_dmc.asm):00201                  nop   
0151 F6FF44           (   sdisk3_dmc.asm):00202                  ldb   >fdwrit
0154 5F               (   sdisk3_dmc.asm):00203                  clrb  
0155 8E2710           (   sdisk3_dmc.asm):00204                  ldx   #$2710
0158 170700           (   sdisk3_dmc.asm):00205         L0158    lbsr  L085B
015B F6FF48           (   sdisk3_dmc.asm):00206                  ldb   >fdccmd
015E C501             (   sdisk3_dmc.asm):00207                  bitb  #$01
0160 2707             (   sdisk3_dmc.asm):00208                  beq   L0169
0162 301F             (   sdisk3_dmc.asm):00209                  leax  -$01,x
0164 26F2             (   sdisk3_dmc.asm):00210                  bne   L0158
0166 53               (   sdisk3_dmc.asm):00211                  comb  
0167 C6F6             (   sdisk3_dmc.asm):00212                  ldb   #E$NotRdy
0169 39               (   sdisk3_dmc.asm):00213         L0169    rts   
                      (   sdisk3_dmc.asm):00214         
                      (   sdisk3_dmc.asm):00215         * Read entry point
016A 3430             (   sdisk3_dmc.asm):00216         READ     pshs  y,x
016C 4F               (   sdisk3_dmc.asm):00217                  clra  
016D 170972           (   sdisk3_dmc.asm):00218                  lbsr  L0AE2
0170 3401             (   sdisk3_dmc.asm):00219                  pshs  cc
0172 253A             (   sdisk3_dmc.asm):00220                  bcs   L01AE
0174 2B06             (   sdisk3_dmc.asm):00221                  bmi   L017C
0176 2604             (   sdisk3_dmc.asm):00222                  bne   L017C
0178 8D58             (   sdisk3_dmc.asm):00223                  bsr   L01D2
017A 2009             (   sdisk3_dmc.asm):00224                  bra   L0185
017C 1701CB           (   sdisk3_dmc.asm):00225         L017C    lbsr  L034A
017F 252D             (   sdisk3_dmc.asm):00226                  bcs   L01AE
0181 8D2D             (   sdisk3_dmc.asm):00227                  bsr   L01B0
0183 2529             (   sdisk3_dmc.asm):00228                  bcs   L01AE
0185 A6E4             (   sdisk3_dmc.asm):00229         L0185    lda   ,s
0187 8508             (   sdisk3_dmc.asm):00230                  bita  #$08
0189 2604             (   sdisk3_dmc.asm):00231                  bne   L018F
018B AE61             (   sdisk3_dmc.asm):00232                  ldx   $01,s
018D 8D5E             (   sdisk3_dmc.asm):00233                  bsr   L01ED
018F AE61             (   sdisk3_dmc.asm):00234         L018F    ldx   $01,s
0191 261A             (   sdisk3_dmc.asm):00235                  bne   L01AD
0193 6DC90088         (   sdisk3_dmc.asm):00236                  tst   >u0088,u
0197 2610             (   sdisk3_dmc.asm):00237                  bne   L01A9
0199 AE28             (   sdisk3_dmc.asm):00238                  ldx   $08,y        grabbing buffer address, PD.BUF?
019B 10AEC90081       (   sdisk3_dmc.asm):00239                  ldy   >u0081,u
01A0 C614             (   sdisk3_dmc.asm):00240                  ldb   #$14
01A2 A685             (   sdisk3_dmc.asm):00241         L01A2    lda   b,x
01A4 A7A5             (   sdisk3_dmc.asm):00242                  sta   b,y
01A6 5A               (   sdisk3_dmc.asm):00243                  decb  
01A7 2AF9             (   sdisk3_dmc.asm):00244                  bpl   L01A2
01A9 6FC90088         (   sdisk3_dmc.asm):00245         L01A9    clr   >u0088,u
01AD 5F               (   sdisk3_dmc.asm):00246         L01AD    clrb  
01AE 35B2             (   sdisk3_dmc.asm):00247         L01AE    puls  pc,y,x,a
                      (   sdisk3_dmc.asm):00248         
01B0 A6C90095         (   sdisk3_dmc.asm):00249         L01B0    lda   >u0095,u
01B4 3412             (   sdisk3_dmc.asm):00250         L01B4    pshs  x,a
01B6 8D1F             (   sdisk3_dmc.asm):00251                  bsr   L01D7
01B8 3512             (   sdisk3_dmc.asm):00252                  puls  x,a
01BA 2416             (   sdisk3_dmc.asm):00253                  bcc   L01D2
01BC C101             (   sdisk3_dmc.asm):00254                  cmpb  #$01
01BE 270F             (   sdisk3_dmc.asm):00255                  beq   L01CF
01C0 4D               (   sdisk3_dmc.asm):00256                  tsta  
01C1 270C             (   sdisk3_dmc.asm):00257                  beq   L01CF
01C3 44               (   sdisk3_dmc.asm):00258                  lsra  
01C4 24EE             (   sdisk3_dmc.asm):00259                  bcc   L01B4
01C6 3412             (   sdisk3_dmc.asm):00260                  pshs  x,a
01C8 1704AC           (   sdisk3_dmc.asm):00261                  lbsr  L0677
01CB 3512             (   sdisk3_dmc.asm):00262                  puls  x,a
01CD 24E5             (   sdisk3_dmc.asm):00263                  bcc   L01B4
01CF 1A01             (   sdisk3_dmc.asm):00264         L01CF    orcc  #$01
01D1 39               (   sdisk3_dmc.asm):00265                  rts   
                      (   sdisk3_dmc.asm):00266         
01D2 1706BD           (   sdisk3_dmc.asm):00267         L01D2    lbsr  L0892
01D5 5F               (   sdisk3_dmc.asm):00268                  clrb  
01D6 39               (   sdisk3_dmc.asm):00269                  rts   
                      (   sdisk3_dmc.asm):00270         
01D7 17010B           (   sdisk3_dmc.asm):00271         L01D7    lbsr  L02E5
01DA 2510             (   sdisk3_dmc.asm):00272                  bcs   L01EC
01DC 1700AC           (   sdisk3_dmc.asm):00273                  lbsr  L028B
01DF 1706A1           (   sdisk3_dmc.asm):00274                  lbsr  L0883
01E2 308DFE53         (   sdisk3_dmc.asm):00275                  leax  >L0039,pcr
01E6 170528           (   sdisk3_dmc.asm):00276                  lbsr  L0711
01E9 1700AC           (   sdisk3_dmc.asm):00277                  lbsr  L0298
01EC 39               (   sdisk3_dmc.asm):00278         L01EC    rts   
                      (   sdisk3_dmc.asm):00279         
01ED 3420             (   sdisk3_dmc.asm):00280         L01ED    pshs  y
01EF 10AEC900AA       (   sdisk3_dmc.asm):00281                  ldy   >u00AA,u
01F4 1708B9           (   sdisk3_dmc.asm):00282                  lbsr  L0AB0
01F7 A722             (   sdisk3_dmc.asm):00283                  sta   $02,y
01F9 AFA4             (   sdisk3_dmc.asm):00284                  stx   ,y
01FB 35A0             (   sdisk3_dmc.asm):00285                  puls  pc,y
                      (   sdisk3_dmc.asm):00286         
01FD 3410             (   sdisk3_dmc.asm):00287         WRITE    pshs  x
01FF 8601             (   sdisk3_dmc.asm):00288                  lda   #$01
0201 1708DE           (   sdisk3_dmc.asm):00289                  lbsr  L0AE2
0204 3401             (   sdisk3_dmc.asm):00290                  pshs  cc
0206 2514             (   sdisk3_dmc.asm):00291                  bcs   L021C
0208 17013F           (   sdisk3_dmc.asm):00292                  lbsr  L034A
020B 250F             (   sdisk3_dmc.asm):00293                  bcs   L021C
020D 8D0F             (   sdisk3_dmc.asm):00294                  bsr   L021E
020F 250B             (   sdisk3_dmc.asm):00295                  bcs   L021C
0211 A6E4             (   sdisk3_dmc.asm):00296                  lda   ,s
0213 8508             (   sdisk3_dmc.asm):00297                  bita  #$08
0215 2604             (   sdisk3_dmc.asm):00298                  bne   L021B
0217 AE61             (   sdisk3_dmc.asm):00299                  ldx   $01,s
0219 8DD2             (   sdisk3_dmc.asm):00300                  bsr   L01ED
021B 5F               (   sdisk3_dmc.asm):00301         L021B    clrb  
021C 3592             (   sdisk3_dmc.asm):00302         L021C    puls  pc,x,a
                      (   sdisk3_dmc.asm):00303         
021E A6C90095         (   sdisk3_dmc.asm):00304         L021E    lda   >u0095,u
0222 3412             (   sdisk3_dmc.asm):00305         L0222    pshs  x,a
0224 8D23             (   sdisk3_dmc.asm):00306                  bsr   L0249
0226 3512             (   sdisk3_dmc.asm):00307                  puls  x,a
0228 2509             (   sdisk3_dmc.asm):00308                  bcs   L0233
022A 6DA828           (   sdisk3_dmc.asm):00309                  tst   <PD.VFY,y
022D 2619             (   sdisk3_dmc.asm):00310                  bne   L0248
022F 8D77             (   sdisk3_dmc.asm):00311                  bsr   L02A8
0231 2415             (   sdisk3_dmc.asm):00312                  bcc   L0248
0233 C101             (   sdisk3_dmc.asm):00313         L0233    cmpb  #$01
0235 270F             (   sdisk3_dmc.asm):00314                  beq   L0246
0237 4D               (   sdisk3_dmc.asm):00315                  tsta  
0238 270C             (   sdisk3_dmc.asm):00316                  beq   L0246
023A 44               (   sdisk3_dmc.asm):00317                  lsra  
023B 24E5             (   sdisk3_dmc.asm):00318                  bcc   L0222
023D 3412             (   sdisk3_dmc.asm):00319                  pshs  x,a
023F 170435           (   sdisk3_dmc.asm):00320                  lbsr  L0677
0242 3512             (   sdisk3_dmc.asm):00321                  puls  x,a
0244 24DC             (   sdisk3_dmc.asm):00322                  bcc   L0222
0246 1A01             (   sdisk3_dmc.asm):00323         L0246    orcc  #$01       Set carry
0248 39               (   sdisk3_dmc.asm):00324         L0248    rts   
                      (   sdisk3_dmc.asm):00325         
0249 170099           (   sdisk3_dmc.asm):00326         L0249    lbsr  L02E5
024C 2532             (   sdisk3_dmc.asm):00327                  bcs   L0280
024E 8D3B             (   sdisk3_dmc.asm):00328                  bsr   L028B
0250 17065E           (   sdisk3_dmc.asm):00329                  lbsr  L08B1
0253 308DFDE7         (   sdisk3_dmc.asm):00330                  leax  >L003E,pcr
0257 200E             (   sdisk3_dmc.asm):00331                  bra   L0267
0259 170089           (   sdisk3_dmc.asm):00332         L0259    lbsr  L02E5
025C 2522             (   sdisk3_dmc.asm):00333                  bcs   L0280
025E 8D2B             (   sdisk3_dmc.asm):00334                  bsr   L028B
0260 170681           (   sdisk3_dmc.asm):00335                  lbsr  L08E4
0263 308DFDDC         (   sdisk3_dmc.asm):00336                  leax  >L0043,pcr
0267 1704A3           (   sdisk3_dmc.asm):00337         L0267    lbsr  L070D
026A 3405             (   sdisk3_dmc.asm):00338                  pshs  b,cc
026C E68DFDAE         (   sdisk3_dmc.asm):00339                  ldb   >L001E,pcr
0270 1705E8           (   sdisk3_dmc.asm):00340         L0270    lbsr  L085B
0273 5A               (   sdisk3_dmc.asm):00341                  decb  
0274 26FA             (   sdisk3_dmc.asm):00342                  bne   L0270
0276 3505             (   sdisk3_dmc.asm):00343                  puls  b,cc
0278 8D1E             (   sdisk3_dmc.asm):00344                  bsr   L0298
027A 39               (   sdisk3_dmc.asm):00345                  rts   
                      (   sdisk3_dmc.asm):00346         
027B 3261             (   sdisk3_dmc.asm):00347         L027B    leas  $01,s
027D 53               (   sdisk3_dmc.asm):00348         L027D    comb               Bad type error
027E C6F9             (   sdisk3_dmc.asm):00349                  ldb   #E$BTyp
0280 39               (   sdisk3_dmc.asm):00350         L0280    rts   
                      (   sdisk3_dmc.asm):00351         
0281 53               (   sdisk3_dmc.asm):00352         L0281    comb               Seek error
0282 C6F7             (   sdisk3_dmc.asm):00353                  ldb   #E$Seek
0284 39               (   sdisk3_dmc.asm):00354                  rts   
                      (   sdisk3_dmc.asm):00355         
0285 3261             (   sdisk3_dmc.asm):00356         L0285    leas  $01,s
0287 53               (   sdisk3_dmc.asm):00357         L0287    comb               Sector error
0288 C6F1             (   sdisk3_dmc.asm):00358                  ldb   #E$Sect
028A 39               (   sdisk3_dmc.asm):00359                  rts   
                      (   sdisk3_dmc.asm):00360         
028B 3401             (   sdisk3_dmc.asm):00361         L028B    pshs  cc
028D 6DC9008B         (   sdisk3_dmc.asm):00362                  tst   >u008B,u
0291 2713             (   sdisk3_dmc.asm):00363                  beq   L02A6
0293 74FF49           (   sdisk3_dmc.asm):00364                  lsr   >fdctrk
0296 200B             (   sdisk3_dmc.asm):00365                  bra   L02A3
0298 3401             (   sdisk3_dmc.asm):00366         L0298    pshs  cc
029A 6DC9008B         (   sdisk3_dmc.asm):00367                  tst   >u008B,u
029E 2706             (   sdisk3_dmc.asm):00368                  beq   L02A6
02A0 78FF49           (   sdisk3_dmc.asm):00369                  lsl   >fdctrk
02A3 1705B5           (   sdisk3_dmc.asm):00370         L02A3    lbsr  L085B
02A6 3581             (   sdisk3_dmc.asm):00371         L02A6    puls  pc,cc
                      (   sdisk3_dmc.asm):00372         
02A8 3432             (   sdisk3_dmc.asm):00373         L02A8    pshs  y,x,a
02AA 17FF2A           (   sdisk3_dmc.asm):00374                  lbsr  L01D7
02AD 2534             (   sdisk3_dmc.asm):00375                  bcs   L02E3
02AF 1705D1           (   sdisk3_dmc.asm):00376                  lbsr  L0883
02B2 AE28             (   sdisk3_dmc.asm):00377                  ldx   $08,y
02B4 ECC9008F         (   sdisk3_dmc.asm):00378                  ldd   >u008F,u
02B8 6DC90098         (   sdisk3_dmc.asm):00379                  tst   >u0098,u
02BC 270A             (   sdisk3_dmc.asm):00380                  beq   L02C8
02BE 8AC0             (   sdisk3_dmc.asm):00381                  ora   #$C0
02C0 170633           (   sdisk3_dmc.asm):00382                  lbsr  L08F6
02C3 4D               (   sdisk3_dmc.asm):00383                  tsta  
02C4 271A             (   sdisk3_dmc.asm):00384                  beq   L02E0
02C6 2015             (   sdisk3_dmc.asm):00385                  bra   L02DD
02C8 1F12             (   sdisk3_dmc.asm):00386         L02C8    tfr   x,y
02CA 44               (   sdisk3_dmc.asm):00387                  lsra  
02CB 56               (   sdisk3_dmc.asm):00388                  rorb  
02CC 44               (   sdisk3_dmc.asm):00389                  lsra  
02CD 56               (   sdisk3_dmc.asm):00390                  rorb  
02CE BEFF4E           (   sdisk3_dmc.asm):00391         L02CE    ldx   >buffer
02D1 ACA4             (   sdisk3_dmc.asm):00392                  cmpx  ,y
02D3 260B             (   sdisk3_dmc.asm):00393                  bne   L02E0
02D5 BEFF4E           (   sdisk3_dmc.asm):00394                  ldx   >buffer
02D8 3124             (   sdisk3_dmc.asm):00395                  leay  $04,y
02DA 5A               (   sdisk3_dmc.asm):00396                  decb  
02DB 26F1             (   sdisk3_dmc.asm):00397                  bne   L02CE
02DD 5F               (   sdisk3_dmc.asm):00398         L02DD    clrb  
02DE 2003             (   sdisk3_dmc.asm):00399                  bra   L02E3
02E0 53               (   sdisk3_dmc.asm):00400         L02E0    comb  
02E1 C6F5             (   sdisk3_dmc.asm):00401                  ldb   #E$Write       write error
02E3 35B2             (   sdisk3_dmc.asm):00402         L02E3    puls  pc,y,x,a
                      (   sdisk3_dmc.asm):00403         
02E5 3411             (   sdisk3_dmc.asm):00404         L02E5    pshs  x,cc
02E7 1A50             (   sdisk3_dmc.asm):00405                  orcc  #$50
02E9 12               (   sdisk3_dmc.asm):00406                  nop   
02EA A6C90087         (   sdisk3_dmc.asm):00407                  lda   >u0087,u
02EE 840F             (   sdisk3_dmc.asm):00408                  anda  #$0F
02F0 6DC90085         (   sdisk3_dmc.asm):00409                  tst   >u0085,u
02F4 2702             (   sdisk3_dmc.asm):00410                  beq   L02F8
02F6 8A40             (   sdisk3_dmc.asm):00411                  ora   #$40
02F8 6DC90086         (   sdisk3_dmc.asm):00412         L02F8    tst   >u0086,u
02FC 2702             (   sdisk3_dmc.asm):00413                  beq   L0300
02FE 8A20             (   sdisk3_dmc.asm):00414                  ora   #$20
0300 6DC9008C         (   sdisk3_dmc.asm):00415         L0300    tst   >u008C,u
0304 2702             (   sdisk3_dmc.asm):00416                  beq   L0308
0306 8A10             (   sdisk3_dmc.asm):00417                  ora   #$10
0308 A7C90087         (   sdisk3_dmc.asm):00418         L0308    sta   >u0087,u
030C 8508             (   sdisk3_dmc.asm):00419                  bita  #$08
030E 2602             (   sdisk3_dmc.asm):00420                  bne   L0312
0310 84D8             (   sdisk3_dmc.asm):00421                  anda  #$D8
0312 B7FF41           (   sdisk3_dmc.asm):00422         L0312    sta   >$FF41
0315 3501             (   sdisk3_dmc.asm):00423                  puls  cc
0317 AEC90081         (   sdisk3_dmc.asm):00424                  ldx   >u0081,u
031B A6E4             (   sdisk3_dmc.asm):00425                  lda   ,s
031D A18815           (   sdisk3_dmc.asm):00426                  cmpa  <$15,x
0320 271D             (   sdisk3_dmc.asm):00427                  beq   L033F
0322 A78815           (   sdisk3_dmc.asm):00428                  sta   <$15,x
0325 B7FF4B           (   sdisk3_dmc.asm):00429                  sta   >fdcdta
0328 170530           (   sdisk3_dmc.asm):00430                  lbsr  L085B
032B 308DFD05         (   sdisk3_dmc.asm):00431                  leax  >L0034,pcr
032F 1703DF           (   sdisk3_dmc.asm):00432                  lbsr  L0711
0332 2514             (   sdisk3_dmc.asm):00433                  bcs   L0348
0334 AE8DFCE2         (   sdisk3_dmc.asm):00434                  ldx   >L001A,pcr
0338 2705             (   sdisk3_dmc.asm):00435                  beq   L033F
033A 170375           (   sdisk3_dmc.asm):00436                  lbsr  L06B2
033D 2509             (   sdisk3_dmc.asm):00437                  bcs   L0348
033F E661             (   sdisk3_dmc.asm):00438         L033F    ldb   $01,s
0341 F7FF4A           (   sdisk3_dmc.asm):00439                  stb   >$FF4A
0344 170514           (   sdisk3_dmc.asm):00440                  lbsr  L085B
0347 5F               (   sdisk3_dmc.asm):00441                  clrb  
0348 3590             (   sdisk3_dmc.asm):00442         L0348    puls  pc,x
                      (   sdisk3_dmc.asm):00443         
034A 5D               (   sdisk3_dmc.asm):00444         L034A    tstb  
034B 1026FF38         (   sdisk3_dmc.asm):00445                  lbne  L0287
034F 17011F           (   sdisk3_dmc.asm):00446                  lbsr  L0471
0352 102500FA         (   sdisk3_dmc.asm):00447                  lbcs  L0450
0356 6FC90085         (   sdisk3_dmc.asm):00448                  clr   >u0085,u
035A 6FC90086         (   sdisk3_dmc.asm):00449                  clr   >u0086,u
035E 6FC9008B         (   sdisk3_dmc.asm):00450                  clr   >u008B,u
0362 6FC9008D         (   sdisk3_dmc.asm):00451                  clr   >u008D,u
0366 6FE2             (   sdisk3_dmc.asm):00452                  clr   ,-s
0368 1F10             (   sdisk3_dmc.asm):00453                  tfr   x,d
036A AEC90081         (   sdisk3_dmc.asm):00454                  ldx   >u0081,u
036E 10830000         (   sdisk3_dmc.asm):00455                  cmpd  #$0000
0372 10270084         (   sdisk3_dmc.asm):00456                  lbeq  L03FA
0376 6CC9008D         (   sdisk3_dmc.asm):00457                  inc   >u008D,u
037A 10A301           (   sdisk3_dmc.asm):00458                  cmpd  $01,x
037D 1024FF04         (   sdisk3_dmc.asm):00459                  lbcc  L0285
0381 A3A82B           (   sdisk3_dmc.asm):00460                  subd  <PD.T0S,y
0384 2405             (   sdisk3_dmc.asm):00461                  bcc   L038B
0386 E3A82B           (   sdisk3_dmc.asm):00462                  addd  <PD.T0S,y
0389 206F             (   sdisk3_dmc.asm):00463                  bra   L03FA
                      (   sdisk3_dmc.asm):00464         
038B 3406             (   sdisk3_dmc.asm):00465         L038B    pshs  b,a
038D EC8811           (   sdisk3_dmc.asm):00466                  ldd   <$11,x
0390 830012           (   sdisk3_dmc.asm):00467                  subd  #$0012
0393 E7C90091         (   sdisk3_dmc.asm):00468                  stb   >u0091,u
0397 E68810           (   sdisk3_dmc.asm):00469                  ldb   <$10,x
039A 54               (   sdisk3_dmc.asm):00470                  lsrb  
039B 242F             (   sdisk3_dmc.asm):00471                  bcc   L03CC
039D E6A827           (   sdisk3_dmc.asm):00472                  ldb   <PD.SID,y
03A0 C101             (   sdisk3_dmc.asm):00473                  cmpb  #$01           only one side?
03A2 3506             (   sdisk3_dmc.asm):00474                  puls  b,a              might as well clean up
03A4 1023FED3         (   sdisk3_dmc.asm):00475                  lbls  L027B            and leave now...
03A8 6DC90091         (   sdisk3_dmc.asm):00476                  tst   >u0091,u
03AC 260F             (   sdisk3_dmc.asm):00477                  bne   L03BD
03AE 2005             (   sdisk3_dmc.asm):00478                  bra   L03B5
03B0 6CE4             (   sdisk3_dmc.asm):00479         L03B0    inc   ,s
03B2 830090           (   sdisk3_dmc.asm):00480                  subd  #$0090
03B5 8101             (   sdisk3_dmc.asm):00481         L03B5    cmpa  #$01
03B7 24F7             (   sdisk3_dmc.asm):00482                  bcc   L03B0
03B9 68E4             (   sdisk3_dmc.asm):00483                  lsl   ,s
03BB 68E4             (   sdisk3_dmc.asm):00484                  lsl   ,s
03BD 63C90085         (   sdisk3_dmc.asm):00485         L03BD    com   >u0085,u
03C1 2602             (   sdisk3_dmc.asm):00486                  bne   L03C5
03C3 6CE4             (   sdisk3_dmc.asm):00487                  inc   ,s
03C5 A38811           (   sdisk3_dmc.asm):00488         L03C5    subd  <$11,x
03C8 24F3             (   sdisk3_dmc.asm):00489                  bcc   L03BD
03CA 2020             (   sdisk3_dmc.asm):00490                  bra   L03EC
03CC 3506             (   sdisk3_dmc.asm):00491         L03CC    puls  b,a
03CE 6DC90091         (   sdisk3_dmc.asm):00492                  tst   >u0091,u
03D2 2611             (   sdisk3_dmc.asm):00493                  bne   L03E5
03D4 2005             (   sdisk3_dmc.asm):00494                  bra   L03DB
03D6 6CE4             (   sdisk3_dmc.asm):00495         L03D6    inc   ,s
03D8 830090           (   sdisk3_dmc.asm):00496                  subd  #$0090
03DB 8101             (   sdisk3_dmc.asm):00497         L03DB    cmpa  #$01
03DD 24F7             (   sdisk3_dmc.asm):00498                  bcc   L03D6
03DF 68E4             (   sdisk3_dmc.asm):00499                  lsl   ,s
03E1 68E4             (   sdisk3_dmc.asm):00500                  lsl   ,s
03E3 68E4             (   sdisk3_dmc.asm):00501                  lsl   ,s
03E5 6CE4             (   sdisk3_dmc.asm):00502         L03E5    inc   ,s
03E7 A38811           (   sdisk3_dmc.asm):00503                  subd  <$11,x
03EA 24F9             (   sdisk3_dmc.asm):00504                  bcc   L03E5
03EC E38811           (   sdisk3_dmc.asm):00505         L03EC    addd  <$11,x
03EF A68810           (   sdisk3_dmc.asm):00506                  lda   <$10,x
03F2 8502             (   sdisk3_dmc.asm):00507                  bita  #$02
03F4 2704             (   sdisk3_dmc.asm):00508                  beq   L03FA
03F6 63C90086         (   sdisk3_dmc.asm):00509                  com   >u0086,u
03FA A6A823           (   sdisk3_dmc.asm):00510         L03FA    lda   <PD.TYP,y
03FD 8520             (   sdisk3_dmc.asm):00511                  bita  #$20
03FF 2704             (   sdisk3_dmc.asm):00512                  beq   L0405
0401 6AC90086         (   sdisk3_dmc.asm):00513                  dec   >u0086,u
0405 A6A832           (   sdisk3_dmc.asm):00514         L0405    lda   <PD.STOFF,y
0408 840F             (   sdisk3_dmc.asm):00515                  anda  #$0F
040A 3402             (   sdisk3_dmc.asm):00516                  pshs  a
040C A6A832           (   sdisk3_dmc.asm):00517                  lda   <PD.STOFF,y
040F 44               (   sdisk3_dmc.asm):00518                  lsra  
0410 44               (   sdisk3_dmc.asm):00519                  lsra  
0411 44               (   sdisk3_dmc.asm):00520                  lsra  
0412 44               (   sdisk3_dmc.asm):00521                  lsra  
0413 3402             (   sdisk3_dmc.asm):00522                  pshs  a
0415 EBE0             (   sdisk3_dmc.asm):00523                  addb  ,s+
0417 3502             (   sdisk3_dmc.asm):00524                  puls  a
0419 ABE4             (   sdisk3_dmc.asm):00525                  adda  ,s
041B A7E4             (   sdisk3_dmc.asm):00526                  sta   ,s
041D 6DC9008D         (   sdisk3_dmc.asm):00527                  tst   >u008D,u
0421 271F             (   sdisk3_dmc.asm):00528                  beq   L0442
0423 A68810           (   sdisk3_dmc.asm):00529                  lda   <$10,x
0426 44               (   sdisk3_dmc.asm):00530                  lsra  
0427 8502             (   sdisk3_dmc.asm):00531                  bita  #$02
0429 270A             (   sdisk3_dmc.asm):00532                  beq   L0435
042B A8A824           (   sdisk3_dmc.asm):00533                  eora  <PD.DNS,y
042E 8502             (   sdisk3_dmc.asm):00534                  bita  #$02
0430 2710             (   sdisk3_dmc.asm):00535                  beq   L0442
0432 16FE46           (   sdisk3_dmc.asm):00536                  lbra  L027B
0435 A8A824           (   sdisk3_dmc.asm):00537         L0435    eora  <PD.DNS,y
0438 8502             (   sdisk3_dmc.asm):00538                  bita  #$02
043A 2706             (   sdisk3_dmc.asm):00539                  beq   L0442
043C 63C9008B         (   sdisk3_dmc.asm):00540                  com   >u008B,u
0440 68E4             (   sdisk3_dmc.asm):00541                  lsl   ,s
0442 3502             (   sdisk3_dmc.asm):00542         L0442    puls  a
0444 A1A826           (   sdisk3_dmc.asm):00543                  cmpa  <PD.CYL+1,y
0447 1024FE36         (   sdisk3_dmc.asm):00544                  lbcc  L0281
044B 1F01             (   sdisk3_dmc.asm):00545                  tfr   d,x
044D 1701F8           (   sdisk3_dmc.asm):00546                  lbsr  L0648
0450 39               (   sdisk3_dmc.asm):00547         L0450    rts   
                      (   sdisk3_dmc.asm):00548         
0451 3410             (   sdisk3_dmc.asm):00549         L0451    pshs  x
0453 A6A821           (   sdisk3_dmc.asm):00550                  lda   <PD.DRV,y      Get the drive number
0456 8103             (   sdisk3_dmc.asm):00551                  cmpa  #$03             is it bigger than 3?
0458 240E             (   sdisk3_dmc.asm):00552                  bcc   L0468            yes - not possible...
                      (   sdisk3_dmc.asm):00553         
                      (   sdisk3_dmc.asm):00554         * this would be where the 4th+ drive hardware mod patch would go.
                      (   sdisk3_dmc.asm):00555         
045A 304F             (   sdisk3_dmc.asm):00556                  leax  drvtab,u       drive table beginning
045C C626             (   sdisk3_dmc.asm):00557                  ldb   #DRVMEM        drive table size
045E 3D               (   sdisk3_dmc.asm):00558                  mul   
045F 308B             (   sdisk3_dmc.asm):00559                  leax  d,x            compute the address
0461 AFC90081         (   sdisk3_dmc.asm):00560                  stx   >u0081,u
0465 5F               (   sdisk3_dmc.asm):00561                  clrb  
0466 3590             (   sdisk3_dmc.asm):00562                  puls  pc,x
                      (   sdisk3_dmc.asm):00563         
0468 53               (   sdisk3_dmc.asm):00564         L0468    comb  
0469 C6F0             (   sdisk3_dmc.asm):00565                  ldb   #E$Unit
046B 3590             (   sdisk3_dmc.asm):00566                  puls  pc,x
                      (   sdisk3_dmc.asm):00567         
046D 8DE2             (   sdisk3_dmc.asm):00568         L046D    bsr   L0451
046F 25DF             (   sdisk3_dmc.asm):00569                  bcs   L0450
0471 3410             (   sdisk3_dmc.asm):00570         L0471    pshs  x
0473 170554           (   sdisk3_dmc.asm):00571                  lbsr  L09CA
0476 2531             (   sdisk3_dmc.asm):00572                  bcs   L04A9
0478 3401             (   sdisk3_dmc.asm):00573                  pshs  cc
047A 1A50             (   sdisk3_dmc.asm):00574                  orcc  #$50
047C 308DFBA6         (   sdisk3_dmc.asm):00575                  leax  >L0026,pcr
0480 A6A821           (   sdisk3_dmc.asm):00576                  lda   <$21,y
0483 E6C90087         (   sdisk3_dmc.asm):00577                  ldb   >u0087,u
0487 C4F8             (   sdisk3_dmc.asm):00578                  andb  #$F8
0489 EA86             (   sdisk3_dmc.asm):00579                  orb   a,x
048B E7C90087         (   sdisk3_dmc.asm):00580                  stb   >u0087,u
048F 3501             (   sdisk3_dmc.asm):00581                  puls  cc
0491 AEC90081         (   sdisk3_dmc.asm):00582                  ldx   >u0081,u
0495 ACC90083         (   sdisk3_dmc.asm):00583                  cmpx  >u0083,u
0499 270D             (   sdisk3_dmc.asm):00584                  beq   L04A8
049B AFC90083         (   sdisk3_dmc.asm):00585                  stx   >u0083,u
049F A68815           (   sdisk3_dmc.asm):00586                  lda   <$15,x
04A2 B7FF49           (   sdisk3_dmc.asm):00587                  sta   >fdctrk
04A5 1703B3           (   sdisk3_dmc.asm):00588                  lbsr  L085B
04A8 5F               (   sdisk3_dmc.asm):00589         L04A8    clrb  
04A9 3590             (   sdisk3_dmc.asm):00590         L04A9    puls  pc,x
                      (   sdisk3_dmc.asm):00591         
04AB CC0100           (   sdisk3_dmc.asm):00592         L04AB    ldd   #$0100
04AE EDC9008F         (   sdisk3_dmc.asm):00593                  std   >u008F,u
04B2 8692             (   sdisk3_dmc.asm):00594                  lda   #$92
04B4 A7C90095         (   sdisk3_dmc.asm):00595                  sta   >u0095,u
04B8 6FC90098         (   sdisk3_dmc.asm):00596                  clr   >u0098,u
04BC 39               (   sdisk3_dmc.asm):00597                  rts   
                      (   sdisk3_dmc.asm):00598         
                      (   sdisk3_dmc.asm):00599         * GetStat entry point
04BD AE26             (   sdisk3_dmc.asm):00600         GETSTA   ldx   PD.RGS,y     get pointer to register stack
04BF E602             (   sdisk3_dmc.asm):00601                  ldb   R$B,x        get callcode
04C1 4F               (   sdisk3_dmc.asm):00602                  clra  
04C2 C184             (   sdisk3_dmc.asm):00603                  cmpb  #$84         SS.SDRD system direct sector read?
04C4 272C             (   sdisk3_dmc.asm):00604                  beq   L04F2
04C6 4C               (   sdisk3_dmc.asm):00605                  inca  
04C7 C180             (   sdisk3_dmc.asm):00606                  cmpb  #$80         SS.DWRIT direct sector write?
04C9 2727             (   sdisk3_dmc.asm):00607                  beq   L04F2
04CB C186             (   sdisk3_dmc.asm):00608                  cmpb  #$86         SS.DRVCH drive cache select?
04CD 2704             (   sdisk3_dmc.asm):00609                  beq   L04D3
04CF 53               (   sdisk3_dmc.asm):00610                  comb  
04D0 C6D0             (   sdisk3_dmc.asm):00611                  ldb   #E$UnkSvc
04D2 39               (   sdisk3_dmc.asm):00612                  rts   
                      (   sdisk3_dmc.asm):00613         
04D3 A6C900A9         (   sdisk3_dmc.asm):00614         L04D3    lda   >u00A9,u
04D7 A701             (   sdisk3_dmc.asm):00615                  sta   R$A,x
04D9 5F               (   sdisk3_dmc.asm):00616                  clrb  
04DA 39               (   sdisk3_dmc.asm):00617                  rts   
                      (   sdisk3_dmc.asm):00618         
                      (   sdisk3_dmc.asm):00619         * Direct sector read entry point
04DB 8D2A             (   sdisk3_dmc.asm):00620         L04DB    bsr   L0507
04DD 251C             (   sdisk3_dmc.asm):00621                  bcs   L04FB
04DF A6C900A9         (   sdisk3_dmc.asm):00622                  lda   >u00A9,u
04E3 2B08             (   sdisk3_dmc.asm):00623                  bmi   L04ED
04E5 A1A821           (   sdisk3_dmc.asm):00624                  cmpa  <PD.DRV,y
04E8 2603             (   sdisk3_dmc.asm):00625                  bne   L04ED
04EA 1705A8           (   sdisk3_dmc.asm):00626                  lbsr  L0A95
04ED 17FD2E           (   sdisk3_dmc.asm):00627         L04ED    lbsr  L021E
04F0 2009             (   sdisk3_dmc.asm):00628                  bra   L04FB
                      (   sdisk3_dmc.asm):00629         
                      (   sdisk3_dmc.asm):00630         * Direct sector write
04F2 8D13             (   sdisk3_dmc.asm):00631         L04F2    bsr   L0507
04F4 2505             (   sdisk3_dmc.asm):00632                  bcs   L04FB
04F6 17FCB7           (   sdisk3_dmc.asm):00633                  lbsr  L01B0
04F9 2500             (   sdisk3_dmc.asm):00634                  bcs   L04FB
04FB 3405             (   sdisk3_dmc.asm):00635         L04FB    pshs  b,cc
04FD ECC90089         (   sdisk3_dmc.asm):00636                  ldd   >u0089,u
0501 ED28             (   sdisk3_dmc.asm):00637                  std   PD.BUF,y
0503 8DA6             (   sdisk3_dmc.asm):00638                  bsr   L04AB
0505 3585             (   sdisk3_dmc.asm):00639                  puls  pc,b,cc
                      (   sdisk3_dmc.asm):00640         
0507 A7C90098         (   sdisk3_dmc.asm):00641         L0507    sta   >u0098,u
050B EC28             (   sdisk3_dmc.asm):00642                  ldd   PD.BUF,y
050D EDC90089         (   sdisk3_dmc.asm):00643                  std   >u0089,u
0511 EC04             (   sdisk3_dmc.asm):00644                  ldd   R$X,x
0513 ED28             (   sdisk3_dmc.asm):00645                  std   PD.BUF,y
0515 EC06             (   sdisk3_dmc.asm):00646                  ldd   R$Y,x
0517 1E89             (   sdisk3_dmc.asm):00647                  exg   a,b
0519 4D               (   sdisk3_dmc.asm):00648                  tsta  
051A 2A06             (   sdisk3_dmc.asm):00649                  bpl   L0522
051C 6FC90095         (   sdisk3_dmc.asm):00650                  clr   >u0095,u
0520 847F             (   sdisk3_dmc.asm):00651                  anda  #$7F
0522 44               (   sdisk3_dmc.asm):00652         L0522    lsra  
0523 44               (   sdisk3_dmc.asm):00653                  lsra  
0524 44               (   sdisk3_dmc.asm):00654                  lsra  
0525 44               (   sdisk3_dmc.asm):00655                  lsra  
0526 C4FC             (   sdisk3_dmc.asm):00656                  andb  #$FC
0528 10830000         (   sdisk3_dmc.asm):00657                  cmpd  #$0000
052C 2604             (   sdisk3_dmc.asm):00658                  bne   L0532
052E EC8DFAEA         (   sdisk3_dmc.asm):00659                  ldd   >L001C,pcr
0532 EDC9008F         (   sdisk3_dmc.asm):00660         L0532    std   >u008F,u
0536 170628           (   sdisk3_dmc.asm):00661                  lbsr  L0B61
0539 17FF15           (   sdisk3_dmc.asm):00662                  lbsr  L0451
053C 2505             (   sdisk3_dmc.asm):00663                  bcs   L0543
053E AE08             (   sdisk3_dmc.asm):00664                  ldx   R$U,x
0540 1700B0           (   sdisk3_dmc.asm):00665                  lbsr  L05F3
0543 39               (   sdisk3_dmc.asm):00666         L0543    rts   
                      (   sdisk3_dmc.asm):00667         
0544 AE26             (   sdisk3_dmc.asm):00668         SETSTA   ldx   PD.RGS,y     grab caller's register stack pointer
0546 E602             (   sdisk3_dmc.asm):00669                  ldb   R$B,x        get the Stat call number
0548 C103             (   sdisk3_dmc.asm):00670                  cmpb  #SS.Reset    Seek to track 0?
054A 10270124         (   sdisk3_dmc.asm):00671                  lbeq  L0672        yes...
054E C104             (   sdisk3_dmc.asm):00672                  cmpb  #SS.Wtrk     direct track write?
0550 10270065         (   sdisk3_dmc.asm):00673                  lbeq  L05B9        yes...
0554 C10A             (   sdisk3_dmc.asm):00674                  cmpb  #SS.Frz
0556 2729             (   sdisk3_dmc.asm):00675                  beq   L0581
0558 C181             (   sdisk3_dmc.asm):00676                  cmpb  #$81         SS.UnFrz
055A 2722             (   sdisk3_dmc.asm):00677                  beq   L057E
055C 4F               (   sdisk3_dmc.asm):00678                  clra  
055D C184             (   sdisk3_dmc.asm):00679                  cmpb  #$84         SS.SDRD
055F 2703             (   sdisk3_dmc.asm):00680                  beq   L0564
0561 4C               (   sdisk3_dmc.asm):00681                  inca  
0562 C180             (   sdisk3_dmc.asm):00682                  cmpb  #$80         SS.DREAD
0564 1027FF73         (   sdisk3_dmc.asm):00683         L0564    lbeq  L04DB
0568 C183             (   sdisk3_dmc.asm):00684                  cmpb  #$83         (SS.MOTIM) change drive motor-on time?
056A 272F             (   sdisk3_dmc.asm):00685                  beq   L059B
056C C185             (   sdisk3_dmc.asm):00686                  cmpb  #$85         (SS.SLEEP) activate/deactivate sleep?
056E 2719             (   sdisk3_dmc.asm):00687                  beq   L0589
0570 C182             (   sdisk3_dmc.asm):00688                  cmpb  #$82         (SS.MOFF) shut off drive motor?
0572 2734             (   sdisk3_dmc.asm):00689                  beq   L05A8
0574 C186             (   sdisk3_dmc.asm):00690                  cmpb  #$86         (SS.DRVCHG) cache select?
0576 10270512         (   sdisk3_dmc.asm):00691                  lbeq  L0A8C
057A 53               (   sdisk3_dmc.asm):00692                  comb  
057B C6D0             (   sdisk3_dmc.asm):00693                  ldb   #E$UnkSvc
057D 39               (   sdisk3_dmc.asm):00694                  rts   
                      (   sdisk3_dmc.asm):00695         
057E 4F               (   sdisk3_dmc.asm):00696         L057E    clra  
057F 2002             (   sdisk3_dmc.asm):00697                  bra   L0583
0581 86FF             (   sdisk3_dmc.asm):00698         L0581    lda   #$FF
0583 A7C90088         (   sdisk3_dmc.asm):00699         L0583    sta   >u0088,u
0587 5F               (   sdisk3_dmc.asm):00700                  clrb  
0588 39               (   sdisk3_dmc.asm):00701                  rts   
                      (   sdisk3_dmc.asm):00702         
0589 AE04             (   sdisk3_dmc.asm):00703         L0589    ldx   R$X,x
058B 2604             (   sdisk3_dmc.asm):00704                  bne   L0591
058D 4F               (   sdisk3_dmc.asm):00705                  clra  
058E 4C               (   sdisk3_dmc.asm):00706                  inca  
058F 2005             (   sdisk3_dmc.asm):00707                  bra   L0596
0591 4F               (   sdisk3_dmc.asm):00708         L0591    clra  
0592 A7C90093         (   sdisk3_dmc.asm):00709                  sta   >u0093,u
0596 A7C90094         (   sdisk3_dmc.asm):00710         L0596    sta   >u0094,u
059A 39               (   sdisk3_dmc.asm):00711                  rts   
                      (   sdisk3_dmc.asm):00712         
                      (   sdisk3_dmc.asm):00713         * Change drive motor time
059B EC04             (   sdisk3_dmc.asm):00714         L059B    ldd   R$X,x
059D 2B03             (   sdisk3_dmc.asm):00715                  bmi   L05A2
059F C30002           (   sdisk3_dmc.asm):00716                  addd  #$0002
05A2 EDC90096         (   sdisk3_dmc.asm):00717         L05A2    std   >u0096,u
05A6 5F               (   sdisk3_dmc.asm):00718                  clrb  
05A7 39               (   sdisk3_dmc.asm):00719                  rts   
                      (   sdisk3_dmc.asm):00720         
05A8 3433             (   sdisk3_dmc.asm):00721         L05A8    pshs  y,x,a,cc
05AA 1A50             (   sdisk3_dmc.asm):00722                  orcc  #$50
05AC 12               (   sdisk3_dmc.asm):00723                  nop   
05AD ECC9009A         (   sdisk3_dmc.asm):00724                  ldd   >virq1,u
05B1 2703             (   sdisk3_dmc.asm):00725                  beq   L05B6
05B3 CC0001           (   sdisk3_dmc.asm):00726                  ldd   #$0001
05B6 160443           (   sdisk3_dmc.asm):00727         L05B6    lbra  L09FC
                      (   sdisk3_dmc.asm):00728         
05B9 A6C900A9         (   sdisk3_dmc.asm):00729         L05B9    lda   >u00A9,u       Write track/format
05BD 1704D5           (   sdisk3_dmc.asm):00730                  lbsr  L0A95
05C0 17FE8E           (   sdisk3_dmc.asm):00731                  lbsr  L0451
05C3 252D             (   sdisk3_dmc.asm):00732                  bcs   L05F2
05C5 E607             (   sdisk3_dmc.asm):00733                  ldb   R$Y+1,x
05C7 AE08             (   sdisk3_dmc.asm):00734                  ldx   R$U,x
05C9 3410             (   sdisk3_dmc.asm):00735                  pshs  x
05CB AEC90081         (   sdisk3_dmc.asm):00736                  ldx   >u0081,u
05CF E78810           (   sdisk3_dmc.asm):00737                  stb   <$10,x
05D2 3506             (   sdisk3_dmc.asm):00738                  puls  b,a
05D4 8601             (   sdisk3_dmc.asm):00739                  lda   #$01
05D6 1E89             (   sdisk3_dmc.asm):00740                  exg   a,b
05D8 1F01             (   sdisk3_dmc.asm):00741                  tfr   d,x
05DA 8D17             (   sdisk3_dmc.asm):00742                  bsr   L05F3
05DC 2514             (   sdisk3_dmc.asm):00743                  bcs   L05F2
05DE 8603             (   sdisk3_dmc.asm):00744                  lda   #$03
05E0 3412             (   sdisk3_dmc.asm):00745         L05E0    pshs  x,a
05E2 17FC74           (   sdisk3_dmc.asm):00746                  lbsr  L0259
05E5 3512             (   sdisk3_dmc.asm):00747                  puls  x,a
05E7 2409             (   sdisk3_dmc.asm):00748                  bcc   L05F2
05E9 C101             (   sdisk3_dmc.asm):00749                  cmpb  #$01
05EB 2703             (   sdisk3_dmc.asm):00750                  beq   L05F0
05ED 4A               (   sdisk3_dmc.asm):00751                  deca  
05EE 26F0             (   sdisk3_dmc.asm):00752                  bne   L05E0
05F0 1A01             (   sdisk3_dmc.asm):00753         L05F0    orcc  #$01
05F2 39               (   sdisk3_dmc.asm):00754         L05F2    rts   
                      (   sdisk3_dmc.asm):00755         
05F3 17FE7B           (   sdisk3_dmc.asm):00756         L05F3    lbsr  L0471
05F6 254F             (   sdisk3_dmc.asm):00757                  bcs   L0647
05F8 3410             (   sdisk3_dmc.asm):00758                  pshs  x
05FA AE26             (   sdisk3_dmc.asm):00759                  ldx   PD.RGS,y
05FC A607             (   sdisk3_dmc.asm):00760                  lda   R$Y+1,x      grab low end of Y
05FE 5F               (   sdisk3_dmc.asm):00761                  clrb  
05FF 8501             (   sdisk3_dmc.asm):00762                  bita  #$01
0601 2709             (   sdisk3_dmc.asm):00763                  beq   L060C
0603 E6A827           (   sdisk3_dmc.asm):00764                  ldb   <PD.SID,y
0606 C101             (   sdisk3_dmc.asm):00765                  cmpb  #$01
0608 231D             (   sdisk3_dmc.asm):00766                  bls   L0627
060A C6FF             (   sdisk3_dmc.asm):00767                  ldb   #$FF
060C E7C90085         (   sdisk3_dmc.asm):00768         L060C    stb   >u0085,u
0610 5F               (   sdisk3_dmc.asm):00769                  clrb  
0611 8502             (   sdisk3_dmc.asm):00770                  bita  #$02
0613 2701             (   sdisk3_dmc.asm):00771                  beq   L0616
0615 53               (   sdisk3_dmc.asm):00772                  comb  
0616 E7C90086         (   sdisk3_dmc.asm):00773         L0616    stb   >u0086,u
061A 5F               (   sdisk3_dmc.asm):00774                  clrb  
061B 44               (   sdisk3_dmc.asm):00775                  lsra  
061C 8502             (   sdisk3_dmc.asm):00776                  bita  #$02
061E 270C             (   sdisk3_dmc.asm):00777                  beq   L062C
0620 A8A824           (   sdisk3_dmc.asm):00778                  eora  <PD.DNS,y
0623 8502             (   sdisk3_dmc.asm):00779                  bita  #$02
0625 270F             (   sdisk3_dmc.asm):00780                  beq   L0636
0627 3262             (   sdisk3_dmc.asm):00781         L0627    leas  $02,s
0629 16FC51           (   sdisk3_dmc.asm):00782                  lbra  L027D
062C A8A824           (   sdisk3_dmc.asm):00783         L062C    eora  <PD.DNS,y
062F 8502             (   sdisk3_dmc.asm):00784                  bita  #$02
0631 2703             (   sdisk3_dmc.asm):00785                  beq   L0636
0633 53               (   sdisk3_dmc.asm):00786                  comb  
0634 68E4             (   sdisk3_dmc.asm):00787                  lsl   ,s
0636 E7C9008B         (   sdisk3_dmc.asm):00788         L0636    stb   >u008B,u
063A 3510             (   sdisk3_dmc.asm):00789                  puls  x
063C 1F10             (   sdisk3_dmc.asm):00790                  tfr   x,d
063E A1A826           (   sdisk3_dmc.asm):00791                  cmpa  <PD.CYL+1,y
0641 1024FC3C         (   sdisk3_dmc.asm):00792                  lbcc  L0281
0645 8D01             (   sdisk3_dmc.asm):00793                  bsr   L0648
0647 39               (   sdisk3_dmc.asm):00794         L0647    rts   
                      (   sdisk3_dmc.asm):00795         
0648 3410             (   sdisk3_dmc.asm):00796         L0648    pshs  x
064A 6FC9008C         (   sdisk3_dmc.asm):00797                  clr   >u008C,u
064E 308DF9CE         (   sdisk3_dmc.asm):00798                  leax  >L0020,pcr
0652 E6A826           (   sdisk3_dmc.asm):00799                  ldb   <PD.CYL+1,y
0655 6D84             (   sdisk3_dmc.asm):00800         L0655    tst   ,x
0657 2708             (   sdisk3_dmc.asm):00801                  beq   L0661
0659 E184             (   sdisk3_dmc.asm):00802                  cmpb  ,x
065B 2704             (   sdisk3_dmc.asm):00803                  beq   L0661
065D 3002             (   sdisk3_dmc.asm):00804                  leax  $02,x
065F 20F4             (   sdisk3_dmc.asm):00805                  bra   L0655
0661 A101             (   sdisk3_dmc.asm):00806         L0661    cmpa  $01,x
0663 250A             (   sdisk3_dmc.asm):00807                  bcs   L066F
0665 6DC90086         (   sdisk3_dmc.asm):00808                  tst   >u0086,u
0669 2704             (   sdisk3_dmc.asm):00809                  beq   L066F
066B 6CC9008C         (   sdisk3_dmc.asm):00810                  inc   >u008C,u
066F 5F               (   sdisk3_dmc.asm):00811         L066F    clrb  
0670 3590             (   sdisk3_dmc.asm):00812                  puls  pc,x
                      (   sdisk3_dmc.asm):00813         
0672 17FDF8           (   sdisk3_dmc.asm):00814         L0672    lbsr  L046D
0675 2537             (   sdisk3_dmc.asm):00815                  bcs   L06AE
0677 308DF9AF         (   sdisk3_dmc.asm):00816         L0677    leax  >L002A,pcr
067B 170093           (   sdisk3_dmc.asm):00817                  lbsr  L0711
067E 2524             (   sdisk3_dmc.asm):00818                  bcs   L06A4
0680 8D2D             (   sdisk3_dmc.asm):00819                  bsr   L06AF
0682 2520             (   sdisk3_dmc.asm):00820                  bcs   L06A4
0684 8605             (   sdisk3_dmc.asm):00821                  lda   #$05
0686 3402             (   sdisk3_dmc.asm):00822         L0686    pshs  a
0688 308DF9A3         (   sdisk3_dmc.asm):00823                  leax  >L002F,pcr
068C 170082           (   sdisk3_dmc.asm):00824                  lbsr  L0711
068F 3502             (   sdisk3_dmc.asm):00825                  puls  a
0691 2511             (   sdisk3_dmc.asm):00826                  bcs   L06A4
0693 4A               (   sdisk3_dmc.asm):00827                  deca  
0694 26F0             (   sdisk3_dmc.asm):00828                  bne   L0686
0696 8D17             (   sdisk3_dmc.asm):00829                  bsr   L06AF
0698 250A             (   sdisk3_dmc.asm):00830                  bcs   L06A4
069A 308DF98C         (   sdisk3_dmc.asm):00831                  leax  >L002A,pcr
069E 8D71             (   sdisk3_dmc.asm):00832                  bsr   L0711
06A0 2502             (   sdisk3_dmc.asm):00833                  bcs   L06A4
06A2 8D0B             (   sdisk3_dmc.asm):00834                  bsr   L06AF
06A4 AEC90081         (   sdisk3_dmc.asm):00835         L06A4    ldx   >u0081,u
06A8 B6FF49           (   sdisk3_dmc.asm):00836                  lda   >fdctrk
06AB A78815           (   sdisk3_dmc.asm):00837                  sta   <$15,x
06AE 39               (   sdisk3_dmc.asm):00838         L06AE    rts   
                      (   sdisk3_dmc.asm):00839         
06AF 8E000E           (   sdisk3_dmc.asm):00840         L06AF    ldx   #$000E
06B2 3412             (   sdisk3_dmc.asm):00841         L06B2    pshs  x,a
06B4 5F               (   sdisk3_dmc.asm):00842                  clrb  
06B5 201D             (   sdisk3_dmc.asm):00843                  bra   L06D4
06B7 103F0A           (   sdisk3_dmc.asm):00844         L06B7    os9   F$Sleep  
06BA AF61             (   sdisk3_dmc.asm):00845         L06BA    stx   $01,s
06BC 9E50             (   sdisk3_dmc.asm):00846                  ldx   <D.Proc
06BE A60C             (   sdisk3_dmc.asm):00847                  lda   P$State,x
06C0 8502             (   sdisk3_dmc.asm):00848                  bita  #Condem
06C2 2644             (   sdisk3_dmc.asm):00849                  bne   L0708
06C4 E68819           (   sdisk3_dmc.asm):00850                  ldb   <P$Signal,x
06C7 AE881A           (   sdisk3_dmc.asm):00851                  ldx   <P$SigVec,x
06CA 2608             (   sdisk3_dmc.asm):00852                  bne   L06D4
06CC C101             (   sdisk3_dmc.asm):00853                  cmpb  #S$Wake
06CE 2304             (   sdisk3_dmc.asm):00854                  bls   L06D4
06D0 C104             (   sdisk3_dmc.asm):00855                  cmpb  #S$Window
06D2 2634             (   sdisk3_dmc.asm):00856                  bne   L0708
06D4 AE61             (   sdisk3_dmc.asm):00857         L06D4    ldx   $01,s
06D6 272D             (   sdisk3_dmc.asm):00858                  beq   L0705
06D8 3406             (   sdisk3_dmc.asm):00859                  pshs  b,a
06DA DC50             (   sdisk3_dmc.asm):00860                  ldd   <D.Proc
06DC 10934A           (   sdisk3_dmc.asm):00861                  cmpd  <D.SysPrc
06DF 3506             (   sdisk3_dmc.asm):00862                  puls  b,a
06E1 2716             (   sdisk3_dmc.asm):00863                  beq   L06F9
06E3 6DC90093         (   sdisk3_dmc.asm):00864                  tst   >u0093,u
06E7 2604             (   sdisk3_dmc.asm):00865                  bne   L06ED
06E9 C101             (   sdisk3_dmc.asm):00866                  cmpb  #$01
06EB 23CA             (   sdisk3_dmc.asm):00867                  bls   L06B7
06ED 86EA             (   sdisk3_dmc.asm):00868         L06ED    lda   #$EA
06EF 170169           (   sdisk3_dmc.asm):00869         L06EF    lbsr  L085B
06F2 4A               (   sdisk3_dmc.asm):00870                  deca  
06F3 26FA             (   sdisk3_dmc.asm):00871                  bne   L06EF
06F5 301F             (   sdisk3_dmc.asm):00872                  leax  -$01,x
06F7 20C1             (   sdisk3_dmc.asm):00873                  bra   L06BA
06F9 86EA             (   sdisk3_dmc.asm):00874         L06F9    lda   #$EA
06FB 17015D           (   sdisk3_dmc.asm):00875         L06FB    lbsr  L085B
06FE 4A               (   sdisk3_dmc.asm):00876                  deca  
06FF 26FA             (   sdisk3_dmc.asm):00877                  bne   L06FB
0701 301F             (   sdisk3_dmc.asm):00878                  leax  -$01,x
0703 26F4             (   sdisk3_dmc.asm):00879                  bne   L06F9
0705 5F               (   sdisk3_dmc.asm):00880         L0705    clrb  
0706 3592             (   sdisk3_dmc.asm):00881                  puls  pc,x,a
                      (   sdisk3_dmc.asm):00882         
0708 53               (   sdisk3_dmc.asm):00883         L0708    comb  
0709 C601             (   sdisk3_dmc.asm):00884                  ldb   #$01
070B 3592             (   sdisk3_dmc.asm):00885                  puls  pc,x,a
070D 8601             (   sdisk3_dmc.asm):00886         L070D    lda   #$01
070F 2001             (   sdisk3_dmc.asm):00887                  bra   L0712
0711 4F               (   sdisk3_dmc.asm):00888         L0711    clra  
0712 3430             (   sdisk3_dmc.asm):00889         L0712    pshs  y,x
0714 F6FF48           (   sdisk3_dmc.asm):00890                  ldb   >fdccmd
0717 C581             (   sdisk3_dmc.asm):00891                  bitb  #$81
0719 102600D0         (   sdisk3_dmc.asm):00892                  lbne  L07ED
071D 1702AA           (   sdisk3_dmc.asm):00893                  lbsr  L09CA
0720 102500F6         (   sdisk3_dmc.asm):00894                  lbcs  L081A
0724 3401             (   sdisk3_dmc.asm):00895                  pshs  cc
0726 1A50             (   sdisk3_dmc.asm):00896                  orcc  #$50
0728 4D               (   sdisk3_dmc.asm):00897                  tsta  
0729 260C             (   sdisk3_dmc.asm):00898                  bne   L0737
072B E604             (   sdisk3_dmc.asm):00899                  ldb   $04,x
072D 2B03             (   sdisk3_dmc.asm):00900                  bmi   L0732
072F E8A822           (   sdisk3_dmc.asm):00901                  eorb  <PD.STP,y
0732 F7FF4C           (   sdisk3_dmc.asm):00902         L0732    stb   >fdread
0735 2005             (   sdisk3_dmc.asm):00903                  bra   L073C
0737 E604             (   sdisk3_dmc.asm):00904         L0737    ldb   $04,x
0739 F7FF44           (   sdisk3_dmc.asm):00905                  stb   >fdwrit
073C AE02             (   sdisk3_dmc.asm):00906         L073C    ldx   $02,x
073E 3501             (   sdisk3_dmc.asm):00907                  puls  cc
0740 DC50             (   sdisk3_dmc.asm):00908                  ldd   <D.Proc
0742 10934A           (   sdisk3_dmc.asm):00909                  cmpd  <D.SysPrc
0745 276B             (   sdisk3_dmc.asm):00910                  beq   L07B2
0747 6DC90092         (   sdisk3_dmc.asm):00911                  tst   >u0092,u
074B 2665             (   sdisk3_dmc.asm):00912                  bne   L07B2
074D 6DC90094         (   sdisk3_dmc.asm):00913                  tst   >u0094,u
0751 265F             (   sdisk3_dmc.asm):00914                  bne   L07B2
0753 6FC90099         (   sdisk3_dmc.asm):00915                  clr   >u0099,u
0757 31C9009F         (   sdisk3_dmc.asm):00916                  leay  >virq2,u
075B 6F24             (   sdisk3_dmc.asm):00917                  clr   PD.DEV+1,y
075D 1F10             (   sdisk3_dmc.asm):00918                  tfr   x,d
075F 8E0001           (   sdisk3_dmc.asm):00919                  ldx   #$0001
0762 103F27           (   sdisk3_dmc.asm):00920                  os9   F$VIRQ   
0765 2409             (   sdisk3_dmc.asm):00921                  bcc   L0770
0767 1600B0           (   sdisk3_dmc.asm):00922                  lbra  L081A
076A 8E0001           (   sdisk3_dmc.asm):00923         L076A    ldx   #$0001
076D 103F0A           (   sdisk3_dmc.asm):00924                  os9   F$Sleep  
0770 9E50             (   sdisk3_dmc.asm):00925         L0770    ldx   <D.Proc
0772 A60C             (   sdisk3_dmc.asm):00926                  lda   P$State,x
0774 E68819           (   sdisk3_dmc.asm):00927                  ldb   <P$Signal,x
0777 AE881A           (   sdisk3_dmc.asm):00928                  ldx   <P$SigVec,x
077A 2608             (   sdisk3_dmc.asm):00929                  bne   L0784
077C C101             (   sdisk3_dmc.asm):00930                  cmpb  #S$Wake
077E 2304             (   sdisk3_dmc.asm):00931                  bls   L0784
0780 C104             (   sdisk3_dmc.asm):00932                  cmpb  #S$Window
0782 2604             (   sdisk3_dmc.asm):00933                  bne   L0788
0784 8502             (   sdisk3_dmc.asm):00934         L0784    bita  #Condem
0786 2711             (   sdisk3_dmc.asm):00935                  beq   L0799
0788 31C9009F         (   sdisk3_dmc.asm):00936         L0788    leay  >virq2,u
078C 8E0000           (   sdisk3_dmc.asm):00937                  ldx   #$0000
078F 103F27           (   sdisk3_dmc.asm):00938                  os9   F$VIRQ   
0792 17008A           (   sdisk3_dmc.asm):00939                  lbsr  L081F
0795 C601             (   sdisk3_dmc.asm):00940                  ldb   #$01
0797 207F             (   sdisk3_dmc.asm):00941                  bra   L0818
0799 7DFF40           (   sdisk3_dmc.asm):00942         L0799    tst   >fdcdrv
079C 2B08             (   sdisk3_dmc.asm):00943                  bmi   L07A6
079E 6DC90099         (   sdisk3_dmc.asm):00944                  tst   >u0099,u
07A2 27C6             (   sdisk3_dmc.asm):00945                  beq   L076A
07A4 2047             (   sdisk3_dmc.asm):00946                  bra   L07ED
07A6 31C9009F         (   sdisk3_dmc.asm):00947         L07A6    leay  >virq2,u
07AA 8E0000           (   sdisk3_dmc.asm):00948                  ldx   #$0000
07AD 103F27           (   sdisk3_dmc.asm):00949                  os9   F$VIRQ   
07B0 2041             (   sdisk3_dmc.asm):00950                  bra   L07F3
07B2 86D2             (   sdisk3_dmc.asm):00951         L07B2    lda   #$D2
07B4 1700A4           (   sdisk3_dmc.asm):00952         L07B4    lbsr  L085B
07B7 7DFF40           (   sdisk3_dmc.asm):00953                  tst   >fdcdrv
07BA 2B37             (   sdisk3_dmc.asm):00954                  bmi   L07F3
07BC 4A               (   sdisk3_dmc.asm):00955                  deca  
07BD 26F5             (   sdisk3_dmc.asm):00956                  bne   L07B4
07BF 301F             (   sdisk3_dmc.asm):00957                  leax  -$01,x
07C1 272A             (   sdisk3_dmc.asm):00958                  beq   L07ED
07C3 DC50             (   sdisk3_dmc.asm):00959                  ldd   <u0050
07C5 10934A           (   sdisk3_dmc.asm):00960                  cmpd  <u004A
07C8 27E8             (   sdisk3_dmc.asm):00961                  beq   L07B2
07CA 3410             (   sdisk3_dmc.asm):00962                  pshs  x
07CC 9E50             (   sdisk3_dmc.asm):00963                  ldx   <D.Proc
07CE A60C             (   sdisk3_dmc.asm):00964                  lda   P$State,x
07D0 E68819           (   sdisk3_dmc.asm):00965                  ldb   <P$Signal,x
07D3 AE881A           (   sdisk3_dmc.asm):00966                  ldx   <P$SigVec,x
07D6 3510             (   sdisk3_dmc.asm):00967                  puls  x
07D8 2608             (   sdisk3_dmc.asm):00968                  bne   L07E2
07DA C101             (   sdisk3_dmc.asm):00969                  cmpb  #$01
07DC 2304             (   sdisk3_dmc.asm):00970                  bls   L07E2
07DE C104             (   sdisk3_dmc.asm):00971                  cmpb  #$04
07E0 2604             (   sdisk3_dmc.asm):00972                  bne   L07E6
07E2 8502             (   sdisk3_dmc.asm):00973         L07E2    bita  #Condem
07E4 27CC             (   sdisk3_dmc.asm):00974                  beq   L07B2
07E6 170036           (   sdisk3_dmc.asm):00975         L07E6    lbsr  L081F
07E9 C601             (   sdisk3_dmc.asm):00976                  ldb   #$01
07EB 202B             (   sdisk3_dmc.asm):00977                  bra   L0818
07ED 8D30             (   sdisk3_dmc.asm):00978         L07ED    bsr   L081F
07EF C680             (   sdisk3_dmc.asm):00979                  ldb   #$80
07F1 2006             (   sdisk3_dmc.asm):00980                  bra   L07F9
07F3 B6FF44           (   sdisk3_dmc.asm):00981         L07F3    lda   >fdwrit
07F6 F6FF48           (   sdisk3_dmc.asm):00982                  ldb   >fdccmd
07F9 E7C9008E         (   sdisk3_dmc.asm):00983         L07F9    stb   >u008E,u
07FD 1701CA           (   sdisk3_dmc.asm):00984                  lbsr  L09CA
0800 2518             (   sdisk3_dmc.asm):00985                  bcs   L081A
0802 308DF7FA         (   sdisk3_dmc.asm):00986                  leax  >0,pcr
0806 ECF4             (   sdisk3_dmc.asm):00987                  ldd   [,s]
0808 308B             (   sdisk3_dmc.asm):00988                  leax  d,x
080A E6C9008E         (   sdisk3_dmc.asm):00989                  ldb   >u008E,u
080E 6D84             (   sdisk3_dmc.asm):00990         L080E    tst   ,x
0810 270A             (   sdisk3_dmc.asm):00991                  beq   L081C
0812 E581             (   sdisk3_dmc.asm):00992                  bitb  ,x++
0814 27F8             (   sdisk3_dmc.asm):00993                  beq   L080E
0816 E682             (   sdisk3_dmc.asm):00994                  ldb   ,-x
0818 1A01             (   sdisk3_dmc.asm):00995         L0818    orcc  #$01
081A 35B0             (   sdisk3_dmc.asm):00996         L081A    puls  pc,y,x
081C 5F               (   sdisk3_dmc.asm):00997         L081C    clrb  
081D 35B0             (   sdisk3_dmc.asm):00998                  puls  pc,y,x
                      (   sdisk3_dmc.asm):00999         
081F 3405             (   sdisk3_dmc.asm):01000         L081F    pshs  b,cc
0821 1A50             (   sdisk3_dmc.asm):01001                  orcc  #$50
0823 B6FF44           (   sdisk3_dmc.asm):01002                  lda   >fdwrit
0826 A6C90087         (   sdisk3_dmc.asm):01003                  lda   >u0087,u
082A 84DF             (   sdisk3_dmc.asm):01004                  anda  #$DF
082C B7FF41           (   sdisk3_dmc.asm):01005                  sta   >$FF41
082F 3501             (   sdisk3_dmc.asm):01006                  puls  cc
0831 17F917           (   sdisk3_dmc.asm):01007                  lbsr  L014B
0834 3584             (   sdisk3_dmc.asm):01008                  puls  pc,b
                      (   sdisk3_dmc.asm):01009         
0836 80F6             (   sdisk3_dmc.asm):01010                  fdb   $80f6
0838 1017             (   sdisk3_dmc.asm):01011                  fdb   $1017
083A 08F3             (   sdisk3_dmc.asm):01012                  fdb   $08f3
083C 01F6             (   sdisk3_dmc.asm):01013                  fdb   $01f6
083E 0080             (   sdisk3_dmc.asm):01014                  fdb   $0080
0840 F640             (   sdisk3_dmc.asm):01015                  fdb   $f640
0842 F220             (   sdisk3_dmc.asm):01016                  fdb   $f220
0844 F510             (   sdisk3_dmc.asm):01017                  fdb   $f510
0846 F708             (   sdisk3_dmc.asm):01018                  fdb   $f708
0848 F304             (   sdisk3_dmc.asm):01019                  fdb   $f304
084A F501             (   sdisk3_dmc.asm):01020                  fdb   $f501
084C F600             (   sdisk3_dmc.asm):01021                  fdb   $f600
084E 80F6             (   sdisk3_dmc.asm):01022                  fdb   $80f6
0850 20F4             (   sdisk3_dmc.asm):01023                  fdb   $20f4
0852 10F7             (   sdisk3_dmc.asm):01024                  fdb   $10f7
0854 08F3             (   sdisk3_dmc.asm):01025                  fdb   $08f3
0856 04F4             (   sdisk3_dmc.asm):01026                  fdb   $04f4
0858 01F6             (   sdisk3_dmc.asm):01027                  fdb   $01f6
085A 00               (   sdisk3_dmc.asm):01028                  fcb   $00
                      (   sdisk3_dmc.asm):01029         
085B 7D00A0           (   sdisk3_dmc.asm):01030         L085B    tst   >$00A0
085E 2704             (   sdisk3_dmc.asm):01031                  beq   L0864
0860 8D06             (   sdisk3_dmc.asm):01032                  bsr   L0868
0862 8D00             (   sdisk3_dmc.asm):01033                  bsr   L0864
0864 8D00             (   sdisk3_dmc.asm):01034         L0864    bsr   L0866
0866 8D00             (   sdisk3_dmc.asm):01035         L0866    bsr   L0868
0868 39               (   sdisk3_dmc.asm):01036         L0868    rts   
                      (   sdisk3_dmc.asm):01037         
0869 3402             (   sdisk3_dmc.asm):01038         L0869    pshs  a
086B A6C900A2         (   sdisk3_dmc.asm):01039                  lda   >u00A2,u
086F 8501             (   sdisk3_dmc.asm):01040                  bita  #$01
0871 270D             (   sdisk3_dmc.asm):01041                  beq   L0880
0873 A7C90098         (   sdisk3_dmc.asm):01042                  sta   >u0098,u
0877 84FE             (   sdisk3_dmc.asm):01043                  anda  #$FE
0879 A7C900A2         (   sdisk3_dmc.asm):01044                  sta   >u00A2,u
087D 4F               (   sdisk3_dmc.asm):01045                  clra  
087E 2001             (   sdisk3_dmc.asm):01046                  bra   L0881
0880 43               (   sdisk3_dmc.asm):01047         L0880    coma  
0881 3582             (   sdisk3_dmc.asm):01048         L0881    puls  pc,a
0883 E6C900A4         (   sdisk3_dmc.asm):01049         L0883    ldb   >u00A4,u
0887 F7FF42           (   sdisk3_dmc.asm):01050         L0887    stb   >fdptrl
088A 54               (   sdisk3_dmc.asm):01051                  lsrb  
088B 54               (   sdisk3_dmc.asm):01052                  lsrb  
088C 54               (   sdisk3_dmc.asm):01053                  lsrb  
088D 54               (   sdisk3_dmc.asm):01054                  lsrb  
088E F7FF46           (   sdisk3_dmc.asm):01055                  stb   >fdptrh
0891 39               (   sdisk3_dmc.asm):01056                  rts   
                      (   sdisk3_dmc.asm):01057         
0892 344A             (   sdisk3_dmc.asm):01058         L0892    pshs  u,dp,a
0894 8D3C             (   sdisk3_dmc.asm):01059                  bsr   L08D2
0896 6DC90098         (   sdisk3_dmc.asm):01060                  tst   >u0098,u
089A 2706             (   sdisk3_dmc.asm):01061                  beq   L08A2
089C 8A80             (   sdisk3_dmc.asm):01062                  ora   #$80
089E 8D56             (   sdisk3_dmc.asm):01063                  bsr   L08F6
08A0 200D             (   sdisk3_dmc.asm):01064                  bra   L08AF
08A2 8D37             (   sdisk3_dmc.asm):01065         L08A2    bsr   L08DB
08A4 DE4E             (   sdisk3_dmc.asm):01066         L08A4    ldu   <u004E
08A6 EF81             (   sdisk3_dmc.asm):01067                  stu   ,x++
08A8 DE4E             (   sdisk3_dmc.asm):01068                  ldu   <u004E
08AA EF81             (   sdisk3_dmc.asm):01069                  stu   ,x++
08AC 5A               (   sdisk3_dmc.asm):01070                  decb  
08AD 26F5             (   sdisk3_dmc.asm):01071                  bne   L08A4
08AF 35CA             (   sdisk3_dmc.asm):01072         L08AF    puls  pc,u,dp,a
                      (   sdisk3_dmc.asm):01073         
08B1 344A             (   sdisk3_dmc.asm):01074         L08B1    pshs  u,dp,a
08B3 8D1D             (   sdisk3_dmc.asm):01075                  bsr   L08D2
08B5 6DC90098         (   sdisk3_dmc.asm):01076                  tst   >u0098,u
08B9 2704             (   sdisk3_dmc.asm):01077                  beq   L08BF
08BB 8D39             (   sdisk3_dmc.asm):01078                  bsr   L08F6
08BD 200F             (   sdisk3_dmc.asm):01079                  bra   L08CE
08BF 8D1A             (   sdisk3_dmc.asm):01080         L08BF    bsr   L08DB
08C1 EE81             (   sdisk3_dmc.asm):01081         L08C1    ldu   ,x++
08C3 DF4E             (   sdisk3_dmc.asm):01082                  stu   <u004E
08C5 EE81             (   sdisk3_dmc.asm):01083                  ldu   ,x++
08C7 DF4E             (   sdisk3_dmc.asm):01084                  stu   <u004E
08C9 5A               (   sdisk3_dmc.asm):01085                  decb  
08CA 26F5             (   sdisk3_dmc.asm):01086                  bne   L08C1
08CC EE62             (   sdisk3_dmc.asm):01087                  ldu   $02,s
08CE 8DB3             (   sdisk3_dmc.asm):01088         L08CE    bsr   L0883
08D0 35CA             (   sdisk3_dmc.asm):01089                  puls  pc,u,dp,a
                      (   sdisk3_dmc.asm):01090         
08D2 8DAF             (   sdisk3_dmc.asm):01091         L08D2    bsr   L0883
08D4 AE28             (   sdisk3_dmc.asm):01092                  ldx   $08,y
08D6 ECC9008F         (   sdisk3_dmc.asm):01093                  ldd   >u008F,u
08DA 39               (   sdisk3_dmc.asm):01094                  rts   
08DB 44               (   sdisk3_dmc.asm):01095         L08DB    lsra  
08DC 56               (   sdisk3_dmc.asm):01096                  rorb  
08DD 44               (   sdisk3_dmc.asm):01097                  lsra  
08DE 56               (   sdisk3_dmc.asm):01098                  rorb  
08DF 86FF             (   sdisk3_dmc.asm):01099                  lda   #$FF
08E1 1F8B             (   sdisk3_dmc.asm):01100                  tfr   a,dp
08E3 39               (   sdisk3_dmc.asm):01101                  rts   
                      (   sdisk3_dmc.asm):01102         
08E4 C620             (   sdisk3_dmc.asm):01103         L08E4    ldb   #$20
08E6 8D9F             (   sdisk3_dmc.asm):01104                  bsr   L0887
08E8 AE26             (   sdisk3_dmc.asm):01105                  ldx   PD.RGS,y
08EA AE04             (   sdisk3_dmc.asm):01106                  ldx   R$X,x
08EC CC1A00           (   sdisk3_dmc.asm):01107                  ldd   #$1A00
08EF 8D05             (   sdisk3_dmc.asm):01108                  bsr   L08F6
08F1 C620             (   sdisk3_dmc.asm):01109                  ldb   #$20
08F3 8D92             (   sdisk3_dmc.asm):01110                  bsr   L0887
08F5 39               (   sdisk3_dmc.asm):01111                  rts   
                      (   sdisk3_dmc.asm):01112         
08F6 3472             (   sdisk3_dmc.asm):01113         L08F6    pshs  u,y,x,a
08F8 3274             (   sdisk3_dmc.asm):01114                  leas  -$0C,s
08FA A76B             (   sdisk3_dmc.asm):01115                  sta   $0B,s
08FC 843F             (   sdisk3_dmc.asm):01116                  anda  #$3F
08FE ED64             (   sdisk3_dmc.asm):01117                  std   $04,s
0900 8601             (   sdisk3_dmc.asm):01118                  lda   #$01
0902 A76C             (   sdisk3_dmc.asm):01119                  sta   $0C,s
0904 1F10             (   sdisk3_dmc.asm):01120                  tfr   x,d
0906 841F             (   sdisk3_dmc.asm):01121                  anda  #$1F
0908 ED68             (   sdisk3_dmc.asm):01122                  std   $08,s
090A 1E10             (   sdisk3_dmc.asm):01123                  exg   x,d
090C 44               (   sdisk3_dmc.asm):01124                  lsra  
090D 44               (   sdisk3_dmc.asm):01125                  lsra  
090E 44               (   sdisk3_dmc.asm):01126                  lsra  
090F 44               (   sdisk3_dmc.asm):01127                  lsra  
0910 44               (   sdisk3_dmc.asm):01128                  lsra  
0911 48               (   sdisk3_dmc.asm):01129                  lsla  
0912 4C               (   sdisk3_dmc.asm):01130                  inca  
0913 DE50             (   sdisk3_dmc.asm):01131                  ldu   <D.Proc
0915 E646             (   sdisk3_dmc.asm):01132                  ldb   P$Task,u
0917 DEA1             (   sdisk3_dmc.asm):01133                  ldu   <D.TskIPt
0919 58               (   sdisk3_dmc.asm):01134                  lslb  
091A EEC5             (   sdisk3_dmc.asm):01135                  ldu   b,u
091C 33C6             (   sdisk3_dmc.asm):01136                  leau  a,u
091E EF66             (   sdisk3_dmc.asm):01137                  stu   $06,s
0920 CC2000           (   sdisk3_dmc.asm):01138                  ldd   #$2000
0923 A368             (   sdisk3_dmc.asm):01139                  subd  $08,s
0925 EDE4             (   sdisk3_dmc.asm):01140                  std   ,s
0927 3401             (   sdisk3_dmc.asm):01141         L0927    pshs  cc
0929 1A50             (   sdisk3_dmc.asm):01142                  orcc  #$50
092B EC9F004C         (   sdisk3_dmc.asm):01143                  ldd   [>D.SysDAT]
092F E76B             (   sdisk3_dmc.asm):01144                  stb   $0B,s
0931 EC65             (   sdisk3_dmc.asm):01145                  ldd   $05,s
0933 10A361           (   sdisk3_dmc.asm):01146                  cmpd  $01,s
0936 2302             (   sdisk3_dmc.asm):01147                  bls   L093A
0938 EC61             (   sdisk3_dmc.asm):01148                  ldd   $01,s
093A 10830040         (   sdisk3_dmc.asm):01149         L093A    cmpd  #$0040
093E 2303             (   sdisk3_dmc.asm):01150                  bls   L0943
0940 CC0040           (   sdisk3_dmc.asm):01151                  ldd   #$0040
0943 ED63             (   sdisk3_dmc.asm):01152         L0943    std   $03,s
0945 44               (   sdisk3_dmc.asm):01153                  lsra  
0946 56               (   sdisk3_dmc.asm):01154                  rorb  
0947 1F02             (   sdisk3_dmc.asm):01155                  tfr   d,y
0949 E6F807           (   sdisk3_dmc.asm):01156                  ldb   [<$07,s]
094C F7FFA0           (   sdisk3_dmc.asm):01157                  stb   >$FFA0
094F A66C             (   sdisk3_dmc.asm):01158                  lda   $0C,s
0951 2A39             (   sdisk3_dmc.asm):01159                  bpl   L098C
0953 8540             (   sdisk3_dmc.asm):01160                  bita  #$40
0955 2616             (   sdisk3_dmc.asm):01161                  bne   L096D
0957 2409             (   sdisk3_dmc.asm):01162                  bcc   L0962
0959 B6FF4E           (   sdisk3_dmc.asm):01163                  lda   >buffer
095C A780             (   sdisk3_dmc.asm):01164                  sta   ,x+
095E 31A4             (   sdisk3_dmc.asm):01165                  leay  ,y
0960 273E             (   sdisk3_dmc.asm):01166                  beq   L09A0
0962 FCFF4E           (   sdisk3_dmc.asm):01167         L0962    ldd   >buffer
0965 ED81             (   sdisk3_dmc.asm):01168                  std   ,x++
0967 313F             (   sdisk3_dmc.asm):01169                  leay  -$01,y
0969 26F7             (   sdisk3_dmc.asm):01170                  bne   L0962
096B 2033             (   sdisk3_dmc.asm):01171                  bra   L09A0
096D 240D             (   sdisk3_dmc.asm):01172         L096D    bcc   L097C
096F B6FF4E           (   sdisk3_dmc.asm):01173                  lda   >buffer
0972 A180             (   sdisk3_dmc.asm):01174                  cmpa  ,x+
0974 2702             (   sdisk3_dmc.asm):01175                  beq   L0978
0976 6F6D             (   sdisk3_dmc.asm):01176                  clr   $0D,s
0978 31A4             (   sdisk3_dmc.asm):01177         L0978    leay  ,y
097A 2724             (   sdisk3_dmc.asm):01178                  beq   L09A0
097C FCFF4E           (   sdisk3_dmc.asm):01179         L097C    ldd   >buffer
097F 10A381           (   sdisk3_dmc.asm):01180                  cmpd  ,x++
0982 2702             (   sdisk3_dmc.asm):01181                  beq   L0986
0984 6F6D             (   sdisk3_dmc.asm):01182                  clr   $0D,s
0986 313F             (   sdisk3_dmc.asm):01183         L0986    leay  -$01,y
0988 26F2             (   sdisk3_dmc.asm):01184                  bne   L097C
098A 2014             (   sdisk3_dmc.asm):01185                  bra   L09A0
098C 2409             (   sdisk3_dmc.asm):01186         L098C    bcc   L0997
098E A680             (   sdisk3_dmc.asm):01187                  lda   ,x+
0990 B7FF4E           (   sdisk3_dmc.asm):01188                  sta   >buffer
0993 31A4             (   sdisk3_dmc.asm):01189                  leay  ,y
0995 2709             (   sdisk3_dmc.asm):01190                  beq   L09A0
0997 EC81             (   sdisk3_dmc.asm):01191         L0997    ldd   ,x++
0999 FDFF4E           (   sdisk3_dmc.asm):01192                  std   >buffer
099C 313F             (   sdisk3_dmc.asm):01193                  leay  -$01,y
099E 26F7             (   sdisk3_dmc.asm):01194                  bne   L0997
09A0 E66B             (   sdisk3_dmc.asm):01195         L09A0    ldb   $0B,s
09A2 F7FFA0           (   sdisk3_dmc.asm):01196                  stb   >$FFA0
09A5 3501             (   sdisk3_dmc.asm):01197                  puls  cc
09A7 EC64             (   sdisk3_dmc.asm):01198                  ldd   $04,s
09A9 A362             (   sdisk3_dmc.asm):01199                  subd  $02,s
09AB 2719             (   sdisk3_dmc.asm):01200                  beq   L09C6
09AD ED64             (   sdisk3_dmc.asm):01201                  std   $04,s
09AF ECE4             (   sdisk3_dmc.asm):01202                  ldd   ,s
09B1 A362             (   sdisk3_dmc.asm):01203                  subd  $02,s
09B3 260C             (   sdisk3_dmc.asm):01204                  bne   L09C1
09B5 1F01             (   sdisk3_dmc.asm):01205                  tfr   d,x
09B7 EC66             (   sdisk3_dmc.asm):01206                  ldd   $06,s
09B9 C30002           (   sdisk3_dmc.asm):01207                  addd  #$0002
09BC ED66             (   sdisk3_dmc.asm):01208                  std   $06,s
09BE CC2000           (   sdisk3_dmc.asm):01209                  ldd   #$2000
09C1 EDE4             (   sdisk3_dmc.asm):01210         L09C1    std   ,s
09C3 16FF61           (   sdisk3_dmc.asm):01211                  lbra  L0927
09C6 326C             (   sdisk3_dmc.asm):01212         L09C6    leas  $0C,s
09C8 35F2             (   sdisk3_dmc.asm):01213                  puls  pc,u,y,x,a
                      (   sdisk3_dmc.asm):01214         
09CA 3433             (   sdisk3_dmc.asm):01215         L09CA    pshs  y,x,a,cc
09CC 1A50             (   sdisk3_dmc.asm):01216                  orcc  #$50
09CE 12               (   sdisk3_dmc.asm):01217                  nop   
09CF A6C90087         (   sdisk3_dmc.asm):01218                  lda   >u0087,u
09D3 8508             (   sdisk3_dmc.asm):01219                  bita  #$08
09D5 2618             (   sdisk3_dmc.asm):01220                  bne   L09EF
09D7 8A08             (   sdisk3_dmc.asm):01221                  ora   #$08
09D9 A7C90087         (   sdisk3_dmc.asm):01222                  sta   >u0087,u
09DD 84D8             (   sdisk3_dmc.asm):01223                  anda  #$D8
09DF B7FF41           (   sdisk3_dmc.asm):01224                  sta   >$FF41
09E2 8D21             (   sdisk3_dmc.asm):01225                  bsr   L0A05
09E4 3501             (   sdisk3_dmc.asm):01226                  puls  cc
09E6 AE8DF62E         (   sdisk3_dmc.asm):01227                  ldx   >L0018,pcr
09EA 17FCC5           (   sdisk3_dmc.asm):01228                  lbsr  L06B2
09ED 2014             (   sdisk3_dmc.asm):01229                  bra   L0A03
09EF B7FF41           (   sdisk3_dmc.asm):01230         L09EF    sta   >$FF41
09F2 0D32             (   sdisk3_dmc.asm):01231                  tst   <D.MotOn
09F4 2702             (   sdisk3_dmc.asm):01232                  beq   L09F8
09F6 8D0D             (   sdisk3_dmc.asm):01233                  bsr   L0A05
09F8 ECC90096         (   sdisk3_dmc.asm):01234         L09F8    ldd   >u0096,u
09FC EDC9009A         (   sdisk3_dmc.asm):01235         L09FC    std   >virq1,u
0A00 3501             (   sdisk3_dmc.asm):01236                  puls  cc
0A02 5F               (   sdisk3_dmc.asm):01237                  clrb  
0A03 35B2             (   sdisk3_dmc.asm):01238         L0A03    puls  pc,y,x,a
                      (   sdisk3_dmc.asm):01239         
0A05 0F32             (   sdisk3_dmc.asm):01240         L0A05    clr   <D.MotOn
0A07 ECC90096         (   sdisk3_dmc.asm):01241                  ldd   >u0096,u
0A0B 31C9009A         (   sdisk3_dmc.asm):01242                  leay  >virq1,u
0A0F 6F24             (   sdisk3_dmc.asm):01243                  clr   $04,y
0A11 8E0001           (   sdisk3_dmc.asm):01244                  ldx   #$0001
0A14 103F27           (   sdisk3_dmc.asm):01245                  os9   F$VIRQ   
0A17 2403             (   sdisk3_dmc.asm):01246                  bcc   L0A1C
0A19 0A32             (   sdisk3_dmc.asm):01247                  dec   <D.MotOn
0A1B 39               (   sdisk3_dmc.asm):01248                  rts   
0A1C 6DC90092         (   sdisk3_dmc.asm):01249         L0A1C    tst   >u0092,u
0A20 2707             (   sdisk3_dmc.asm):01250                  beq   L0A29
0A22 6FC90092         (   sdisk3_dmc.asm):01251                  clr   >u0092,u
0A26 17FB68           (   sdisk3_dmc.asm):01252                  lbsr  L0591
0A29 39               (   sdisk3_dmc.asm):01253         L0A29    rts   
0A2A 3402             (   sdisk3_dmc.asm):01254         L0A2A    pshs  a
0A2C 43               (   sdisk3_dmc.asm):01255                  coma  
0A2D A6C9009E         (   sdisk3_dmc.asm):01256                  lda   >u009E,u
0A31 8501             (   sdisk3_dmc.asm):01257                  bita  #$01
0A33 271E             (   sdisk3_dmc.asm):01258                  beq   L0A53
0A35 0D8A             (   sdisk3_dmc.asm):01259                  tst   <D.DMAReq
0A37 2705             (   sdisk3_dmc.asm):01260                  beq   L0A3E
0A39 8DCA             (   sdisk3_dmc.asm):01261                  bsr   L0A05
0A3B 4F               (   sdisk3_dmc.asm):01262                  clra  
0A3C 2015             (   sdisk3_dmc.asm):01263                  bra   L0A53
0A3E A6C90087         (   sdisk3_dmc.asm):01264         L0A3E    lda   >u0087,u
0A42 84F7             (   sdisk3_dmc.asm):01265                  anda  #$F7
0A44 A7C90087         (   sdisk3_dmc.asm):01266                  sta   >u0087,u
0A48 84D8             (   sdisk3_dmc.asm):01267                  anda  #$D8
0A4A B7FF41           (   sdisk3_dmc.asm):01268                  sta   >$FF41
0A4D 6FC9009E         (   sdisk3_dmc.asm):01269                  clr   >u009E,u
0A51 0F32             (   sdisk3_dmc.asm):01270                  clr   <D.MotOn
0A53 3582             (   sdisk3_dmc.asm):01271         L0A53    puls  pc,a
                      (   sdisk3_dmc.asm):01272         
0A55 3416             (   sdisk3_dmc.asm):01273         L0A55    pshs  x,b,a
0A57 86BE             (   sdisk3_dmc.asm):01274                  lda   #$BE
0A59 A7C900A8         (   sdisk3_dmc.asm):01275                  sta   >u00A8,u
0A5D 4F               (   sdisk3_dmc.asm):01276                  clra  
0A5E C63C             (   sdisk3_dmc.asm):01277                  ldb   #$3C
0A60 17FE24           (   sdisk3_dmc.asm):01278                  lbsr  L0887
0A63 B7FF4E           (   sdisk3_dmc.asm):01279                  sta   >buffer
0A66 4A               (   sdisk3_dmc.asm):01280                  deca  
0A67 C67C             (   sdisk3_dmc.asm):01281                  ldb   #$7C
0A69 17FE1B           (   sdisk3_dmc.asm):01282                  lbsr  L0887
0A6C B7FF4E           (   sdisk3_dmc.asm):01283                  sta   >buffer
0A6F C63C             (   sdisk3_dmc.asm):01284                  ldb   #$3C
0A71 17FE13           (   sdisk3_dmc.asm):01285                  lbsr  L0887
0A74 4F               (   sdisk3_dmc.asm):01286                  clra  
0A75 C67C             (   sdisk3_dmc.asm):01287                  ldb   #$7C
0A77 7DFF4E           (   sdisk3_dmc.asm):01288                  tst   >buffer
0A7A 2704             (   sdisk3_dmc.asm):01289                  beq   L0A80
0A7C 8620             (   sdisk3_dmc.asm):01290                  lda   #$20
0A7E C61C             (   sdisk3_dmc.asm):01291                  ldb   #$1C
0A80 A7C900A5         (   sdisk3_dmc.asm):01292         L0A80    sta   >u00A5,u
0A84 E7C900A6         (   sdisk3_dmc.asm):01293                  stb   >u00A6,u
0A88 86FF             (   sdisk3_dmc.asm):01294                  lda   #$FF
0A8A 200F             (   sdisk3_dmc.asm):01295                  bra   L0A9B
0A8C A6A821           (   sdisk3_dmc.asm):01296         L0A8C    lda   <$21,y
0A8F AE04             (   sdisk3_dmc.asm):01297                  ldx   $04,x
0A91 2602             (   sdisk3_dmc.asm):01298                  bne   L0A95
0A93 86FF             (   sdisk3_dmc.asm):01299                  lda   #$FF
0A95 3416             (   sdisk3_dmc.asm):01300         L0A95    pshs  x,b,a
0A97 E6C900A6         (   sdisk3_dmc.asm):01301                  ldb   >u00A6,u
0A9B A7C900A9         (   sdisk3_dmc.asm):01302         L0A9B    sta   >u00A9,u
0A9F 30C900AC         (   sdisk3_dmc.asm):01303                  leax  >u00AC,u
0AA3 86FF             (   sdisk3_dmc.asm):01304                  lda   #$FF
0AA5 A780             (   sdisk3_dmc.asm):01305         L0AA5    sta   ,x+
0AA7 A780             (   sdisk3_dmc.asm):01306                  sta   ,x+
0AA9 6F80             (   sdisk3_dmc.asm):01307                  clr   ,x+
0AAB 5A               (   sdisk3_dmc.asm):01308                  decb  
0AAC 26F7             (   sdisk3_dmc.asm):01309                  bne   L0AA5
0AAE 3596             (   sdisk3_dmc.asm):01310                  puls  pc,x,b,a
0AB0 3414             (   sdisk3_dmc.asm):01311         L0AB0    pshs  x,b
0AB2 A6C900A8         (   sdisk3_dmc.asm):01312                  lda   >u00A8,u
0AB6 4C               (   sdisk3_dmc.asm):01313                  inca  
0AB7 81FF             (   sdisk3_dmc.asm):01314                  cmpa  #$FF
0AB9 2621             (   sdisk3_dmc.asm):01315                  bne   L0ADC
0ABB 30C900AC         (   sdisk3_dmc.asm):01316                  leax  >u00AC,u
0ABF E6C900A6         (   sdisk3_dmc.asm):01317                  ldb   >u00A6,u
0AC3 A602             (   sdisk3_dmc.asm):01318         L0AC3    lda   $02,x
0AC5 270E             (   sdisk3_dmc.asm):01319                  beq   L0AD5
0AC7 817F             (   sdisk3_dmc.asm):01320                  cmpa  #$7F
0AC9 2304             (   sdisk3_dmc.asm):01321                  bls   L0ACF
0ACB 8040             (   sdisk3_dmc.asm):01322                  suba  #$40
0ACD 2004             (   sdisk3_dmc.asm):01323                  bra   L0AD3
0ACF 44               (   sdisk3_dmc.asm):01324         L0ACF    lsra  
0AD0 2601             (   sdisk3_dmc.asm):01325                  bne   L0AD3
0AD2 4C               (   sdisk3_dmc.asm):01326                  inca  
0AD3 A702             (   sdisk3_dmc.asm):01327         L0AD3    sta   $02,x
0AD5 3003             (   sdisk3_dmc.asm):01328         L0AD5    leax  $03,x
0AD7 5A               (   sdisk3_dmc.asm):01329                  decb  
0AD8 26E9             (   sdisk3_dmc.asm):01330                  bne   L0AC3
0ADA 86BF             (   sdisk3_dmc.asm):01331                  lda   #$BF
0ADC A7C900A8         (   sdisk3_dmc.asm):01332         L0ADC    sta   >u00A8,u
0AE0 3594             (   sdisk3_dmc.asm):01333                  puls  pc,x,b
                      (   sdisk3_dmc.asm):01334         
0AE2 5D               (   sdisk3_dmc.asm):01335         L0AE2    tstb  
0AE3 1026F7A0         (   sdisk3_dmc.asm):01336                  lbne  L0287
0AE7 8CFFFF           (   sdisk3_dmc.asm):01337                  cmpx  #$FFFF
0AEA 1027F799         (   sdisk3_dmc.asm):01338                  lbeq  L0287
0AEE 3436             (   sdisk3_dmc.asm):01339                  pshs  y,x,b,a
0AF0 A7C900A7         (   sdisk3_dmc.asm):01340                  sta   >u00A7,u
0AF4 17F95A           (   sdisk3_dmc.asm):01341                  lbsr  L0451
0AF7 253E             (   sdisk3_dmc.asm):01342                  bcs   L0B37
0AF9 A6C900A9         (   sdisk3_dmc.asm):01343                  lda   >u00A9,u
0AFD 2B64             (   sdisk3_dmc.asm):01344                  bmi   L0B63
0AFF A1A821           (   sdisk3_dmc.asm):01345                  cmpa  <PD.DRV,y
0B02 265F             (   sdisk3_dmc.asm):01346                  bne   L0B63
0B04 8C0003           (   sdisk3_dmc.asm):01347                  cmpx  #$0003
0B07 234E             (   sdisk3_dmc.asm):01348                  bls   L0B57
0B09 86FF             (   sdisk3_dmc.asm):01349                  lda   #$FF
0B0B E6C900A6         (   sdisk3_dmc.asm):01350                  ldb   >u00A6,u
0B0F C004             (   sdisk3_dmc.asm):01351                  subb  #$04
0B11 31C900B8         (   sdisk3_dmc.asm):01352                  leay  >u00B8,u
0B15 ACA4             (   sdisk3_dmc.asm):01353         L0B15    cmpx  ,y
0B17 2720             (   sdisk3_dmc.asm):01354                  beq   L0B39
0B19 A122             (   sdisk3_dmc.asm):01355                  cmpa  $02,y
0B1B 2304             (   sdisk3_dmc.asm):01356                  bls   L0B21
0B1D A622             (   sdisk3_dmc.asm):01357                  lda   $02,y
0B1F E7E4             (   sdisk3_dmc.asm):01358                  stb   ,s
0B21 3123             (   sdisk3_dmc.asm):01359         L0B21    leay  $03,y
0B23 5A               (   sdisk3_dmc.asm):01360                  decb  
0B24 26EF             (   sdisk3_dmc.asm):01361                  bne   L0B15
0B26 E6C900A6         (   sdisk3_dmc.asm):01362                  ldb   >u00A6,u
0B2A E0E4             (   sdisk3_dmc.asm):01363                  subb  ,s
0B2C 8D4E             (   sdisk3_dmc.asm):01364                  bsr   L0B7C
0B2E CCFFFF           (   sdisk3_dmc.asm):01365         L0B2E    ldd   #$FFFF
0B31 EDA4             (   sdisk3_dmc.asm):01366                  std   ,y
0B33 6F22             (   sdisk3_dmc.asm):01367         L0B33    clr   $02,y
0B35 8601             (   sdisk3_dmc.asm):01368                  lda   #$01
0B37 35B6             (   sdisk3_dmc.asm):01369         L0B37    puls  pc,y,x,b,a
                      (   sdisk3_dmc.asm):01370         
0B39 10AFC900AA       (   sdisk3_dmc.asm):01371         L0B39    sty   >u00AA,u
0B3E E7E4             (   sdisk3_dmc.asm):01372                  stb   ,s
0B40 E6C900A6         (   sdisk3_dmc.asm):01373                  ldb   >u00A6,u
0B44 E0E4             (   sdisk3_dmc.asm):01374                  subb  ,s
0B46 EBC900A5         (   sdisk3_dmc.asm):01375                  addb  >u00A5,u
0B4A E7C900A4         (   sdisk3_dmc.asm):01376                  stb   >u00A4,u
0B4E 6DC900A7         (   sdisk3_dmc.asm):01377         L0B4E    tst   >u00A7,u
0B52 26DA             (   sdisk3_dmc.asm):01378                  bne   L0B2E
0B54 4F               (   sdisk3_dmc.asm):01379                  clra  
0B55 35B6             (   sdisk3_dmc.asm):01380                  puls  pc,y,x,b,a
                      (   sdisk3_dmc.asm):01381         
0B57 1F10             (   sdisk3_dmc.asm):01382         L0B57    tfr   x,d
0B59 8D21             (   sdisk3_dmc.asm):01383                  bsr   L0B7C
0B5B 6D22             (   sdisk3_dmc.asm):01384                  tst   $02,y
0B5D 26EF             (   sdisk3_dmc.asm):01385                  bne   L0B4E
0B5F 20D2             (   sdisk3_dmc.asm):01386                  bra   L0B33
0B61 3436             (   sdisk3_dmc.asm):01387         L0B61    pshs  y,x,b,a
0B63 A6C900A6         (   sdisk3_dmc.asm):01388         L0B63    lda   >u00A6,u
0B67 ABC900A5         (   sdisk3_dmc.asm):01389                  adda  >u00A5,u
0B6B A7C900A4         (   sdisk3_dmc.asm):01390                  sta   >u00A4,u
0B6F 31C90220         (   sdisk3_dmc.asm):01391                  leay  >u0220,u
0B73 10AFC900AA       (   sdisk3_dmc.asm):01392                  sty   >u00AA,u
0B78 4F               (   sdisk3_dmc.asm):01393                  clra  
0B79 4A               (   sdisk3_dmc.asm):01394                  deca  
0B7A 35B6             (   sdisk3_dmc.asm):01395                  puls  pc,y,x,b,a
0B7C 1F98             (   sdisk3_dmc.asm):01396         L0B7C    tfr   b,a
0B7E ABC900A5         (   sdisk3_dmc.asm):01397                  adda  >u00A5,u
0B82 A7C900A4         (   sdisk3_dmc.asm):01398                  sta   >u00A4,u
0B86 8603             (   sdisk3_dmc.asm):01399                  lda   #$03
0B88 3D               (   sdisk3_dmc.asm):01400                  mul   
0B89 31C900AC         (   sdisk3_dmc.asm):01401                  leay  >u00AC,u
0B8D 31AB             (   sdisk3_dmc.asm):01402                  leay  d,y
0B8F 10AFC900AA       (   sdisk3_dmc.asm):01403                  sty   >u00AA,u
0B94 39               (   sdisk3_dmc.asm):01404                  rts   
                      (   sdisk3_dmc.asm):01405         
0B95 0000             (   sdisk3_dmc.asm):01406         L0B95    fdb   $0000
                      (   sdisk3_dmc.asm):01407         
0B97 D9987E           (   sdisk3_dmc.asm):01408                  emod
                      (   sdisk3_dmc.asm):01409         
     0B9A             (   sdisk3_dmc.asm):01410         eom      equ   *
                      (   sdisk3_dmc.asm):01411         
