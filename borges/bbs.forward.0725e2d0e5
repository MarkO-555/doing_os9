                      (../cmds/BBS.forwa):00001                    nam    BBS.forward
                      (../cmds/BBS.forwa):00002                    ttl    program module
                      (../cmds/BBS.forwa):00003         
                      (../cmds/BBS.forwa):00004                    ifp1
                      (../cmds/BBS.forwa):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/BBS.forwa):00006                    endc
                      (../cmds/BBS.forwa):00007         
     0011             (../cmds/BBS.forwa):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/BBS.forwa):00009         atrv       set    ReEnt+rev
     0001             (../cmds/BBS.forwa):00010         rev        set    $01
                      (../cmds/BBS.forwa):00011         
0000 87CD0725000D1181 (../cmds/BBS.forwa):00012                    mod    eom,name,tylg,atrv,start,size
     0A01BD02BC
                      (../cmds/BBS.forwa):00013         
0000.                 (../cmds/BBS.forwa):00014         U0000      rmb    1
0001.                 (../cmds/BBS.forwa):00015         U0001      rmb    1
0002.                 (../cmds/BBS.forwa):00016         U0002      rmb    1
0003.                 (../cmds/BBS.forwa):00017         U0003      rmb    1
0004.                 (../cmds/BBS.forwa):00018         U0004      rmb    1
0005.                 (../cmds/BBS.forwa):00019         U0005      rmb    1
0006.                 (../cmds/BBS.forwa):00020         U0006      rmb    1
0007.                 (../cmds/BBS.forwa):00021         U0007      rmb    1
0008.                 (../cmds/BBS.forwa):00022         U0008      rmb    2
000A.                 (../cmds/BBS.forwa):00023         U000A      rmb    2
000C.                 (../cmds/BBS.forwa):00024         U000C      rmb    2
000E.                 (../cmds/BBS.forwa):00025         U000E      rmb    2
0010.                 (../cmds/BBS.forwa):00026         U0010      rmb    6
0016.                 (../cmds/BBS.forwa):00027         U0016      rmb    2
0018.                 (../cmds/BBS.forwa):00028         U0018      rmb    2
001A.                 (../cmds/BBS.forwa):00029         U001A      rmb    2
001C.                 (../cmds/BBS.forwa):00030         U001C      rmb    18
002E.                 (../cmds/BBS.forwa):00031         U002E      rmb    1
002F.                 (../cmds/BBS.forwa):00032         U002F      rmb    1
0030.                 (../cmds/BBS.forwa):00033         U0030      rmb    2
0032.                 (../cmds/BBS.forwa):00034         U0032      rmb    2
0034.                 (../cmds/BBS.forwa):00035         U0034      rmb    2
0036.                 (../cmds/BBS.forwa):00036         U0036      rmb    6
003C.                 (../cmds/BBS.forwa):00037         U003C      rmb    3
003F.                 (../cmds/BBS.forwa):00038         U003F      rmb    1
0040.                 (../cmds/BBS.forwa):00039         U0040      rmb    2
0042.                 (../cmds/BBS.forwa):00040         U0042      rmb    1
0043.                 (../cmds/BBS.forwa):00041         U0043      rmb    6
0049.                 (../cmds/BBS.forwa):00042         U0049      rmb    1
004A.                 (../cmds/BBS.forwa):00043         U004A      rmb    1
004B.                 (../cmds/BBS.forwa):00044         U004B      rmb    2
004D.                 (../cmds/BBS.forwa):00045         U004D      rmb    1
004E.                 (../cmds/BBS.forwa):00046         U004E      rmb    1
004F.                 (../cmds/BBS.forwa):00047         U004F      rmb    1
0050.                 (../cmds/BBS.forwa):00048         U0050      rmb    1
0051.                 (../cmds/BBS.forwa):00049         U0051      rmb    1
0052.                 (../cmds/BBS.forwa):00050         U0052      rmb    1
0053.                 (../cmds/BBS.forwa):00051         U0053      rmb    1
0054.                 (../cmds/BBS.forwa):00052         U0054      rmb    1
0055.                 (../cmds/BBS.forwa):00053         U0055      rmb    1
0056.                 (../cmds/BBS.forwa):00054         U0056      rmb    1
0057.                 (../cmds/BBS.forwa):00055         U0057      rmb    1
0058.                 (../cmds/BBS.forwa):00056         U0058      rmb    1
0059.                 (../cmds/BBS.forwa):00057         U0059      rmb    1
005A.                 (../cmds/BBS.forwa):00058         U005A      rmb    1
005B.                 (../cmds/BBS.forwa):00059         U005B      rmb    1
005C.                 (../cmds/BBS.forwa):00060         U005C      rmb    64
009C.                 (../cmds/BBS.forwa):00061         U009C      rmb    80
00EC.                 (../cmds/BBS.forwa):00062         U00EC      rmb    2
00EE.                 (../cmds/BBS.forwa):00063         U00EE      rmb    2
00F0.                 (../cmds/BBS.forwa):00064         U00F0      rmb    20
0104.                 (../cmds/BBS.forwa):00065         U0104      rmb    30
0122.                 (../cmds/BBS.forwa):00066         U0122      rmb    1
0123.                 (../cmds/BBS.forwa):00067         U0123      rmb    1
0124.                 (../cmds/BBS.forwa):00068         U0124      rmb    1
0125.                 (../cmds/BBS.forwa):00069         U0125      rmb    1
0126.                 (../cmds/BBS.forwa):00070         U0126      rmb    4
012A.                 (../cmds/BBS.forwa):00071         U012A      rmb    2
012C.                 (../cmds/BBS.forwa):00072         U012C      rmb    1
012D.                 (../cmds/BBS.forwa):00073         U012D      rmb    399
     02BC             (../cmds/BBS.forwa):00074         size       equ    .
                      (../cmds/BBS.forwa):00075         
000D 4242532E666F7277 (../cmds/BBS.forwa):00076         name       fcs    /BBS.forward/                                            * 000D 42 42 53 2E 66 6F 72 77 61 72 E4 BBS.forward
     6172E4
0018 436F707972696768 (../cmds/BBS.forwa):00077                    fcc    "Copyright (C) 1988"                                  * 0018 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 Copyright (C) 1988
     7420284329203139
     3838
002A 4279204B65697468 (../cmds/BBS.forwa):00078                    fcc    "By Keith Alphonso"                                   * 002A 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F By Keith Alphonso
     20416C70686F6E73
     6F
003B 4C6963656E636564 (../cmds/BBS.forwa):00079                    fcc    "Licenced to Alpha Software Technologies"             * 003B 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 Licenced to Alpha Software Technologies
     20746F20416C7068
     6120536F66747761
     726520546563686E
     6F6C6F67696573
0062 416C6C2072696768 (../cmds/BBS.forwa):00080                    fcc    "All rights reserved"                                 * 0062 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 All rights reserved
     7473207265736572
     766564
0075 EC               (../cmds/BBS.forwa):00081                    fcb    $EC                                                   * 0075 EC             l
0076 E6               (../cmds/BBS.forwa):00082                    fcb    $E6                                                   * 0076 E6             f
0077 EA               (../cmds/BBS.forwa):00083                    fcb    $EA                                                   * 0077 EA             j
0078 F5               (../cmds/BBS.forwa):00084                    fcb    $F5                                                   * 0078 F5             u
0079 E9               (../cmds/BBS.forwa):00085                    fcb    $E9                                                   * 0079 E9             i
007A A0               (../cmds/BBS.forwa):00086                    fcb    $A0                                                   * 007A A0
007B E2               (../cmds/BBS.forwa):00087                    fcb    $E2                                                   * 007B E2             b
007C ED               (../cmds/BBS.forwa):00088                    fcb    $ED                                                   * 007C ED             m
007D F1               (../cmds/BBS.forwa):00089                    fcb    $F1                                                   * 007D F1             q
007E E9               (../cmds/BBS.forwa):00090                    fcb    $E9                                                   * 007E E9             i
007F F0               (../cmds/BBS.forwa):00091                    fcb    $F0                                                   * 007F F0             p
0080 EF               (../cmds/BBS.forwa):00092                    fcb    $EF                                                   * 0080 EF             o
0081 F4               (../cmds/BBS.forwa):00093                    fcb    $F4                                                   * 0081 F4             t
0082 F0               (../cmds/BBS.forwa):00094                    fcb    $F0                                                   * 0082 F0             p
0083 48696768206D6573 (../cmds/BBS.forwa):00095         L0083      fcc    "High message is #"                                   * 0083 48 69 67 68 20 6D 65 73 73 61 67 65 20 69 73 20 23 High message is #
     7361676520697320
     23
0094 00               (../cmds/BBS.forwa):00096         L0094      fcb    $00                                                   * 0094 00             .
0095 11               (../cmds/BBS.forwa):00097                    fcb    $11                                                   * 0095 11             .
0096 456E746572207374 (../cmds/BBS.forwa):00098         L0096      fcc    "Enter starting message #"                            * 0096 45 6E 74 65 72 20 73 74 61 72 74 69 6E 67 20 6D 65 73 73 61 67 65 20 23 Enter starting message #
     617274696E67206D
     6573736167652023
00AE 0D               (../cmds/BBS.forwa):00099                    fcb    $0D                                                   * 00AE 0D             .
00AF 3E               (../cmds/BBS.forwa):00100         L00AF      fcc    ">"                                                   * 00AF 3E             >
00B0 4242532E6D73672E (../cmds/BBS.forwa):00101         L00B0      fcc    "BBS.msg.inx"                                         * 00B0 42 42 53 2E 6D 73 67 2E 69 6E 78 BBS.msg.inx
     696E78
00BB 0D               (../cmds/BBS.forwa):00102                    fcb    $0D                                                   * 00BB 0D             .
00BC 4242532E6D7367   (../cmds/BBS.forwa):00103         L00BC      fcc    "BBS.msg"                                             * 00BC 42 42 53 2E 6D 73 67 BBS.msg
00C3 0D               (../cmds/BBS.forwa):00104                    fcb    $0D                                                   * 00C3 0D             .
00C4 2A2A2A2A2A2A2020 (../cmds/BBS.forwa):00105         L00C4      fcc    "******   DELETED   ******"                           * 00C4 2A 2A 2A 2A 2A 2A 20 20 20 44 45 4C 45 54 45 44 20 20 20 2A 2A 2A 2A 2A 2A ******   DELETED   ******
     2044454C45544544
     2020202A2A2A2A2A
     2A
00DD 0D               (../cmds/BBS.forwa):00106                    fcb    $0D                                                   * 00DD 0D             .
00DE 4D65737361676520 (../cmds/BBS.forwa):00107         L00DE      fcc    "Message :"                                           * 00DE 4D 65 73 73 61 67 65 20 3A Message :
     3A
00E7 46726F6D20202020 (../cmds/BBS.forwa):00108         L00E7      fcc    "From    :"                                           * 00E7 46 72 6F 6D 20 20 20 20 3A From    :
     3A
00F0 546F202020202020 (../cmds/BBS.forwa):00109         L00F0      fcc    "To      :"                                           * 00F0 54 6F 20 20 20 20 20 20 3A To      :
     3A
00F9 4C656674206F6E20 (../cmds/BBS.forwa):00110         L00F9      fcc    "Left on :"                                           * 00F9 4C 65 66 74 20 6F 6E 20 3A Left on :
     3A
0102 41626F7574202020 (../cmds/BBS.forwa):00111         L0102      fcc    "About   :"                                           * 0102 41 62 6F 75 74 20 20 20 3A About   :
     3A
010B 00               (../cmds/BBS.forwa):00112         L010B      fcb    $00                                                   * 010B 00             .
010C 09               (../cmds/BBS.forwa):00113                    fcb    $09                                                   * 010C 09             .
010D 2D2D2D2D2D2D2D2D (../cmds/BBS.forwa):00114         L010D      fcc    "----------------------------------------------------------------" * 010D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
014D 0D               (../cmds/BBS.forwa):00115                    fcb    $0D                                                   * 014D 0D             .
014E 0A               (../cmds/BBS.forwa):00116         L014E      fcb    $0A                                                   * 014E 0A             .
014F 0A               (../cmds/BBS.forwa):00117                    fcb    $0A                                                   * 014F 0A             .
0150 0D               (../cmds/BBS.forwa):00118                    fcb    $0D                                                   * 0150 0D             .
0151 5072657373203C53 (../cmds/BBS.forwa):00119         L0151      fcc    "Press <SPACE> to skip a message"                     * 0151 50 72 65 73 73 20 3C 53 50 41 43 45 3E 20 74 6F 20 73 6B 69 70 20 61 20 6D 65 73 73 61 67 65 Press <SPACE> to skip a message
     504143453E20746F
     20736B6970206120
     6D657373616765
0170 0A               (../cmds/BBS.forwa):00120                    fcb    $0A                                                   * 0170 0A             .
0171 0D               (../cmds/BBS.forwa):00121                    fcb    $0D                                                   * 0171 0D             .
0172 4242532E6D73672E (../cmds/BBS.forwa):00122         L0172      fcc    "BBS.msg.lst"                                         * 0172 42 42 53 2E 6D 73 67 2E 6C 73 74 BBS.msg.lst
     6C7374
017D 0D               (../cmds/BBS.forwa):00123                    fcb    $0D                                                   * 017D 0D             .
017E 2F64642F6262732F (../cmds/BBS.forwa):00124         L017E      fcc    "/dd/bbs/BBS.userstats"                               * 017E 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
0193 0D               (../cmds/BBS.forwa):00125                    fcb    $0D                                                   * 0193 0D             .
0194 2F64642F6262732F (../cmds/BBS.forwa):00126         L0194      fcc    "/dd/bbs/BBS.alias"                                   * 0194 2F 64 64 2F 62 62 73 2F 42 42 53 2E 61 6C 69 61 73 /dd/bbs/BBS.alias
     4242532E616C6961
     73
01A5 0D               (../cmds/BBS.forwa):00127                    fcb    $0D                                                   * 01A5 0D             .
01A6 556E6B6E6F776E20 (../cmds/BBS.forwa):00128         L01A6      fcc    "Unknown User"                                        * 01A6 55 6E 6B 6E 6F 77 6E 20 55 73 65 72 Unknown User
     55736572
01B2 0D               (../cmds/BBS.forwa):00129                    fcb    $0D                                                   * 01B2 0D             .
01B3 416C6C2055736572 (../cmds/BBS.forwa):00130         L01B3      fcc    "All Users"                                           * 01B3 41 6C 6C 20 55 73 65 72 73 All Users
     73
01BC 0D               (../cmds/BBS.forwa):00131                    fcb    $0D                                                   * 01BC 0D             .
                      (../cmds/BBS.forwa):00132         
01BD 103F0C           (../cmds/BBS.forwa):00133         start      os9    F$ID                                                  * 01BD 10 3F 0C       .?.
01C0 10AF4A           (../cmds/BBS.forwa):00134                    sty    U000A,U                                               * 01C0 10 AF 4A       ./J
01C3 CC0000           (../cmds/BBS.forwa):00135                    ldd    #0                                                    * 01C3 CC 00 00       L..
01C6 ED48             (../cmds/BBS.forwa):00136                    std    U0008,U                                               * 01C6 ED 48          mH
01C8 108E0000         (../cmds/BBS.forwa):00137                    ldy    #0                                                    * 01C8 10 8E 00 00    ....
01CC 103F1C           (../cmds/BBS.forwa):00138                    os9    F$SUser                                               * 01CC 10 3F 1C       .?.
01CF 308DFEDD         (../cmds/BBS.forwa):00139                    leax   >L00B0,PC                                             * 01CF 30 8D FE DD    0.~]
01D3 8601             (../cmds/BBS.forwa):00140                    lda    #1                                                    * 01D3 86 01          ..
01D5 103F84           (../cmds/BBS.forwa):00141                    os9    I$Open                                                * 01D5 10 3F 84       .?.
01D8 10250452         (../cmds/BBS.forwa):00142                    lbcs   L062E                                                 * 01D8 10 25 04 52    .%.R
01DC A741             (../cmds/BBS.forwa):00143                    sta    U0001,U                                               * 01DC A7 41          'A
01DE 308DFF90         (../cmds/BBS.forwa):00144                    leax   >L0172,PC                                             * 01DE 30 8D FF 90    0...
01E2 8603             (../cmds/BBS.forwa):00145                    lda    #3                                                    * 01E2 86 03          ..
01E4 103F84           (../cmds/BBS.forwa):00146                    os9    I$Open                                                * 01E4 10 3F 84       .?.
01E7 240F             (../cmds/BBS.forwa):00147                    bcc    L01F8                                                 * 01E7 24 0F          $.
01E9 C1D8             (../cmds/BBS.forwa):00148                    cmpb   #216                                                  * 01E9 C1 D8          AX
01EB 1026043F         (../cmds/BBS.forwa):00149                    lbne   L062E                                                 * 01EB 10 26 04 3F    .&.?
01EF C60B             (../cmds/BBS.forwa):00150                    ldb    #11                                                   * 01EF C6 0B          F.
01F1 103F83           (../cmds/BBS.forwa):00151                    os9    I$Create                                              * 01F1 10 3F 83       .?.
01F4 10250436         (../cmds/BBS.forwa):00152                    lbcs   L062E                                                 * 01F4 10 25 04 36    .%.6
01F8 A743             (../cmds/BBS.forwa):00153         L01F8      sta    U0003,U                                               * 01F8 A7 43          'C
01FA 308DFEBE         (../cmds/BBS.forwa):00154                    leax   >L00BC,PC                                             * 01FA 30 8D FE BE    0.~>
01FE 8601             (../cmds/BBS.forwa):00155                    lda    #1                                                    * 01FE 86 01          ..
0200 103F84           (../cmds/BBS.forwa):00156                    os9    I$Open                                                * 0200 10 3F 84       .?.
0203 10250427         (../cmds/BBS.forwa):00157                    lbcs   L062E                                                 * 0203 10 25 04 27    .%.'
0207 A742             (../cmds/BBS.forwa):00158                    sta    U0002,U                                               * 0207 A7 42          'B
0209 30C85C           (../cmds/BBS.forwa):00159                    leax   <U005C,U                                              * 0209 30 C8 5C       0H\
020C 108E0040         (../cmds/BBS.forwa):00160                    ldy    #64                                                   * 020C 10 8E 00 40    ...@
0210 A641             (../cmds/BBS.forwa):00161                    lda    U0001,U                                               * 0210 A6 41          &A
0212 103F89           (../cmds/BBS.forwa):00162                    os9    I$Read                                                * 0212 10 3F 89       .?.
0215 10250415         (../cmds/BBS.forwa):00163                    lbcs   L062E                                                 * 0215 10 25 04 15    .%..
0219 ECC85C           (../cmds/BBS.forwa):00164                    ldd    <U005C,U                                              * 0219 EC C8 5C       lH\
021C 30C836           (../cmds/BBS.forwa):00165                    leax   <U0036,U                                              * 021C 30 C8 36       0H6
021F 17047F           (../cmds/BBS.forwa):00166                    lbsr   L06A1                                                 * 021F 17 04 7F       ...
0222 308DFE5D         (../cmds/BBS.forwa):00167                    leax   >L0083,PC                                             * 0222 30 8D FE 5D    0.~]
0226 10AE8DFE69       (../cmds/BBS.forwa):00168                    ldy    >L0094,PC                                             * 0226 10 AE 8D FE 69 ...~i
022B 8601             (../cmds/BBS.forwa):00169                    lda    #1                                                    * 022B 86 01          ..
022D 103F8A           (../cmds/BBS.forwa):00170                    os9    I$Write                                               * 022D 10 3F 8A       .?.
0230 102503FA         (../cmds/BBS.forwa):00171                    lbcs   L062E                                                 * 0230 10 25 03 FA    .%.z
0234 30C836           (../cmds/BBS.forwa):00172                    leax   <U0036,U                                              * 0234 30 C8 36       0H6
0237 108E0006         (../cmds/BBS.forwa):00173                    ldy    #6                                                    * 0237 10 8E 00 06    ....
023B 103F8C           (../cmds/BBS.forwa):00174                    os9    I$WritLn                                              * 023B 10 3F 8C       .?.
023E 102503EC         (../cmds/BBS.forwa):00175                    lbcs   L062E                                                 * 023E 10 25 03 EC    .%.l
0242 308DFE50         (../cmds/BBS.forwa):00176                    leax   >L0096,PC                                             * 0242 30 8D FE 50    0.~P
0246 108E00C8         (../cmds/BBS.forwa):00177                    ldy    #200                                                  * 0246 10 8E 00 C8    ...H
024A 8601             (../cmds/BBS.forwa):00178                    lda    #1                                                    * 024A 86 01          ..
024C 103F8C           (../cmds/BBS.forwa):00179                    os9    I$WritLn                                              * 024C 10 3F 8C       .?.
024F 102503DB         (../cmds/BBS.forwa):00180                    lbcs   L062E                                                 * 024F 10 25 03 DB    .%.[
0253 308DFE58         (../cmds/BBS.forwa):00181                    leax   >L00AF,PC                                             * 0253 30 8D FE 58    0.~X
0257 108E0001         (../cmds/BBS.forwa):00182                    ldy    #1                                                    * 0257 10 8E 00 01    ....
025B 103F8A           (../cmds/BBS.forwa):00183                    os9    I$Write                                               * 025B 10 3F 8A       .?.
025E 102503CC         (../cmds/BBS.forwa):00184                    lbcs   L062E                                                 * 025E 10 25 03 CC    .%.L
0262 30C843           (../cmds/BBS.forwa):00185                    leax   <U0043,U                                              * 0262 30 C8 43       0HC
0265 108E0006         (../cmds/BBS.forwa):00186                    ldy    #6                                                    * 0265 10 8E 00 06    ....
0269 4F               (../cmds/BBS.forwa):00187                    clra                                                         * 0269 4F             O
026A 103F8B           (../cmds/BBS.forwa):00188                    os9    I$ReadLn                                              * 026A 10 3F 8B       .?.
026D 102503BD         (../cmds/BBS.forwa):00189                    lbcs   L062E                                                 * 026D 10 25 03 BD    .%.=
0271 6FC842           (../cmds/BBS.forwa):00190                    clr    <U0042,U                                              * 0271 6F C8 42       oHB
0274 30C843           (../cmds/BBS.forwa):00191                    leax   <U0043,U                                              * 0274 30 C8 43       0HC
0277 1703B7           (../cmds/BBS.forwa):00192                    lbsr   L0631                                                 * 0277 17 03 B7       ..7
027A 10830001         (../cmds/BBS.forwa):00193                    cmpd   #1                                                    * 027A 10 83 00 01    ....
027E 102503AB         (../cmds/BBS.forwa):00194                    lbcs   L062D                                                 * 027E 10 25 03 AB    .%.+
0282 10A3C85C         (../cmds/BBS.forwa):00195                    cmpd   <U005C,U                                              * 0282 10 A3 C8 5C    .#H\
0286 102203A3         (../cmds/BBS.forwa):00196                    lbhi   L062D                                                 * 0286 10 22 03 A3    .".#
028A EDC836           (../cmds/BBS.forwa):00197                    std    <U0036,U                                              * 028A ED C8 36       mH6
028D 6FC849           (../cmds/BBS.forwa):00198                    clr    <U0049,U                                              * 028D 6F C8 49       oHI
0290 6FC84A           (../cmds/BBS.forwa):00199                    clr    <U004A,U                                              * 0290 6F C8 4A       oHJ
0293 8606             (../cmds/BBS.forwa):00200                    lda    #6                                                    * 0293 86 06          ..
0295 A745             (../cmds/BBS.forwa):00201                    sta    U0005,U                                               * 0295 A7 45          'E
0297 ECC836           (../cmds/BBS.forwa):00202                    ldd    <U0036,U                                              * 0297 EC C8 36       lH6
029A 58               (../cmds/BBS.forwa):00203         L029A      aslb                                                         * 029A 58             X
029B 49               (../cmds/BBS.forwa):00204                    rola                                                         * 029B 49             I
029C 69C84A           (../cmds/BBS.forwa):00205                    rol    <U004A,U                                              * 029C 69 C8 4A       iHJ
029F 6A45             (../cmds/BBS.forwa):00206                    dec    U0005,U                                               * 029F 6A 45          jE
02A1 26F7             (../cmds/BBS.forwa):00207                    bne    L029A                                                 * 02A1 26 F7          &w
02A3 EDC84B           (../cmds/BBS.forwa):00208                    std    <U004B,U                                              * 02A3 ED C8 4B       mHK
02A6 AEC849           (../cmds/BBS.forwa):00209                    ldx    <U0049,U                                              * 02A6 AE C8 49       .HI
02A9 A641             (../cmds/BBS.forwa):00210                    lda    U0001,U                                               * 02A9 A6 41          &A
02AB 3440             (../cmds/BBS.forwa):00211                    pshs   U                                                     * 02AB 34 40          4@
02AD EEC84B           (../cmds/BBS.forwa):00212                    ldu    <U004B,U                                              * 02AD EE C8 4B       nHK
02B0 103F88           (../cmds/BBS.forwa):00213                    os9    I$Seek                                                * 02B0 10 3F 88       .?.
02B3 10250377         (../cmds/BBS.forwa):00214                    lbcs   L062E                                                 * 02B3 10 25 03 77    .%.w
02B7 3540             (../cmds/BBS.forwa):00215                    puls   U                                                     * 02B7 35 40          5@
02B9 ECC836           (../cmds/BBS.forwa):00216                    ldd    <U0036,U                                              * 02B9 EC C8 36       lH6
02BC 830001           (../cmds/BBS.forwa):00217                    subd   #1                                                    * 02BC 83 00 01       ...
02BF EDC836           (../cmds/BBS.forwa):00218                    std    <U0036,U                                              * 02BF ED C8 36       mH6
02C2 A643             (../cmds/BBS.forwa):00219         L02C2      lda    U0003,U                                               * 02C2 A6 43          &C
02C4 30C832           (../cmds/BBS.forwa):00220                    leax   <U0032,U                                              * 02C4 30 C8 32       0H2
02C7 108E0004         (../cmds/BBS.forwa):00221                    ldy    #4                                                    * 02C7 10 8E 00 04    ....
02CB 103F89           (../cmds/BBS.forwa):00222                    os9    I$Read                                                * 02CB 10 3F 89       .?.
02CE 252D             (../cmds/BBS.forwa):00223                    bcs    L02FD                                                 * 02CE 25 2D          %-
02D0 ECC832           (../cmds/BBS.forwa):00224                    ldd    <U0032,U                                              * 02D0 EC C8 32       lH2
02D3 10A34A           (../cmds/BBS.forwa):00225                    cmpd   U000A,U                                               * 02D3 10 A3 4A       .#J
02D6 26EA             (../cmds/BBS.forwa):00226                    bne    L02C2                                                 * 02D6 26 EA          &j
02D8 ECC834           (../cmds/BBS.forwa):00227                    ldd    <U0034,U                                              * 02D8 EC C8 34       lH4
02DB 10A3C85C         (../cmds/BBS.forwa):00228                    cmpd   <U005C,U                                              * 02DB 10 A3 C8 5C    .#H\
02DF 2433             (../cmds/BBS.forwa):00229                    bcc    L0314                                                 * 02DF 24 33          $3
02E1 3440             (../cmds/BBS.forwa):00230                    pshs   U                                                     * 02E1 34 40          4@
02E3 A643             (../cmds/BBS.forwa):00231                    lda    U0003,U                                               * 02E3 A6 43          &C
02E5 C605             (../cmds/BBS.forwa):00232                    ldb    #5                                                    * 02E5 C6 05          F.
02E7 103F8D           (../cmds/BBS.forwa):00233                    os9    I$GetStt                                              * 02E7 10 3F 8D       .?.
02EA 335E             (../cmds/BBS.forwa):00234                    leau   -$02,U                                                * 02EA 33 5E          3^
02EC 103F88           (../cmds/BBS.forwa):00235                    os9    I$Seek                                                * 02EC 10 3F 88       .?.
02EF 3540             (../cmds/BBS.forwa):00236                    puls   U                                                     * 02EF 35 40          5@
02F1 30C85C           (../cmds/BBS.forwa):00237                    leax   <U005C,U                                              * 02F1 30 C8 5C       0H\
02F4 108E0002         (../cmds/BBS.forwa):00238                    ldy    #2                                                    * 02F4 10 8E 00 02    ....
02F8 103F8A           (../cmds/BBS.forwa):00239                    os9    I$Write                                               * 02F8 10 3F 8A       .?.
02FB 2017             (../cmds/BBS.forwa):00240                    bra    L0314                                                 * 02FB 20 17           .
02FD C1D3             (../cmds/BBS.forwa):00241         L02FD      cmpb   #211                                                  * 02FD C1 D3          AS
02FF 1026032B         (../cmds/BBS.forwa):00242                    lbne   L062E                                                 * 02FF 10 26 03 2B    .&.+
0303 A643             (../cmds/BBS.forwa):00243                    lda    U0003,U                                               * 0303 A6 43          &C
0305 304A             (../cmds/BBS.forwa):00244                    leax   U000A,U                                               * 0305 30 4A          0J
0307 108E0002         (../cmds/BBS.forwa):00245                    ldy    #2                                                    * 0307 10 8E 00 02    ....
030B 103F8A           (../cmds/BBS.forwa):00246                    os9    I$Write                                               * 030B 10 3F 8A       .?.
030E 30C85C           (../cmds/BBS.forwa):00247                    leax   <U005C,U                                              * 030E 30 C8 5C       0H\
0311 103F8A           (../cmds/BBS.forwa):00248                    os9    I$Write                                               * 0311 10 3F 8A       .?.
0314 A643             (../cmds/BBS.forwa):00249         L0314      lda    U0003,U                                               * 0314 A6 43          &C
0316 103F8F           (../cmds/BBS.forwa):00250                    os9    I$Close                                               * 0316 10 3F 8F       .?.
0319 308DFE34         (../cmds/BBS.forwa):00251                    leax   >L0151,PC                                             * 0319 30 8D FE 34    0.~4
031D 108E00C8         (../cmds/BBS.forwa):00252                    ldy    #200                                                  * 031D 10 8E 00 C8    ...H
0321 8601             (../cmds/BBS.forwa):00253                    lda    #1                                                    * 0321 86 01          ..
0323 103F8C           (../cmds/BBS.forwa):00254                    os9    I$WritLn                                              * 0323 10 3F 8C       .?.
0326 A641             (../cmds/BBS.forwa):00255         L0326      lda    U0001,U                                               * 0326 A6 41          &A
0328 108E0040         (../cmds/BBS.forwa):00256                    ldy    #64                                                   * 0328 10 8E 00 40    ...@
032C 30C900EC         (../cmds/BBS.forwa):00257                    leax   >U00EC,U                                              * 032C 30 C9 00 EC    0I.l
0330 103F89           (../cmds/BBS.forwa):00258                    os9    I$Read                                                * 0330 10 3F 89       .?.
0333 1025024F         (../cmds/BBS.forwa):00259                    lbcs   L0586                                                 * 0333 10 25 02 4F    .%.O
0337 ECC836           (../cmds/BBS.forwa):00260                    ldd    <U0036,U                                              * 0337 EC C8 36       lH6
033A C30001           (../cmds/BBS.forwa):00261                    addd   #1                                                    * 033A C3 00 01       C..
033D EDC836           (../cmds/BBS.forwa):00262                    std    <U0036,U                                              * 033D ED C8 36       mH6
0340 308DFE0A         (../cmds/BBS.forwa):00263                    leax   >L014E,PC                                             * 0340 30 8D FE 0A    0.~.
0344 108E0002         (../cmds/BBS.forwa):00264                    ldy    #2                                                    * 0344 10 8E 00 02    ....
0348 8601             (../cmds/BBS.forwa):00265                    lda    #1                                                    * 0348 86 01          ..
034A 103F8C           (../cmds/BBS.forwa):00266                    os9    I$WritLn                                              * 034A 10 3F 8C       .?.
034D ECC836           (../cmds/BBS.forwa):00267                    ldd    <U0036,U                                              * 034D EC C8 36       lH6
0350 30C83C           (../cmds/BBS.forwa):00268                    leax   <U003C,U                                              * 0350 30 C8 3C       0H<
0353 17034B           (../cmds/BBS.forwa):00269                    lbsr   L06A1                                                 * 0353 17 03 4B       ..K
0356 308DFD84         (../cmds/BBS.forwa):00270                    leax   >L00DE,PC                                             * 0356 30 8D FD 84    0.}.
035A 10AE8DFDAC       (../cmds/BBS.forwa):00271                    ldy    >L010B,PC                                             * 035A 10 AE 8D FD AC ...},
035F 8601             (../cmds/BBS.forwa):00272                    lda    #1                                                    * 035F 86 01          ..
0361 103F8A           (../cmds/BBS.forwa):00273                    os9    I$Write                                               * 0361 10 3F 8A       .?.
0364 102502C6         (../cmds/BBS.forwa):00274                    lbcs   L062E                                                 * 0364 10 25 02 C6    .%.F
0368 30C83C           (../cmds/BBS.forwa):00275                    leax   <U003C,U                                              * 0368 30 C8 3C       0H<
036B A680             (../cmds/BBS.forwa):00276         L036B      lda    ,X+                                                   * 036B A6 80          &.
036D 8120             (../cmds/BBS.forwa):00277                    cmpa   #32                                                   * 036D 81 20          .
036F 27FA             (../cmds/BBS.forwa):00278                    beq    L036B                                                 * 036F 27 FA          'z
0371 301F             (../cmds/BBS.forwa):00279                    leax   -$01,X                                                * 0371 30 1F          0.
0373 108E0006         (../cmds/BBS.forwa):00280                    ldy    #6                                                    * 0373 10 8E 00 06    ....
0377 8601             (../cmds/BBS.forwa):00281                    lda    #1                                                    * 0377 86 01          ..
0379 103F8C           (../cmds/BBS.forwa):00282                    os9    I$WritLn                                              * 0379 10 3F 8C       .?.
037C 102502AE         (../cmds/BBS.forwa):00283                    lbcs   L062E                                                 * 037C 10 25 02 AE    .%..
0380 ECC900EC         (../cmds/BBS.forwa):00284                    ldd    >U00EC,U                                              * 0380 EC C9 00 EC    lI.l
0384 1083FFFF         (../cmds/BBS.forwa):00285                    cmpd   #-1                                                   * 0384 10 83 FF FF    ....
0388 10270175         (../cmds/BBS.forwa):00286                    lbeq   L0501                                                 * 0388 10 27 01 75    .'.u
038C 308DFD57         (../cmds/BBS.forwa):00287                    leax   >L00E7,PC                                             * 038C 30 8D FD 57    0.}W
0390 10AE8DFD76       (../cmds/BBS.forwa):00288                    ldy    >L010B,PC                                             * 0390 10 AE 8D FD 76 ...}v
0395 8601             (../cmds/BBS.forwa):00289                    lda    #1                                                    * 0395 86 01          ..
0397 103F8A           (../cmds/BBS.forwa):00290                    os9    I$Write                                               * 0397 10 3F 8A       .?.
039A 30C900F0         (../cmds/BBS.forwa):00291                    leax   >U00F0,U                                              * 039A 30 C9 00 F0    0I.p
039E 108E00C8         (../cmds/BBS.forwa):00292                    ldy    #200                                                  * 039E 10 8E 00 C8    ...H
03A2 8601             (../cmds/BBS.forwa):00293                    lda    #1                                                    * 03A2 86 01          ..
03A4 103F8C           (../cmds/BBS.forwa):00294                    os9    I$WritLn                                              * 03A4 10 3F 8C       .?.
03A7 10250283         (../cmds/BBS.forwa):00295                    lbcs   L062E                                                 * 03A7 10 25 02 83    .%..
03AB 308DFD41         (../cmds/BBS.forwa):00296                    leax   >L00F0,PC                                             * 03AB 30 8D FD 41    0.}A
03AF 10AE8DFD57       (../cmds/BBS.forwa):00297                    ldy    >L010B,PC                                             * 03AF 10 AE 8D FD 57 ...}W
03B4 8601             (../cmds/BBS.forwa):00298                    lda    #1                                                    * 03B4 86 01          ..
03B6 103F8A           (../cmds/BBS.forwa):00299                    os9    I$Write                                               * 03B6 10 3F 8A       .?.
03B9 ECC9012A         (../cmds/BBS.forwa):00300                    ldd    >U012A,U                                              * 03B9 EC C9 01 2A    lI.*
03BD 1083FFFF         (../cmds/BBS.forwa):00301                    cmpd   #-1                                                   * 03BD 10 83 FF FF    ....
03C1 2760             (../cmds/BBS.forwa):00302                    beq    L0423                                                 * 03C1 27 60          '`
03C3 308DFDCD         (../cmds/BBS.forwa):00303                    leax   >L0194,PC                                             * 03C3 30 8D FD CD    0.}M
03C7 8601             (../cmds/BBS.forwa):00304                    lda    #1                                                    * 03C7 86 01          ..
03C9 103F84           (../cmds/BBS.forwa):00305                    os9    I$Open                                                * 03C9 10 3F 84       .?.
03CC 1025025E         (../cmds/BBS.forwa):00306                    lbcs   L062E                                                 * 03CC 10 25 02 5E    .%.^
03D0 A744             (../cmds/BBS.forwa):00307                    sta    U0004,U                                               * 03D0 A7 44          'D
03D2 30C9012C         (../cmds/BBS.forwa):00308         L03D2      leax   >U012C,U                                              * 03D2 30 C9 01 2C    0I.,
03D6 108E00C8         (../cmds/BBS.forwa):00309                    ldy    #200                                                  * 03D6 10 8E 00 C8    ...H
03DA A644             (../cmds/BBS.forwa):00310                    lda    U0004,U                                               * 03DA A6 44          &D
03DC 103F8B           (../cmds/BBS.forwa):00311                    os9    I$ReadLn                                              * 03DC 10 3F 8B       .?.
03DF 252D             (../cmds/BBS.forwa):00312                    bcs    L040E                                                 * 03DF 25 2D          %-
03E1 30C9012C         (../cmds/BBS.forwa):00313                    leax   >U012C,U                                              * 03E1 30 C9 01 2C    0I.,
03E5 A680             (../cmds/BBS.forwa):00314         L03E5      lda    ,X+                                                   * 03E5 A6 80          &.
03E7 812C             (../cmds/BBS.forwa):00315                    cmpa   #44                                                   * 03E7 81 2C          .,
03E9 26FA             (../cmds/BBS.forwa):00316                    bne    L03E5                                                 * 03E9 26 FA          &z
03EB 860D             (../cmds/BBS.forwa):00317                    lda    #13                                                   * 03EB 86 0D          ..
03ED A71F             (../cmds/BBS.forwa):00318                    sta    -$01,X                                                * 03ED A7 1F          '.
03EF 17023F           (../cmds/BBS.forwa):00319                    lbsr   L0631                                                 * 03EF 17 02 3F       ..?
03F2 10A3C9012A       (../cmds/BBS.forwa):00320                    cmpd   >U012A,U                                              * 03F2 10 A3 C9 01 2A .#I.*
03F7 26D9             (../cmds/BBS.forwa):00321                    bne    L03D2                                                 * 03F7 26 D9          &Y
03F9 30C9012C         (../cmds/BBS.forwa):00322                    leax   >U012C,U                                              * 03F9 30 C9 01 2C    0I.,
03FD 108E00C8         (../cmds/BBS.forwa):00323                    ldy    #200                                                  * 03FD 10 8E 00 C8    ...H
0401 8601             (../cmds/BBS.forwa):00324                    lda    #1                                                    * 0401 86 01          ..
0403 103F8C           (../cmds/BBS.forwa):00325                    os9    I$WritLn                                              * 0403 10 3F 8C       .?.
0406 A644             (../cmds/BBS.forwa):00326                    lda    U0004,U                                               * 0406 A6 44          &D
0408 103F8F           (../cmds/BBS.forwa):00327                    os9    I$Close                                               * 0408 10 3F 8F       .?.
040B 160022           (../cmds/BBS.forwa):00328                    lbra   L0430                                                 * 040B 16 00 22       .."
040E 308DFD94         (../cmds/BBS.forwa):00329         L040E      leax   >L01A6,PC                                             * 040E 30 8D FD 94    0.}.
0412 108E00C8         (../cmds/BBS.forwa):00330                    ldy    #200                                                  * 0412 10 8E 00 C8    ...H
0416 8601             (../cmds/BBS.forwa):00331                    lda    #1                                                    * 0416 86 01          ..
0418 103F8C           (../cmds/BBS.forwa):00332                    os9    I$WritLn                                              * 0418 10 3F 8C       .?.
041B A644             (../cmds/BBS.forwa):00333                    lda    U0004,U                                               * 041B A6 44          &D
041D 103F8F           (../cmds/BBS.forwa):00334                    os9    I$Close                                               * 041D 10 3F 8F       .?.
0420 16000D           (../cmds/BBS.forwa):00335                    lbra   L0430                                                 * 0420 16 00 0D       ...
0423 308DFD8C         (../cmds/BBS.forwa):00336         L0423      leax   >L01B3,PC                                             * 0423 30 8D FD 8C    0.}.
0427 108E00C8         (../cmds/BBS.forwa):00337                    ldy    #200                                                  * 0427 10 8E 00 C8    ...H
042B 8601             (../cmds/BBS.forwa):00338                    lda    #1                                                    * 042B 86 01          ..
042D 103F8C           (../cmds/BBS.forwa):00339                    os9    I$WritLn                                              * 042D 10 3F 8C       .?.
0430 308DFCC5         (../cmds/BBS.forwa):00340         L0430      leax   >L00F9,PC                                             * 0430 30 8D FC C5    0.|E
0434 10AE8DFCD2       (../cmds/BBS.forwa):00341                    ldy    >L010B,PC                                             * 0434 10 AE 8D FC D2 ...|R
0439 8601             (../cmds/BBS.forwa):00342                    lda    #1                                                    * 0439 86 01          ..
043B 103F8A           (../cmds/BBS.forwa):00343                    os9    I$Write                                               * 043B 10 3F 8A       .?.
043E 30C83C           (../cmds/BBS.forwa):00344                    leax   <U003C,U                                              * 043E 30 C8 3C       0H<
0441 E6C90123         (../cmds/BBS.forwa):00345                    ldb    >U0123,U                                              * 0441 E6 C9 01 23    fI.#
0445 4F               (../cmds/BBS.forwa):00346                    clra                                                         * 0445 4F             O
0446 170258           (../cmds/BBS.forwa):00347                    lbsr   L06A1                                                 * 0446 17 02 58       ..X
0449 A6C83F           (../cmds/BBS.forwa):00348                    lda    <U003F,U                                              * 0449 A6 C8 3F       &H?
044C A7C84D           (../cmds/BBS.forwa):00349                    sta    <U004D,U                                              * 044C A7 C8 4D       'HM
044F A6C840           (../cmds/BBS.forwa):00350                    lda    <U0040,U                                              * 044F A6 C8 40       &H@
0452 A7C84E           (../cmds/BBS.forwa):00351                    sta    <U004E,U                                              * 0452 A7 C8 4E       'HN
0455 862F             (../cmds/BBS.forwa):00352                    lda    #47                                                   * 0455 86 2F          ./
0457 A7C84F           (../cmds/BBS.forwa):00353                    sta    <U004F,U                                              * 0457 A7 C8 4F       'HO
045A E6C90124         (../cmds/BBS.forwa):00354                    ldb    >U0124,U                                              * 045A E6 C9 01 24    fI.$
045E 4F               (../cmds/BBS.forwa):00355                    clra                                                         * 045E 4F             O
045F 30C83C           (../cmds/BBS.forwa):00356                    leax   <U003C,U                                              * 045F 30 C8 3C       0H<
0462 17023C           (../cmds/BBS.forwa):00357                    lbsr   L06A1                                                 * 0462 17 02 3C       ..<
0465 A6C83F           (../cmds/BBS.forwa):00358                    lda    <U003F,U                                              * 0465 A6 C8 3F       &H?
0468 A7C850           (../cmds/BBS.forwa):00359                    sta    <U0050,U                                              * 0468 A7 C8 50       'HP
046B A6C840           (../cmds/BBS.forwa):00360                    lda    <U0040,U                                              * 046B A6 C8 40       &H@
046E A7C851           (../cmds/BBS.forwa):00361                    sta    <U0051,U                                              * 046E A7 C8 51       'HQ
0471 862F             (../cmds/BBS.forwa):00362                    lda    #47                                                   * 0471 86 2F          ./
0473 A7C852           (../cmds/BBS.forwa):00363                    sta    <U0052,U                                              * 0473 A7 C8 52       'HR
0476 E6C90122         (../cmds/BBS.forwa):00364                    ldb    >U0122,U                                              * 0476 E6 C9 01 22    fI."
047A 4F               (../cmds/BBS.forwa):00365                    clra                                                         * 047A 4F             O
047B 30C83C           (../cmds/BBS.forwa):00366                    leax   <U003C,U                                              * 047B 30 C8 3C       0H<
047E 170220           (../cmds/BBS.forwa):00367                    lbsr   L06A1                                                 * 047E 17 02 20       ..
0481 A6C83F           (../cmds/BBS.forwa):00368                    lda    <U003F,U                                              * 0481 A6 C8 3F       &H?
0484 A7C853           (../cmds/BBS.forwa):00369                    sta    <U0053,U                                              * 0484 A7 C8 53       'HS
0487 A6C840           (../cmds/BBS.forwa):00370                    lda    <U0040,U                                              * 0487 A6 C8 40       &H@
048A A7C854           (../cmds/BBS.forwa):00371                    sta    <U0054,U                                              * 048A A7 C8 54       'HT
048D 8620             (../cmds/BBS.forwa):00372                    lda    #32                                                   * 048D 86 20          .
048F A7C855           (../cmds/BBS.forwa):00373                    sta    <U0055,U                                              * 048F A7 C8 55       'HU
0492 E6C90125         (../cmds/BBS.forwa):00374                    ldb    >U0125,U                                              * 0492 E6 C9 01 25    fI.%
0496 4F               (../cmds/BBS.forwa):00375                    clra                                                         * 0496 4F             O
0497 30C83C           (../cmds/BBS.forwa):00376                    leax   <U003C,U                                              * 0497 30 C8 3C       0H<
049A 170204           (../cmds/BBS.forwa):00377                    lbsr   L06A1                                                 * 049A 17 02 04       ...
049D A6C83F           (../cmds/BBS.forwa):00378                    lda    <U003F,U                                              * 049D A6 C8 3F       &H?
04A0 A7C856           (../cmds/BBS.forwa):00379                    sta    <U0056,U                                              * 04A0 A7 C8 56       'HV
04A3 A6C840           (../cmds/BBS.forwa):00380                    lda    <U0040,U                                              * 04A3 A6 C8 40       &H@
04A6 A7C857           (../cmds/BBS.forwa):00381                    sta    <U0057,U                                              * 04A6 A7 C8 57       'HW
04A9 863A             (../cmds/BBS.forwa):00382                    lda    #58                                                   * 04A9 86 3A          .:
04AB A7C858           (../cmds/BBS.forwa):00383                    sta    <U0058,U                                              * 04AB A7 C8 58       'HX
04AE E6C90126         (../cmds/BBS.forwa):00384                    ldb    >U0126,U                                              * 04AE E6 C9 01 26    fI.&
04B2 4F               (../cmds/BBS.forwa):00385                    clra                                                         * 04B2 4F             O
04B3 30C83C           (../cmds/BBS.forwa):00386                    leax   <U003C,U                                              * 04B3 30 C8 3C       0H<
04B6 1701E8           (../cmds/BBS.forwa):00387                    lbsr   L06A1                                                 * 04B6 17 01 E8       ..h
04B9 A6C83F           (../cmds/BBS.forwa):00388                    lda    <U003F,U                                              * 04B9 A6 C8 3F       &H?
04BC A7C859           (../cmds/BBS.forwa):00389                    sta    <U0059,U                                              * 04BC A7 C8 59       'HY
04BF A6C840           (../cmds/BBS.forwa):00390                    lda    <U0040,U                                              * 04BF A6 C8 40       &H@
04C2 A7C85A           (../cmds/BBS.forwa):00391                    sta    <U005A,U                                              * 04C2 A7 C8 5A       'HZ
04C5 860D             (../cmds/BBS.forwa):00392                    lda    #13                                                   * 04C5 86 0D          ..
04C7 A7C85B           (../cmds/BBS.forwa):00393                    sta    <U005B,U                                              * 04C7 A7 C8 5B       'H[
04CA 30C84D           (../cmds/BBS.forwa):00394                    leax   <U004D,U                                              * 04CA 30 C8 4D       0HM
04CD A680             (../cmds/BBS.forwa):00395         L04CD      lda    ,X+                                                   * 04CD A6 80          &.
04CF 8120             (../cmds/BBS.forwa):00396                    cmpa   #32                                                   * 04CF 81 20          .
04D1 27FA             (../cmds/BBS.forwa):00397                    beq    L04CD                                                 * 04D1 27 FA          'z
04D3 301F             (../cmds/BBS.forwa):00398                    leax   -$01,X                                                * 04D3 30 1F          0.
04D5 108E00C8         (../cmds/BBS.forwa):00399                    ldy    #200                                                  * 04D5 10 8E 00 C8    ...H
04D9 8601             (../cmds/BBS.forwa):00400                    lda    #1                                                    * 04D9 86 01          ..
04DB 103F8C           (../cmds/BBS.forwa):00401                    os9    I$WritLn                                              * 04DB 10 3F 8C       .?.
04DE 1025014C         (../cmds/BBS.forwa):00402                    lbcs   L062E                                                 * 04DE 10 25 01 4C    .%.L
04E2 308DFC1C         (../cmds/BBS.forwa):00403                    leax   >L0102,PC                                             * 04E2 30 8D FC 1C    0.|.
04E6 10AE8DFC20       (../cmds/BBS.forwa):00404                    ldy    >L010B,PC                                             * 04E6 10 AE 8D FC 20 ...|
04EB 8601             (../cmds/BBS.forwa):00405                    lda    #1                                                    * 04EB 86 01          ..
04ED 103F8A           (../cmds/BBS.forwa):00406                    os9    I$Write                                               * 04ED 10 3F 8A       .?.
04F0 30C90104         (../cmds/BBS.forwa):00407                    leax   >U0104,U                                              * 04F0 30 C9 01 04    0I..
04F4 108E001E         (../cmds/BBS.forwa):00408                    ldy    #30                                                   * 04F4 10 8E 00 1E    ....
04F8 103F8C           (../cmds/BBS.forwa):00409                    os9    I$WritLn                                              * 04F8 10 3F 8C       .?.
04FB 1025012F         (../cmds/BBS.forwa):00410                    lbcs   L062E                                                 * 04FB 10 25 01 2F    .%./
04FF 2010             (../cmds/BBS.forwa):00411                    bra    L0511                                                 * 04FF 20 10           .
0501 308DFBBF         (../cmds/BBS.forwa):00412         L0501      leax   >L00C4,PC                                             * 0501 30 8D FB BF    0.{?
0505 108E00C8         (../cmds/BBS.forwa):00413                    ldy    #200                                                  * 0505 10 8E 00 C8    ...H
0509 8601             (../cmds/BBS.forwa):00414                    lda    #1                                                    * 0509 86 01          ..
050B 103F8C           (../cmds/BBS.forwa):00415                    os9    I$WritLn                                              * 050B 10 3F 8C       .?.
050E 16FE15           (../cmds/BBS.forwa):00416                    lbra   L0326                                                 * 050E 16 FE 15       .~.
0511 308DFBF8         (../cmds/BBS.forwa):00417         L0511      leax   >L010D,PC                                             * 0511 30 8D FB F8    0.{x
0515 108E0050         (../cmds/BBS.forwa):00418                    ldy    #80                                                   * 0515 10 8E 00 50    ...P
0519 8601             (../cmds/BBS.forwa):00419                    lda    #1                                                    * 0519 86 01          ..
051B 103F8C           (../cmds/BBS.forwa):00420                    os9    I$WritLn                                              * 051B 10 3F 8C       .?.
051E A642             (../cmds/BBS.forwa):00421                    lda    U0002,U                                               * 051E A6 42          &B
0520 AEC900EC         (../cmds/BBS.forwa):00422                    ldx    >U00EC,U                                              * 0520 AE C9 00 EC    .I.l
0524 3440             (../cmds/BBS.forwa):00423                    pshs   U                                                     * 0524 34 40          4@
0526 EEC900EE         (../cmds/BBS.forwa):00424                    ldu    >U00EE,U                                              * 0526 EE C9 00 EE    nI.n
052A 103F88           (../cmds/BBS.forwa):00425                    os9    I$Seek                                                * 052A 10 3F 88       .?.
052D 102500FD         (../cmds/BBS.forwa):00426                    lbcs   L062E                                                 * 052D 10 25 00 FD    .%.}
0531 3540             (../cmds/BBS.forwa):00427                    puls   U                                                     * 0531 35 40          5@
0533 4F               (../cmds/BBS.forwa):00428         L0533      clra                                                         * 0533 4F             O
0534 C601             (../cmds/BBS.forwa):00429                    ldb    #1                                                    * 0534 C6 01          F.
0536 103F8D           (../cmds/BBS.forwa):00430                    os9    I$GetStt                                              * 0536 10 3F 8D       .?.
0539 2511             (../cmds/BBS.forwa):00431                    bcs    L054C                                                 * 0539 25 11          %.
053B 30C4             (../cmds/BBS.forwa):00432                    leax   U0000,U                                               * 053B 30 C4          0D
053D 108E0001         (../cmds/BBS.forwa):00433                    ldy    #1                                                    * 053D 10 8E 00 01    ....
0541 103F89           (../cmds/BBS.forwa):00434                    os9    I$Read                                                * 0541 10 3F 89       .?.
0544 A6C4             (../cmds/BBS.forwa):00435                    lda    U0000,U                                               * 0544 A6 C4          &D
0546 8120             (../cmds/BBS.forwa):00436                    cmpa   #32                                                   * 0546 81 20          .
0548 1027FDDA         (../cmds/BBS.forwa):00437                    lbeq   L0326                                                 * 0548 10 27 FD DA    .'}Z
054C A642             (../cmds/BBS.forwa):00438         L054C      lda    U0002,U                                               * 054C A6 42          &B
054E 30C9009C         (../cmds/BBS.forwa):00439                    leax   >U009C,U                                              * 054E 30 C9 00 9C    0I..
0552 108E0050         (../cmds/BBS.forwa):00440                    ldy    #80                                                   * 0552 10 8E 00 50    ...P
0556 103F8B           (../cmds/BBS.forwa):00441                    os9    I$ReadLn                                              * 0556 10 3F 8B       .?.
0559 8601             (../cmds/BBS.forwa):00442                    lda    #1                                                    * 0559 86 01          ..
055B 103F8C           (../cmds/BBS.forwa):00443                    os9    I$WritLn                                              * 055B 10 3F 8C       .?.
055E 108C0001         (../cmds/BBS.forwa):00444                    cmpy   #1                                                    * 055E 10 8C 00 01    ....
0562 22CF             (../cmds/BBS.forwa):00445                    bhi    L0533                                                 * 0562 22 CF          "O
0564 308DFBA5         (../cmds/BBS.forwa):00446                    leax   >L010D,PC                                             * 0564 30 8D FB A5    0.{%
0568 108E00C8         (../cmds/BBS.forwa):00447                    ldy    #200                                                  * 0568 10 8E 00 C8    ...H
056C 8601             (../cmds/BBS.forwa):00448                    lda    #1                                                    * 056C 86 01          ..
056E 103F8C           (../cmds/BBS.forwa):00449                    os9    I$WritLn                                              * 056E 10 3F 8C       .?.
0571 308DFBD9         (../cmds/BBS.forwa):00450                    leax   >L014E,PC                                             * 0571 30 8D FB D9    0.{Y
0575 108E0005         (../cmds/BBS.forwa):00451                    ldy    #5                                                    * 0575 10 8E 00 05    ....
0579 103F8C           (../cmds/BBS.forwa):00452                    os9    I$WritLn                                              * 0579 10 3F 8C       .?.
057C EC48             (../cmds/BBS.forwa):00453                    ldd    U0008,U                                               * 057C EC 48          lH
057E C30001           (../cmds/BBS.forwa):00454                    addd   #1                                                    * 057E C3 00 01       C..
0581 ED48             (../cmds/BBS.forwa):00455                    std    U0008,U                                               * 0581 ED 48          mH
0583 16FDA0           (../cmds/BBS.forwa):00456                    lbra   L0326                                                 * 0583 16 FD A0       .}
0586 308DFBF4         (../cmds/BBS.forwa):00457         L0586      leax   >L017E,PC                                             * 0586 30 8D FB F4    0.{t
058A 8603             (../cmds/BBS.forwa):00458                    lda    #3                                                    * 058A 86 03          ..
058C 103F84           (../cmds/BBS.forwa):00459                    os9    I$Open                                                * 058C 10 3F 84       .?.
058F 2409             (../cmds/BBS.forwa):00460                    bcc    L059A                                                 * 058F 24 09          $.
0591 C61B             (../cmds/BBS.forwa):00461                    ldb    #27                                                   * 0591 C6 1B          F.
0593 103F83           (../cmds/BBS.forwa):00462                    os9    I$Create                                              * 0593 10 3F 83       .?.
0596 10250094         (../cmds/BBS.forwa):00463                    lbcs   L062E                                                 * 0596 10 25 00 94    .%..
059A A747             (../cmds/BBS.forwa):00464         L059A      sta    U0007,U                                               * 059A A7 47          'G
059C 304C             (../cmds/BBS.forwa):00465         L059C      leax   U000C,U                                               * 059C 30 4C          0L
059E 108E0020         (../cmds/BBS.forwa):00466                    ldy    #32                                                   * 059E 10 8E 00 20    ...
05A2 A647             (../cmds/BBS.forwa):00467                    lda    U0007,U                                               * 05A2 A6 47          &G
05A4 103F89           (../cmds/BBS.forwa):00468                    os9    I$Read                                                * 05A4 10 3F 89       .?.
05A7 2509             (../cmds/BBS.forwa):00469                    bcs    L05B2                                                 * 05A7 25 09          %.
05A9 EC4C             (../cmds/BBS.forwa):00470                    ldd    U000C,U                                               * 05A9 EC 4C          lL
05AB 10A34A           (../cmds/BBS.forwa):00471                    cmpd   U000A,U                                               * 05AB 10 A3 4A       .#J
05AE 26EC             (../cmds/BBS.forwa):00472                    bne    L059C                                                 * 05AE 26 EC          &l
05B0 2009             (../cmds/BBS.forwa):00473                    bra    L05BB                                                 * 05B0 20 09           .
05B2 C1D3             (../cmds/BBS.forwa):00474         L05B2      cmpb   #211                                                  * 05B2 C1 D3          AS
05B4 10260076         (../cmds/BBS.forwa):00475                    lbne   L062E                                                 * 05B4 10 26 00 76    .&.v
05B8 16003C           (../cmds/BBS.forwa):00476                    lbra   L05F7                                                 * 05B8 16 00 3C       ..<
05BB ECC818           (../cmds/BBS.forwa):00477         L05BB      ldd    <U0018,U                                              * 05BB EC C8 18       lH.
05BE E348             (../cmds/BBS.forwa):00478                    addd   U0008,U                                               * 05BE E3 48          cH
05C0 EDC818           (../cmds/BBS.forwa):00479                    std    <U0018,U                                              * 05C0 ED C8 18       mH.
05C3 A647             (../cmds/BBS.forwa):00480                    lda    U0007,U                                               * 05C3 A6 47          &G
05C5 C605             (../cmds/BBS.forwa):00481                    ldb    #5                                                    * 05C5 C6 05          F.
05C7 3440             (../cmds/BBS.forwa):00482                    pshs   U                                                     * 05C7 34 40          4@
05C9 103F8D           (../cmds/BBS.forwa):00483                    os9    I$GetStt                                              * 05C9 10 3F 8D       .?.
05CC 1F30             (../cmds/BBS.forwa):00484                    tfr    U,D                                                   * 05CC 1F 30          .0
05CE 830020           (../cmds/BBS.forwa):00485                    subd   #32                                                   * 05CE 83 00 20       ..
05D1 2C02             (../cmds/BBS.forwa):00486                    bge    L05D5                                                 * 05D1 2C 02          ,.
05D3 301F             (../cmds/BBS.forwa):00487                    leax   -$01,X                                                * 05D3 30 1F          0.
05D5 EEE4             (../cmds/BBS.forwa):00488         L05D5      ldu    0,S                                                   * 05D5 EE E4          nd
05D7 1F02             (../cmds/BBS.forwa):00489                    tfr    D,Y                                                   * 05D7 1F 02          ..
05D9 A647             (../cmds/BBS.forwa):00490                    lda    U0007,U                                               * 05D9 A6 47          &G
05DB 1F23             (../cmds/BBS.forwa):00491                    tfr    Y,U                                                   * 05DB 1F 23          .#
05DD 103F88           (../cmds/BBS.forwa):00492                    os9    I$Seek                                                * 05DD 10 3F 88       .?.
05E0 1025004A         (../cmds/BBS.forwa):00493                    lbcs   L062E                                                 * 05E0 10 25 00 4A    .%.J
05E4 3540             (../cmds/BBS.forwa):00494                    puls   U                                                     * 05E4 35 40          5@
05E6 304C             (../cmds/BBS.forwa):00495                    leax   U000C,U                                               * 05E6 30 4C          0L
05E8 108E0020         (../cmds/BBS.forwa):00496                    ldy    #32                                                   * 05E8 10 8E 00 20    ...
05EC A647             (../cmds/BBS.forwa):00497                    lda    U0007,U                                               * 05EC A6 47          &G
05EE 103F8A           (../cmds/BBS.forwa):00498                    os9    I$Write                                               * 05EE 10 3F 8A       .?.
05F1 103F8F           (../cmds/BBS.forwa):00499                    os9    I$Close                                               * 05F1 10 3F 8F       .?.
05F4 160036           (../cmds/BBS.forwa):00500                    lbra   L062D                                                 * 05F4 16 00 36       ..6
05F7 304C             (../cmds/BBS.forwa):00501         L05F7      leax   U000C,U                                               * 05F7 30 4C          0L
05F9 CC0001           (../cmds/BBS.forwa):00502                    ldd    #1                                                    * 05F9 CC 00 01       L..
05FC ED4E             (../cmds/BBS.forwa):00503                    std    U000E,U                                               * 05FC ED 4E          mN
05FE EDC818           (../cmds/BBS.forwa):00504                    std    <U0018,U                                              * 05FE ED C8 18       mH.
0601 CC0000           (../cmds/BBS.forwa):00505                    ldd    #0                                                    * 0601 CC 00 00       L..
0604 EDC816           (../cmds/BBS.forwa):00506                    std    <U0016,U                                              * 0604 ED C8 16       mH.
0607 EDC81C           (../cmds/BBS.forwa):00507                    std    <U001C,U                                              * 0607 ED C8 1C       mH.
060A EDC81A           (../cmds/BBS.forwa):00508                    std    <U001A,U                                              * 060A ED C8 1A       mH.
060D EC4A             (../cmds/BBS.forwa):00509                    ldd    U000A,U                                               * 060D EC 4A          lJ
060F ED4C             (../cmds/BBS.forwa):00510                    std    U000C,U                                               * 060F ED 4C          mL
0611 30C810           (../cmds/BBS.forwa):00511                    leax   <U0010,U                                              * 0611 30 C8 10       0H.
0614 103F15           (../cmds/BBS.forwa):00512                    os9    F$Time                                                * 0614 10 3F 15       .?.
0617 10250013         (../cmds/BBS.forwa):00513                    lbcs   L062E                                                 * 0617 10 25 00 13    .%..
061B 304C             (../cmds/BBS.forwa):00514                    leax   U000C,U                                               * 061B 30 4C          0L
061D 108E0020         (../cmds/BBS.forwa):00515                    ldy    #32                                                   * 061D 10 8E 00 20    ...
0621 A647             (../cmds/BBS.forwa):00516                    lda    U0007,U                                               * 0621 A6 47          &G
0623 103F8A           (../cmds/BBS.forwa):00517                    os9    I$Write                                               * 0623 10 3F 8A       .?.
0626 103F8F           (../cmds/BBS.forwa):00518                    os9    I$Close                                               * 0626 10 3F 8F       .?.
0629 10250001         (../cmds/BBS.forwa):00519                    lbcs   L062E                                                 * 0629 10 25 00 01    .%..
062D 5F               (../cmds/BBS.forwa):00520         L062D      clrb                                                         * 062D 5F             _
062E 103F06           (../cmds/BBS.forwa):00521         L062E      os9    F$Exit                                                * 062E 10 3F 06       .?.
0631 3420             (../cmds/BBS.forwa):00522         L0631      pshs   Y                                                     * 0631 34 20          4
0633 A680             (../cmds/BBS.forwa):00523         L0633      lda    ,X+                                                   * 0633 A6 80          &.
0635 810D             (../cmds/BBS.forwa):00524                    cmpa   #13                                                   * 0635 81 0D          ..
0637 102700E2         (../cmds/BBS.forwa):00525                    lbeq   L071D                                                 * 0637 10 27 00 E2    .'.b
063B 8130             (../cmds/BBS.forwa):00526                    cmpa   #48                                                   * 063B 81 30          .0
063D 25F4             (../cmds/BBS.forwa):00527                    bcs    L0633                                                 * 063D 25 F4          %t
063F 8139             (../cmds/BBS.forwa):00528                    cmpa   #57                                                   * 063F 81 39          .9
0641 22F0             (../cmds/BBS.forwa):00529                    bhi    L0633                                                 * 0641 22 F0          "p
0643 301F             (../cmds/BBS.forwa):00530                    leax   -$01,X                                                * 0643 30 1F          0.
0645 A680             (../cmds/BBS.forwa):00531         L0645      lda    ,X+                                                   * 0645 A6 80          &.
0647 8130             (../cmds/BBS.forwa):00532                    cmpa   #48                                                   * 0647 81 30          .0
0649 2506             (../cmds/BBS.forwa):00533                    bcs    L0651                                                 * 0649 25 06          %.
064B 8139             (../cmds/BBS.forwa):00534                    cmpa   #57                                                   * 064B 81 39          .9
064D 2202             (../cmds/BBS.forwa):00535                    bhi    L0651                                                 * 064D 22 02          ".
064F 20F4             (../cmds/BBS.forwa):00536                    bra    L0645                                                 * 064F 20 F4           t
0651 3410             (../cmds/BBS.forwa):00537         L0651      pshs   X                                                     * 0651 34 10          4.
0653 301F             (../cmds/BBS.forwa):00538                    leax   -$01,X                                                * 0653 30 1F          0.
0655 6FC82E           (../cmds/BBS.forwa):00539                    clr    <U002E,U                                              * 0655 6F C8 2E       oH.
0658 6FC82F           (../cmds/BBS.forwa):00540                    clr    <U002F,U                                              * 0658 6F C8 2F       oH/
065B CC0001           (../cmds/BBS.forwa):00541                    ldd    #1                                                    * 065B CC 00 01       L..
065E EDC830           (../cmds/BBS.forwa):00542                    std    <U0030,U                                              * 065E ED C8 30       mH0
0661 A682             (../cmds/BBS.forwa):00543         L0661      lda    ,-X                                                   * 0661 A6 82          &.
0663 8130             (../cmds/BBS.forwa):00544                    cmpa   #48                                                   * 0663 81 30          .0
0665 2533             (../cmds/BBS.forwa):00545                    bcs    L069A                                                 * 0665 25 33          %3
0667 8139             (../cmds/BBS.forwa):00546                    cmpa   #57                                                   * 0667 81 39          .9
0669 222F             (../cmds/BBS.forwa):00547                    bhi    L069A                                                 * 0669 22 2F          "/
066B 8030             (../cmds/BBS.forwa):00548                    suba   #48                                                   * 066B 80 30          .0
066D A746             (../cmds/BBS.forwa):00549                    sta    U0006,U                                               * 066D A7 46          'F
066F CC0000           (../cmds/BBS.forwa):00550                    ldd    #0                                                    * 066F CC 00 00       L..
0672 6D46             (../cmds/BBS.forwa):00551         L0672      tst    U0006,U                                               * 0672 6D 46          mF
0674 2707             (../cmds/BBS.forwa):00552                    beq    L067D                                                 * 0674 27 07          '.
0676 E3C830           (../cmds/BBS.forwa):00553                    addd   <U0030,U                                              * 0676 E3 C8 30       cH0
0679 6A46             (../cmds/BBS.forwa):00554                    dec    U0006,U                                               * 0679 6A 46          jF
067B 20F5             (../cmds/BBS.forwa):00555                    bra    L0672                                                 * 067B 20 F5           u
067D E3C82E           (../cmds/BBS.forwa):00556         L067D      addd   <U002E,U                                              * 067D E3 C8 2E       cH.
0680 EDC82E           (../cmds/BBS.forwa):00557                    std    <U002E,U                                              * 0680 ED C8 2E       mH.
0683 860A             (../cmds/BBS.forwa):00558                    lda    #10                                                   * 0683 86 0A          ..
0685 A746             (../cmds/BBS.forwa):00559                    sta    U0006,U                                               * 0685 A7 46          'F
0687 CC0000           (../cmds/BBS.forwa):00560                    ldd    #0                                                    * 0687 CC 00 00       L..
068A 6D46             (../cmds/BBS.forwa):00561         L068A      tst    U0006,U                                               * 068A 6D 46          mF
068C 2707             (../cmds/BBS.forwa):00562                    beq    L0695                                                 * 068C 27 07          '.
068E E3C830           (../cmds/BBS.forwa):00563                    addd   <U0030,U                                              * 068E E3 C8 30       cH0
0691 6A46             (../cmds/BBS.forwa):00564                    dec    U0006,U                                               * 0691 6A 46          jF
0693 20F5             (../cmds/BBS.forwa):00565                    bra    L068A                                                 * 0693 20 F5           u
0695 EDC830           (../cmds/BBS.forwa):00566         L0695      std    <U0030,U                                              * 0695 ED C8 30       mH0
0698 20C7             (../cmds/BBS.forwa):00567                    bra    L0661                                                 * 0698 20 C7           G
069A ECC82E           (../cmds/BBS.forwa):00568         L069A      ldd    <U002E,U                                              * 069A EC C8 2E       lH.
069D 3510             (../cmds/BBS.forwa):00569                    puls   X                                                     * 069D 35 10          5.
069F 35A0             (../cmds/BBS.forwa):00570                    puls   PC,Y                                                  * 069F 35 A0          5
06A1 3410             (../cmds/BBS.forwa):00571         L06A1      pshs   X                                                     * 06A1 34 10          4.
06A3 EDC82E           (../cmds/BBS.forwa):00572                    std    <U002E,U                                              * 06A3 ED C8 2E       mH.
06A6 8630             (../cmds/BBS.forwa):00573                    lda    #48                                                   * 06A6 86 30          .0
06A8 A784             (../cmds/BBS.forwa):00574                    sta    0,X                                                   * 06A8 A7 84          '.
06AA A701             (../cmds/BBS.forwa):00575                    sta    $01,X                                                 * 06AA A7 01          '.
06AC A702             (../cmds/BBS.forwa):00576                    sta    $02,X                                                 * 06AC A7 02          '.
06AE A703             (../cmds/BBS.forwa):00577                    sta    $03,X                                                 * 06AE A7 03          '.
06B0 A704             (../cmds/BBS.forwa):00578                    sta    $04,X                                                 * 06B0 A7 04          '.
06B2 CC2710           (../cmds/BBS.forwa):00579                    ldd    #10000                                                * 06B2 CC 27 10       L'.
06B5 EDC830           (../cmds/BBS.forwa):00580                    std    <U0030,U                                              * 06B5 ED C8 30       mH0
06B8 ECC82E           (../cmds/BBS.forwa):00581                    ldd    <U002E,U                                              * 06B8 EC C8 2E       lH.
06BB 17004D           (../cmds/BBS.forwa):00582                    lbsr   L070B                                                 * 06BB 17 00 4D       ..M
06BE CC03E8           (../cmds/BBS.forwa):00583                    ldd    #1000                                                 * 06BE CC 03 E8       L.h
06C1 EDC830           (../cmds/BBS.forwa):00584                    std    <U0030,U                                              * 06C1 ED C8 30       mH0
06C4 ECC82E           (../cmds/BBS.forwa):00585                    ldd    <U002E,U                                              * 06C4 EC C8 2E       lH.
06C7 8D42             (../cmds/BBS.forwa):00586                    bsr    L070B                                                 * 06C7 8D 42          .B
06C9 CC0064           (../cmds/BBS.forwa):00587                    ldd    #100                                                  * 06C9 CC 00 64       L.d
06CC EDC830           (../cmds/BBS.forwa):00588                    std    <U0030,U                                              * 06CC ED C8 30       mH0
06CF ECC82E           (../cmds/BBS.forwa):00589                    ldd    <U002E,U                                              * 06CF EC C8 2E       lH.
06D2 8D37             (../cmds/BBS.forwa):00590                    bsr    L070B                                                 * 06D2 8D 37          .7
06D4 CC000A           (../cmds/BBS.forwa):00591                    ldd    #10                                                   * 06D4 CC 00 0A       L..
06D7 EDC830           (../cmds/BBS.forwa):00592                    std    <U0030,U                                              * 06D7 ED C8 30       mH0
06DA ECC82E           (../cmds/BBS.forwa):00593                    ldd    <U002E,U                                              * 06DA EC C8 2E       lH.
06DD 8D2C             (../cmds/BBS.forwa):00594                    bsr    L070B                                                 * 06DD 8D 2C          .,
06DF CC0001           (../cmds/BBS.forwa):00595                    ldd    #1                                                    * 06DF CC 00 01       L..
06E2 EDC830           (../cmds/BBS.forwa):00596                    std    <U0030,U                                              * 06E2 ED C8 30       mH0
06E5 ECC82E           (../cmds/BBS.forwa):00597                    ldd    <U002E,U                                              * 06E5 EC C8 2E       lH.
06E8 8D21             (../cmds/BBS.forwa):00598                    bsr    L070B                                                 * 06E8 8D 21          .!
06EA 860D             (../cmds/BBS.forwa):00599                    lda    #13                                                   * 06EA 86 0D          ..
06EC A784             (../cmds/BBS.forwa):00600                    sta    0,X                                                   * 06EC A7 84          '.
06EE 3510             (../cmds/BBS.forwa):00601                    puls   X                                                     * 06EE 35 10          5.
06F0 C620             (../cmds/BBS.forwa):00602                    ldb    #32                                                   * 06F0 C6 20          F
06F2 A684             (../cmds/BBS.forwa):00603         L06F2      lda    0,X                                                   * 06F2 A6 84          &.
06F4 8130             (../cmds/BBS.forwa):00604                    cmpa   #48                                                   * 06F4 81 30          .0
06F6 2604             (../cmds/BBS.forwa):00605                    bne    L06FC                                                 * 06F6 26 04          &.
06F8 E780             (../cmds/BBS.forwa):00606                    stb    ,X+                                                   * 06F8 E7 80          g.
06FA 20F6             (../cmds/BBS.forwa):00607                    bra    L06F2                                                 * 06FA 20 F6           v
06FC A680             (../cmds/BBS.forwa):00608         L06FC      lda    ,X+                                                   * 06FC A6 80          &.
06FE 8130             (../cmds/BBS.forwa):00609                    cmpa   #48                                                   * 06FE 81 30          .0
0700 2506             (../cmds/BBS.forwa):00610                    bcs    L0708                                                 * 0700 25 06          %.
0702 8139             (../cmds/BBS.forwa):00611                    cmpa   #57                                                   * 0702 81 39          .9
0704 2202             (../cmds/BBS.forwa):00612                    bhi    L0708                                                 * 0704 22 02          ".
0706 20F4             (../cmds/BBS.forwa):00613                    bra    L06FC                                                 * 0706 20 F4           t
0708 301F             (../cmds/BBS.forwa):00614         L0708      leax   -$01,X                                                * 0708 30 1F          0.
070A 39               (../cmds/BBS.forwa):00615                    rts                                                          * 070A 39             9
070B A3C830           (../cmds/BBS.forwa):00616         L070B      subd   <U0030,U                                              * 070B A3 C8 30       #H0
070E 2504             (../cmds/BBS.forwa):00617                    bcs    L0714                                                 * 070E 25 04          %.
0710 6C84             (../cmds/BBS.forwa):00618                    inc    0,X                                                   * 0710 6C 84          l.
0712 20F7             (../cmds/BBS.forwa):00619                    bra    L070B                                                 * 0712 20 F7           w
0714 E3C830           (../cmds/BBS.forwa):00620         L0714      addd   <U0030,U                                              * 0714 E3 C8 30       cH0
0717 EDC82E           (../cmds/BBS.forwa):00621                    std    <U002E,U                                              * 0717 ED C8 2E       mH.
071A 3001             (../cmds/BBS.forwa):00622                    leax   $01,X                                                 * 071A 30 01          0.
071C 39               (../cmds/BBS.forwa):00623                    rts                                                          * 071C 39             9
071D CCFFFF           (../cmds/BBS.forwa):00624         L071D      ldd    #-1                                                   * 071D CC FF FF       L..
0720 35A0             (../cmds/BBS.forwa):00625                    puls   PC,Y                                                  * 0720 35 A0          5
                      (../cmds/BBS.forwa):00626         
0722 E2D0E5           (../cmds/BBS.forwa):00627                    emod
     0725             (../cmds/BBS.forwa):00628         eom        equ    *
                      (../cmds/BBS.forwa):00629                    end
