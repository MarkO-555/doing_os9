                      (/dd/sourcecode/as):00001         ********************************************************************
                      (/dd/sourcecode/as):00002         * Clock2 - MESS Emulator RTC Driver
                      (/dd/sourcecode/as):00003         *
                      (/dd/sourcecode/as):00004         * $Id$
                      (/dd/sourcecode/as):00005         *
                      (/dd/sourcecode/as):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (/dd/sourcecode/as):00007         * Comment
                      (/dd/sourcecode/as):00008         * ------------------------------------------------------------------
                      (/dd/sourcecode/as):00009         *          2004/07/13  Robert Gault
                      (/dd/sourcecode/as):00010         * Added Vavasour/Collyer emulator & MESS (Disto) versions and relocated
                      (/dd/sourcecode/as):00011         * 'GetTime equ'   statement so it is not within a chip heading.
                      (/dd/sourcecode/as):00012         *
                      (/dd/sourcecode/as):00013         *   1      2004/08/18  Boisy G. Pitre
                      (/dd/sourcecode/as):00014         * Separated clock2 modules for source clarity.
                      (/dd/sourcecode/as):00015         *
                      (/dd/sourcecode/as):00016         *   2      2009/01/11  Robert Gault
                      (/dd/sourcecode/as):00017         * Corrected code for day of week. Was bitb #4 but should be bita #4.
                      (/dd/sourcecode/as):00018         
                      (/dd/sourcecode/as):00019                  nam   Clock2
                      (/dd/sourcecode/as):00020                  ttl   MESS Emulator RTC Driver
                      (/dd/sourcecode/as):00021         
                      (/dd/sourcecode/as):00022                  ifp1            
                      (/dd/sourcecode/as):00023                  use   defsfile  
                      (         defsfile):00001                  ifp1
                      (         defsfile):00002                  use   /dd/defs/os9.d
                      (   /dd/defs/os9.d):00001         ********************************************************************
                      (   /dd/defs/os9.d):00002         * os9.d - NitrOS-9 System Definitions
                      (   /dd/defs/os9.d):00003         *
                      (   /dd/defs/os9.d):00004         * $Id$
                      (   /dd/defs/os9.d):00005         *
                      (   /dd/defs/os9.d):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (   /dd/defs/os9.d):00007         * Comment
                      (   /dd/defs/os9.d):00008         * ------------------------------------------------------------------
                      (   /dd/defs/os9.d):00009         *          1985/08/29  KMZ
                      (   /dd/defs/os9.d):00010         * Fixed DT.SBF/NFM values to 3/4
                      (   /dd/defs/os9.d):00011         *
                      (   /dd/defs/os9.d):00012         *          1985/09/01  KMZ
                      (   /dd/defs/os9.d):00013         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (   /dd/defs/os9.d):00014         *
                      (   /dd/defs/os9.d):00015         *          1985/09/03  KMZ/Robert F. Doggett
                      (   /dd/defs/os9.d):00016         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (   /dd/defs/os9.d):00017         * 68000 compatability.
                      (   /dd/defs/os9.d):00018         *
                      (   /dd/defs/os9.d):00019         *          1986/04/15  Mark G. Hawkins
                      (   /dd/defs/os9.d):00020         * F$AlHRAM System call added for COCO.
                      (   /dd/defs/os9.d):00021         *
                      (   /dd/defs/os9.d):00022         *          1986/09/08  Mark G. Hawkins
                      (   /dd/defs/os9.d):00023         * F$Alarm for COCO Clock Module.
                      (   /dd/defs/os9.d):00024         *
                      (   /dd/defs/os9.d):00025         *          1986/09/17  Mark G. Hawkins
                      (   /dd/defs/os9.d):00026         * SS.Tone For COCO.
                      (   /dd/defs/os9.d):00027         *
                      (   /dd/defs/os9.d):00028         *          1986/09/23  Mark G. Hawkins
                      (   /dd/defs/os9.d):00029         * Added F$NMLink and F$NMLoad for COCO.
                      (   /dd/defs/os9.d):00030         *
                      (   /dd/defs/os9.d):00031         *          1986/09/30  Mark G. Hawkins
                      (   /dd/defs/os9.d):00032         * Added Reserved User $70 to $7f in sytem calls.
                      (   /dd/defs/os9.d):00033         *
                      (   /dd/defs/os9.d):00034         *          1986/09/30  Mark G. Hawkins
                      (   /dd/defs/os9.d):00035         * Created Color Computer 3 Version of OS9Defs.
                      (   /dd/defs/os9.d):00036         *
                      (   /dd/defs/os9.d):00037         *          1998/10/03  Boisy G. Pitre
                      (   /dd/defs/os9.d):00038         * Consoldated Level 1/Level 2 os9defs.
                      (   /dd/defs/os9.d):00039         *
                      (   /dd/defs/os9.d):00040         *          2002/04/04  Boisy G. Pitre
                      (   /dd/defs/os9.d):00041         * Consoldated Level 2/Level 2 V3 os9defs.
                      (   /dd/defs/os9.d):00042         *
                      (   /dd/defs/os9.d):00043         *          2002/04/30  Boisy G. Pitre
                      (   /dd/defs/os9.d):00044         * Added NitrOS-9 definitions.
                      (   /dd/defs/os9.d):00045         *
                      (   /dd/defs/os9.d):00046         *          2003/05/30  Boisy G. Pitre
                      (   /dd/defs/os9.d):00047         * Added WD1002 sys vars to Level One section.
                      (   /dd/defs/os9.d):00048         *
                      (   /dd/defs/os9.d):00049         *          2003/06/02  Boisy G. Pitre
                      (   /dd/defs/os9.d):00050         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (   /dd/defs/os9.d):00051         * changed the sizes from 2 to 3 bytes.
                      (   /dd/defs/os9.d):00052         * DT.NFM is now the same for both Level One and Level Two.
                      (   /dd/defs/os9.d):00053         * Added DT.CDFM type for future CD-ROM file manager
                      (   /dd/defs/os9.d):00054         *
                      (   /dd/defs/os9.d):00055         *          2003/11/05  Robert Gault
                      (   /dd/defs/os9.d):00056         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (   /dd/defs/os9.d):00057         *
                      (   /dd/defs/os9.d):00058         *              2005/11/02  P.Harvey-Smith
                      (   /dd/defs/os9.d):00059         * Added definitions for boot areas on Dragon computers.
                      (   /dd/defs/os9.d):00060         *
                      (   /dd/defs/os9.d):00061         *              2006/03/03  Boisy G. Pitre
                      (   /dd/defs/os9.d):00062         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (   /dd/defs/os9.d):00063         
                      (   /dd/defs/os9.d):00064                        NAM       os9.d
                      (   /dd/defs/os9.d):00065                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (   /dd/defs/os9.d):00066         
                      (   /dd/defs/os9.d):00067         * Common definitions
     0001             (   /dd/defs/os9.d):00068         true           EQU       1                   useful name
     0000             (   /dd/defs/os9.d):00069         false          EQU       0                   useful name
                      (   /dd/defs/os9.d):00070         
                      (   /dd/defs/os9.d):00071                        PAG       
                      (   /dd/defs/os9.d):00072         *****************************************
                      (   /dd/defs/os9.d):00073         * System Service Request Code Definitions
                      (   /dd/defs/os9.d):00074         *
                      (   /dd/defs/os9.d):00075                        ORG       0
0000                  (   /dd/defs/os9.d):00076         F$Link         RMB       1                   Link to Module
0001                  (   /dd/defs/os9.d):00077         F$Load         RMB       1                   Load Module from File
0002                  (   /dd/defs/os9.d):00078         F$UnLink       RMB       1                   Unlink Module
0003                  (   /dd/defs/os9.d):00079         F$Fork         RMB       1                   Start New Process
0004                  (   /dd/defs/os9.d):00080         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (   /dd/defs/os9.d):00081         F$Chain        RMB       1                   Chain Process to New Module
0006                  (   /dd/defs/os9.d):00082         F$Exit         RMB       1                   Terminate Process
0007                  (   /dd/defs/os9.d):00083         F$Mem          RMB       1                   Set Memory Size
0008                  (   /dd/defs/os9.d):00084         F$Send         RMB       1                   Send Signal to Process
0009                  (   /dd/defs/os9.d):00085         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (   /dd/defs/os9.d):00086         F$Sleep        RMB       1                   Suspend Process
000B                  (   /dd/defs/os9.d):00087         F$SSpd         RMB       1                   Suspend Process
000C                  (   /dd/defs/os9.d):00088         F$ID           RMB       1                   Return Process ID
000D                  (   /dd/defs/os9.d):00089         F$SPrior       RMB       1                   Set Process Priority
000E                  (   /dd/defs/os9.d):00090         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (   /dd/defs/os9.d):00091         F$PErr         RMB       1                   Print Error
0010                  (   /dd/defs/os9.d):00092         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (   /dd/defs/os9.d):00093         F$CmpNam       RMB       1                   Compare Two Names
0012                  (   /dd/defs/os9.d):00094         F$SchBit       RMB       1                   Search Bit Map
0013                  (   /dd/defs/os9.d):00095         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (   /dd/defs/os9.d):00096         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (   /dd/defs/os9.d):00097         F$Time         RMB       1                   Get Current Time
0016                  (   /dd/defs/os9.d):00098         F$STime        RMB       1                   Set Current Time
0017                  (   /dd/defs/os9.d):00099         F$CRC          RMB       1                   Generate CRC ($17)
                      (   /dd/defs/os9.d):00100         
                      (   /dd/defs/os9.d):00101         
                      (   /dd/defs/os9.d):00102         * NitrOS-9 Level 2 system calls
0018                  (   /dd/defs/os9.d):00103         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (   /dd/defs/os9.d):00104         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (   /dd/defs/os9.d):00105         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (   /dd/defs/os9.d):00106         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (   /dd/defs/os9.d):00107         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (   /dd/defs/os9.d):00108         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (   /dd/defs/os9.d):00109         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (   /dd/defs/os9.d):00110                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (   /dd/defs/os9.d):00111         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (   /dd/defs/os9.d):00112         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (   /dd/defs/os9.d):00113         
                      (   /dd/defs/os9.d):00114         
                      (   /dd/defs/os9.d):00115         * NitrOS-9 Level 1 system call padding
                      (   /dd/defs/os9.d):00116         
                      (   /dd/defs/os9.d):00117         
0023                  (   /dd/defs/os9.d):00118         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (   /dd/defs/os9.d):00119         
                      (   /dd/defs/os9.d):00120         
                      (   /dd/defs/os9.d):00121                        ORG       $25
0025                  (   /dd/defs/os9.d):00122         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (   /dd/defs/os9.d):00123         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (   /dd/defs/os9.d):00124         
                      (   /dd/defs/os9.d):00125         
                      (   /dd/defs/os9.d):00126                        ORG       $27                 Beginning of System Reserved Calls
                      (   /dd/defs/os9.d):00127         * NitrOS-9 common system calls
0027                  (   /dd/defs/os9.d):00128         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (   /dd/defs/os9.d):00129         F$SRqMem       RMB       1                   System Memory Request
0029                  (   /dd/defs/os9.d):00130         F$SRtMem       RMB       1                   System Memory Return
002A                  (   /dd/defs/os9.d):00131         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (   /dd/defs/os9.d):00132         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (   /dd/defs/os9.d):00133         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (   /dd/defs/os9.d):00134         F$NProc        RMB       1                   Start Next Process
002E                  (   /dd/defs/os9.d):00135         F$VModul       RMB       1                   Validate Module
002F                  (   /dd/defs/os9.d):00136         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (   /dd/defs/os9.d):00137         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (   /dd/defs/os9.d):00138         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (   /dd/defs/os9.d):00139         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (   /dd/defs/os9.d):00140         F$IODel        RMB       1                   Delete I/O Module
                      (   /dd/defs/os9.d):00141         
                      (   /dd/defs/os9.d):00142         
0034                  (   /dd/defs/os9.d):00143         F$SLink        RMB       1                   System Link
0035                  (   /dd/defs/os9.d):00144         F$Boot         RMB       1                   Bootstrap System
0036                  (   /dd/defs/os9.d):00145         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (   /dd/defs/os9.d):00146         F$GProcP       RMB       1                   Get Process ptr
0038                  (   /dd/defs/os9.d):00147         F$Move         RMB       1                   Move Data (low bound first)
0039                  (   /dd/defs/os9.d):00148         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (   /dd/defs/os9.d):00149         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (   /dd/defs/os9.d):00150         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (   /dd/defs/os9.d):00151         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (   /dd/defs/os9.d):00152         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (   /dd/defs/os9.d):00153         F$FreeHB       RMB       1                   Get Free High Block
003F                  (   /dd/defs/os9.d):00154         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (   /dd/defs/os9.d):00155         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (   /dd/defs/os9.d):00156         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (   /dd/defs/os9.d):00157         F$ResTsk       RMB       1                   Reserve Task number
0043                  (   /dd/defs/os9.d):00158         F$RelTsk       RMB       1                   Release Task number
0044                  (   /dd/defs/os9.d):00159         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (   /dd/defs/os9.d):00160         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (   /dd/defs/os9.d):00161         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (   /dd/defs/os9.d):00162         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (   /dd/defs/os9.d):00163         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (   /dd/defs/os9.d):00164         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (   /dd/defs/os9.d):00165         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (   /dd/defs/os9.d):00166         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (   /dd/defs/os9.d):00167         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (   /dd/defs/os9.d):00168         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (   /dd/defs/os9.d):00169         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (   /dd/defs/os9.d):00170         F$MapBlk       RMB       1                   Map Specific Block
0050                  (   /dd/defs/os9.d):00171         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (   /dd/defs/os9.d):00172         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (   /dd/defs/os9.d):00173         F$GCMDir       RMB       1                   Pack module directory
0053                  (   /dd/defs/os9.d):00174         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (   /dd/defs/os9.d):00175         
                      (   /dd/defs/os9.d):00176         * Alan DeKok additions
0054                  (   /dd/defs/os9.d):00177         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (   /dd/defs/os9.d):00178         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (   /dd/defs/os9.d):00179         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (   /dd/defs/os9.d):00180         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (   /dd/defs/os9.d):00181         
                      (   /dd/defs/os9.d):00182         
                      (   /dd/defs/os9.d):00183         *
                      (   /dd/defs/os9.d):00184         * Numbers $70 through $7F are reserved for user definitions
                      (   /dd/defs/os9.d):00185         *
                      (   /dd/defs/os9.d):00186                        ORG       $70
                      (   /dd/defs/os9.d):00187         
                      (   /dd/defs/os9.d):00188         
                      (   /dd/defs/os9.d):00189         
                      (   /dd/defs/os9.d):00190         
0070                  (   /dd/defs/os9.d):00191         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (   /dd/defs/os9.d):00192         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (   /dd/defs/os9.d):00193         
0072                  (   /dd/defs/os9.d):00194                        RMB       $80-.               Reserved for user definitions
                      (   /dd/defs/os9.d):00195         
                      (   /dd/defs/os9.d):00196                        PAG       
                      (   /dd/defs/os9.d):00197         **************************************
                      (   /dd/defs/os9.d):00198         * I/O Service Request Code Definitions
                      (   /dd/defs/os9.d):00199         *
                      (   /dd/defs/os9.d):00200                        ORG       $80
0080                  (   /dd/defs/os9.d):00201         I$Attach       RMB       1                   Attach I/O Device
0081                  (   /dd/defs/os9.d):00202         I$Detach       RMB       1                   Detach I/O Device
0082                  (   /dd/defs/os9.d):00203         I$Dup          RMB       1                   Duplicate Path
0083                  (   /dd/defs/os9.d):00204         I$Create       RMB       1                   Create New File
0084                  (   /dd/defs/os9.d):00205         I$Open         RMB       1                   Open Existing File
0085                  (   /dd/defs/os9.d):00206         I$MakDir       RMB       1                   Make Directory File
0086                  (   /dd/defs/os9.d):00207         I$ChgDir       RMB       1                   Change Default Directory
0087                  (   /dd/defs/os9.d):00208         I$Delete       RMB       1                   Delete File
0088                  (   /dd/defs/os9.d):00209         I$Seek         RMB       1                   Change Current Position
0089                  (   /dd/defs/os9.d):00210         I$Read         RMB       1                   Read Data
008A                  (   /dd/defs/os9.d):00211         I$Write        RMB       1                   Write Data
008B                  (   /dd/defs/os9.d):00212         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (   /dd/defs/os9.d):00213         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (   /dd/defs/os9.d):00214         I$GetStt       RMB       1                   Get Path Status
008E                  (   /dd/defs/os9.d):00215         I$SetStt       RMB       1                   Set Path Status
008F                  (   /dd/defs/os9.d):00216         I$Close        RMB       1                   Close Path
0090                  (   /dd/defs/os9.d):00217         I$DeletX       RMB       1                   Delete from current exec dir
                      (   /dd/defs/os9.d):00218         
                      (   /dd/defs/os9.d):00219         *******************
                      (   /dd/defs/os9.d):00220         * File Access Modes
                      (   /dd/defs/os9.d):00221         *
     0001             (   /dd/defs/os9.d):00222         READ.          EQU       %00000001
     0002             (   /dd/defs/os9.d):00223         WRITE.         EQU       %00000010
     0003             (   /dd/defs/os9.d):00224         UPDAT.         EQU       READ.+WRITE.
     0004             (   /dd/defs/os9.d):00225         EXEC.          EQU       %00000100
     0008             (   /dd/defs/os9.d):00226         PREAD.         EQU       %00001000
     0010             (   /dd/defs/os9.d):00227         PWRIT.         EQU       %00010000
     0020             (   /dd/defs/os9.d):00228         PEXEC.         EQU       %00100000
     0040             (   /dd/defs/os9.d):00229         SHARE.         EQU       %01000000
     0080             (   /dd/defs/os9.d):00230         DIR.           EQU       %10000000
     0020             (   /dd/defs/os9.d):00231         ISIZ.          EQU       %00100000
                      (   /dd/defs/os9.d):00232         
                      (   /dd/defs/os9.d):00233         **************
                      (   /dd/defs/os9.d):00234         * Signal Codes
                      (   /dd/defs/os9.d):00235         *
                      (   /dd/defs/os9.d):00236                        ORG       0
0000                  (   /dd/defs/os9.d):00237         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (   /dd/defs/os9.d):00238         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (   /dd/defs/os9.d):00239         S$Abort        RMB       1                   Keyboard Abort
0003                  (   /dd/defs/os9.d):00240         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (   /dd/defs/os9.d):00241         S$Window       RMB       1                   Window Change
     0004             (   /dd/defs/os9.d):00242         S$HUP          EQU       S$Window            Hang Up
0005                  (   /dd/defs/os9.d):00243         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (   /dd/defs/os9.d):00244         
                      (   /dd/defs/os9.d):00245                        PAG       
                      (   /dd/defs/os9.d):00246         **********************************
                      (   /dd/defs/os9.d):00247         * Status Codes for GetStat/GetStat
                      (   /dd/defs/os9.d):00248         *
                      (   /dd/defs/os9.d):00249                        ORG       0
0000                  (   /dd/defs/os9.d):00250         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (   /dd/defs/os9.d):00251         SS.Ready       RMB       1                   Check for Device Ready
0002                  (   /dd/defs/os9.d):00252         SS.Size        RMB       1                   Read/Write File Size
0003                  (   /dd/defs/os9.d):00253         SS.Reset       RMB       1                   Device Restore
0004                  (   /dd/defs/os9.d):00254         SS.WTrk        RMB       1                   Device Write Track
0005                  (   /dd/defs/os9.d):00255         SS.Pos         RMB       1                   Get File Current Position
0006                  (   /dd/defs/os9.d):00256         SS.EOF         RMB       1                   Test for End of File
0007                  (   /dd/defs/os9.d):00257         SS.Link        RMB       1                   Link to Status routines
0008                  (   /dd/defs/os9.d):00258         SS.ULink       RMB       1                   Unlink Status routines
0009                  (   /dd/defs/os9.d):00259         SS.Feed        RMB       1                   Issue form feed
000A                  (   /dd/defs/os9.d):00260         SS.Frz         RMB       1                   Freeze DD. information
000B                  (   /dd/defs/os9.d):00261         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (   /dd/defs/os9.d):00262         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (   /dd/defs/os9.d):00263         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (   /dd/defs/os9.d):00264         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (   /dd/defs/os9.d):00265         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (   /dd/defs/os9.d):00266         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (   /dd/defs/os9.d):00267         SS.Lock        RMB       1                   Lock/Release record
0012                  (   /dd/defs/os9.d):00268         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (   /dd/defs/os9.d):00269         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (   /dd/defs/os9.d):00270         SS.BlkRd       RMB       1                   Block Read
0015                  (   /dd/defs/os9.d):00271         SS.BlkWr       RMB       1                   Block Write
0016                  (   /dd/defs/os9.d):00272         SS.Reten       RMB       1                   Retension cycle
0017                  (   /dd/defs/os9.d):00273         SS.WFM         RMB       1                   Write File Mark
0018                  (   /dd/defs/os9.d):00274         SS.RFM         RMB       1                   Read past File Mark
0019                  (   /dd/defs/os9.d):00275         SS.ELog        RMB       1                   Read Error Log
001A                  (   /dd/defs/os9.d):00276         SS.SSig        RMB       1                   Send signal on data ready
001B                  (   /dd/defs/os9.d):00277         SS.Relea       RMB       1                   Release device
001C                  (   /dd/defs/os9.d):00278         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (   /dd/defs/os9.d):00279         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (   /dd/defs/os9.d):00280         SS.Break       RMB       1                   Send break signal out acia
001E                  (   /dd/defs/os9.d):00281         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (   /dd/defs/os9.d):00282                        RMB       1                   Reserved
     0020             (   /dd/defs/os9.d):00283         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (   /dd/defs/os9.d):00284         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (   /dd/defs/os9.d):00285                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (   /dd/defs/os9.d):00286         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (   /dd/defs/os9.d):00287         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (   /dd/defs/os9.d):00288         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (   /dd/defs/os9.d):00289         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (   /dd/defs/os9.d):00290         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (   /dd/defs/os9.d):00291         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (   /dd/defs/os9.d):00292         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (   /dd/defs/os9.d):00293         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (   /dd/defs/os9.d):00294         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (   /dd/defs/os9.d):00295         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (   /dd/defs/os9.d):00296         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (   /dd/defs/os9.d):00297         
                      (   /dd/defs/os9.d):00298         * System Specific and User defined codes above $80
                      (   /dd/defs/os9.d):00299                        ORG       $80
0080                  (   /dd/defs/os9.d):00300         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (   /dd/defs/os9.d):00301         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (   /dd/defs/os9.d):00302         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (   /dd/defs/os9.d):00303         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (   /dd/defs/os9.d):00304         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (   /dd/defs/os9.d):00305         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (   /dd/defs/os9.d):00306         
                      (   /dd/defs/os9.d):00307         *               IFGT      Level-1
                      (   /dd/defs/os9.d):00308         * Level 2 Windowing
0086                  (   /dd/defs/os9.d):00309         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (   /dd/defs/os9.d):00310         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (   /dd/defs/os9.d):00311         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (   /dd/defs/os9.d):00312         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (   /dd/defs/os9.d):00313         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (   /dd/defs/os9.d):00314         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (   /dd/defs/os9.d):00315         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (   /dd/defs/os9.d):00316         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (   /dd/defs/os9.d):00317         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (   /dd/defs/os9.d):00318         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (   /dd/defs/os9.d):00319                        RMB       1                   Reserved
0091                  (   /dd/defs/os9.d):00320         SS.Palet       RMB       1                   Return palette information
0092                  (   /dd/defs/os9.d):00321         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (   /dd/defs/os9.d):00322         SS.ScTyp       RMB       1                   Get screen type information
0094                  (   /dd/defs/os9.d):00323         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (   /dd/defs/os9.d):00324         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (   /dd/defs/os9.d):00325         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (   /dd/defs/os9.d):00326         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (   /dd/defs/os9.d):00327         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (   /dd/defs/os9.d):00328         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (   /dd/defs/os9.d):00329         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (   /dd/defs/os9.d):00330         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (   /dd/defs/os9.d):00331         
                      (   /dd/defs/os9.d):00332         * sc6551 defined
     0099             (   /dd/defs/os9.d):00333         SS.CDSta       EQU       SS.GIP2
     009A             (   /dd/defs/os9.d):00334         SS.CDSig       EQU       SS.AnPal
     009B             (   /dd/defs/os9.d):00335         SS.CDRel       EQU       SS.FndBf
                      (   /dd/defs/os9.d):00336         * These are wide open in Level 1
                      (   /dd/defs/os9.d):00337         
                      (   /dd/defs/os9.d):00338         * sc6551 defined
                      (   /dd/defs/os9.d):00339         
                      (   /dd/defs/os9.d):00340                        ORG       $A0
                      (   /dd/defs/os9.d):00341         *
                      (   /dd/defs/os9.d):00342         * New Default SCF input buffer Set status call
00A0                  (   /dd/defs/os9.d):00343         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (   /dd/defs/os9.d):00344         SS.Hist        RMB       1                   Enable command-line history easily
                      (   /dd/defs/os9.d):00345         
                      (   /dd/defs/os9.d):00346         
                      (   /dd/defs/os9.d):00347                        ORG       $B0
                      (   /dd/defs/os9.d):00348         *
                      (   /dd/defs/os9.d):00349         * New WDDisk get/set status calls
00B0                  (   /dd/defs/os9.d):00350         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (   /dd/defs/os9.d):00351         
                      (   /dd/defs/os9.d):00352         *
                      (   /dd/defs/os9.d):00353         
                      (   /dd/defs/os9.d):00354         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (   /dd/defs/os9.d):00355         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (   /dd/defs/os9.d):00356         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (   /dd/defs/os9.d):00357         
     0081             (   /dd/defs/os9.d):00358         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (   /dd/defs/os9.d):00359         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (   /dd/defs/os9.d):00360         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (   /dd/defs/os9.d):00361         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (   /dd/defs/os9.d):00362         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (   /dd/defs/os9.d):00363         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (   /dd/defs/os9.d):00364         
                      (   /dd/defs/os9.d):00365         * SDisk 3 Definition Equates
     0080             (   /dd/defs/os9.d):00366         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (   /dd/defs/os9.d):00367         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (   /dd/defs/os9.d):00368         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (   /dd/defs/os9.d):00369         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (   /dd/defs/os9.d):00370         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (   /dd/defs/os9.d):00371         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (   /dd/defs/os9.d):00372         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (   /dd/defs/os9.d):00373         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (   /dd/defs/os9.d):00374         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return ($86)
                      (   /dd/defs/os9.d):00375         
                      (   /dd/defs/os9.d):00376         
                      (   /dd/defs/os9.d):00377                        TTL       Direct Page Definitions
                      (   /dd/defs/os9.d):00378                        PAG       
                      (   /dd/defs/os9.d):00379         
                      (   /dd/defs/os9.d):00380         **********************************
                      (   /dd/defs/os9.d):00381         * Direct Page Variable Definitions
                      (   /dd/defs/os9.d):00382         *
                      (   /dd/defs/os9.d):00383                        ORG       $00
0000                  (   /dd/defs/os9.d):00384         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (   /dd/defs/os9.d):00385         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (   /dd/defs/os9.d):00386         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (   /dd/defs/os9.d):00387                        RMB       5
0009                  (   /dd/defs/os9.d):00388         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (   /dd/defs/os9.d):00389         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (   /dd/defs/os9.d):00390         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (   /dd/defs/os9.d):00391         D.DWStat       RMB       2                   DriveWire statics page
0010                  (   /dd/defs/os9.d):00392         D.DWSrvID      RMB       1                   DriveWire server ID
                      (   /dd/defs/os9.d):00393         
                      (   /dd/defs/os9.d):00394                        ORG       $20
                      (   /dd/defs/os9.d):00395         
                      (   /dd/defs/os9.d):00396         
                      (   /dd/defs/os9.d):00397         * Level 1 DP vars
                      (   /dd/defs/os9.d):00398         
                      (   /dd/defs/os9.d):00399         *D.XSWI3        RMB       3
                      (   /dd/defs/os9.d):00400         *D.XSWI2        RMB       3
                      (   /dd/defs/os9.d):00401         *D.XFIRQ        RMB       3
                      (   /dd/defs/os9.d):00402         *D.XIRQ         RMB       3
                      (   /dd/defs/os9.d):00403         *D.XSWI         RMB       3
                      (   /dd/defs/os9.d):00404         *D.XNMI         RMB       3
                      (   /dd/defs/os9.d):00405         
                      (   /dd/defs/os9.d):00406         
                      (   /dd/defs/os9.d):00407         * Table Sizes
                      (   /dd/defs/os9.d):00408         
                      (   /dd/defs/os9.d):00409         
                      (   /dd/defs/os9.d):00410         * Level 2 DP vars
0020                  (   /dd/defs/os9.d):00411         D.Tasks        RMB       2                   Task User Table
0022                  (   /dd/defs/os9.d):00412         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (   /dd/defs/os9.d):00413         D.Init         RMB       2                   Initialization Module ptr
0026                  (   /dd/defs/os9.d):00414         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (   /dd/defs/os9.d):00415         D.Time         EQU       .                   System Time
0028                  (   /dd/defs/os9.d):00416         D.Year         RMB       1
0029                  (   /dd/defs/os9.d):00417         D.Month        RMB       1
002A                  (   /dd/defs/os9.d):00418         D.Day          RMB       1
002B                  (   /dd/defs/os9.d):00419         D.Hour         RMB       1
002C                  (   /dd/defs/os9.d):00420         D.Min          RMB       1
002D                  (   /dd/defs/os9.d):00421         D.Sec          RMB       1
002E                  (   /dd/defs/os9.d):00422         D.Tick         RMB       1
002F                  (   /dd/defs/os9.d):00423         D.Slice        RMB       1                   current slice remaining
0030                  (   /dd/defs/os9.d):00424         D.TSlice       RMB       1                   Ticks per Slice
0031                  (   /dd/defs/os9.d):00425         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (   /dd/defs/os9.d):00426         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (   /dd/defs/os9.d):00427         D.ErrCod       RMB       1                   Reset Error Code
0034                  (   /dd/defs/os9.d):00428         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (   /dd/defs/os9.d):00429         D.TkCnt        RMB       1                   Tick Counter
0036                  (   /dd/defs/os9.d):00430         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (   /dd/defs/os9.d):00431         D.BtSz         RMB       2                   Size of Boot
                      (   /dd/defs/os9.d):00432         
003A                  (   /dd/defs/os9.d):00433                        RMB       1                   Currently unused in NitrOS-9/6809
                      (   /dd/defs/os9.d):00434         
003B                  (   /dd/defs/os9.d):00435         D.CRC          RMB       1                   CRC checking mode flag
                      (   /dd/defs/os9.d):00436         
003C                  (   /dd/defs/os9.d):00437         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (   /dd/defs/os9.d):00438         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (   /dd/defs/os9.d):00439         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (   /dd/defs/os9.d):00440         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (   /dd/defs/os9.d):00441         
                      (   /dd/defs/os9.d):00442                        ORG       $40
0040                  (   /dd/defs/os9.d):00443         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (   /dd/defs/os9.d):00444         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (   /dd/defs/os9.d):00445         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (   /dd/defs/os9.d):00446         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (   /dd/defs/os9.d):00447         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (   /dd/defs/os9.d):00448         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (   /dd/defs/os9.d):00449         D.Proc         RMB       2                   Current Process ptr
0052                  (   /dd/defs/os9.d):00450         D.AProcQ       RMB       2                   Active Process Queue
0054                  (   /dd/defs/os9.d):00451         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (   /dd/defs/os9.d):00452         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (   /dd/defs/os9.d):00453         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (   /dd/defs/os9.d):00454         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (   /dd/defs/os9.d):00455         D.CldRes       RMB       2                   Cold Restart vector
005E                  (   /dd/defs/os9.d):00456         D.BtBug        RMB       3                   Boot debug information
0061                  (   /dd/defs/os9.d):00457         D.Pipe         RMB       2
                      (   /dd/defs/os9.d):00458         
                      (   /dd/defs/os9.d):00459                        ORG       $6B
006B                  (   /dd/defs/os9.d):00460         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (   /dd/defs/os9.d):00461         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (   /dd/defs/os9.d):00462         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (   /dd/defs/os9.d):00463         
                      (   /dd/defs/os9.d):00464                        ORG       $80
0080                  (   /dd/defs/os9.d):00465         D.DevTbl       RMB       2                   I/O Device Table
0082                  (   /dd/defs/os9.d):00466         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (   /dd/defs/os9.d):00467                        RMB       4                   reserved
0088                  (   /dd/defs/os9.d):00468         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (   /dd/defs/os9.d):00469         D.DMAReq       RMB       1                   DMA Request flag
                      (   /dd/defs/os9.d):00470         
                      (   /dd/defs/os9.d):00471         ********
                      (   /dd/defs/os9.d):00472         * CoCo 3 STUFF COMES NEXT
                      (   /dd/defs/os9.d):00473         * This area is used for the CoCo Hardware Registers
                      (   /dd/defs/os9.d):00474         *
                      (   /dd/defs/os9.d):00475                        ORG       $90
0090                  (   /dd/defs/os9.d):00476         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (   /dd/defs/os9.d):00477         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (   /dd/defs/os9.d):00478         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (   /dd/defs/os9.d):00479         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (   /dd/defs/os9.d):00480         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (   /dd/defs/os9.d):00481         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (   /dd/defs/os9.d):00482         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (   /dd/defs/os9.d):00483         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (   /dd/defs/os9.d):00484         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (   /dd/defs/os9.d):00485         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (   /dd/defs/os9.d):00486         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (   /dd/defs/os9.d):00487         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (   /dd/defs/os9.d):00488         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (   /dd/defs/os9.d):00489         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (   /dd/defs/os9.d):00490         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (   /dd/defs/os9.d):00491         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (   /dd/defs/os9.d):00492         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (   /dd/defs/os9.d):00493         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (   /dd/defs/os9.d):00494         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (   /dd/defs/os9.d):00495         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (   /dd/defs/os9.d):00496         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (   /dd/defs/os9.d):00497         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (   /dd/defs/os9.d):00498         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (   /dd/defs/os9.d):00499         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (   /dd/defs/os9.d):00500         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (   /dd/defs/os9.d):00501         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (   /dd/defs/os9.d):00502         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (   /dd/defs/os9.d):00503         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (   /dd/defs/os9.d):00504         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (   /dd/defs/os9.d):00505         D.Clock2       RMB       2                   CC Clock2 entry address
                      (   /dd/defs/os9.d):00506                        ORG       $C0
00C0                  (   /dd/defs/os9.d):00507         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (   /dd/defs/os9.d):00508         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (   /dd/defs/os9.d):00509         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (   /dd/defs/os9.d):00510         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (   /dd/defs/os9.d):00511         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (   /dd/defs/os9.d):00512         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (   /dd/defs/os9.d):00513         D.SysStk       RMB       2                   System stack
00CE                  (   /dd/defs/os9.d):00514         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (   /dd/defs/os9.d):00515         D.SysTsk       RMB       1                   System Task number
                      (   /dd/defs/os9.d):00516                        ORG       $E0
00E0                  (   /dd/defs/os9.d):00517         D.Clock        RMB       2
00E2                  (   /dd/defs/os9.d):00518         D.XSWI3        RMB       2
00E4                  (   /dd/defs/os9.d):00519         D.XSWI2        RMB       2
00E6                  (   /dd/defs/os9.d):00520         D.XFIRQ        RMB       2
00E8                  (   /dd/defs/os9.d):00521         D.XIRQ         RMB       2
00EA                  (   /dd/defs/os9.d):00522         D.XSWI         RMB       2
00EC                  (   /dd/defs/os9.d):00523         D.XNMI         RMB       2
00EE                  (   /dd/defs/os9.d):00524         D.ErrRst       RMB       2
00F0                  (   /dd/defs/os9.d):00525         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (   /dd/defs/os9.d):00526         D.SWI3         RMB       2
00F4                  (   /dd/defs/os9.d):00527         D.SWI2         RMB       2
00F6                  (   /dd/defs/os9.d):00528         D.FIRQ         RMB       2
00F8                  (   /dd/defs/os9.d):00529         D.IRQ          RMB       2
00FA                  (   /dd/defs/os9.d):00530         D.SWI          RMB       2
00FC                  (   /dd/defs/os9.d):00531         D.NMI          RMB       2
                      (   /dd/defs/os9.d):00532         
                      (   /dd/defs/os9.d):00533         *************************
                      (   /dd/defs/os9.d):00534         * Level 2 flags used for bytes in the memory block map at D.BlkMap
                      (   /dd/defs/os9.d):00535         * and for bytes in the system memory map at D.SysMem.
                      (   /dd/defs/os9.d):00536         * A value of 0 indicates an unused/unassigned block.
                      (   /dd/defs/os9.d):00537         * In the code, block assignment often involves incrementing a value
                      (   /dd/defs/os9.d):00538         * from 0 to 1 rather than explict use of RAMinUse.
                      (   /dd/defs/os9.d):00539         *
     0080             (   /dd/defs/os9.d):00540         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (   /dd/defs/os9.d):00541         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (   /dd/defs/os9.d):00542         ModBlock       EQU       %00000010           Module in Block
     0001             (   /dd/defs/os9.d):00543         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (   /dd/defs/os9.d):00544         *
                      (   /dd/defs/os9.d):00545         * Service Dispatch Table special entries
                      (   /dd/defs/os9.d):00546         *
     00FE             (   /dd/defs/os9.d):00547         IOEntry        EQU       254
                      (   /dd/defs/os9.d):00548         
                      (   /dd/defs/os9.d):00549         
                      (   /dd/defs/os9.d):00550                        TTL       Structure Formats
                      (   /dd/defs/os9.d):00551                        PAG       
                      (   /dd/defs/os9.d):00552         ************************************
                      (   /dd/defs/os9.d):00553         * Module Directory Entry Definitions
                      (   /dd/defs/os9.d):00554         *
                      (   /dd/defs/os9.d):00555                        ORG       0
0000                  (   /dd/defs/os9.d):00556         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (   /dd/defs/os9.d):00557         MD$MBSiz       RMB       2                   Memory Block size
0004                  (   /dd/defs/os9.d):00558         MD$MPtr        RMB       2                   Module ptr
0006                  (   /dd/defs/os9.d):00559         MD$Link        RMB       2                   Module Link count
     0008             (   /dd/defs/os9.d):00560         MD$ESize       EQU       .                   Module Directory Entry size
                      (   /dd/defs/os9.d):00561         
                      (   /dd/defs/os9.d):00562         ************************************
                      (   /dd/defs/os9.d):00563         * Module Definitions
                      (   /dd/defs/os9.d):00564         *
                      (   /dd/defs/os9.d):00565         * Universal Module Offsets
                      (   /dd/defs/os9.d):00566         *
                      (   /dd/defs/os9.d):00567                        ORG       0
0000                  (   /dd/defs/os9.d):00568         M$ID           RMB       2                   ID Code
0002                  (   /dd/defs/os9.d):00569         M$Size         RMB       2                   Module Size
0004                  (   /dd/defs/os9.d):00570         M$Name         RMB       2                   Module Name
0006                  (   /dd/defs/os9.d):00571         M$Type         RMB       1                   Type / Language
0007                  (   /dd/defs/os9.d):00572         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (   /dd/defs/os9.d):00573         M$Parity       RMB       1                   Header Parity
     0009             (   /dd/defs/os9.d):00574         M$IDSize       EQU       .                   Module ID Size
                      (   /dd/defs/os9.d):00575         *
                      (   /dd/defs/os9.d):00576         * Type-Dependent Module Offsets
                      (   /dd/defs/os9.d):00577         *
                      (   /dd/defs/os9.d):00578         * System, File Manager, Device Driver, Program Module
                      (   /dd/defs/os9.d):00579         *
0009                  (   /dd/defs/os9.d):00580         M$Exec         RMB       2                   Execution Entry Offset
                      (   /dd/defs/os9.d):00581         *
                      (   /dd/defs/os9.d):00582         * Device Driver, Program Module
                      (   /dd/defs/os9.d):00583         *
000B                  (   /dd/defs/os9.d):00584         M$Mem          RMB       2                   Stack Requirement
                      (   /dd/defs/os9.d):00585         *
                      (   /dd/defs/os9.d):00586         * Device Driver, Device Descriptor Module
                      (   /dd/defs/os9.d):00587         *
000D                  (   /dd/defs/os9.d):00588         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (   /dd/defs/os9.d):00589         *
                      (   /dd/defs/os9.d):00590         * Device Descriptor Module
                      (   /dd/defs/os9.d):00591         *
                      (   /dd/defs/os9.d):00592                        ORG       M$IDSize
0009                  (   /dd/defs/os9.d):00593         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (   /dd/defs/os9.d):00594         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (   /dd/defs/os9.d):00595                        RMB       1                   M$Mode (defined above)
000E                  (   /dd/defs/os9.d):00596         M$Port         RMB       3                   Port Address
0011                  (   /dd/defs/os9.d):00597         M$Opt          RMB       1                   Device Default Options
0012                  (   /dd/defs/os9.d):00598         M$DTyp         RMB       1                   Device Type
     0012             (   /dd/defs/os9.d):00599         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (   /dd/defs/os9.d):00600         *
                      (   /dd/defs/os9.d):00601         * Configuration Module Entry Offsets
                      (   /dd/defs/os9.d):00602         *
                      (   /dd/defs/os9.d):00603                        ORG       M$IDSize
0009                  (   /dd/defs/os9.d):00604         MaxMem         RMB       3                   Maximum Free Memory
000C                  (   /dd/defs/os9.d):00605         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (   /dd/defs/os9.d):00606         DevCnt         RMB       1                   Entries in Device Table
000E                  (   /dd/defs/os9.d):00607         InitStr        RMB       2                   Initial Module Name
0010                  (   /dd/defs/os9.d):00608         SysStr         RMB       2                   System Device Name
0012                  (   /dd/defs/os9.d):00609         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (   /dd/defs/os9.d):00610         BootStr        RMB       2                   Bootstrap Module name
0016                  (   /dd/defs/os9.d):00611         ProtFlag       RMB       1                   Write protect enable flag
                      (   /dd/defs/os9.d):00612         
0017                  (   /dd/defs/os9.d):00613         OSLevel        RMB       1                   OS level
0018                  (   /dd/defs/os9.d):00614         OSVer          RMB       1                   OS version
0019                  (   /dd/defs/os9.d):00615         OSMajor        RMB       1                   OS major
001A                  (   /dd/defs/os9.d):00616         OSMinor        RMB       1                   OS minor
001B                  (   /dd/defs/os9.d):00617         Feature1       RMB       1                   feature byte 1
001C                  (   /dd/defs/os9.d):00618         Feature2       RMB       1                   feature byte 2
001D                  (   /dd/defs/os9.d):00619         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (   /dd/defs/os9.d):00620         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (   /dd/defs/os9.d):00621                        RMB       4                   reserved for future use
                      (   /dd/defs/os9.d):00622         
                      (   /dd/defs/os9.d):00623         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (   /dd/defs/os9.d):00624         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (   /dd/defs/os9.d):00625         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (   /dd/defs/os9.d):00626         KeyRptS        RMB       1                   Key repeat start constant
0029                  (   /dd/defs/os9.d):00627         KeyRptD        RMB       1                   Key repeat delay constant
                      (   /dd/defs/os9.d):00628         
                      (   /dd/defs/os9.d):00629         * Feature1 byte definitions
     0001             (   /dd/defs/os9.d):00630         CRCOn          EQU       %00000001           CRC checking on
     0000             (   /dd/defs/os9.d):00631         CRCOff         EQU       %00000000           CRC checking off
     0000             (   /dd/defs/os9.d):00632         Proc6809       EQU       %00000000           6809 procesor
     0002             (   /dd/defs/os9.d):00633         Proc6309       EQU       %00000010           6309 procesor
                      (   /dd/defs/os9.d):00634         
                      (   /dd/defs/os9.d):00635                        PAG       
                      (   /dd/defs/os9.d):00636         **************************
                      (   /dd/defs/os9.d):00637         * Module Field Definitions
                      (   /dd/defs/os9.d):00638         *
                      (   /dd/defs/os9.d):00639         * ID Field - First two bytes of a NitrOS-9 module
                      (   /dd/defs/os9.d):00640         *
     0087             (   /dd/defs/os9.d):00641         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (   /dd/defs/os9.d):00642         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (   /dd/defs/os9.d):00643         M$ID12         EQU       M$ID1*256+M$ID2
                      (   /dd/defs/os9.d):00644         
                      (   /dd/defs/os9.d):00645         *
                      (   /dd/defs/os9.d):00646         * Module Type/Language Field Masks
                      (   /dd/defs/os9.d):00647         *
     00F0             (   /dd/defs/os9.d):00648         TypeMask       EQU       %11110000           Type Field
     000F             (   /dd/defs/os9.d):00649         LangMask       EQU       %00001111           Language Field
                      (   /dd/defs/os9.d):00650         
                      (   /dd/defs/os9.d):00651         *
                      (   /dd/defs/os9.d):00652         * Module Type Values
                      (   /dd/defs/os9.d):00653         *
     00F0             (   /dd/defs/os9.d):00654         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (   /dd/defs/os9.d):00655         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (   /dd/defs/os9.d):00656         FlMgr          EQU       $D0                 File Manager
     00C0             (   /dd/defs/os9.d):00657         Systm          EQU       $C0                 System Module
     0050             (   /dd/defs/os9.d):00658         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (   /dd/defs/os9.d):00659         Data           EQU       $40                 Data Module
     0030             (   /dd/defs/os9.d):00660         Multi          EQU       $30                 Multi-Module
     0020             (   /dd/defs/os9.d):00661         Sbrtn          EQU       $20                 Subroutine Module
     0010             (   /dd/defs/os9.d):00662         Prgrm          EQU       $10                 Program Module
                      (   /dd/defs/os9.d):00663         
                      (   /dd/defs/os9.d):00664         *
                      (   /dd/defs/os9.d):00665         * Module Language Values
                      (   /dd/defs/os9.d):00666         *
     0001             (   /dd/defs/os9.d):00667         Objct          EQU       1                   6809 Object Code Module
     0002             (   /dd/defs/os9.d):00668         ICode          EQU       2                   Basic09 I-code
     0003             (   /dd/defs/os9.d):00669         PCode          EQU       3                   Pascal P-code
     0004             (   /dd/defs/os9.d):00670         CCode          EQU       4                   C I-code
     0005             (   /dd/defs/os9.d):00671         CblCode        EQU       5                   Cobol I-code
     0006             (   /dd/defs/os9.d):00672         FrtnCode       EQU       6                   Fortran I-code
     0007             (   /dd/defs/os9.d):00673         Obj6309        EQU       7                   6309 object code
                      (   /dd/defs/os9.d):00674         *
                      (   /dd/defs/os9.d):00675         * Module Attributes / Revision byte
                      (   /dd/defs/os9.d):00676         *
                      (   /dd/defs/os9.d):00677         * Field Masks
                      (   /dd/defs/os9.d):00678         *
     00F0             (   /dd/defs/os9.d):00679         AttrMask       EQU       %11110000           Attributes Field
     000F             (   /dd/defs/os9.d):00680         RevsMask       EQU       %00001111           Revision Level Field
                      (   /dd/defs/os9.d):00681         *
                      (   /dd/defs/os9.d):00682         * Attribute Flags
                      (   /dd/defs/os9.d):00683         *
     0080             (   /dd/defs/os9.d):00684         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (   /dd/defs/os9.d):00685         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (   /dd/defs/os9.d):00686         ModNat         EQU       %00100000           6309 native mode attribute
                      (   /dd/defs/os9.d):00687         
                      (   /dd/defs/os9.d):00688         ********************
                      (   /dd/defs/os9.d):00689         * Device Type Values
                      (   /dd/defs/os9.d):00690         *
                      (   /dd/defs/os9.d):00691         * These values define various classes of devices, which are
                      (   /dd/defs/os9.d):00692         * managed by a file manager module.  The Device Type is embedded
                      (   /dd/defs/os9.d):00693         * in a device's device descriptor.
                      (   /dd/defs/os9.d):00694         *
     0000             (   /dd/defs/os9.d):00695         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (   /dd/defs/os9.d):00696         DT.RBF         EQU       1                   Random Block File Manager
     0002             (   /dd/defs/os9.d):00697         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (   /dd/defs/os9.d):00698         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (   /dd/defs/os9.d):00699         DT.NFM         EQU       4                   Network File Manager
     0005             (   /dd/defs/os9.d):00700         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (   /dd/defs/os9.d):00701         DT.RFM                  EQU             6                                       Remote File Manager
                      (   /dd/defs/os9.d):00702         
                      (   /dd/defs/os9.d):00703         *********************
                      (   /dd/defs/os9.d):00704         * CRC Result Constant
                      (   /dd/defs/os9.d):00705         *
     0080             (   /dd/defs/os9.d):00706         CRCCon1        EQU       $80
     0FE3             (   /dd/defs/os9.d):00707         CRCCon23       EQU       $0FE3
                      (   /dd/defs/os9.d):00708         
                      (   /dd/defs/os9.d):00709                        TTL       Process Information
                      (   /dd/defs/os9.d):00710                        PAG       
                      (   /dd/defs/os9.d):00711         ********************************
                      (   /dd/defs/os9.d):00712         * Process Descriptor Definitions
                      (   /dd/defs/os9.d):00713         *
                      (   /dd/defs/os9.d):00714         
                      (   /dd/defs/os9.d):00715         * Level 1 process descriptor defs
                      (   /dd/defs/os9.d):00716         
                      (   /dd/defs/os9.d):00717         
                      (   /dd/defs/os9.d):00718         *
                      (   /dd/defs/os9.d):00719         * Process State Flags
                      (   /dd/defs/os9.d):00720         *
                      (   /dd/defs/os9.d):00721         
                      (   /dd/defs/os9.d):00722         
                      (   /dd/defs/os9.d):00723         * Level 2 process descriptor defs
     0010             (   /dd/defs/os9.d):00724         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (   /dd/defs/os9.d):00725         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (   /dd/defs/os9.d):00726         NumPaths       EQU       16                  Number of Local Paths
                      (   /dd/defs/os9.d):00727         
                      (   /dd/defs/os9.d):00728                        ORG       0
0000                  (   /dd/defs/os9.d):00729         P$ID           RMB       1                   Process ID
0001                  (   /dd/defs/os9.d):00730         P$PID          RMB       1                   Parent's ID
0002                  (   /dd/defs/os9.d):00731         P$SID          RMB       1                   Sibling's ID
0003                  (   /dd/defs/os9.d):00732         P$CID          RMB       1                   Child's ID
0004                  (   /dd/defs/os9.d):00733         P$SP           RMB       2                   Stack ptr
0006                  (   /dd/defs/os9.d):00734         P$Task         RMB       1                   Task Number
0007                  (   /dd/defs/os9.d):00735         P$PagCnt       RMB       1                   Memory Page Count
0008                  (   /dd/defs/os9.d):00736         P$User         RMB       2                   User Index
000A                  (   /dd/defs/os9.d):00737         P$Prior        RMB       1                   Priority
000B                  (   /dd/defs/os9.d):00738         P$Age          RMB       1                   Age
000C                  (   /dd/defs/os9.d):00739         P$State        RMB       1                   Status
000D                  (   /dd/defs/os9.d):00740         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (   /dd/defs/os9.d):00741         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (   /dd/defs/os9.d):00742         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (   /dd/defs/os9.d):00743         P$PModul       RMB       2                   Primary Module
0013                  (   /dd/defs/os9.d):00744         P$SWI          RMB       2                   SWI Entry Point
0015                  (   /dd/defs/os9.d):00745         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (   /dd/defs/os9.d):00746         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (   /dd/defs/os9.d):00747         P$Signal       RMB       1                   Signal Code
001A                  (   /dd/defs/os9.d):00748         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (   /dd/defs/os9.d):00749         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (   /dd/defs/os9.d):00750         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (   /dd/defs/os9.d):00751                        RMB       $20-.               unused
0020                  (   /dd/defs/os9.d):00752         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (   /dd/defs/os9.d):00753         P$Path         RMB       NumPaths            I/O Path Table
0040                  (   /dd/defs/os9.d):00754         P$DATImg       RMB       64                  DAT Image
0080                  (   /dd/defs/os9.d):00755         P$Links        RMB       32                  Block Link counts
00A0                  (   /dd/defs/os9.d):00756         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (   /dd/defs/os9.d):00757         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (   /dd/defs/os9.d):00758         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (   /dd/defs/os9.d):00759         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (   /dd/defs/os9.d):00760         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (   /dd/defs/os9.d):00761         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (   /dd/defs/os9.d):00762         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (   /dd/defs/os9.d):00763         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (   /dd/defs/os9.d):00764         P$Alarm        RMB       6
00C9                  (   /dd/defs/os9.d):00765                        RMB       $200-.              Local stack
     0200             (   /dd/defs/os9.d):00766         P$Stack        EQU       .                   Top of Stack
     0200             (   /dd/defs/os9.d):00767         P$Size         EQU       .                   Size of Process Descriptor
                      (   /dd/defs/os9.d):00768         
                      (   /dd/defs/os9.d):00769         *
                      (   /dd/defs/os9.d):00770         * Process State Flags
                      (   /dd/defs/os9.d):00771         *
     0080             (   /dd/defs/os9.d):00772         SysState       EQU       %10000000
     0040             (   /dd/defs/os9.d):00773         TimSleep       EQU       %01000000
     0020             (   /dd/defs/os9.d):00774         TimOut         EQU       %00100000
     0010             (   /dd/defs/os9.d):00775         ImgChg         EQU       %00010000
     0008             (   /dd/defs/os9.d):00776         Suspend        EQU       %00001000
     0002             (   /dd/defs/os9.d):00777         Condem         EQU       %00000010
     0001             (   /dd/defs/os9.d):00778         Dead           EQU       %00000001
                      (   /dd/defs/os9.d):00779         
                      (   /dd/defs/os9.d):00780         
                      (   /dd/defs/os9.d):00781                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (   /dd/defs/os9.d):00782                        PAG       
                      (   /dd/defs/os9.d):00783         *************************
                      (   /dd/defs/os9.d):00784         * Path Descriptor Offsets
                      (   /dd/defs/os9.d):00785         *
                      (   /dd/defs/os9.d):00786                        ORG       0
0000                  (   /dd/defs/os9.d):00787         PD.PD          RMB       1                   Path Number
0001                  (   /dd/defs/os9.d):00788         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (   /dd/defs/os9.d):00789         PD.CNT         RMB       1                   Number of Open Images
0003                  (   /dd/defs/os9.d):00790         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (   /dd/defs/os9.d):00791         PD.CPR         RMB       1                   Current Process
0006                  (   /dd/defs/os9.d):00792         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (   /dd/defs/os9.d):00793         PD.BUF         RMB       2                   Buffer Address
000A                  (   /dd/defs/os9.d):00794         PD.FST         RMB       32-.                File Manager's Storage
     0020             (   /dd/defs/os9.d):00795         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (   /dd/defs/os9.d):00796         PD.DTP         RMB       1                   Device Type
0021                  (   /dd/defs/os9.d):00797                        RMB       64-.                Path options
     0040             (   /dd/defs/os9.d):00798         PDSIZE         EQU       .
                      (   /dd/defs/os9.d):00799         
                      (   /dd/defs/os9.d):00800         *
                      (   /dd/defs/os9.d):00801         * Pathlist Special Symbols
                      (   /dd/defs/os9.d):00802         *
     002F             (   /dd/defs/os9.d):00803         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (   /dd/defs/os9.d):00804         PDIR           EQU       '.                  Directory
     0040             (   /dd/defs/os9.d):00805         PENTIR         EQU       '@                  Entire Device
                      (   /dd/defs/os9.d):00806         
                      (   /dd/defs/os9.d):00807                        PAG       
                      (   /dd/defs/os9.d):00808         ****************************
                      (   /dd/defs/os9.d):00809         * File Manager Entry Offsets
                      (   /dd/defs/os9.d):00810         *
                      (   /dd/defs/os9.d):00811                        ORG       0
0000                  (   /dd/defs/os9.d):00812         FMCREA         RMB       3                   Create (Open New) File
0003                  (   /dd/defs/os9.d):00813         FMOPEN         RMB       3                   Open File
0006                  (   /dd/defs/os9.d):00814         FMMDIR         RMB       3                   Make Directory
0009                  (   /dd/defs/os9.d):00815         FMCDIR         RMB       3                   Change Directory
000C                  (   /dd/defs/os9.d):00816         FMDLET         RMB       3                   Delete File
000F                  (   /dd/defs/os9.d):00817         FMSEEK         RMB       3                   Position File
0012                  (   /dd/defs/os9.d):00818         FMREAD         RMB       3                   Read from File
0015                  (   /dd/defs/os9.d):00819         FMWRIT         RMB       3                   Write to File
0018                  (   /dd/defs/os9.d):00820         FMRDLN         RMB       3                   ReadLn
001B                  (   /dd/defs/os9.d):00821         FMWRLN         RMB       3                   WritLn
001E                  (   /dd/defs/os9.d):00822         FMGSTA         RMB       3                   Get File Status
0021                  (   /dd/defs/os9.d):00823         FMSSTA         RMB       3                   Set File Status
0024                  (   /dd/defs/os9.d):00824         FMCLOS         RMB       3                   Close File
                      (   /dd/defs/os9.d):00825         
                      (   /dd/defs/os9.d):00826         *****************************
                      (   /dd/defs/os9.d):00827         * Device Driver Entry Offsets
                      (   /dd/defs/os9.d):00828         *
                      (   /dd/defs/os9.d):00829                        ORG       0
0000                  (   /dd/defs/os9.d):00830         D$INIT         RMB       3                   Device Initialization
0003                  (   /dd/defs/os9.d):00831         D$READ         RMB       3                   Read from Device
0006                  (   /dd/defs/os9.d):00832         D$WRIT         RMB       3                   Write to Device
0009                  (   /dd/defs/os9.d):00833         D$GSTA         RMB       3                   Get Device Status
000C                  (   /dd/defs/os9.d):00834         D$PSTA         RMB       3                   Put Device Status
000F                  (   /dd/defs/os9.d):00835         D$TERM         RMB       3                   Device Termination
                      (   /dd/defs/os9.d):00836         
                      (   /dd/defs/os9.d):00837         *********************
                      (   /dd/defs/os9.d):00838         * Device Table Format
                      (   /dd/defs/os9.d):00839         *
                      (   /dd/defs/os9.d):00840                        ORG       0
0000                  (   /dd/defs/os9.d):00841         V$DRIV         RMB       2                   Device Driver module
0002                  (   /dd/defs/os9.d):00842         V$STAT         RMB       2                   Device Driver Static storage
0004                  (   /dd/defs/os9.d):00843         V$DESC         RMB       2                   Device Descriptor module
0006                  (   /dd/defs/os9.d):00844         V$FMGR         RMB       2                   File Manager module
0008                  (   /dd/defs/os9.d):00845         V$USRS         RMB       1                   use count
0009                  (   /dd/defs/os9.d):00846         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (   /dd/defs/os9.d):00847         V$FMGREX       RMB       2                   File Manager execution address
     000D             (   /dd/defs/os9.d):00848         DEVSIZ         EQU       .
                      (   /dd/defs/os9.d):00849         
                      (   /dd/defs/os9.d):00850         *******************************
                      (   /dd/defs/os9.d):00851         * Device Static Storage Offsets
                      (   /dd/defs/os9.d):00852         *
                      (   /dd/defs/os9.d):00853                        ORG       0
0000                  (   /dd/defs/os9.d):00854         V.PAGE         RMB       1                   Port Extended Address
0001                  (   /dd/defs/os9.d):00855         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (   /dd/defs/os9.d):00856         V.LPRC         RMB       1                   Last Active Process ID
0004                  (   /dd/defs/os9.d):00857         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (   /dd/defs/os9.d):00858         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (   /dd/defs/os9.d):00859         V.USER         EQU       .                   Driver Allocation Origin
                      (   /dd/defs/os9.d):00860         
                      (   /dd/defs/os9.d):00861         ********************************
                      (   /dd/defs/os9.d):00862         * Interrupt Polling Table Format
                      (   /dd/defs/os9.d):00863         *
                      (   /dd/defs/os9.d):00864                        ORG       0
0000                  (   /dd/defs/os9.d):00865         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (   /dd/defs/os9.d):00866         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (   /dd/defs/os9.d):00867         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (   /dd/defs/os9.d):00868         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (   /dd/defs/os9.d):00869         Q$STAT         RMB       2                   Static Storage Address
0008                  (   /dd/defs/os9.d):00870         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
0009                  (   /dd/defs/os9.d):00871         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
     000B             (   /dd/defs/os9.d):00872         POLSIZ         EQU       .
                      (   /dd/defs/os9.d):00873         
                      (   /dd/defs/os9.d):00874         ********************
                      (   /dd/defs/os9.d):00875         * VIRQ packet format
                      (   /dd/defs/os9.d):00876         *
                      (   /dd/defs/os9.d):00877                        ORG       0
0000                  (   /dd/defs/os9.d):00878         Vi.Cnt         RMB       2                   count down counter
0002                  (   /dd/defs/os9.d):00879         Vi.Rst         RMB       2                   reset value for counter
0004                  (   /dd/defs/os9.d):00880         Vi.Stat        RMB       1                   status byte
     0005             (   /dd/defs/os9.d):00881         Vi.PkSz        EQU       .
                      (   /dd/defs/os9.d):00882         
     0001             (   /dd/defs/os9.d):00883         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (   /dd/defs/os9.d):00884         
                      (   /dd/defs/os9.d):00885                        PAG       
                      (   /dd/defs/os9.d):00886         *************************************
                      (   /dd/defs/os9.d):00887         * Machine Characteristics Definitions
                      (   /dd/defs/os9.d):00888         *
     0000             (   /dd/defs/os9.d):00889         R$CC           EQU       0                   Condition Codes register
     0001             (   /dd/defs/os9.d):00890         R$A            EQU       1                   A Accumulator
     0002             (   /dd/defs/os9.d):00891         R$B            EQU       2                   B Accumulator
     0001             (   /dd/defs/os9.d):00892         R$D            EQU       R$A                 Combined A:B Accumulator
                      (   /dd/defs/os9.d):00893                        IFNE      H6309
0005                  (   /dd/defs/os9.d):00894         R$E            EQU       3
0005                  (   /dd/defs/os9.d):00895         R$F            EQU       4
0005                  (   /dd/defs/os9.d):00896         R$W            EQU       R$E
0005                  (   /dd/defs/os9.d):00897         R$Q            EQU       R$A
0005                  (   /dd/defs/os9.d):00898         R$DP           EQU       5
0005                  (   /dd/defs/os9.d):00899         R$X            EQU       6
0005                  (   /dd/defs/os9.d):00900         R$Y            EQU       8
0005                  (   /dd/defs/os9.d):00901         R$U            EQU       10
0005                  (   /dd/defs/os9.d):00902         R$PC           EQU       12
0005                  (   /dd/defs/os9.d):00903         R$Size         EQU       14
                      (   /dd/defs/os9.d):00904                        ELSE
     0003             (   /dd/defs/os9.d):00905         R$DP           EQU       3                   Direct Page register
     0004             (   /dd/defs/os9.d):00906         R$X            EQU       4                   X Index register
     0006             (   /dd/defs/os9.d):00907         R$Y            EQU       6                   Y Index register
     0008             (   /dd/defs/os9.d):00908         R$U            EQU       8                   User Stack register
     000A             (   /dd/defs/os9.d):00909         R$PC           EQU       10                  Program Counter register
     000C             (   /dd/defs/os9.d):00910         R$Size         EQU       12                  Total register package size
                      (   /dd/defs/os9.d):00911                        ENDC
                      (   /dd/defs/os9.d):00912         
                      (   /dd/defs/os9.d):00913         * MD register masks
                      (   /dd/defs/os9.d):00914         * 6309 definitions
     0080             (   /dd/defs/os9.d):00915         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (   /dd/defs/os9.d):00916         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (   /dd/defs/os9.d):00917         
     0080             (   /dd/defs/os9.d):00918         Entire         EQU       %10000000           Full Register Stack flag
     0040             (   /dd/defs/os9.d):00919         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (   /dd/defs/os9.d):00920         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (   /dd/defs/os9.d):00921         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (   /dd/defs/os9.d):00922         Negative       EQU       %00001000           Negative flag
     0004             (   /dd/defs/os9.d):00923         Zero           EQU       %00000100           Zero flag
     0002             (   /dd/defs/os9.d):00924         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (   /dd/defs/os9.d):00925         Carry          EQU       %00000001           Carry bit
     0050             (   /dd/defs/os9.d):00926         IntMasks       EQU       IRQMask+FIRQMask
     0080             (   /dd/defs/os9.d):00927         Sign           EQU       %10000000           sign bit
                      (   /dd/defs/os9.d):00928         
                      (   /dd/defs/os9.d):00929                        TTL       Error Code Definitions
                      (   /dd/defs/os9.d):00930                        PAG       
                      (   /dd/defs/os9.d):00931         ************************
                      (   /dd/defs/os9.d):00932         * Error Code Definitions
                      (   /dd/defs/os9.d):00933         *
                      (   /dd/defs/os9.d):00934         * Basic09 Error Codes
                      (   /dd/defs/os9.d):00935         *
                      (   /dd/defs/os9.d):00936                        ORG       10
000A                  (   /dd/defs/os9.d):00937         E$UnkSym       RMB       1                   Unknown symbol
000B                  (   /dd/defs/os9.d):00938         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (   /dd/defs/os9.d):00939         E$IllStC       RMB       1                   Illegal statement construction
000D                  (   /dd/defs/os9.d):00940         E$ICOvf        RMB       1                   I-code overflow
000E                  (   /dd/defs/os9.d):00941         E$IChRef       RMB       1                   Illegal channel reference
000F                  (   /dd/defs/os9.d):00942         E$IllMod       RMB       1                   Illegal mode
0010                  (   /dd/defs/os9.d):00943         E$IllNum       RMB       1                   Illegal number
0011                  (   /dd/defs/os9.d):00944         E$IllPrf       RMB       1                   Illegal prefix
0012                  (   /dd/defs/os9.d):00945         E$IllOpd       RMB       1                   Illegal operand
0013                  (   /dd/defs/os9.d):00946         E$IllOpr       RMB       1                   Illegal operator
0014                  (   /dd/defs/os9.d):00947         E$IllRFN       RMB       1                   Illegal record field name
0015                  (   /dd/defs/os9.d):00948         E$IllDim       RMB       1                   Illegal dimension
0016                  (   /dd/defs/os9.d):00949         E$IllLit       RMB       1                   Illegal literal
0017                  (   /dd/defs/os9.d):00950         E$IllRet       RMB       1                   Illegal relational
0018                  (   /dd/defs/os9.d):00951         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (   /dd/defs/os9.d):00952         E$DimLrg       RMB       1                   Dimension too large
001A                  (   /dd/defs/os9.d):00953         E$LinLrg       RMB       1                   Line number too large
001B                  (   /dd/defs/os9.d):00954         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (   /dd/defs/os9.d):00955         E$NoPath       RMB       1                   Missing path number
001D                  (   /dd/defs/os9.d):00956         E$NoComa       RMB       1                   Missing coma
001E                  (   /dd/defs/os9.d):00957         E$NoDim        RMB       1                   Missing dimension
001F                  (   /dd/defs/os9.d):00958         E$NoDO         RMB       1                   Missing DO statement
0020                  (   /dd/defs/os9.d):00959         E$MFull        RMB       1                   Memory full
0021                  (   /dd/defs/os9.d):00960         E$NoGoto       RMB       1                   Missing GOTO
0022                  (   /dd/defs/os9.d):00961         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (   /dd/defs/os9.d):00962         E$NoLRef       RMB       1                   Missing line reference
0024                  (   /dd/defs/os9.d):00963         E$NoOprd       RMB       1                   Missing operand
0025                  (   /dd/defs/os9.d):00964         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (   /dd/defs/os9.d):00965         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (   /dd/defs/os9.d):00966         E$NoTO         RMB       1                   Missing TO statement
0028                  (   /dd/defs/os9.d):00967         E$NoVRef       RMB       1                   Missing variable reference
0029                  (   /dd/defs/os9.d):00968         E$EndQou       RMB       1                   Missing end quote
002A                  (   /dd/defs/os9.d):00969         E$SubLrg       RMB       1                   Too many subscripts
002B                  (   /dd/defs/os9.d):00970         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (   /dd/defs/os9.d):00971         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (   /dd/defs/os9.d):00972         E$DivZer       RMB       1                   Divice by zero
002E                  (   /dd/defs/os9.d):00973         E$TypMis       RMB       1                   Operand type mismatch
002F                  (   /dd/defs/os9.d):00974         E$StrOvf       RMB       1                   String stack overflow
0030                  (   /dd/defs/os9.d):00975         E$NoRout       RMB       1                   Unimplemented routine
0031                  (   /dd/defs/os9.d):00976         E$UndVar       RMB       1                   Undefined variable
0032                  (   /dd/defs/os9.d):00977         E$FltOvf       RMB       1                   Floating Overflow
0033                  (   /dd/defs/os9.d):00978         E$LnComp       RMB       1                   Line with compiler error
0034                  (   /dd/defs/os9.d):00979         E$ValRng       RMB       1                   Value out of range for destination
0035                  (   /dd/defs/os9.d):00980         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (   /dd/defs/os9.d):00981         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (   /dd/defs/os9.d):00982         E$SubRng       RMB       1                   Subscript out of range
0038                  (   /dd/defs/os9.d):00983         E$ParmEr       RMB       1                   Paraemter error
0039                  (   /dd/defs/os9.d):00984         E$SysOvf       RMB       1                   System stack overflow
003A                  (   /dd/defs/os9.d):00985         E$IOMism       RMB       1                   I/O type mismatch
003B                  (   /dd/defs/os9.d):00986         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (   /dd/defs/os9.d):00987         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (   /dd/defs/os9.d):00988         E$IllInp       RMB       1                   Illegal input format
003E                  (   /dd/defs/os9.d):00989         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (   /dd/defs/os9.d):00990         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (   /dd/defs/os9.d):00991         E$IllPNm       RMB       1                   Illegal path number
0041                  (   /dd/defs/os9.d):00992         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (   /dd/defs/os9.d):00993         E$NonRcO       RMB       1                   Non-record type operand
0043                  (   /dd/defs/os9.d):00994         E$IllA         RMB       1                   Illegal argument
0044                  (   /dd/defs/os9.d):00995         E$IllCnt       RMB       1                   Illegal control structure
0045                  (   /dd/defs/os9.d):00996         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (   /dd/defs/os9.d):00997         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (   /dd/defs/os9.d):00998         E$IllExp       RMB       1                   Illegal expression type
0048                  (   /dd/defs/os9.d):00999         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (   /dd/defs/os9.d):01000         E$ArrOvf       RMB       1                   Array size overflow
004A                  (   /dd/defs/os9.d):01001         E$UndLin       RMB       1                   Undefined line number
004B                  (   /dd/defs/os9.d):01002         E$MltLin       RMB       1                   Multiply defined line number
004C                  (   /dd/defs/os9.d):01003         E$MltVar       RMB       1                   Multiply defined variable
004D                  (   /dd/defs/os9.d):01004         E$IllIVr       RMB       1                   Illegal input variable
004E                  (   /dd/defs/os9.d):01005         E$SeekRg       RMB       1                   Seek out of range
004F                  (   /dd/defs/os9.d):01006         E$NoData       RMB       1                   Missing data statement
                      (   /dd/defs/os9.d):01007         
                      (   /dd/defs/os9.d):01008         *
                      (   /dd/defs/os9.d):01009         * System Dependent Error Codes
                      (   /dd/defs/os9.d):01010         *
                      (   /dd/defs/os9.d):01011         
                      (   /dd/defs/os9.d):01012         * Level 2 windowing error codes
                      (   /dd/defs/os9.d):01013                        ORG       183
00B7                  (   /dd/defs/os9.d):01014         E$IWTyp        RMB       1                   Illegal window type
00B8                  (   /dd/defs/os9.d):01015         E$WADef        RMB       1                   Window already defined
00B9                  (   /dd/defs/os9.d):01016         E$NFont        RMB       1                   Font not found
00BA                  (   /dd/defs/os9.d):01017         E$StkOvf       RMB       1                   Stack overflow
00BB                  (   /dd/defs/os9.d):01018         E$IllArg       RMB       1                   Illegal argument
00BC                  (   /dd/defs/os9.d):01019                        RMB       1                   reserved
00BD                  (   /dd/defs/os9.d):01020         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (   /dd/defs/os9.d):01021         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (   /dd/defs/os9.d):01022         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (   /dd/defs/os9.d):01023         E$IllCmd       RMB       1                   Illegal command
00C1                  (   /dd/defs/os9.d):01024         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (   /dd/defs/os9.d):01025         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (   /dd/defs/os9.d):01026         E$IWDef        RMB       1                   Illegal window definition
00C4                  (   /dd/defs/os9.d):01027         E$WUndef       RMB       1                   Window undefined
                      (   /dd/defs/os9.d):01028         
00C5                  (   /dd/defs/os9.d):01029         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (   /dd/defs/os9.d):01030         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (   /dd/defs/os9.d):01031         E$Alias        RMB       1
                      (   /dd/defs/os9.d):01032         
                      (   /dd/defs/os9.d):01033         
                      (   /dd/defs/os9.d):01034         *
                      (   /dd/defs/os9.d):01035         * Standard NitrOS-9 Error Codes
                      (   /dd/defs/os9.d):01036         *
                      (   /dd/defs/os9.d):01037                        ORG       200
00C8                  (   /dd/defs/os9.d):01038         E$PthFul       RMB       1                   Path Table full
00C9                  (   /dd/defs/os9.d):01039         E$BPNum        RMB       1                   Bad Path Number
00CA                  (   /dd/defs/os9.d):01040         E$Poll         RMB       1                   Polling Table Full
00CB                  (   /dd/defs/os9.d):01041         E$BMode        RMB       1                   Bad Mode
00CC                  (   /dd/defs/os9.d):01042         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (   /dd/defs/os9.d):01043         E$BMID         RMB       1                   Bad Module ID
00CE                  (   /dd/defs/os9.d):01044         E$DirFul       RMB       1                   Module Directory Full
00CF                  (   /dd/defs/os9.d):01045         E$MemFul       RMB       1                   Process Memory Full
00D0                  (   /dd/defs/os9.d):01046         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (   /dd/defs/os9.d):01047         E$ModBsy       RMB       1                   Module Busy
00D2                  (   /dd/defs/os9.d):01048         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (   /dd/defs/os9.d):01049         E$EOF          RMB       1                   End of File
00D4                  (   /dd/defs/os9.d):01050                        RMB       1
00D5                  (   /dd/defs/os9.d):01051         E$NES          RMB       1                   Non-Existing Segment
00D6                  (   /dd/defs/os9.d):01052         E$FNA          RMB       1                   File Not Accesible
00D7                  (   /dd/defs/os9.d):01053         E$BPNam        RMB       1                   Bad Path Name
00D8                  (   /dd/defs/os9.d):01054         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (   /dd/defs/os9.d):01055         E$SLF          RMB       1                   Segment List Full
00DA                  (   /dd/defs/os9.d):01056         E$CEF          RMB       1                   Creating Existing File
00DB                  (   /dd/defs/os9.d):01057         E$IBA          RMB       1                   Illegal Block Address
00DC                  (   /dd/defs/os9.d):01058         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (   /dd/defs/os9.d):01059         E$MNF          RMB       1                   Module Not Found
00DE                  (   /dd/defs/os9.d):01060                        RMB       1
00DF                  (   /dd/defs/os9.d):01061         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (   /dd/defs/os9.d):01062         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (   /dd/defs/os9.d):01063         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (   /dd/defs/os9.d):01064                        RMB       1
00E2                  (   /dd/defs/os9.d):01065         E$NoChld       RMB       1                   No Children
00E3                  (   /dd/defs/os9.d):01066         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (   /dd/defs/os9.d):01067         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (   /dd/defs/os9.d):01068         E$PrcFul       RMB       1                   Process Table Full
00E6                  (   /dd/defs/os9.d):01069         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (   /dd/defs/os9.d):01070         E$KwnMod       RMB       1                   Known Module
00E8                  (   /dd/defs/os9.d):01071         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (   /dd/defs/os9.d):01072         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (   /dd/defs/os9.d):01073         E$NEMod        RMB       1                   Non Existing Module
00EB                  (   /dd/defs/os9.d):01074         E$BNam         RMB       1                   Bad Name
00EC                  (   /dd/defs/os9.d):01075         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (   /dd/defs/os9.d):01076         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (   /dd/defs/os9.d):01077         E$DNE          RMB       1                   Directory not empty
00EF                  (   /dd/defs/os9.d):01078         E$NoTask       RMB       1                   No available Task number
                      (   /dd/defs/os9.d):01079                        RMB       $F0-.               reserved
00F0                  (   /dd/defs/os9.d):01080         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (   /dd/defs/os9.d):01081         E$Sect         RMB       1                   Bad Sector number
00F2                  (   /dd/defs/os9.d):01082         E$WP           RMB       1                   Write Protect
00F3                  (   /dd/defs/os9.d):01083         E$CRC          RMB       1                   Bad Check Sum
00F4                  (   /dd/defs/os9.d):01084         E$Read         RMB       1                   Read Error
00F5                  (   /dd/defs/os9.d):01085         E$Write        RMB       1                   Write Error
00F6                  (   /dd/defs/os9.d):01086         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (   /dd/defs/os9.d):01087         E$Seek         RMB       1                   Seek Error
00F8                  (   /dd/defs/os9.d):01088         E$Full         RMB       1                   Media Full
00F9                  (   /dd/defs/os9.d):01089         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (   /dd/defs/os9.d):01090         E$DevBsy       RMB       1                   Device Busy
00FB                  (   /dd/defs/os9.d):01091         E$DIDC         RMB       1                   Disk ID Change
00FC                  (   /dd/defs/os9.d):01092         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (   /dd/defs/os9.d):01093         E$Share        RMB       1                   Non-sharable file busy
00FE                  (   /dd/defs/os9.d):01094         E$DeadLk       RMB       1                   I/O Deadlock error
                      (   /dd/defs/os9.d):01095         
                      (   /dd/defs/os9.d):01096         
                      (   /dd/defs/os9.d):01097         ***************************
                      (   /dd/defs/os9.d):01098         * Level 3 Defs
                      (   /dd/defs/os9.d):01099         *
                      (   /dd/defs/os9.d):01100         * These definitions apply to NitrOS-9 Level 3
                      (   /dd/defs/os9.d):01101         *
                      (   /dd/defs/os9.d):01102         
                      (         defsfile):00003                  use   /dd/defs/rbf.d
                      (   /dd/defs/rbf.d):00001         ********************************************************************
                      (   /dd/defs/rbf.d):00002         * rbf.d - Random Block File Manager Definitions
                      (   /dd/defs/rbf.d):00003         *
                      (   /dd/defs/rbf.d):00004         * $Id$
                      (   /dd/defs/rbf.d):00005         *
                      (   /dd/defs/rbf.d):00006         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (   /dd/defs/rbf.d):00007         * that define the logical structure of a disk and allows access to the files
                      (   /dd/defs/rbf.d):00008         * in that structure.
                      (   /dd/defs/rbf.d):00009         *
                      (   /dd/defs/rbf.d):00010         * The data structures in this file give RBF its 'personality' and are used
                      (   /dd/defs/rbf.d):00011         * by RBF itself, as well as applications that will require disk I/O.
                      (   /dd/defs/rbf.d):00012         *
                      (   /dd/defs/rbf.d):00013         * Edt/Rev  YYYY/MM/DD  Modified by
                      (   /dd/defs/rbf.d):00014         * Comment
                      (   /dd/defs/rbf.d):00015         * ------------------------------------------------------------------
                      (   /dd/defs/rbf.d):00016         *          1982/07/13  Robert F. Doggett
                      (   /dd/defs/rbf.d):00017         * PD.Exten added to path descriptor and PE Entries defined.
                      (   /dd/defs/rbf.d):00018         *
                      (   /dd/defs/rbf.d):00019         *          1982/07/15  Robert F. Doggett
                      (   /dd/defs/rbf.d):00020         * V.FileHd inserted in driver static storage.
                      (   /dd/defs/rbf.d):00021         *
                      (   /dd/defs/rbf.d):00022         *          1982/09/10  WGP
                      (   /dd/defs/rbf.d):00023         * Level One/Level Two condionals added.
                      (   /dd/defs/rbf.d):00024         *
                      (   /dd/defs/rbf.d):00025         *          1982/09/17  WGP
                      (   /dd/defs/rbf.d):00026         *
                      (   /dd/defs/rbf.d):00027         *          1982/09/17  Robert F. Doggett
                      (   /dd/defs/rbf.d):00028         * PD.SLE renamed to PD.Creat.
                      (   /dd/defs/rbf.d):00029         *
                      (   /dd/defs/rbf.d):00030         *          1982/09/17  Robert F. Doggett
                      (   /dd/defs/rbf.d):00031         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (   /dd/defs/rbf.d):00032         *
                      (   /dd/defs/rbf.d):00033         *          1982/09/20  Robert F. Doggett
                      (   /dd/defs/rbf.d):00034         * Reserved areas added in static storage.
                      (   /dd/defs/rbf.d):00035         
                      (   /dd/defs/rbf.d):00036         *          1983/06/07  Robert F. Doggett
                      (   /dd/defs/rbf.d):00037         * Added InDriver flag in PD.SMF.
                      (   /dd/defs/rbf.d):00038         *
                      (   /dd/defs/rbf.d):00039         *          1983/06/13  Robert F. Doggett
                      (   /dd/defs/rbf.d):00040         * Added PE.Req tmp save for PE.Lock.
                      (   /dd/defs/rbf.d):00041         *
                      (   /dd/defs/rbf.d):00042         *          1983/08/08  Robert F. Doggett
                      (   /dd/defs/rbf.d):00043         * Reserved PD.SToff for Japanese.
                      (   /dd/defs/rbf.d):00044         *
                      (   /dd/defs/rbf.d):00045         *          1983/11/19  Robert F. Doggett
                      (   /dd/defs/rbf.d):00046         * Added V.ResBit in drive tables.
                      (   /dd/defs/rbf.d):00047         *
                      (   /dd/defs/rbf.d):00048         *          1983/12/12  Robert F. Doggett
                      (   /dd/defs/rbf.d):00049         * Added PE.Prior to save process priority.
                      (   /dd/defs/rbf.d):00050         *
                      (   /dd/defs/rbf.d):00051         *          1983/12/13  Robert F. Doggett
                      (   /dd/defs/rbf.d):00052         * Added BufBusy bit in state flag (PD.SMF).
                      (   /dd/defs/rbf.d):00053         *
                      (   /dd/defs/rbf.d):00054         *          1984/07/06  Mark G. Hawkins
                      (   /dd/defs/rbf.d):00055         * Added Bit Definitions for DD.FMT.
                      (   /dd/defs/rbf.d):00056         *
                      (   /dd/defs/rbf.d):00057         *          1987/06/23  Kevin K. Darling
                      (   /dd/defs/rbf.d):00058         * Updated with Dev Desc Info
                      (   /dd/defs/rbf.d):00059         *
                      (   /dd/defs/rbf.d):00060         *          2003/06/02  Boisy G. Pitre
                      (   /dd/defs/rbf.d):00061         * Updated comments for clarity.
                      (   /dd/defs/rbf.d):00062         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (   /dd/defs/rbf.d):00063         *
                      (   /dd/defs/rbf.d):00064         *          2004/04/14  Boisy G. Pitre
                      (   /dd/defs/rbf.d):00065         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (   /dd/defs/rbf.d):00066         * addendum.  Pointed out by Rodney Hamilton.
                      (   /dd/defs/rbf.d):00067         *
                      (   /dd/defs/rbf.d):00068         *          2005/05/31  P.Harvey-Smith.
                      (   /dd/defs/rbf.d):00069         * Added defines for bit 2 of IT.DNS, which the format command uses to
                      (   /dd/defs/rbf.d):00070         * determine if a drive should have it's track 0 as single or double density
                      (   /dd/defs/rbf.d):00071         *
                      (   /dd/defs/rbf.d):00072         *          2005/11/23  Robert Gault
                      (   /dd/defs/rbf.d):00073         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (   /dd/defs/rbf.d):00074         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (   /dd/defs/rbf.d):00075         *
                      (   /dd/defs/rbf.d):00076         *          2005/12/11  Boisy G. Pitre
                      (   /dd/defs/rbf.d):00077         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (   /dd/defs/rbf.d):00078         
                      (   /dd/defs/rbf.d):00079                        NAM       rbf.d
                      (   /dd/defs/rbf.d):00080                        TTL       Random Block File Manager Definitions
                      (   /dd/defs/rbf.d):00081         
                      (   /dd/defs/rbf.d):00082                        PAG
                      (   /dd/defs/rbf.d):00083         *******************************
                      (   /dd/defs/rbf.d):00084         * RBF Device Descriptor Offsets
                      (   /dd/defs/rbf.d):00085         *
                      (   /dd/defs/rbf.d):00086         * These definitions are for RBF device descriptors.
                      (   /dd/defs/rbf.d):00087         
                      (   /dd/defs/rbf.d):00088                        ORG       M$DTyp
0012                  (   /dd/defs/rbf.d):00089                        RMB       1                   Device type (DT.RBF)
0013                  (   /dd/defs/rbf.d):00090         IT.DRV         RMB       1                   Drive number
0014                  (   /dd/defs/rbf.d):00091         IT.STP         RMB       1                   Step rate
0015                  (   /dd/defs/rbf.d):00092         IT.TYP         RMB       1                   Disk device type information
0016                  (   /dd/defs/rbf.d):00093         IT.DNS         RMB       1                   Density capability
0017                  (   /dd/defs/rbf.d):00094         IT.CYL         RMB       2                   Number of cylinders
0019                  (   /dd/defs/rbf.d):00095         IT.SID         RMB       1                   Number of surfaces
001A                  (   /dd/defs/rbf.d):00096         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (   /dd/defs/rbf.d):00097         IT.SCT         RMB       2                   Default sectors/track
001D                  (   /dd/defs/rbf.d):00098         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (   /dd/defs/rbf.d):00099         IT.ILV         RMB       1                   Sector interleave offset
0020                  (   /dd/defs/rbf.d):00100         IT.SAS         RMB       1                   Segment allocation size
                      (   /dd/defs/rbf.d):00101         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (   /dd/defs/rbf.d):00102         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (   /dd/defs/rbf.d):00103         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (   /dd/defs/rbf.d):00104         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (   /dd/defs/rbf.d):00105         * The following fields are not copied to the path descriptor
0025                  (   /dd/defs/rbf.d):00106         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (   /dd/defs/rbf.d):00107         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (   /dd/defs/rbf.d):00108         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (   /dd/defs/rbf.d):00109         * These fields have been added because of SuperDriver.  They probably
                      (   /dd/defs/rbf.d):00110         * can be used in other drivers
                      (   /dd/defs/rbf.d):00111                        ORG       IT.WPC
0025                  (   /dd/defs/rbf.d):00112         IT.SOFF1       RMB       1
0026                  (   /dd/defs/rbf.d):00113         IT.SOFF2       RMB       1
0027                  (   /dd/defs/rbf.d):00114         IT.SOFF3       RMB       1
0028                  (   /dd/defs/rbf.d):00115         IT.LLDRV       RMB       2
002A                  (   /dd/defs/rbf.d):00116         IT.MPI         RMB       1
                      (   /dd/defs/rbf.d):00117         
                      (   /dd/defs/rbf.d):00118         
                      (   /dd/defs/rbf.d):00119         * IT.TYP Definitions
                      (   /dd/defs/rbf.d):00120         *
     0080             (   /dd/defs/rbf.d):00121         TYP.HARD       EQU       %10000000           Hard disk
     0000             (   /dd/defs/rbf.d):00122         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (   /dd/defs/rbf.d):00123         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (   /dd/defs/rbf.d):00124         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (   /dd/defs/rbf.d):00125         
                      (   /dd/defs/rbf.d):00126         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (   /dd/defs/rbf.d):00127         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (   /dd/defs/rbf.d):00128         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (   /dd/defs/rbf.d):00129         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (   /dd/defs/rbf.d):00130         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (   /dd/defs/rbf.d):00131         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (   /dd/defs/rbf.d):00132         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (   /dd/defs/rbf.d):00133         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (   /dd/defs/rbf.d):00134         
                      (   /dd/defs/rbf.d):00135         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (   /dd/defs/rbf.d):00136         TYP.5          EQU       %00000000           5" media
     0001             (   /dd/defs/rbf.d):00137         TYP.3          EQU       %00000001           3.5" media
     0002             (   /dd/defs/rbf.d):00138         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (   /dd/defs/rbf.d):00139         TYP.256        EQU       %00000000           256 byte sector media
     0004             (   /dd/defs/rbf.d):00140         TYP.512        EQU       %00000100           512 byte sector media
     0020             (   /dd/defs/rbf.d):00141         TYP.CCF        EQU       %00100000           CoCo format
     0000             (   /dd/defs/rbf.d):00142         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (   /dd/defs/rbf.d):00143         
                      (   /dd/defs/rbf.d):00144         * IT.DNS Definitions
                      (   /dd/defs/rbf.d):00145         *
                      (   /dd/defs/rbf.d):00146         
                      (   /dd/defs/rbf.d):00147         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (   /dd/defs/rbf.d):00148         
                      (   /dd/defs/rbf.d):00149         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (   /dd/defs/rbf.d):00150         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (   /dd/defs/rbf.d):00151         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (   /dd/defs/rbf.d):00152         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (   /dd/defs/rbf.d):00153         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (   /dd/defs/rbf.d):00154         
                      (   /dd/defs/rbf.d):00155         * Added PHS,2005-05-31, as format seems to use these
     0000             (   /dd/defs/rbf.d):00156         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (   /dd/defs/rbf.d):00157         DNS.MFM0       EQU       %00000100           Double density track 0
                      (   /dd/defs/rbf.d):00158         
                      (   /dd/defs/rbf.d):00159         * Floppy disk step rate definitions
     0000             (   /dd/defs/rbf.d):00160         STP.30ms       EQU       0                   30ms step rate
     0001             (   /dd/defs/rbf.d):00161         STP.20ms       EQU       1                   20ms step rate
     0002             (   /dd/defs/rbf.d):00162         STP.12ms       EQU       2                   12ms step rate
     0003             (   /dd/defs/rbf.d):00163         STP.6ms        EQU       3                   6ms step rate
                      (   /dd/defs/rbf.d):00164         
                      (   /dd/defs/rbf.d):00165                        PAG
                      (   /dd/defs/rbf.d):00166         *************************************
                      (   /dd/defs/rbf.d):00167         * Random Block Path Descriptor Format
                      (   /dd/defs/rbf.d):00168         *
                      (   /dd/defs/rbf.d):00169         * A path descriptor is created for every new path that is open
                      (   /dd/defs/rbf.d):00170         * via the I$Open system call (processed by IOMan).  Process
                      (   /dd/defs/rbf.d):00171         * descriptors track state information of a path.
                      (   /dd/defs/rbf.d):00172         *
                      (   /dd/defs/rbf.d):00173                        ORG       PD.FST
000A                  (   /dd/defs/rbf.d):00174         PD.SMF         RMB       1                   State flags
000B                  (   /dd/defs/rbf.d):00175         PD.CP          RMB       4                   Current logical byte position
000F                  (   /dd/defs/rbf.d):00176         PD.SIZ         RMB       4                   File size
0013                  (   /dd/defs/rbf.d):00177         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (   /dd/defs/rbf.d):00178         PD.SBP         RMB       3                   Segment beginning psn
0019                  (   /dd/defs/rbf.d):00179         PD.SSZ         RMB       3                   Segment size
001C                  (   /dd/defs/rbf.d):00180         PD.DSK         RMB       2                   Disk id
001E                  (   /dd/defs/rbf.d):00181         PD.DTB         RMB       2                   Drive table ptr
                      (   /dd/defs/rbf.d):00182                        ORG       PD.OPT
0020                  (   /dd/defs/rbf.d):00183                        RMB       1                   Device type
0021                  (   /dd/defs/rbf.d):00184         PD.DRV         RMB       1                   Drive number
0022                  (   /dd/defs/rbf.d):00185         PD.STP         RMB       1                   Step rate
0023                  (   /dd/defs/rbf.d):00186         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (   /dd/defs/rbf.d):00187         PD.DNS         RMB       1                   Density capability
0025                  (   /dd/defs/rbf.d):00188         PD.CYL         RMB       2                   Number of cylinders
0027                  (   /dd/defs/rbf.d):00189         PD.SID         RMB       1                   Number of surfaces
0028                  (   /dd/defs/rbf.d):00190         PD.VFY         RMB       1                   0=verify disk writes
0029                  (   /dd/defs/rbf.d):00191         PD.SCT         RMB       2                   Default sectors/track
002B                  (   /dd/defs/rbf.d):00192         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (   /dd/defs/rbf.d):00193         PD.ILV         RMB       1                   Sector interleave offset
002E                  (   /dd/defs/rbf.d):00194         PD.SAS         RMB       1                   Segment allocation size
002F                  (   /dd/defs/rbf.d):00195         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (   /dd/defs/rbf.d):00196         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (   /dd/defs/rbf.d):00197         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (   /dd/defs/rbf.d):00198         PD.ATT         RMB       1                   File attributes
0034                  (   /dd/defs/rbf.d):00199         PD.FD          RMB       3                   File descriptor psn
0037                  (   /dd/defs/rbf.d):00200         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (   /dd/defs/rbf.d):00201         PD.DCP         RMB       4                   File directory entry ptr
003E                  (   /dd/defs/rbf.d):00202         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (   /dd/defs/rbf.d):00203         
                      (   /dd/defs/rbf.d):00204         * State Flags
     0001             (   /dd/defs/rbf.d):00205         BUFMOD         EQU       $01                 Buffer modified
     0002             (   /dd/defs/rbf.d):00206         SINBUF         EQU       $02                 Sector in buffer
     0004             (   /dd/defs/rbf.d):00207         FDBUF          EQU       $04                 File descriptor in buffer
                      (   /dd/defs/rbf.d):00208         *EOFSEC equ $08 End of file sector
                      (   /dd/defs/rbf.d):00209         *EOF equ $10 End of file
     0020             (   /dd/defs/rbf.d):00210         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (   /dd/defs/rbf.d):00211         BufBusy        EQU       $40                 Buffer is currently busy
                      (   /dd/defs/rbf.d):00212         
                      (   /dd/defs/rbf.d):00213         ************************************
                      (   /dd/defs/rbf.d):00214         * Random Block Path Extension Format
                      (   /dd/defs/rbf.d):00215         *
                      (   /dd/defs/rbf.d):00216         * RBF paths under Level Two have additional information that
                      (   /dd/defs/rbf.d):00217         * is referenced by the path extension area.
                      (   /dd/defs/rbf.d):00218         *
                      (   /dd/defs/rbf.d):00219                        ORG       0
0000                  (   /dd/defs/rbf.d):00220         PE.PE          RMB       1                   PE path number
0001                  (   /dd/defs/rbf.d):00221         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (   /dd/defs/rbf.d):00222         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (   /dd/defs/rbf.d):00223         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (   /dd/defs/rbf.d):00224         PE.Lock        RMB       1                   Path lockout status
0008                  (   /dd/defs/rbf.d):00225         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (   /dd/defs/rbf.d):00226         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (   /dd/defs/rbf.d):00227         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (   /dd/defs/rbf.d):00228         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (   /dd/defs/rbf.d):00229         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (   /dd/defs/rbf.d):00230         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (   /dd/defs/rbf.d):00231         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (   /dd/defs/rbf.d):00232         PE.SigSg       RMB       1                   Signal code to send
0018                  (   /dd/defs/rbf.d):00233         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (   /dd/defs/rbf.d):00234                        RMB       32-.                Reserved
0020                  (   /dd/defs/rbf.d):00235         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (   /dd/defs/rbf.d):00236         
                      (   /dd/defs/rbf.d):00237         * PE.Lock status codes
     0000             (   /dd/defs/rbf.d):00238         Unlocked       EQU       0                   No portion of file is locked
     0001             (   /dd/defs/rbf.d):00239         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (   /dd/defs/rbf.d):00240         FileLock       EQU       2                   Entire file locked
     0004             (   /dd/defs/rbf.d):00241         EofLock        EQU       4                   End of file is locked
                      (   /dd/defs/rbf.d):00242         
                      (   /dd/defs/rbf.d):00243         
                      (   /dd/defs/rbf.d):00244                        PAG
                      (   /dd/defs/rbf.d):00245         ***********************
                      (   /dd/defs/rbf.d):00246         * LSN0 Disk Data Format
                      (   /dd/defs/rbf.d):00247         *
                      (   /dd/defs/rbf.d):00248         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (   /dd/defs/rbf.d):00249         * and contains information about the device's size and format.
                      (   /dd/defs/rbf.d):00250         *
                      (   /dd/defs/rbf.d):00251                        ORG       0
0000                  (   /dd/defs/rbf.d):00252         DD.TOT         RMB       3                   Total number of sectors
0003                  (   /dd/defs/rbf.d):00253         DD.TKS         RMB       1                   Track size in sectors
0004                  (   /dd/defs/rbf.d):00254         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (   /dd/defs/rbf.d):00255         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (   /dd/defs/rbf.d):00256         DD.DIR         RMB       3                   Address of root directory fd
000B                  (   /dd/defs/rbf.d):00257         DD.OWN         RMB       2                   Owner
000D                  (   /dd/defs/rbf.d):00258         DD.ATT         RMB       1                   Attributes
000E                  (   /dd/defs/rbf.d):00259         DD.DSK         RMB       2                   Disk ID
0010                  (   /dd/defs/rbf.d):00260         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (   /dd/defs/rbf.d):00261         DD.SPT         RMB       2                   Sectors/track
0013                  (   /dd/defs/rbf.d):00262         DD.RES         RMB       2                   Reserved for future use
     0015             (   /dd/defs/rbf.d):00263         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (   /dd/defs/rbf.d):00264         DD.BT          RMB       3                   System bootstrap sector
0018                  (   /dd/defs/rbf.d):00265         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (   /dd/defs/rbf.d):00266         DD.DAT         RMB       5                   Creation date
001F                  (   /dd/defs/rbf.d):00267         DD.NAM         RMB       32                  Volume name
003F                  (   /dd/defs/rbf.d):00268         DD.OPT         RMB       32                  Option area
                      (   /dd/defs/rbf.d):00269         
                      (   /dd/defs/rbf.d):00270         *************************
                      (   /dd/defs/rbf.d):00271         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (   /dd/defs/rbf.d):00272                 ORG $60         More options from device descriptor
0060                  (   /dd/defs/rbf.d):00273         VD.STP      RMB 1   This is for the /sh and /ih virtual disks in HDBDOS
0061                  (   /dd/defs/rbf.d):00274         VD.OFS      RMB 3   This is DT.WPC and DT.OSF combined, might be more
                      (   /dd/defs/rbf.d):00275         
                      (   /dd/defs/rbf.d):00276         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (   /dd/defs/rbf.d):00277         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (   /dd/defs/rbf.d):00278         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (   /dd/defs/rbf.d):00279         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (   /dd/defs/rbf.d):00280         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (   /dd/defs/rbf.d):00281         
                      (   /dd/defs/rbf.d):00282         
                      (   /dd/defs/rbf.d):00283                        PAG
                      (   /dd/defs/rbf.d):00284         ************************
                      (   /dd/defs/rbf.d):00285         * File Descriptor Format
                      (   /dd/defs/rbf.d):00286         *
                      (   /dd/defs/rbf.d):00287         * The file descriptor is a sector that is present for every file
                      (   /dd/defs/rbf.d):00288         * on an RBF device.  It contains attributes, modification dates,
                      (   /dd/defs/rbf.d):00289         * and segment information on a file.
                      (   /dd/defs/rbf.d):00290         *
                      (   /dd/defs/rbf.d):00291                        ORG       0
0000                  (   /dd/defs/rbf.d):00292         FD.ATT         RMB       1                   Attributes
0001                  (   /dd/defs/rbf.d):00293         FD.OWN         RMB       2                   Owner
0003                  (   /dd/defs/rbf.d):00294         FD.DAT         RMB       5                   Date last modified
0008                  (   /dd/defs/rbf.d):00295         FD.LNK         RMB       1                   Link count
0009                  (   /dd/defs/rbf.d):00296         FD.SIZ         RMB       4                   File size
000D                  (   /dd/defs/rbf.d):00297         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (   /dd/defs/rbf.d):00298         FD.SEG         EQU       .                   Beginning of segment list
                      (   /dd/defs/rbf.d):00299         * Segment List Entry Format
                      (   /dd/defs/rbf.d):00300                        ORG       0
0000                  (   /dd/defs/rbf.d):00301         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (   /dd/defs/rbf.d):00302         FDSL.B         RMB       2                   Segment size
     0005             (   /dd/defs/rbf.d):00303         FDSL.S         EQU       .                   Segment list entry size
     00FB             (   /dd/defs/rbf.d):00304         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (   /dd/defs/rbf.d):00305         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (   /dd/defs/rbf.d):00306         MINSEC         SET       16
                      (   /dd/defs/rbf.d):00307         
                      (   /dd/defs/rbf.d):00308         
                      (   /dd/defs/rbf.d):00309                        PAG
                      (   /dd/defs/rbf.d):00310         ************************
                      (   /dd/defs/rbf.d):00311         * Directory Entry Format
                      (   /dd/defs/rbf.d):00312         *
                      (   /dd/defs/rbf.d):00313         * Directory entries are part of a directory and define the name
                      (   /dd/defs/rbf.d):00314         * of the file, as well as a pointer to its file descriptor.
                      (   /dd/defs/rbf.d):00315         *
                      (   /dd/defs/rbf.d):00316                        ORG       0
0000                  (   /dd/defs/rbf.d):00317         DIR.NM         RMB       29                  File name
001D                  (   /dd/defs/rbf.d):00318         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (   /dd/defs/rbf.d):00319         DIR.SZ         EQU       .                   Directory record size
                      (   /dd/defs/rbf.d):00320         
                      (   /dd/defs/rbf.d):00321         
                      (   /dd/defs/rbf.d):00322                        PAG
                      (   /dd/defs/rbf.d):00323         ********************
                      (   /dd/defs/rbf.d):00324         * RBF Static Storage
                      (   /dd/defs/rbf.d):00325         *
                      (   /dd/defs/rbf.d):00326         * Overall Disk Static Storage
                      (   /dd/defs/rbf.d):00327         *
                      (   /dd/defs/rbf.d):00328         * Note:  This does not reserve any memory for drive tables.  Each
                      (   /dd/defs/rbf.d):00329         *        driver is responsible for reserving sufficient memory for
                      (   /dd/defs/rbf.d):00330         *        the appropriate number of tables.
                      (   /dd/defs/rbf.d):00331         *
                      (   /dd/defs/rbf.d):00332                        ORG       V.USER              Reserve required           ($06)
0006                  (   /dd/defs/rbf.d):00333         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (   /dd/defs/rbf.d):00334                        RMB       8                   reserved                   ($08)
     000F             (   /dd/defs/rbf.d):00335         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (   /dd/defs/rbf.d):00336         
                      (   /dd/defs/rbf.d):00337                        PAG
                      (   /dd/defs/rbf.d):00338         ****************
                      (   /dd/defs/rbf.d):00339         * Global Storage For Disk Drive Tables
                      (   /dd/defs/rbf.d):00340         *
                      (   /dd/defs/rbf.d):00341         * Each table contains the first 'DD.SIZ' bytes from
                      (   /dd/defs/rbf.d):00342         * LSN 0, and the current track, stepping rate,
                      (   /dd/defs/rbf.d):00343         * bitmap use flag, and disk type.
                      (   /dd/defs/rbf.d):00344         *
                      (   /dd/defs/rbf.d):00345                        ORG       0
0000                  (   /dd/defs/rbf.d):00346                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (   /dd/defs/rbf.d):00347         V.TRAK         RMB       2                   Current track
0017                  (   /dd/defs/rbf.d):00348         V.BMB          RMB       1                   Bit-map use flag
0018                  (   /dd/defs/rbf.d):00349         V.FileHd       RMB       2                   Open file list for this drive
001A                  (   /dd/defs/rbf.d):00350         V.DiskID       RMB       2                   Disk ID
001C                  (   /dd/defs/rbf.d):00351         V.BMapSz       RMB       1                   Bitmap Size
001D                  (   /dd/defs/rbf.d):00352         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (   /dd/defs/rbf.d):00353         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (   /dd/defs/rbf.d):00354         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (   /dd/defs/rbf.d):00355         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (   /dd/defs/rbf.d):00356         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (   /dd/defs/rbf.d):00357                        RMB       4                   Reserved
     0026             (   /dd/defs/rbf.d):00358         DRVMEM         EQU       .
                      (   /dd/defs/rbf.d):00359         
                      (   /dd/defs/rbf.d):00360         
                      (         defsfile):00004                  use   /dd/defs/scf.d
                      (   /dd/defs/scf.d):00001         ********************************************************************
                      (   /dd/defs/scf.d):00002         * scf.d - Sequential Character File Manager Definitions
                      (   /dd/defs/scf.d):00003         *
                      (   /dd/defs/scf.d):00004         * $Id$
                      (   /dd/defs/scf.d):00005         *
                      (   /dd/defs/scf.d):00006         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (   /dd/defs/scf.d):00007         * that define the logical structure of a serial device.
                      (   /dd/defs/scf.d):00008         *
                      (   /dd/defs/scf.d):00009         * The data structures in this file give SCF its 'personality' and are used
                      (   /dd/defs/scf.d):00010         * by SCF itself, as well as applications that will require disk I/O.
                      (   /dd/defs/scf.d):00011         *
                      (   /dd/defs/scf.d):00012         * Edt/Rev  YYYY/MM/DD  Modified by
                      (   /dd/defs/scf.d):00013         * Comment
                      (   /dd/defs/scf.d):00014         * ------------------------------------------------------------------
                      (   /dd/defs/scf.d):00015         *          1984/01/11  YO
                      (   /dd/defs/scf.d):00016         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (   /dd/defs/scf.d):00017         *
                      (   /dd/defs/scf.d):00018         *          1985/04/20  Mark G. Hawkins
                      (   /dd/defs/scf.d):00019         * Added V.PDLHd Path Descriptor List Head.
                      (   /dd/defs/scf.d):00020         *
                      (   /dd/defs/scf.d):00021         *          1985/04/21  Mark G. Hawkins
                      (   /dd/defs/scf.d):00022         * Added PD.PLP and PD.PST for modem handling.
                      (   /dd/defs/scf.d):00023         *
                      (   /dd/defs/scf.d):00024         *          1987/06/23  Kevin K. Darling
                      (   /dd/defs/scf.d):00025         * Updated with Dev Desc info.
                      (   /dd/defs/scf.d):00026         *
                      (   /dd/defs/scf.d):00027         *          1998/10/03  Boisy G. Pitre
                      (   /dd/defs/scf.d):00028         * Consolidated L1/L2 scfdefs.
                      (   /dd/defs/scf.d):00029         *
                      (   /dd/defs/scf.d):00030         *          2003/01/21  Boisy G. Pitre
                      (   /dd/defs/scf.d):00031         * Added symbolics for enhanced SCF line editing.
                      (   /dd/defs/scf.d):00032         *
                      (   /dd/defs/scf.d):00033         *          2003/06/02  Boisy G. Pitre
                      (   /dd/defs/scf.d):00034         * Updated comments for clarity.
                      (   /dd/defs/scf.d):00035         *
                      (   /dd/defs/scf.d):00036         *          2004/05/17  Boisy G. Pitre
                      (   /dd/defs/scf.d):00037         * Added higher baud rates.
                      (   /dd/defs/scf.d):00038         
                      (   /dd/defs/scf.d):00039                        NAM       scf.d
                      (   /dd/defs/scf.d):00040                        TTL       Sequential File Manager Definitions
                      (   /dd/defs/scf.d):00041         
                      (   /dd/defs/scf.d):00042                        PAG
                      (   /dd/defs/scf.d):00043         *******************************
                      (   /dd/defs/scf.d):00044         * SCF Device Descriptor Offsets
                      (   /dd/defs/scf.d):00045         *
                      (   /dd/defs/scf.d):00046         * These definitions are for SCF device descriptors.
                      (   /dd/defs/scf.d):00047         
                      (   /dd/defs/scf.d):00048                        ORG       M$DTyp
0012                  (   /dd/defs/scf.d):00049         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (   /dd/defs/scf.d):00050         IT.UPC         RMB       1                   Uppercase flag
0014                  (   /dd/defs/scf.d):00051         IT.BSO         RMB       1                   Backspace behavior
0015                  (   /dd/defs/scf.d):00052         IT.DLO         RMB       1                   Delete behavior
0016                  (   /dd/defs/scf.d):00053         IT.EKO         RMB       1                   Echo flag
0017                  (   /dd/defs/scf.d):00054         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (   /dd/defs/scf.d):00055         IT.NUL         RMB       1                   End-of-line null count
0019                  (   /dd/defs/scf.d):00056         IT.PAU         RMB       1                   Page pause flag
001A                  (   /dd/defs/scf.d):00057         IT.PAG         RMB       1                   Number of lines per page
001B                  (   /dd/defs/scf.d):00058         IT.BSP         RMB       1                   Backspace character
001C                  (   /dd/defs/scf.d):00059         IT.DEL         RMB       1                   Delete-line character
001D                  (   /dd/defs/scf.d):00060         IT.EOR         RMB       1                   End-of-record character
001E                  (   /dd/defs/scf.d):00061         IT.EOF         RMB       1                   End-of-file character
001F                  (   /dd/defs/scf.d):00062         IT.RPR         RMB       1                   Reprint-line character
0020                  (   /dd/defs/scf.d):00063         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (   /dd/defs/scf.d):00064         IT.PSC         RMB       1                   Pause character
0022                  (   /dd/defs/scf.d):00065         IT.INT         RMB       1                   Interrupt character
0023                  (   /dd/defs/scf.d):00066         IT.QUT         RMB       1                   Quit character
0024                  (   /dd/defs/scf.d):00067         IT.BSE         RMB       1                   Backspace echo character
0025                  (   /dd/defs/scf.d):00068         IT.OVF         RMB       1                   Bell character
0026                  (   /dd/defs/scf.d):00069         IT.PAR         RMB       1                   Parity
0027                  (   /dd/defs/scf.d):00070         IT.BAU         RMB       1                   Baud rate
0028                  (   /dd/defs/scf.d):00071         IT.D2P         RMB       2                   Attached device name string offset
002A                  (   /dd/defs/scf.d):00072         IT.XON         RMB       1                   X-ON character
002B                  (   /dd/defs/scf.d):00073         IT.XOFF        RMB       1                   X-OFF character
002C                  (   /dd/defs/scf.d):00074         IT.COL         RMB       1                   Number of columns for display
002D                  (   /dd/defs/scf.d):00075         IT.ROW         RMB       1                   Number of rows for display
002E                  (   /dd/defs/scf.d):00076         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (   /dd/defs/scf.d):00077         
                      (   /dd/defs/scf.d):00078         * Window Descriptor Additions
                      (   /dd/defs/scf.d):00079         * For CoCo window, where IT.PAR = $80
                      (   /dd/defs/scf.d):00080                        ORG       IT.ROW+1
002E                  (   /dd/defs/scf.d):00081         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (   /dd/defs/scf.d):00082         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (   /dd/defs/scf.d):00083         IT.STY         RMB       1                   Screen type default
0031                  (   /dd/defs/scf.d):00084         IT.CPX         RMB       1                   Column start default
0032                  (   /dd/defs/scf.d):00085         IT.CPY         RMB       1                   Row start default
0033                  (   /dd/defs/scf.d):00086         IT.FGC         RMB       1                   Foreground color default
0034                  (   /dd/defs/scf.d):00087         IT.BGC         RMB       1                   Background color default
0035                  (   /dd/defs/scf.d):00088         IT.BDC         RMB       1                   Border color default
                      (   /dd/defs/scf.d):00089         
                      (   /dd/defs/scf.d):00090         
                      (   /dd/defs/scf.d):00091                        PAG
                      (   /dd/defs/scf.d):00092         ********************
                      (   /dd/defs/scf.d):00093         * SCF Static Storage
                      (   /dd/defs/scf.d):00094         *
                      (   /dd/defs/scf.d):00095         * SCF devices must reserve this space for SCF
                      (   /dd/defs/scf.d):00096         *
                      (   /dd/defs/scf.d):00097                        ORG       V.USER
0006                  (   /dd/defs/scf.d):00098         V.TYPE         RMB       1                   Device type or parity
0007                  (   /dd/defs/scf.d):00099         V.LINE         RMB       1                   Lines left until end of page
0008                  (   /dd/defs/scf.d):00100         V.PAUS         RMB       1                   Immediate Pause request
0009                  (   /dd/defs/scf.d):00101         V.DEV2         RMB       2                   Attached device's static
000B                  (   /dd/defs/scf.d):00102         V.INTR         RMB       1                   Interrupt char
000C                  (   /dd/defs/scf.d):00103         V.QUIT         RMB       1                   Quit char
000D                  (   /dd/defs/scf.d):00104         V.PCHR         RMB       1                   Pause char
000E                  (   /dd/defs/scf.d):00105         V.ERR          RMB       1                   Accumulated errors
000F                  (   /dd/defs/scf.d):00106         V.XON          RMB       1                   X-On char
0010                  (   /dd/defs/scf.d):00107         V.XOFF         RMB       1                   X-Off char
0011                  (   /dd/defs/scf.d):00108         V.KANJI        RMB       1                   Kanji mode flag
0012                  (   /dd/defs/scf.d):00109         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (   /dd/defs/scf.d):00110         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (   /dd/defs/scf.d):00111         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (   /dd/defs/scf.d):00112         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (   /dd/defs/scf.d):00113         V.SCF          EQU       .                   Total SCF manager static overhead
                      (   /dd/defs/scf.d):00114         
                      (   /dd/defs/scf.d):00115         
                      (   /dd/defs/scf.d):00116                        PAG
                      (   /dd/defs/scf.d):00117         ***********************
                      (   /dd/defs/scf.d):00118         * Character Definitions
                      (   /dd/defs/scf.d):00119         *
     0000             (   /dd/defs/scf.d):00120         C$NULL         SET       0                   Null char
     0001             (   /dd/defs/scf.d):00121         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (   /dd/defs/scf.d):00122         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (   /dd/defs/scf.d):00123         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (   /dd/defs/scf.d):00124         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (   /dd/defs/scf.d):00125         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (   /dd/defs/scf.d):00126         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (   /dd/defs/scf.d):00127         C$RARR         SET       $09                 Right Arrow
     0005             (   /dd/defs/scf.d):00128         C$EL           SET       $05                 Erase Line
     000A             (   /dd/defs/scf.d):00129         C$LF           SET       $0A                 Line feed
     000B             (   /dd/defs/scf.d):00130         C$HOME         SET       $0B                 Home position Code
     0015             (   /dd/defs/scf.d):00131         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (   /dd/defs/scf.d):00132         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (   /dd/defs/scf.d):00133         C$CR           SET       $0D                 Carriage return
     000C             (   /dd/defs/scf.d):00134         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (   /dd/defs/scf.d):00135         C$SI           SET       $0F                 Shift IN Code
     000E             (   /dd/defs/scf.d):00136         C$SO           SET       $0E                 Shift OUT Code
     0010             (   /dd/defs/scf.d):00137         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (   /dd/defs/scf.d):00138         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (   /dd/defs/scf.d):00139         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (   /dd/defs/scf.d):00140         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (   /dd/defs/scf.d):00141         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (   /dd/defs/scf.d):00142         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (   /dd/defs/scf.d):00143         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (   /dd/defs/scf.d):00144         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (   /dd/defs/scf.d):00145         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (   /dd/defs/scf.d):00146         C$RGT          SET       $1C                 Cursor right
     001D             (   /dd/defs/scf.d):00147         C$LFT          SET       $1D                 Cursor left
     001E             (   /dd/defs/scf.d):00148         C$UP           SET       $1E                 Cursor up
     001F             (   /dd/defs/scf.d):00149         C$DWN          SET       $1F                 Cursor down
     0020             (   /dd/defs/scf.d):00150         C$SPAC         SET       $20                 Space
     002E             (   /dd/defs/scf.d):00151         C$PERD         SET       '.
     002C             (   /dd/defs/scf.d):00152         C$COMA         SET       ',
                      (   /dd/defs/scf.d):00153         
                      (   /dd/defs/scf.d):00154         
                      (   /dd/defs/scf.d):00155                        PAG
                      (   /dd/defs/scf.d):00156         *********************************************
                      (   /dd/defs/scf.d):00157         * Sequential Character Path Descriptor Format
                      (   /dd/defs/scf.d):00158         *
                      (   /dd/defs/scf.d):00159         * A path descriptor is created for every new path that is open
                      (   /dd/defs/scf.d):00160         * via the I$Open system call (processed by IOMan).  Process
                      (   /dd/defs/scf.d):00161         * descriptors track state information of a path.
                      (   /dd/defs/scf.d):00162         *
                      (   /dd/defs/scf.d):00163                        ORG       PD.FST
000A                  (   /dd/defs/scf.d):00164         PD.DV2         RMB       2                   Output device table pointer
000C                  (   /dd/defs/scf.d):00165         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (   /dd/defs/scf.d):00166         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (   /dd/defs/scf.d):00167         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (   /dd/defs/scf.d):00168         PD.STS         RMB       2                   Status routine module addr
0012                  (   /dd/defs/scf.d):00169         PD.STM         RMB       2                   Reserved for status routine
                      (   /dd/defs/scf.d):00170                        ORG       PD.OPT
0020                  (   /dd/defs/scf.d):00171                        RMB       1                   Device type
0021                  (   /dd/defs/scf.d):00172         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (   /dd/defs/scf.d):00173         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (   /dd/defs/scf.d):00174         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (   /dd/defs/scf.d):00175         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (   /dd/defs/scf.d):00176         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (   /dd/defs/scf.d):00177         PD.NUL         RMB       1                   End of Line null count
0027                  (   /dd/defs/scf.d):00178         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (   /dd/defs/scf.d):00179         PD.PAG         RMB       1                   Lines per page
0029                  (   /dd/defs/scf.d):00180         PD.BSP         RMB       1                   Backspace character
002A                  (   /dd/defs/scf.d):00181         PD.DEL         RMB       1                   Delete Line character
002B                  (   /dd/defs/scf.d):00182         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (   /dd/defs/scf.d):00183         PD.EOF         RMB       1                   End of File character
002D                  (   /dd/defs/scf.d):00184         PD.RPR         RMB       1                   Repront Line character
002E                  (   /dd/defs/scf.d):00185         PD.DUP         RMB       1                   Dup Last Line character
002F                  (   /dd/defs/scf.d):00186         PD.PSC         RMB       1                   Pause character
0030                  (   /dd/defs/scf.d):00187         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (   /dd/defs/scf.d):00188         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (   /dd/defs/scf.d):00189         PD.BSE         RMB       1                   Backspace echo character
0033                  (   /dd/defs/scf.d):00190         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (   /dd/defs/scf.d):00191         PD.PAR         RMB       1                   Parity code
0035                  (   /dd/defs/scf.d):00192         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (   /dd/defs/scf.d):00193         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (   /dd/defs/scf.d):00194         PD.XON         RMB       1                   ACIA X-ON character
0039                  (   /dd/defs/scf.d):00195         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (   /dd/defs/scf.d):00196         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (   /dd/defs/scf.d):00197         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (   /dd/defs/scf.d):00198         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (   /dd/defs/scf.d):00199         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (   /dd/defs/scf.d):00200         PD.PST         RMB       1                   Current path status
                      (   /dd/defs/scf.d):00201         
                      (   /dd/defs/scf.d):00202         
                      (   /dd/defs/scf.d):00203         * PD.PST values Path Descriptor Status byte
                      (   /dd/defs/scf.d):00204         *
     0001             (   /dd/defs/scf.d):00205         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (   /dd/defs/scf.d):00206         
                      (   /dd/defs/scf.d):00207         
                      (   /dd/defs/scf.d):00208         * PD.PAR definitions
                      (   /dd/defs/scf.d):00209         *
                      (   /dd/defs/scf.d):00210         * Parity
     0000             (   /dd/defs/scf.d):00211         PARNONE        EQU       %00000000
     0020             (   /dd/defs/scf.d):00212         PARODD         EQU       %00100000
     0060             (   /dd/defs/scf.d):00213         PAREVEN        EQU       %01100000
     00A0             (   /dd/defs/scf.d):00214         PARMARK        EQU       %10100000
     00E0             (   /dd/defs/scf.d):00215         PARSPACE       EQU       %11100000
     00E0             (   /dd/defs/scf.d):00216         PARMASK        EQU       %11100000
                      (   /dd/defs/scf.d):00217         
                      (   /dd/defs/scf.d):00218         * PD.BAU definitions
                      (   /dd/defs/scf.d):00219         *
                      (   /dd/defs/scf.d):00220         * Baud rate
     0000             (   /dd/defs/scf.d):00221         B110           EQU       %00000000
     0001             (   /dd/defs/scf.d):00222         B300           EQU       %00000001
     0002             (   /dd/defs/scf.d):00223         B600           EQU       %00000010
     0003             (   /dd/defs/scf.d):00224         B1200          EQU       %00000011
     0004             (   /dd/defs/scf.d):00225         B2400          EQU       %00000100
     0005             (   /dd/defs/scf.d):00226         B4800          EQU       %00000101
     0006             (   /dd/defs/scf.d):00227         B9600          EQU       %00000110
     0007             (   /dd/defs/scf.d):00228         B19200         EQU       %00000111
     0008             (   /dd/defs/scf.d):00229         B38400         EQU       %00001000
     0009             (   /dd/defs/scf.d):00230         B57600         EQU       %00001001
     000A             (   /dd/defs/scf.d):00231         B115200        EQU       %00001010
                      (   /dd/defs/scf.d):00232         * Word size
     0000             (   /dd/defs/scf.d):00233         WORD8          EQU       %00000000
     0020             (   /dd/defs/scf.d):00234         WORD7          EQU       %00100000
                      (   /dd/defs/scf.d):00235         * Stop bits
     0000             (   /dd/defs/scf.d):00236         STOP1          EQU       %00000000
     0010             (   /dd/defs/scf.d):00237         STOP2          EQU       %00010000
                      (   /dd/defs/scf.d):00238         
                      (         defsfile):00005                  use   /dd/defs/coco.d
                      (  /dd/defs/coco.d):00001         ********************************************************************
                      (  /dd/defs/coco.d):00002         * CoCoDefs - NitrOS-9 System Definitions for the Tandy Color Computer
                      (  /dd/defs/coco.d):00003         *
                      (  /dd/defs/coco.d):00004         * $Id$
                      (  /dd/defs/coco.d):00005         *
                      (  /dd/defs/coco.d):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (  /dd/defs/coco.d):00007         * Comment
                      (  /dd/defs/coco.d):00008         * ------------------------------------------------------------------
                      (  /dd/defs/coco.d):00009         *          1998/10/13  Boisy G. Pitre
                      (  /dd/defs/coco.d):00010         * Added defs by Bruce Isted from his Eliminator archive.
                      (  /dd/defs/coco.d):00011         *
                      (  /dd/defs/coco.d):00012         *          1998/10/31  Boisy G. Pitre
                      (  /dd/defs/coco.d):00013         * Merged cc3global.defs into this file.
                      (  /dd/defs/coco.d):00014         *
                      (  /dd/defs/coco.d):00015         *          2002/04/30  Boisy G. Pitre
                      (  /dd/defs/coco.d):00016         * Merged Level One and Level Two sysdefs.
                      (  /dd/defs/coco.d):00017         *
                      (  /dd/defs/coco.d):00018         *          2002/06/22  Boisy G. Pitre
                      (  /dd/defs/coco.d):00019         * Removed PIA.U4 and PIA.U8, improved comments
                      (  /dd/defs/coco.d):00020         *
                      (  /dd/defs/coco.d):00021         *          2003/11/05  Robert Gault
                      (  /dd/defs/coco.d):00022         * Made changes in window globals and grfdrv memory to handle regW
                      (  /dd/defs/coco.d):00023         * in 6809 systems.
                      (  /dd/defs/coco.d):00024         *
                      (  /dd/defs/coco.d):00025         *          2003/11/30  Boisy G. Pitre
                      (  /dd/defs/coco.d):00026         * Statics now are prefaced with V. to identify them easier in source.
                      (  /dd/defs/coco.d):00027         *
                      (  /dd/defs/coco.d):00028         *          2004/07/18  Boisy G. Pitre
                      (  /dd/defs/coco.d):00029         * Moved CoCo 3 Window stuff into cc3iodefs
                      (  /dd/defs/coco.d):00030         *
                      (  /dd/defs/coco.d):00031         *          2012/02/24  Boisy G. Pitre
                      (  /dd/defs/coco.d):00032         * Consolidated all CoCo-specific defs files into here.
                      (  /dd/defs/coco.d):00033         
                      (  /dd/defs/coco.d):00034                        NAM       CoCoDefs
                      (  /dd/defs/coco.d):00035                        TTL       NitrOS-9 Level 2 System Type Definitions
                      (  /dd/defs/coco.d):00036         
                      (  /dd/defs/coco.d):00037         
                      (  /dd/defs/coco.d):00038         **********************
                      (  /dd/defs/coco.d):00039         * CPU Type Definitions
                      (  /dd/defs/coco.d):00040         *
     0001             (  /dd/defs/coco.d):00041         Color          SET       1
     0002             (  /dd/defs/coco.d):00042         Color3         SET       2
     0002             (  /dd/defs/coco.d):00043         CPUType        SET       Color3
                      (  /dd/defs/coco.d):00044         
                      (  /dd/defs/coco.d):00045         
                      (  /dd/defs/coco.d):00046         ******************************
                      (  /dd/defs/coco.d):00047         * Clock Speed Type Definitions
                      (  /dd/defs/coco.d):00048         *
     0001             (  /dd/defs/coco.d):00049         OneMHz         EQU       1
     0002             (  /dd/defs/coco.d):00050         TwoMHz         EQU       2
     0002             (  /dd/defs/coco.d):00051         CPUSpeed       SET       TwoMHz
                      (  /dd/defs/coco.d):00052         
                      (  /dd/defs/coco.d):00053         
                      (  /dd/defs/coco.d):00054         **********************************
                      (  /dd/defs/coco.d):00055         * Power Line Frequency Definitions
                      (  /dd/defs/coco.d):00056         *
     0001             (  /dd/defs/coco.d):00057         Hz50           EQU       1                   Assemble clock for 50 hz power
     0002             (  /dd/defs/coco.d):00058         Hz60           EQU       2                   Assemble clock for 60 hz power
     0002             (  /dd/defs/coco.d):00059         PwrLnFrq       SET       Hz60                Set to Appropriate freq
                      (  /dd/defs/coco.d):00060         
                      (  /dd/defs/coco.d):00061         
                      (  /dd/defs/coco.d):00062         **********************************
                      (  /dd/defs/coco.d):00063         * Ticks per second
                      (  /dd/defs/coco.d):00064         *
     003C             (  /dd/defs/coco.d):00065         TkPerSec       SET       60
                      (  /dd/defs/coco.d):00066         
                      (  /dd/defs/coco.d):00067         
                      (  /dd/defs/coco.d):00068         ******************
                      (  /dd/defs/coco.d):00069         * ACIA type set up
                      (  /dd/defs/coco.d):00070         *
                      (  /dd/defs/coco.d):00071                        ORG       1
0001                  (  /dd/defs/coco.d):00072         ACIA6850       RMB       1                   MC6850 acia.
0002                  (  /dd/defs/coco.d):00073         ACIA6551       RMB       1                   SY6551 acia.
0003                  (  /dd/defs/coco.d):00074         ACIA2661       RMB       1                   SC2661 acia.
     0002             (  /dd/defs/coco.d):00075         ACIATYPE       SET       ACIA6551
                      (  /dd/defs/coco.d):00076         
                      (  /dd/defs/coco.d):00077         
                      (  /dd/defs/coco.d):00078         ****************************************
                      (  /dd/defs/coco.d):00079         * Special character Bit position equates
                      (  /dd/defs/coco.d):00080         *
     0001             (  /dd/defs/coco.d):00081         SHIFTBIT       EQU       %00000001
     0002             (  /dd/defs/coco.d):00082         CNTRLBIT       EQU       %00000010
     0004             (  /dd/defs/coco.d):00083         ALTERBIT       EQU       %00000100
     0008             (  /dd/defs/coco.d):00084         UPBIT          EQU       %00001000
     0010             (  /dd/defs/coco.d):00085         DOWNBIT        EQU       %00010000
     0020             (  /dd/defs/coco.d):00086         LEFTBIT        EQU       %00100000
     0040             (  /dd/defs/coco.d):00087         RIGHTBIT       EQU       %01000000
     0080             (  /dd/defs/coco.d):00088         SPACEBIT       EQU       %10000000
                      (  /dd/defs/coco.d):00089         
                      (  /dd/defs/coco.d):00090         
                      (  /dd/defs/coco.d):00091         ******************
                      (  /dd/defs/coco.d):00092         * Device addresses for miscellaneous hardware
                      (  /dd/defs/coco.d):00093         *
     FF68             (  /dd/defs/coco.d):00094         A.AciaP        SET       $FF68               Aciapak Address
     FF6C             (  /dd/defs/coco.d):00095         A.ModP         SET       $FF6C               ModPak Address
     FF40             (  /dd/defs/coco.d):00096         DPort          SET       $FF40               Disk controller base address
     FF7F             (  /dd/defs/coco.d):00097         MPI.Slct       SET       $FF7F               Multi-Pak slot select
     0003             (  /dd/defs/coco.d):00098         MPI.Slot       SET       $03                 Multi-Pak default slot
     FF00             (  /dd/defs/coco.d):00099         PIA0Base       EQU       $FF00
     FF20             (  /dd/defs/coco.d):00100         PIA1Base       EQU       $FF20
                      (  /dd/defs/coco.d):00101         
                      (  /dd/defs/coco.d):00102         
                      (  /dd/defs/coco.d):00103         ******************
                      (  /dd/defs/coco.d):00104         * VDG Devices
                      (  /dd/defs/coco.d):00105         *
     FFC0             (  /dd/defs/coco.d):00106         A.TermV        SET       $FFC0               VDG Term
     FFC1             (  /dd/defs/coco.d):00107         A.V1           SET       $FFC1               Possible additional VDG Devices
     FFC2             (  /dd/defs/coco.d):00108         A.V2           SET       $FFC2
     FFC3             (  /dd/defs/coco.d):00109         A.V3           SET       $FFC3
     FFC4             (  /dd/defs/coco.d):00110         A.V4           SET       $FFC4
     FFC5             (  /dd/defs/coco.d):00111         A.V5           SET       $FFC5
     FFC6             (  /dd/defs/coco.d):00112         A.V6           SET       $FFC6
     FFC7             (  /dd/defs/coco.d):00113         A.V7           SET       $FFC7
                      (  /dd/defs/coco.d):00114         
                      (  /dd/defs/coco.d):00115         
                      (  /dd/defs/coco.d):00116         
                      (  /dd/defs/coco.d):00117         ********************************
                      (  /dd/defs/coco.d):00118         * Boot defs for NitrOS-9 Level 1
                      (  /dd/defs/coco.d):00119         *
                      (  /dd/defs/coco.d):00120         * These defs are not strictly for 'Boot', but are for booting the
                      (  /dd/defs/coco.d):00121         * system.
                      (  /dd/defs/coco.d):00122         *
                      (  /dd/defs/coco.d):00123         
                      (  /dd/defs/coco.d):00124         
                      (  /dd/defs/coco.d):00125         ******************************************
                      (  /dd/defs/coco.d):00126         * Boot defs for NitrOS-9 Level 2 and above
                      (  /dd/defs/coco.d):00127         *
                      (  /dd/defs/coco.d):00128         * These defs are not strictly for 'Boot', but are for booting the
                      (  /dd/defs/coco.d):00129         * system.
                      (  /dd/defs/coco.d):00130         *
     ED00             (  /dd/defs/coco.d):00131         Bt.Start       SET       $ED00               Start address of the boot track in memory
     003B             (  /dd/defs/coco.d):00132         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (  /dd/defs/coco.d):00133         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (  /dd/defs/coco.d):00134         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
                      (  /dd/defs/coco.d):00135         
                      (  /dd/defs/coco.d):00136         
                      (  /dd/defs/coco.d):00137         * On the CoCo, the boot track is all of track 34
                      (  /dd/defs/coco.d):00138         
     0022             (  /dd/defs/coco.d):00139         Bt.Track       EQU       34                  Boot track
     0000             (  /dd/defs/coco.d):00140         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (  /dd/defs/coco.d):00141         
                      (  /dd/defs/coco.d):00142         
     1080             (  /dd/defs/coco.d):00143         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (  /dd/defs/coco.d):00144         
                      (  /dd/defs/coco.d):00145         
                      (  /dd/defs/coco.d):00146         
                      (  /dd/defs/coco.d):00147         *************************************************
                      (  /dd/defs/coco.d):00148         *
                      (  /dd/defs/coco.d):00149         * NitrOS-9 Level 1 Section
                      (  /dd/defs/coco.d):00150         *
                      (  /dd/defs/coco.d):00151         *************************************************
                      (  /dd/defs/coco.d):00152         
                      (  /dd/defs/coco.d):00153         
                      (  /dd/defs/coco.d):00154         
                      (  /dd/defs/coco.d):00155         *************************************************
                      (  /dd/defs/coco.d):00156         *
                      (  /dd/defs/coco.d):00157         * NitrOS-9 Level 2 Section
                      (  /dd/defs/coco.d):00158         *
                      (  /dd/defs/coco.d):00159         *************************************************
                      (  /dd/defs/coco.d):00160         
                      (  /dd/defs/coco.d):00161         ****************************************
                      (  /dd/defs/coco.d):00162         * Dynamic Address Translator Definitions
                      (  /dd/defs/coco.d):00163         *
     0008             (  /dd/defs/coco.d):00164         DAT.BlCt       EQU       8                   D.A.T. blocks/address space
     2000             (  /dd/defs/coco.d):00165         DAT.BlSz       EQU       (256/DAT.BlCt)*256  D.A.T. block size
     0010             (  /dd/defs/coco.d):00166         DAT.ImSz       EQU       DAT.BlCt*2          D.A.T. Image size
     FFE0             (  /dd/defs/coco.d):00167         DAT.Addr       EQU       -(DAT.BlSz/256)     D.A.T. MSB Address bits
     FF91             (  /dd/defs/coco.d):00168         DAT.Task       EQU       $FF91               Task Register address
     0020             (  /dd/defs/coco.d):00169         DAT.TkCt       EQU       32                  Number of DAT Tasks
     FFA0             (  /dd/defs/coco.d):00170         DAT.Regs       EQU       $FFA0               DAT Block Registers base address
     333E             (  /dd/defs/coco.d):00171         DAT.Free       EQU       $333E               Free Block Number
     003F             (  /dd/defs/coco.d):00172         DAT.BlMx       EQU       $3F                 Maximum Block number
     0040             (  /dd/defs/coco.d):00173         DAT.BMSz       EQU       $40                 Memory Block Map size
     0000             (  /dd/defs/coco.d):00174         DAT.WrPr       EQU       0                   no write protect
     0000             (  /dd/defs/coco.d):00175         DAT.WrEn       EQU       0                   no write enable
     0000             (  /dd/defs/coco.d):00176         SysTask        EQU       0                   Coco System Task number
     003F             (  /dd/defs/coco.d):00177         IOBlock        EQU       $3F
     003F             (  /dd/defs/coco.d):00178         ROMBlock       EQU       $3F
     007F             (  /dd/defs/coco.d):00179         IOAddr         EQU       $7F
     0001             (  /dd/defs/coco.d):00180         ROMCount       EQU       1                   number of blocks of ROM (High RAM Block)
     0001             (  /dd/defs/coco.d):00181         RAMCount       EQU       1                   initial blocks of RAM
     0005             (  /dd/defs/coco.d):00182         MoveBlks       EQU       DAT.BlCt-ROMCount-2 Block numbers used for copies
     0001             (  /dd/defs/coco.d):00183         BlockTyp       EQU       1                   chk only first bytes of RAM block
     0002             (  /dd/defs/coco.d):00184         ByteType       EQU       2                   chk entire block of RAM
     0001             (  /dd/defs/coco.d):00185         Limited        EQU       1                   chk only upper memory for ROM modules
     0002             (  /dd/defs/coco.d):00186         UnLimitd       EQU       2                   chk all NotRAM for modules
                      (  /dd/defs/coco.d):00187         * NOTE: this check assumes any NotRAM with a module will
                      (  /dd/defs/coco.d):00188         *       always start with $87CD in first two bytes of block
     0001             (  /dd/defs/coco.d):00189         RAMCheck       EQU       BlockTyp            chk only beg bytes of block
     0001             (  /dd/defs/coco.d):00190         ROMCheck       EQU       Limited             chk only upper few blocks for ROM
     003F             (  /dd/defs/coco.d):00191         LastRAM        EQU       IOBlock             maximum RAM block number
                      (  /dd/defs/coco.d):00192         
                      (  /dd/defs/coco.d):00193         ***************************
                      (  /dd/defs/coco.d):00194         * Color Computer 3 Specific
                      (  /dd/defs/coco.d):00195         *
     0001             (  /dd/defs/coco.d):00196         MappedIO       EQU       true                (Actually False but it works better this way)
                      (  /dd/defs/coco.d):00197         
                      (  /dd/defs/coco.d):00198         ********************
                      (  /dd/defs/coco.d):00199         * Hardware addresses
                      (  /dd/defs/coco.d):00200         *
     FF00             (  /dd/defs/coco.d):00201         GIMERegs       EQU       $FF00               Base address of GIME registers
     FF92             (  /dd/defs/coco.d):00202         IrqEnR         EQU       $FF92               GIME IRQ enable/status register
     FF9A             (  /dd/defs/coco.d):00203         BordReg        EQU       $FF9A               Border color register
     FFB0             (  /dd/defs/coco.d):00204         PalAdr         EQU       $FFB0               Palette registers
                      (  /dd/defs/coco.d):00205         
     0007             (  /dd/defs/coco.d):00206         HW.Page        SET       $07                 Device descriptor hardware page
                      (  /dd/defs/coco.d):00207         
                      (  /dd/defs/coco.d):00208         * KrnBlk defines the block number of the 8K RAM block that is mapped to
                      (  /dd/defs/coco.d):00209         * the top of CPU address space ($E000-$FFFF) for the system process, and
                      (  /dd/defs/coco.d):00210         * which holds the Kernel. The top 2 pages of this CPU address space ($FFE0-
                      (  /dd/defs/coco.d):00211         * $FFFF) has two special properties. Firstly, it contains the I/O space.
                      (  /dd/defs/coco.d):00212         * Secondly, the parts that contain RAM map are not affected by the DAT
                      (  /dd/defs/coco.d):00213         * mappings but, instead, *always* map that RAM to a fixed RAM block
                      (  /dd/defs/coco.d):00214         * (KrnBlk). When a user process is mapped in, and requests enough memory,
                      (  /dd/defs/coco.d):00215         * it will end up with its own block assigned for CPU address space $E000-
                      (  /dd/defs/coco.d):00216         * $FFFF but the top of the address space is unusable by the user process:
                      (  /dd/defs/coco.d):00217         * it still contains the I/O and the bit of RAM that's mapped to KrnBlk.
                      (  /dd/defs/coco.d):00218         * Usually, the value of KrnBlk is fixed for a particular hardware design;
                      (  /dd/defs/coco.d):00219         * For the COCO GIME, it's always $3F.
     003F             (  /dd/defs/coco.d):00220         KrnBlk         SET       $3F
                      (  /dd/defs/coco.d):00221         
                      (  /dd/defs/coco.d):00222         
                      (         defsfile):00006                  use   /dd/defs/cocovtio.d
                      (/dd/defs/cocovtio):00001         ********************************************************************
                      (/dd/defs/cocovtio):00002         * VTIODefs - Video Terminal I/O Definitions for CoCo 3
                      (/dd/defs/cocovtio):00003         *
                      (/dd/defs/cocovtio):00004         * $Id$
                      (/dd/defs/cocovtio):00005         *
                      (/dd/defs/cocovtio):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (/dd/defs/cocovtio):00007         * Comment
                      (/dd/defs/cocovtio):00008         * ------------------------------------------------------------------
                      (/dd/defs/cocovtio):00009         *          2004/07/18  Boisy G. Pitre
                      (/dd/defs/cocovtio):00010         * Started from systype
                      (/dd/defs/cocovtio):00011         
                      (/dd/defs/cocovtio):00012                        NAM       VTIODefs
                      (/dd/defs/cocovtio):00013                        TTL       Video Terminal I/O Definitions for CoCo 3
                      (/dd/defs/cocovtio):00014         
                      (/dd/defs/cocovtio):00015         * Max size of Get/Put buffer to copy between user and grfdrv. There is room for up to 128, but
                      (/dd/defs/cocovtio):00016         *   we may use some of that for other things. Leaving at OS-9 Level II default (72) for now.
                      (/dd/defs/cocovtio):00017         * May try increasing to higher (maybe 96?) to see if it makes a noticable difference GPLoading
                      (/dd/defs/cocovtio):00018         * fonts, etc. in EOU bootup.
                      (/dd/defs/cocovtio):00019         
     0048             (/dd/defs/cocovtio):00020         gb0000         EQU       72                  Size of get/put buffer ($48)
                      (/dd/defs/cocovtio):00021         
                      (/dd/defs/cocovtio):00022         ****************
                      (/dd/defs/cocovtio):00023         * Window Devices
                      (/dd/defs/cocovtio):00024         *
                      (/dd/defs/cocovtio):00025                        ORG       $FF9F
FF9F                  (/dd/defs/cocovtio):00026         A.W            RMB       1                   $FF9F Generic Window Descriptor
FFA0                  (/dd/defs/cocovtio):00027         A.TermW        RMB       1                   $FFA0 Windowing Term
FFA1                  (/dd/defs/cocovtio):00028         A.W1           RMB       1                   $FFA1
FFA2                  (/dd/defs/cocovtio):00029         A.W2           RMB       1                   $FFA2
FFA3                  (/dd/defs/cocovtio):00030         A.W3           RMB       1                   $FFA3
FFA4                  (/dd/defs/cocovtio):00031         A.W4           RMB       1                   $FFA4
FFA5                  (/dd/defs/cocovtio):00032         A.W5           RMB       1                   $FFA5
FFA6                  (/dd/defs/cocovtio):00033         A.W6           RMB       1                   $FFA6
FFA7                  (/dd/defs/cocovtio):00034         A.W7           RMB       1                   $FFA7
FFA8                  (/dd/defs/cocovtio):00035         A.W8           RMB       1                   $FFA8
FFA9                  (/dd/defs/cocovtio):00036         A.W9           RMB       1                   $FFA9
FFAA                  (/dd/defs/cocovtio):00037         A.W10          RMB       1                   $FFAA
FFAB                  (/dd/defs/cocovtio):00038         A.W11          RMB       1                   $FFAB
FFAC                  (/dd/defs/cocovtio):00039         A.W12          RMB       1                   $FFAC
FFAD                  (/dd/defs/cocovtio):00040         A.W13          RMB       1                   $FFAD
FFAE                  (/dd/defs/cocovtio):00041         A.W14          RMB       1                   $FFAE
FFAF                  (/dd/defs/cocovtio):00042         A.W15          RMB       1                   $FFAF
                      (/dd/defs/cocovtio):00043         
                      (/dd/defs/cocovtio):00044         **********************************
                      (/dd/defs/cocovtio):00045         * Pointer Device Packet Definition
                      (/dd/defs/cocovtio):00046         *
                      (/dd/defs/cocovtio):00047                        ORG       0
0000                  (/dd/defs/cocovtio):00048         Pt.Valid       RMB       1                   Is returned info valid (0=no/1=yes)
0001                  (/dd/defs/cocovtio):00049         Pt.Actv        RMB       1                   Active Side 0=off/1=Right/2=left
0002                  (/dd/defs/cocovtio):00050         Pt.ToTm        RMB       1                   Time out Initial value
0003                  (/dd/defs/cocovtio):00051                        RMB       2                   reserved
0005                  (/dd/defs/cocovtio):00052         Pt.TTTo        RMB       1                   Time Till Timeout
0006                  (/dd/defs/cocovtio):00053         Pt.TSSt        RMB       2                   Time Since Start Counter
0008                  (/dd/defs/cocovtio):00054         Pt.CBSA        RMB       1                   Current Button State Button A
0009                  (/dd/defs/cocovtio):00055         Pt.CBSB        RMB       1                   Current Button State Button B
000A                  (/dd/defs/cocovtio):00056         Pt.CCtA        RMB       1                   Click Count Button A
000B                  (/dd/defs/cocovtio):00057         Pt.CCtB        RMB       1                   Click Count Button B
000C                  (/dd/defs/cocovtio):00058         Pt.TTSA        RMB       1                   Time This State Counter Button A
000D                  (/dd/defs/cocovtio):00059         Pt.TTSB        RMB       1                   Time This State Counter Button B
000E                  (/dd/defs/cocovtio):00060         Pt.TLSA        RMB       1                   Time Last State Counter Button A
000F                  (/dd/defs/cocovtio):00061         Pt.TLSB        RMB       1                   Time Last State Counter Button B
0010                  (/dd/defs/cocovtio):00062                        RMB       2                   Reserved
0012                  (/dd/defs/cocovtio):00063         Pt.BDX         RMB       2                   Button down X value EXPERIMENTAL
0014                  (/dd/defs/cocovtio):00064         Pt.BDY         RMB       2                   Button down Y value
0016                  (/dd/defs/cocovtio):00065         Pt.Stat        RMB       1                   Window Pointer type location
0017                  (/dd/defs/cocovtio):00066         Pt.Res         RMB       1                   Resolution (0..640 by: 0=ten/1=one)
0018                  (/dd/defs/cocovtio):00067         Pt.AcX         RMB       2                   Actual X Value
001A                  (/dd/defs/cocovtio):00068         Pt.AcY         RMB       2                   Actual Y Value
001C                  (/dd/defs/cocovtio):00069         Pt.WRX         RMB       2                   Window Relative X
001E                  (/dd/defs/cocovtio):00070         Pt.WRY         RMB       2                   Window Relative Y
     0020             (/dd/defs/cocovtio):00071         Pt.Siz         EQU       .                   Packet Size 32 bytes
                      (/dd/defs/cocovtio):00072         
                      (/dd/defs/cocovtio):00073         **************************
                      (/dd/defs/cocovtio):00074         * window regions for mouse
                      (/dd/defs/cocovtio):00075         *
     0000             (/dd/defs/cocovtio):00076         WR.Cntnt       EQU       0                   content region
     0001             (/dd/defs/cocovtio):00077         WR.Cntrl       EQU       1                   control region
     0002             (/dd/defs/cocovtio):00078         WR.OfWin       EQU       2                   off window
                      (/dd/defs/cocovtio):00079         
                      (/dd/defs/cocovtio):00080         *************************************
                      (/dd/defs/cocovtio):00081         * Standard system get/put buffer defs
                      (/dd/defs/cocovtio):00082         *
                      (/dd/defs/cocovtio):00083         *
                      (/dd/defs/cocovtio):00084         * system group numbers
                      (/dd/defs/cocovtio):00085         *
                      (/dd/defs/cocovtio):00086                        ORG       200
00C8                  (/dd/defs/cocovtio):00087         Grp.Fnt        RMB       1                   font group
00C9                  (/dd/defs/cocovtio):00088         Grp.Clip       RMB       1                   clipboard group
00CA                  (/dd/defs/cocovtio):00089         Grp.Ptr        RMB       1                   pointer group
00CB                  (/dd/defs/cocovtio):00090         Grp.Pat2       RMB       1                   pattern group 2 color
00CC                  (/dd/defs/cocovtio):00091         Grp.Pat4       RMB       1                   pattern group 4 color
00CD                  (/dd/defs/cocovtio):00092         Grp.Pat6       RMB       1                   pattern group 16 color
                      (/dd/defs/cocovtio):00093         *
                      (/dd/defs/cocovtio):00094         * font buffer numbers
                      (/dd/defs/cocovtio):00095         *
                      (/dd/defs/cocovtio):00096                        ORG       1
0001                  (/dd/defs/cocovtio):00097         Fnt.S8x8       RMB       1                   standard 8x8 font
0002                  (/dd/defs/cocovtio):00098         Fnt.S6x8       RMB       1                   standard 6x8 font
0003                  (/dd/defs/cocovtio):00099         Fnt.G8x8       RMB       1                   standard graphics 8x8 font
                      (/dd/defs/cocovtio):00100         *
                      (/dd/defs/cocovtio):00101         * pattern buffer numbers
                      (/dd/defs/cocovtio):00102         *
                      (/dd/defs/cocovtio):00103                        ORG       1
0001                  (/dd/defs/cocovtio):00104         Pat.Dot        RMB       1
0002                  (/dd/defs/cocovtio):00105         Pat.Vrt        RMB       1
0003                  (/dd/defs/cocovtio):00106         Pat.Hrz        RMB       1
0004                  (/dd/defs/cocovtio):00107         Pat.XHtc       RMB       1
0005                  (/dd/defs/cocovtio):00108         Pat.LSnt       RMB       1
0006                  (/dd/defs/cocovtio):00109         Pat.RSnt       RMB       1
0007                  (/dd/defs/cocovtio):00110         Pat.SDot       RMB       1
0008                  (/dd/defs/cocovtio):00111         Pat.BDot       RMB       1
                      (/dd/defs/cocovtio):00112         *
                      (/dd/defs/cocovtio):00113         * pointer buffer numbers
                      (/dd/defs/cocovtio):00114         *
                      (/dd/defs/cocovtio):00115                        ORG       1
0001                  (/dd/defs/cocovtio):00116         Ptr.Arr        RMB       1                   Arrow pointer
0002                  (/dd/defs/cocovtio):00117         Ptr.Pen        RMB       1                   Pencil pointer
0003                  (/dd/defs/cocovtio):00118         Ptr.LCH        RMB       1                   Large cross hair pointer
0004                  (/dd/defs/cocovtio):00119         Ptr.Slp        RMB       1                   Wait timer pointer
0005                  (/dd/defs/cocovtio):00120         Ptr.Ill        RMB       1                   Illegal action pointer
0006                  (/dd/defs/cocovtio):00121         Ptr.Txt        RMB       1                   Text pointer
0007                  (/dd/defs/cocovtio):00122         Ptr.SCH        RMB       1                   Small cross hair pointer
                      (/dd/defs/cocovtio):00123         
                      (/dd/defs/cocovtio):00124         **********************
                      (/dd/defs/cocovtio):00125         * KeyDrv Entry Points
                      (/dd/defs/cocovtio):00126                        ORG       0
0000                  (/dd/defs/cocovtio):00127         K$Init         RMB       3                   joystick initialization
0003                  (/dd/defs/cocovtio):00128         K$Term         RMB       3                   joystick termination
0006                  (/dd/defs/cocovtio):00129         K$FnKey        RMB       3                   get function key states
0009                  (/dd/defs/cocovtio):00130         K$RdKey        RMB       3                   get key states
                      (/dd/defs/cocovtio):00131         
                      (/dd/defs/cocovtio):00132         **********************
                      (/dd/defs/cocovtio):00133         * JoyDrv Entry Points
                      (/dd/defs/cocovtio):00134                        ORG       0
0000                  (/dd/defs/cocovtio):00135         J$Init         RMB       3                   joystick initialization
0003                  (/dd/defs/cocovtio):00136         J$Term         RMB       3                   joystick termination
0006                  (/dd/defs/cocovtio):00137         J$MsBtn        RMB       3                   get mouse button states
0009                  (/dd/defs/cocovtio):00138         J$MsXY         RMB       3                   get mouse X/Y coordinates
000C                  (/dd/defs/cocovtio):00139         J$JyBtn        RMB       3                   get joystick button states
000F                  (/dd/defs/cocovtio):00140         J$JyXY         RMB       3                   get joystick X/Y coordinates
                      (/dd/defs/cocovtio):00141         
                      (/dd/defs/cocovtio):00142         **********************
                      (/dd/defs/cocovtio):00143         * SndDrv Entry Points
                      (/dd/defs/cocovtio):00144                        ORG       0
0000                  (/dd/defs/cocovtio):00145         S$Init         RMB       3                   joystick initialization
0003                  (/dd/defs/cocovtio):00146         S$GetStt       RMB       3                   joystick termination
0006                  (/dd/defs/cocovtio):00147         S$SetStt       RMB       3                   joystick termination
0009                  (/dd/defs/cocovtio):00148         S$Term         RMB       3                   get joystick X/Y coordinates
                      (/dd/defs/cocovtio):00149         
                      (/dd/defs/cocovtio):00150         ********************************
                      (/dd/defs/cocovtio):00151         * Window/Menu Bar Data Structure
                      (/dd/defs/cocovtio):00152         *
                      (/dd/defs/cocovtio):00153         * To be used in SS.WnSet SETSTAT to set up a Framed Window
                      (/dd/defs/cocovtio):00154         * for use in the high level windowing package.
                      (/dd/defs/cocovtio):00155         *
     000A             (/dd/defs/cocovtio):00156         NUMMENS        EQU       10                  maximum number of menus on menu bar
     0014             (/dd/defs/cocovtio):00157         NUMITMS        EQU       20                  maximum number of items in a menu
     000F             (/dd/defs/cocovtio):00158         MXTTLEN        EQU       15                  max chars for menu and item names
     C0C0             (/dd/defs/cocovtio):00159         WINSYNC        EQU       $C0C0               synch bytes for window validation
                      (/dd/defs/cocovtio):00160         *
                      (/dd/defs/cocovtio):00161         * Menu Item Descriptor : (MN.ITEMS)
                      (/dd/defs/cocovtio):00162         * one required for each item within the menu
                      (/dd/defs/cocovtio):00163         *
                      (/dd/defs/cocovtio):00164                        ORG       0
0000                  (/dd/defs/cocovtio):00165         MI.TTL         RMB       MXTTLEN             item name
000F                  (/dd/defs/cocovtio):00166         MI.ENBL        RMB       1                   enable flag
0010                  (/dd/defs/cocovtio):00167         MI.RES         RMB       5                   reserved bytes
     0015             (/dd/defs/cocovtio):00168         MI.SIZ         EQU       .                   size of menu item descriptor
                      (/dd/defs/cocovtio):00169         *
                      (/dd/defs/cocovtio):00170         * Menu Descriptor :
                      (/dd/defs/cocovtio):00171         * one for each menu on the manu bar
                      (/dd/defs/cocovtio):00172         * each is pointed to by MB.MPTR below
                      (/dd/defs/cocovtio):00173         *
                      (/dd/defs/cocovtio):00174                        ORG       0
0000                  (/dd/defs/cocovtio):00175         MN.TTL         RMB       MXTTLEN             menu title
000F                  (/dd/defs/cocovtio):00176         MN.ID          RMB       1                   menu id number (1-255)
0010                  (/dd/defs/cocovtio):00177         MN.XSIZ        RMB       1                   horiz. size of desired pull down
0011                  (/dd/defs/cocovtio):00178         MN.NITS        RMB       1                   number of items in menu
0012                  (/dd/defs/cocovtio):00179         MN.ENBL        RMB       1                   enable flag
0013                  (/dd/defs/cocovtio):00180         MN.RES         RMB       2                   reserved bytes
0015                  (/dd/defs/cocovtio):00181         MN.ITEMS       RMB       2                   pointer to array of menu items
     0017             (/dd/defs/cocovtio):00182         MN.SIZ         EQU       .                   size of menu descriptor
                      (/dd/defs/cocovtio):00183         *
                      (/dd/defs/cocovtio):00184         * Window Descriptor:
                      (/dd/defs/cocovtio):00185         * one required for each application in a framed window
                      (/dd/defs/cocovtio):00186         *
                      (/dd/defs/cocovtio):00187                        ORG       0
0000                  (/dd/defs/cocovtio):00188         WN.TTL         RMB       20                  title of window for title bar
0014                  (/dd/defs/cocovtio):00189         WN.NMNS        RMB       1                   number of menus in menu bar
0015                  (/dd/defs/cocovtio):00190         WN.XMIN        RMB       1                   minimal horiz. size for application to run
0016                  (/dd/defs/cocovtio):00191         WN.YMIN        RMB       1                   minimal vert. size for application to run
0017                  (/dd/defs/cocovtio):00192         WN.SYNC        RMB       2                   synch bytes ($C0C0)
0019                  (/dd/defs/cocovtio):00193         WN.RES         RMB       7                   reserved bytes
0020                  (/dd/defs/cocovtio):00194         WN.BAR         RMB       2                   pointer to arry of menu descriptors
     0022             (/dd/defs/cocovtio):00195         WN.SIZ         EQU       .                   size of window/menu bar descriptor
                      (/dd/defs/cocovtio):00196         
                      (/dd/defs/cocovtio):00197         *************************
                      (/dd/defs/cocovtio):00198         * Window Type Definitions
                      (/dd/defs/cocovtio):00199         *
                      (/dd/defs/cocovtio):00200         * To be used in setting up the border of the window in
                      (/dd/defs/cocovtio):00201         * the SS.WnSel SETSTAT
                      (/dd/defs/cocovtio):00202         *
                      (/dd/defs/cocovtio):00203                        ORG       0
0000                  (/dd/defs/cocovtio):00204         WT.NBox        RMB       1                   No Box
0001                  (/dd/defs/cocovtio):00205         WT.FWin        RMB       1                   Framed Window
0002                  (/dd/defs/cocovtio):00206         WT.FSWin       RMB       1                   Framed Window w/Scroll Bars
0003                  (/dd/defs/cocovtio):00207         WT.SBox        RMB       1                   Shadowed Box
0004                  (/dd/defs/cocovtio):00208         WT.DBox        RMB       1                   Double Box
0005                  (/dd/defs/cocovtio):00209         WT.PBox        RMB       1                   Plain Box
                      (/dd/defs/cocovtio):00210         
                      (/dd/defs/cocovtio):00211         *************************************
                      (/dd/defs/cocovtio):00212         * Pre-Defined Menu IDs for the system
                      (/dd/defs/cocovtio):00213         *
                      (/dd/defs/cocovtio):00214                        ORG       1
0001                  (/dd/defs/cocovtio):00215         MId.Mov        RMB       1                   move box
0002                  (/dd/defs/cocovtio):00216         MId.Cls        RMB       1                   close box
0003                  (/dd/defs/cocovtio):00217         MId.Grw        RMB       1                   grow box
0004                  (/dd/defs/cocovtio):00218         MId.SUp        RMB       1                   scroll up
0005                  (/dd/defs/cocovtio):00219         MId.SDn        RMB       1                   scroll down
0006                  (/dd/defs/cocovtio):00220         MId.SRt        RMB       1                   scroll right
0007                  (/dd/defs/cocovtio):00221         MId.SLt        RMB       1                   scroll left
0008                  (/dd/defs/cocovtio):00222         MId.Chr        RMB       1                   character was depressed
                      (/dd/defs/cocovtio):00223                        ORG       20
0014                  (/dd/defs/cocovtio):00224         MId.Tdy        RMB       1                   Tandy menu
0015                  (/dd/defs/cocovtio):00225         MId.Fil        RMB       1                   Files Menu
0016                  (/dd/defs/cocovtio):00226         MId.Edt        RMB       1                   Edit Menu
0017                  (/dd/defs/cocovtio):00227         MId.Sty        RMB       1                   Styles menu
0018                  (/dd/defs/cocovtio):00228         MId.Fnt        RMB       1                   Font menu
                      (/dd/defs/cocovtio):00229         
                      (/dd/defs/cocovtio):00230         
                      (/dd/defs/cocovtio):00231         ******************************************************************************
                      (/dd/defs/cocovtio):00232         ******************************************************************************
                      (/dd/defs/cocovtio):00233         **                                                                          **
                      (/dd/defs/cocovtio):00234         ** NitrOS-9 Windowing system Global data definitions                        **
                      (/dd/defs/cocovtio):00235         **                                                                          **
                      (/dd/defs/cocovtio):00236         ******************************************************************************
                      (/dd/defs/cocovtio):00237         ******************************************************************************
                      (/dd/defs/cocovtio):00238         **                                                                          **
                      (/dd/defs/cocovtio):00239         ** System memory block 0 layout:                                            **
                      (/dd/defs/cocovtio):00240         **                                                                          **
                      (/dd/defs/cocovtio):00241         ** $0000-$0001 : FHL/Isted WD 1002-05 - interface base address              **
                      (/dd/defs/cocovtio):00242         ** $0002       : FHL/Isted WD 1002-05 - boot device physical drive #        **
                      (/dd/defs/cocovtio):00243         ** $0008       : Bruce Isted Serial mouse - button counter & rx count       **
                      (/dd/defs/cocovtio):00244         ** $0009-$000B : Bruce Isted Serial mouse - RX buffer                       **
                      (/dd/defs/cocovtio):00245         ** $000C-$000D : Bruce Isted Serial mouse - Current X position              **
                      (/dd/defs/cocovtio):00246         ** $000E-$000F : Bruce Isted Serial mouse - Current Y position              **
                      (/dd/defs/cocovtio):00247         ** $0010-$001F : unused (User definable)                                    **
                      (/dd/defs/cocovtio):00248         ** $0020-$00FF : system direct page & some IRQ vectors                      **
                      (/dd/defs/cocovtio):00249         ** $0100-$011F : Task usage table                                           **
                      (/dd/defs/cocovtio):00250         ** $0120-$01FF : Virtual DAT tasks (pointed to by <D.TskIPt)                **
                      (/dd/defs/cocovtio):00251         ** $0200-$02FF : memory block usage map ($80=Not RAM,$01=in use,$02=module) **
                      (/dd/defs/cocovtio):00252         ** $0300-$03FF : system's system call dispatch table                        **
                      (/dd/defs/cocovtio):00253         ** $0400-$04FF : user's sysem call dispatch table                           **
                      (/dd/defs/cocovtio):00254         ** $0500-$05FF : process descriptor pointer table                           **
                      (/dd/defs/cocovtio):00255         ** $0600-$07FF : System task (Task 0, ID 1) process descriptor              **
                      (/dd/defs/cocovtio):00256         ** $0800-$08FF : System's stack space (initial ptr is $0900)                **
                      (/dd/defs/cocovtio):00257         ** $0900-$09FF : SMAP table ($01=in used, $80=NOT RAM)                      **
                      (/dd/defs/cocovtio):00258         ** $0A00-$0FFF : module directory DAT Images (8 bytes each)                 **
                      (/dd/defs/cocovtio):00259         ** $1000-$10FF : System Global memory (pointed to by D.CCMem)               **
                      (/dd/defs/cocovtio):00260         ** $1100-$11FF : GRFDRV global memory (DP=$11 in GRFDRV)                    **
                      (/dd/defs/cocovtio):00261         ** $1200-$1247 : shared buffer between Grf/WindInt & GRFDRV (GP buffers)    **
                      (/dd/defs/cocovtio):00262         ** $1248-$127F : ????  (unused)                                             **
                      (/dd/defs/cocovtio):00263         ** $1280-$1A7F : the window tables (32 of $40 bytes each)                   **
                      (/dd/defs/cocovtio):00264         ** $1A80-$1C7F : the screen tables (16 of $20 bytes each)                   **
                      (/dd/defs/cocovtio):00265         ** $1C80-$2000 : the CC3 global mem stack (for windowing)                   **
                      (/dd/defs/cocovtio):00266         **                                                                          **
                      (/dd/defs/cocovtio):00267         ******************************************************************************
                      (/dd/defs/cocovtio):00268         ******************************************************************************
                      (/dd/defs/cocovtio):00269         
                      (/dd/defs/cocovtio):00270         * User settable values for VTIO/TC9IO/GrfInt/WindInt & GrfDrv
     0019             (/dd/defs/cocovtio):00271         MaxLines       EQU       25                  Max. Y coord text value
     0000             (/dd/defs/cocovtio):00272         Meg            SET       false               "true" if 1 or 2 meg machine
                      (/dd/defs/cocovtio):00273         
     0000             (/dd/defs/cocovtio):00274         COMP           EQU       0                   composite monitor
     0001             (/dd/defs/cocovtio):00275         RGB            EQU       1                   RGB Analog monitor 
     0002             (/dd/defs/cocovtio):00276         MONO           EQU       2                   monochrome monitor
                      (/dd/defs/cocovtio):00277         
     0001             (/dd/defs/cocovtio):00278         Monitor        SET       RGB
                      (/dd/defs/cocovtio):00279         
                      (/dd/defs/cocovtio):00280         * Global definitions
     0001             (/dd/defs/cocovtio):00281         KeyMse         EQU       %00000001           keyboard mouse enabled
     0002             (/dd/defs/cocovtio):00282         NumLck         EQU       %00000010           Numlock enabled (TC-9 use only)
     0004             (/dd/defs/cocovtio):00283         CapsLck        EQU       %00000100           Capslock enabled
     0280             (/dd/defs/cocovtio):00284         MaxRows        EQU       640                 maximum X co-ordinate allowed on mouse
                      (/dd/defs/cocovtio):00285                      IFEQ      MaxLines-25
     00C6             (/dd/defs/cocovtio):00286         MaxLine        EQU       198                 maximum Y co-ordinate allowed on mouse
                      (/dd/defs/cocovtio):00287                      ELSE      
0019                  (/dd/defs/cocovtio):00288         MaxLine        EQU       191                 maximum Y co-ordinate allowed on mouse
                      (/dd/defs/cocovtio):00289                      ENDC      
                      (/dd/defs/cocovtio):00290         
                      (/dd/defs/cocovtio):00291         *****************************************************************************
                      (/dd/defs/cocovtio):00292         * Static memory area for each window (VTIO/TC9IO)
                      (/dd/defs/cocovtio):00293         * Should set up a write buffer (using parm area?) between SCF, VTIO & Grfdrv
                      (/dd/defs/cocovtio):00294         * so we can 'burst mode' text output (copy up to 48 chars to Grfdrv's parm
                      (/dd/defs/cocovtio):00295         * area, and have grfdrv loop through & write all 48 chars to screen in 1 loop
                      (/dd/defs/cocovtio):00296         * May have to have smaller limit for text to gfx screens, as it will run much
                      (/dd/defs/cocovtio):00297         * slower, unless GrfDrv is made Partially/Fully Re-Entrant
                      (/dd/defs/cocovtio):00298         *
                      (/dd/defs/cocovtio):00299         * STRONG CAUTION:  scfdefs MUST be included first before this file if
                      (/dd/defs/cocovtio):00300         * V.SCF is to be resolved properly in pass 1!!
                      (/dd/defs/cocovtio):00301                        ORG       V.SCF
001D                  (/dd/defs/cocovtio):00302         V.WinType      RMB       1                   window type (0=Windint/GrfInt,2=VDGInt)      $1D
001E                  (/dd/defs/cocovtio):00303         V.InfVld       RMB       1                   Rest of info here valid? (0=NO, >0 = YES)    $1E
001F                  (/dd/defs/cocovtio):00304         V.DevPar       RMB       2                   high bit=window device                       $1F
0021                  (/dd/defs/cocovtio):00305         V.ULCase       RMB       1                   special key flags (Capslck & keyboard mouse) $21
0022                  (/dd/defs/cocovtio):00306         V.KySnsFlg     RMB       1                   flag for key sense setstat                   $22
0023                  (/dd/defs/cocovtio):00307         V.ScrChg       RMB       1                   screen change flag                           $23
0024                  (/dd/defs/cocovtio):00308         V.SSigID       RMB       1                   data ready process ID                        $24
0025                  (/dd/defs/cocovtio):00309         V.SSigSg       RMB       1                   data ready signal code                       $25
0026                  (/dd/defs/cocovtio):00310         V.MSigID       RMB       1                   mouse signal process ID                      $26
0027                  (/dd/defs/cocovtio):00311         V.MSigSg       RMB       1                   mouse signal signal code                     $27
0028                  (/dd/defs/cocovtio):00312         V.MSmpl        RMB       1                   mouse sample rate                            $28
0029                  (/dd/defs/cocovtio):00313         V.MTime        RMB       1                   mouse timeout value                          $29
002A                  (/dd/defs/cocovtio):00314                        RMB       1                   unused                                       $2A
002B                  (/dd/defs/cocovtio):00315         V.MAutoF       RMB       1                   auto follow mouse flag                       $2B
002C                  (/dd/defs/cocovtio):00316         V.ParmCnt      RMB       1                   parameter count                              $2C
002D                  (/dd/defs/cocovtio):00317         V.ParmVct      RMB       2                   parameter vector                             $2D
002F                  (/dd/defs/cocovtio):00318         V.PrmStrt      RMB       2                   pointer to params start                      $2F
0031                  (/dd/defs/cocovtio):00319         V.NxtPrm       RMB       2                   pointer to next param storage                $31
0033                  (/dd/defs/cocovtio):00320         V.EndPtr       RMB       1                   last character read offset                   $33
0034                  (/dd/defs/cocovtio):00321         V.InpPtr       RMB       1                   next character read offset                   $34
0035                  (/dd/defs/cocovtio):00322         V.WinNum       RMB       1                   window table entry #                         $35
0036                  (/dd/defs/cocovtio):00323         V.DWNum        RMB       1                   dwnum from descriptor                        $36
0037                  (/dd/defs/cocovtio):00324         V.CallCde      RMB       1                   internal comod call code #                   $37
0038                  (/dd/defs/cocovtio):00325         CC3Parm        RMB       128-.               global parameter area
0080                  (/dd/defs/cocovtio):00326         ReadBuf        RMB       256-.               read input buffer (keyboard)
     0100             (/dd/defs/cocovtio):00327         CC3DSiz        EQU       .
                      (/dd/defs/cocovtio):00328         
                      (/dd/defs/cocovtio):00329         *****************************************************************************
                      (/dd/defs/cocovtio):00330         * GrfInt/WindInt global memory area
                      (/dd/defs/cocovtio):00331         * This area sits in system block 0 from $1000 to $10ff
     1000             (/dd/defs/cocovtio):00332         WGlobal        EQU       $1000               useful value (points to address starting below)
                      (/dd/defs/cocovtio):00333                        ORG       0
0000                  (/dd/defs/cocovtio):00334         G.CurTik       RMB       1                   Constant - # Clock ticks/cursor updates (2)
0001                  (/dd/defs/cocovtio):00335         G.CntTik       RMB       1                   Current tick count for cursor updates
0002                  (/dd/defs/cocovtio):00336         G.GfBusy       RMB       1                   Grfdrv is busy flag (1=busy)
0003                  (/dd/defs/cocovtio):00337         G.OrgAlt       RMB       2                   Place to store D.AltIRQ before altering
                      (/dd/defs/cocovtio):00338         *g0003    rmb   2          NEW: UNUSED
0005                  (/dd/defs/cocovtio):00339         g0005          RMB       2                   Temp save in Windint RG
0007                  (/dd/defs/cocovtio):00340         G.GrfStk       RMB       2                   grfdrv stack pointer ($07)
0009                  (/dd/defs/cocovtio):00341         G.MonTyp       RMB       1                   monitor type
     000A             (/dd/defs/cocovtio):00342         g000A          EQU       .                   Old label for compatibility
000A                  (/dd/defs/cocovtio):00343         G.CrDvFl       RMB       1                   Are we current device flag (only set when all
                      (/dd/defs/cocovtio):00344         *                           Parms have been moved to Dev Mem)
                      (/dd/defs/cocovtio):00345         *                           0=We are not on our device
                      (/dd/defs/cocovtio):00346         *                           1=We are the current device
                      (/dd/defs/cocovtio):00347         *                           (Used by comod (GRF/WIND/VDGInt) to determine
                      (/dd/defs/cocovtio):00348         *                            whether or not to update GIME regs themselves
                      (/dd/defs/cocovtio):00349         *                            If not current device, they don't.)
000B                  (/dd/defs/cocovtio):00350         G.WinType      RMB       1                   current device's V.TYPE
000C                  (/dd/defs/cocovtio):00351         G.CurDvM       RMB       2                   current device memory pointer for co-module use
000E                  (/dd/defs/cocovtio):00352         G.WIBusy       RMB       1                   WindInt is busy flag (1=busy)
000F                  (/dd/defs/cocovtio):00353         G.AlPckt       RMB       6                   F$Alarm time packet
0015                  (/dd/defs/cocovtio):00354         G.AlPID        RMB       1                   F$Alarm proc ID ($15)
0016                  (/dd/defs/cocovtio):00355         G.AlSig        RMB       1                   F$Alarm signal code ($16)
0017                  (/dd/defs/cocovtio):00356         G.BelVec       RMB       2                   BELL routine vector
0019                  (/dd/defs/cocovtio):00357         G.DefPal       RMB       2                   pointer to default palette data in global mem
001B                  (/dd/defs/cocovtio):00358         G.TnCnt        RMB       1                   SS.Tone duration counter
001C                  (/dd/defs/cocovtio):00359         G.BelTnF       RMB       1                   BELL tone flag
001D                  (/dd/defs/cocovtio):00360         g001D          RMB       3
0020                  (/dd/defs/cocovtio):00361         G.CurDev       RMB       2                   current device's static memory pointer ($20)
0022                  (/dd/defs/cocovtio):00362         G.PrWMPt       RMB       2                   previous window static mem pointer $(22)
0024                  (/dd/defs/cocovtio):00363         G.BCFFlg       RMB       1                   bit coded co-module found flags ($24)
                      (/dd/defs/cocovtio):00364         *                           00000010 : VDGInt found
                      (/dd/defs/cocovtio):00365         *                           10000000 : GrfDrv found
0025                  (/dd/defs/cocovtio):00366         g0025          RMB       1
0026                  (/dd/defs/cocovtio):00367         G.KTblLC       RMB       1                   Key table entry# last checked (1-3)
                      (/dd/defs/cocovtio):00368         *         IFEQ  TC9-true
                      (/dd/defs/cocovtio):00369         *CurLght  rmb   1          current keyboard light settings
                      (/dd/defs/cocovtio):00370         *         ELSE  
0027                  (/dd/defs/cocovtio):00371         G.LastCh       RMB       1                   last keyboard character (ASCII value)
                      (/dd/defs/cocovtio):00372         *         ENDC  
0028                  (/dd/defs/cocovtio):00373         G.LKeyCd       RMB       1                   last keyboard code
0029                  (/dd/defs/cocovtio):00374         G.KyRept       RMB       1                   key repeat counter
                      (/dd/defs/cocovtio):00375         * A secondary 3 key table (same format as g002D below)
002A                  (/dd/defs/cocovtio):00376         G.2Key1        RMB       1                   $2A
002B                  (/dd/defs/cocovtio):00377         G.2Key2        RMB       1                   $2B
002C                  (/dd/defs/cocovtio):00378         G.2Key3        RMB       1
                      (/dd/defs/cocovtio):00379         * Up to 3 keys can be registerd at once, and they are stored here. If more
                      (/dd/defs/cocovtio):00380         * than 3 are hit, the last key is overwritten with the very last key down that
                      (/dd/defs/cocovtio):00381         * was checked. Format for all three is the same as the PIA column/row byte @
                      (/dd/defs/cocovtio):00382         * KeyFlag below.
002D                  (/dd/defs/cocovtio):00383         G.Key1         RMB       1                   Key 1 being held down (Row/Column #)
002E                  (/dd/defs/cocovtio):00384         G.Key2         RMB       1                   Key 2 being held down (Row/Column #)
002F                  (/dd/defs/cocovtio):00385         G.Key3         RMB       1                   Key 3 being held down (Row/Column #)
0030                  (/dd/defs/cocovtio):00386         G.ShftDn       RMB       1                   SHIFT key down flag (COM'd) ($30)
0031                  (/dd/defs/cocovtio):00387         G.CntlDn       RMB       1                   CTRL key down flag (0=NO)
0032                  (/dd/defs/cocovtio):00388         G.KeyFlg       RMB       1                   Keyboard PIA bit #'s for columns/rows
                      (/dd/defs/cocovtio):00389         *                           %00000111-Column # (Output, 0-7)
                      (/dd/defs/cocovtio):00390         *                           %00111000-Row # (Input, 0-6)
0033                  (/dd/defs/cocovtio):00391         G.AltDwn       RMB       1                   ALT key down flag (0=NO)
0034                  (/dd/defs/cocovtio):00392         G.KySns        RMB       1                   key sense byte
0035                  (/dd/defs/cocovtio):00393         G.KySame       RMB       1                   same key flag
0036                  (/dd/defs/cocovtio):00394         G.CapLok       RMB       1                   CapsLock/SysRq key down flag
0037                  (/dd/defs/cocovtio):00395                        RMB       1
0038                  (/dd/defs/cocovtio):00396         g0038          RMB       1                   grfdrv initialized flag
0039                  (/dd/defs/cocovtio):00397                        RMB       2
003B                  (/dd/defs/cocovtio):00398         G.MSmpRt       RMB       1                   Current mouse sample # (# ticks till next read)
003C                  (/dd/defs/cocovtio):00399         G.Mouse        RMB       Pt.Siz              mouse packet ($3C)
005C                  (/dd/defs/cocovtio):00400         g005C          RMB       2                   Temp for relative mouse X coord calculation
005E                  (/dd/defs/cocovtio):00401         g005E          RMB       2                   Temp for relative mouse Y coord calculation
0060                  (/dd/defs/cocovtio):00402         G.MSmpRV       RMB       1                   Mouse sample reset value (# ticks till next read)
0061                  (/dd/defs/cocovtio):00403         G.KyDly        RMB       1                   initial key repeat delay constant ($61)
0062                  (/dd/defs/cocovtio):00404         G.KySpd        RMB       1                   secondary key repeat delay constant
                      (/dd/defs/cocovtio):00405         *         IFEQ  TC9-true
                      (/dd/defs/cocovtio):00406         *KeyParm  rmb   1          keyboard command parameter byte
                      (/dd/defs/cocovtio):00407         *         ELSE  
0063                  (/dd/defs/cocovtio):00408         G.KyMse        RMB       1                   keyboard mouse flag ($63)
                      (/dd/defs/cocovtio):00409         *         ENDC  
0064                  (/dd/defs/cocovtio):00410         G.Clear        RMB       1                   "one-shot" CapsLock/SysRq key flag ($64)
0065                  (/dd/defs/cocovtio):00411         G.KyButt       RMB       1                   keyboard F1 and F2 "fire" button info ($65)
0066                  (/dd/defs/cocovtio):00412         G.AutoMs       RMB       1                   Auto-follow mouse flag for current device (0=NO)
0067                  (/dd/defs/cocovtio):00413         G.MseMv        RMB       1                   mouse moved flag ($67)
0068                  (/dd/defs/cocovtio):00414         G.CoTble       RMB       6                   co-module table ($68)
006E                  (/dd/defs/cocovtio):00415         G.GrfEnt       RMB       2                   GRFDRV Entry address ($6E)
0070                  (/dd/defs/cocovtio):00416         g0070          RMB       1                   # bytes to move in 1 block (1-72)
0071                  (/dd/defs/cocovtio):00417         G.WUseTb       RMB       4                   windows in use bit table (0=unused, 32 windows) ($71)
0075                  (/dd/defs/cocovtio):00418         G.GfxTbl       RMB       2                   Pointer to GFX tables ($75)
0077                  (/dd/defs/cocovtio):00419         G.WrkWTb       RMB       $40                 Work window table. WindInt only ($77)
00B7                  (/dd/defs/cocovtio):00420         g00B7          RMB       2                   Current Device static mem ptr for WindInt
00B9                  (/dd/defs/cocovtio):00421         g00B9          RMB       2                   Current window table ptr for WindInt
00BB                  (/dd/defs/cocovtio):00422         g00BB          RMB       2                   Pointer to work window table (g0077+$10)
00BD                  (/dd/defs/cocovtio):00423         g00BD          RMB       1                   Current screen type for work window table
00BE                  (/dd/defs/cocovtio):00424         g00BE          RMB       1                   Topmost overlay window # when check for title bars
00BF                  (/dd/defs/cocovtio):00425         g00BF          RMB       1                   Flag for keypress while processing menu select
00C0                  (/dd/defs/cocovtio):00426         g00C0          RMB       2                   Ptr to current path descriptor
00C2                  (/dd/defs/cocovtio):00427         G.WindBk       RMB       2                   shift-clear routine vector
00C4                  (/dd/defs/cocovtio):00428         G.MsInit       RMB       2                   set mouse routine vector
00C6                  (/dd/defs/cocovtio):00429         G.MsSig        RMB       1                   mouse signal flag
00C7                  (/dd/defs/cocovtio):00430         G.DefPls       RMB       16                  Default palettes (2 repeats of 8 is default) ($C7)
00D7                  (/dd/defs/cocovtio):00431         g00D7          RMB       9
00E0                  (/dd/defs/cocovtio):00432         G.KeyEnt       RMB       2                   entry to keydrv subroutine module ($E0)
00E2                  (/dd/defs/cocovtio):00433         G.KeyMem       RMB       8                   static memory for keydrv subroutine module
00EA                  (/dd/defs/cocovtio):00434         G.JoyEnt       RMB       2                   entry to joydrv subroutine module ($EA)
00EC                  (/dd/defs/cocovtio):00435         G.JoyMem       RMB       8                   static memory for joydrv subroutine module
00F4                  (/dd/defs/cocovtio):00436         G.SndEnt       RMB       2                   entry to snddrv subroutine module ($F4)
00F6                  (/dd/defs/cocovtio):00437         G.SndMem       RMB       8                   static memory for snddrv subroutine module
                      (/dd/defs/cocovtio):00438         
                      (/dd/defs/cocovtio):00439         *****************************************************************************
                      (/dd/defs/cocovtio):00440         * GrfDrv global memory data definitions
                      (/dd/defs/cocovtio):00441         * This area sits in system block 0 from $1100 to $119E
     1100             (/dd/defs/cocovtio):00442         GrfMem         EQU       $1100               useful label used to point to mem starting below
                      (/dd/defs/cocovtio):00443                        ORG       0
0000                  (/dd/defs/cocovtio):00444         gr0000         RMB       1                   Pixel mask for 1st byte of GP line
0001                  (/dd/defs/cocovtio):00445         gr0001         RMB       1                   Pixel mask for last byte of a GP line
0002                  (/dd/defs/cocovtio):00446         gr0002         RMB       2                   Ptr to table of bit masks for colors
0004                  (/dd/defs/cocovtio):00447         gr0004         RMB       1                   # of bytes wide GP buffer is (including partials)
0005                  (/dd/defs/cocovtio):00448         gr0005         RMB       1                   # pixels per byte in GP Buffer
0006                  (/dd/defs/cocovtio):00449         gr0006         RMB       1                   # of pixels used in 1st byte of GP buffer line
0007                  (/dd/defs/cocovtio):00450         gr0007         RMB       1                   # of pixels used in last byte of GP buffer line
0008                  (/dd/defs/cocovtio):00451         gr0008         RMB       1                   Bit mask that is common to both screen & GP buffer
0009                  (/dd/defs/cocovtio):00452         gr0009         RMB       1                   # bytes for width of overlay window
000A                  (/dd/defs/cocovtio):00453         gr000A         RMB       1                   # bytes to offset to get to next line after
                      (/dd/defs/cocovtio):00454         *                                              overlay width has been copied
000B                  (/dd/defs/cocovtio):00455         gr000B         RMB       1
000C                  (/dd/defs/cocovtio):00456         gr000C         RMB       2                   Cursor address for proportional spacing?
000E                  (/dd/defs/cocovtio):00457         gr000E         RMB       1
000F                  (/dd/defs/cocovtio):00458         gr000F         RMB       1                   Left-based bit mask for proportional spacing?
0010                  (/dd/defs/cocovtio):00459         gr0010         RMB       2                   Vector for text to gfx screen (either prop. or normal)
0012                  (/dd/defs/cocovtio):00460         gr0012         RMB       6
0018                  (/dd/defs/cocovtio):00461         gr0018         RMB       2                   Working Center X coord for Circle/Ellipse
001A                  (/dd/defs/cocovtio):00462         gr001A         RMB       2                   Working Center Y coord for Circle/Ellipse
001C                  (/dd/defs/cocovtio):00463         gr001C         RMB       2                   Some variable for Circle/Ellipse (initially 0)
001E                  (/dd/defs/cocovtio):00464         gr001E         RMB       2                   Working Y radius value for Circle/Ellipse
0020                  (/dd/defs/cocovtio):00465         gr0020         RMB       2                   Arc 'clip line' X01
0022                  (/dd/defs/cocovtio):00466         gr0022         RMB       2                   Arc 'clip line' Y01
0024                  (/dd/defs/cocovtio):00467         gr0024         RMB       2                   Arc 'clip line' X02
0026                  (/dd/defs/cocovtio):00468         gr0026         RMB       2                   Arc 'clip line' Y02
0028                  (/dd/defs/cocovtio):00469         gr0028         RMB       1                   full-byte background color to FFILL on mask
0029                  (/dd/defs/cocovtio):00470         gr0029         RMB       1                   pixels per byte: set up by FFILL
002A                  (/dd/defs/cocovtio):00471         gr002A         RMB       1                   Flag for FFill: 1=no error, 0=Stack overflow error
002B                  (/dd/defs/cocovtio):00472         gr002B         RMB       1                   current Y-direction to travel in FFILL
002C                  (/dd/defs/cocovtio):00473         gr002C         RMB       2
002E                  (/dd/defs/cocovtio):00474         gr002E         RMB       2                   current window table entry
0030                  (/dd/defs/cocovtio):00475         gr0030         RMB       2                   current screen table ptr
0032                  (/dd/defs/cocovtio):00476         gr0032         RMB       1                   Last block # we used for buffers
0033                  (/dd/defs/cocovtio):00477         gr0033         RMB       2                   Last offset we used for buffers
0035                  (/dd/defs/cocovtio):00478         gr0035         RMB       1                   group
0036                  (/dd/defs/cocovtio):00479         gr0036         RMB       2                   offset
0038                  (/dd/defs/cocovtio):00480         gr0038         RMB       1                   group returned (new)
0039                  (/dd/defs/cocovtio):00481         gr0039         RMB       1                   0=Text cursor inverted off, >0 is inverted on
003A                  (/dd/defs/cocovtio):00482         gr003A         RMB       1                   0=Graphics cursor XOR'd off,>0 is XOR'd on scrn
003B                  (/dd/defs/cocovtio):00483         gr003B         RMB       2                   end of vars ptr?
003D                  (/dd/defs/cocovtio):00484         gr003D         RMB       2                   Last X coordinate Graphics cursor was ON at
003F                  (/dd/defs/cocovtio):00485         gr003F         RMB       2                   Last Y coordinate Graphics cursor was ON at
0041                  (/dd/defs/cocovtio):00486         gr0041         RMB       2                   Screen address for start of current gfx cursor
0043                  (/dd/defs/cocovtio):00487         gr0043         RMB       1                   Pixel mask for start of gfx cursor
0044                  (/dd/defs/cocovtio):00488         gr0044         RMB       1                   Block # Graphics cursor is in
0045                  (/dd/defs/cocovtio):00489         gr0045         RMB       2                   Offset in block Graphics cursor is in
0047                  (/dd/defs/cocovtio):00490         gr0047         RMB       2                   'Working' X coordinate
0049                  (/dd/defs/cocovtio):00491         gr0049         RMB       2                   'Working' Y coordinate
004B                  (/dd/defs/cocovtio):00492         gr004B         RMB       2                   current X
004D                  (/dd/defs/cocovtio):00493         gr004D         RMB       2                   current Y
004F                  (/dd/defs/cocovtio):00494         gr004F         RMB       2                   X Size (in bytes)
0051                  (/dd/defs/cocovtio):00495         gr0051         RMB       2                   Y Size (in bytes)
0053                  (/dd/defs/cocovtio):00496         gr0053         RMB       2                   Horizontal radius (circle/ellipse/arc)
0055                  (/dd/defs/cocovtio):00497         gr0055         RMB       2                   Vertical radius (circle/ellipse/arc)
0057                  (/dd/defs/cocovtio):00498         gr0057         RMB       1                   group
0058                  (/dd/defs/cocovtio):00499         gr0058         RMB       1                   buffer #
0059                  (/dd/defs/cocovtio):00500         gr0059         RMB       1                   save switch for overlay
005A                  (/dd/defs/cocovtio):00501         gr005A         RMB       1                   PRN
005B                  (/dd/defs/cocovtio):00502         gr005B         RMB       2                   X coordinate of Graphics cursor
005D                  (/dd/defs/cocovtio):00503         gr005D         RMB       2                   Y coordinate of Graphics cursor
005F                  (/dd/defs/cocovtio):00504         gr005F         RMB       1                   ATD: new video mode for 24/25/28-line windows
0060                  (/dd/defs/cocovtio):00505         Gr.STYMk       RMB       1                   STY marker
0061                  (/dd/defs/cocovtio):00506         gr0061         RMB       1                   foreground RGB data
0062                  (/dd/defs/cocovtio):00507         gr0062         RMB       1                   background RGB data
0063                  (/dd/defs/cocovtio):00508         gr0063         RMB       1                   bytes/row (on current screen...not window)
0064                  (/dd/defs/cocovtio):00509         gr0064         RMB       2                   PSet vector
0066                  (/dd/defs/cocovtio):00510         gr0066         RMB       2                   pset offset
0068                  (/dd/defs/cocovtio):00511         gr0068         RMB       2                   LSet vector
006A                  (/dd/defs/cocovtio):00512         gr006A         RMB       2                   max X co-ordinate
006C                  (/dd/defs/cocovtio):00513         gr006C         RMB       2                   max Y co-ordinate
006E                  (/dd/defs/cocovtio):00514         gr006E         RMB       2                   X pixel count
0070                  (/dd/defs/cocovtio):00515         gr0070         RMB       2                   Y pixel count
0072                  (/dd/defs/cocovtio):00516         gr0072         RMB       2                   Screen address of pixel we are doing
0074                  (/dd/defs/cocovtio):00517         gr0074         RMB       1                   Pixel mask for pixel we are doing
0075                  (/dd/defs/cocovtio):00518         gr0075         RMB       2                   ??? Pixel mask for last byte of GP buffer?
0077                  (/dd/defs/cocovtio):00519         gr0077         RMB       2                   Vector for right direction FFill
0079                  (/dd/defs/cocovtio):00520         gr0079         RMB       1                   bit mask for 1st pixel in byte for right dir. FFill
007A                  (/dd/defs/cocovtio):00521         gr007A         RMB       2                   Vector for left direction FFill
007C                  (/dd/defs/cocovtio):00522         gr007C         RMB       1                   bit mask for last pixel in byte for left dir. FFill
007D                  (/dd/defs/cocovtio):00523         gr007D         RMB       1                   buffer block #
007E                  (/dd/defs/cocovtio):00524         gr007E         RMB       2                   buffer offset #
0080                  (/dd/defs/cocovtio):00525         gr0080         RMB       2                   Buffer length (in bytes)
0082                  (/dd/defs/cocovtio):00526         gr0082         RMB       3                   3 byte extended screen address
0085                  (/dd/defs/cocovtio):00527         gr0085         RMB       2                   temp
0087                  (/dd/defs/cocovtio):00528         gr0087         RMB       16                  grfdrv (sysmap 1) DAT image
0097                  (/dd/defs/cocovtio):00529         gr0097         RMB       1                   temp
0098                  (/dd/defs/cocovtio):00530         gr0098         RMB       1                   temp
                      (/dd/defs/cocovtio):00531         * In ARC, 97-98 is the width of the clip line in pixels (after scaling)
0099                  (/dd/defs/cocovtio):00532         gr0099         RMB       2                   temp
                      (/dd/defs/cocovtio):00533         * In ARC, 99-9A is the height of the clip line in pixels (after scaling)
009B                  (/dd/defs/cocovtio):00534         gr009B         RMB       1                   counter temp
009C                  (/dd/defs/cocovtio):00535         gr009C         RMB       1
009D                  (/dd/defs/cocovtio):00536         gr009D         RMB       2                   offset to buffer in block
009F                  (/dd/defs/cocovtio):00537         gr009F         RMB       1
00A0                  (/dd/defs/cocovtio):00538         gr00A0         RMB       1                   # lines left to do of GP buffer onto screen
00A1                  (/dd/defs/cocovtio):00539         gr00A1         RMB       2                   vector routine for (changes lots)
                      (/dd/defs/cocovtio):00540         * In ARC A1-A2 is the vector to the proper clipping routine
00A3                  (/dd/defs/cocovtio):00541         gr00A3         RMB       2                   Vector for shifting GP buffers
00A5                  (/dd/defs/cocovtio):00542         gr00A5         RMB       2                   Vector for shifting GP buffers (can dupe A1)
00A7                  (/dd/defs/cocovtio):00543         gr00A7         RMB       2
00A9                  (/dd/defs/cocovtio):00544         gr00A9         RMB       2                   NEW: Window tbl ptr for last window GRFDRV used
00AB                  (/dd/defs/cocovtio):00545         grBigFnt       RMB       2                   Flag for 224 char font/gfx mode on (0=No) V2.00a
00AD                  (/dd/defs/cocovtio):00546         gr00AD         RMB       2                   FFill:orig. start X coord|Circ/Ell saved start X
00AF                  (/dd/defs/cocovtio):00547         gr00AF         RMB       2                   FFill:orig. start Y coord|Circ/Ell saved end X
00B1                  (/dd/defs/cocovtio):00548         gr00B1         RMB       1                   Flag in FFill: 1=1st time through, 0=not 1st time
00B2                  (/dd/defs/cocovtio):00549         gr00B2         RMB       1                   Filled (circle,ellipse) flag 0=Not filled
                      (/dd/defs/cocovtio):00550         *gr00B3   rmb    256-.       ??? UNUSED
00B3                  (/dd/defs/cocovtio):00551         gr00B3         RMB       1                   temp veriable grfdrv
00B4                  (/dd/defs/cocovtio):00552         gr00B4         RMB       1                   temp veriable grfdrv
00B5                  (/dd/defs/cocovtio):00553         gr00B5         RMB       1                   regW for grfdrv
00B6                  (/dd/defs/cocovtio):00554         gr00B6         RMB       1
00B7                  (/dd/defs/cocovtio):00555         gr00B7         RMB       2
00B9                  (/dd/defs/cocovtio):00556         gr00B9         RMB       2                   previously used in grfdrv at $B2 but not for Filled Flag
00BB                  (/dd/defs/cocovtio):00557         gr00BB         RMB       2                   previously used in grfdrv at $B4
00BD                  (/dd/defs/cocovtio):00558         gr00BD         RMB       2                   previously used in grfdrv at $B6
                      (/dd/defs/cocovtio):00559         * EOU Beta 2 & up
00BF                  (/dd/defs/cocovtio):00560         grScrtch       RMB       2                   Scratch var for Grfdrv - use DP instead of stack for
                      (/dd/defs/cocovtio):00561         *                                            anything that does immediate calculations
00C1                  (/dd/defs/cocovtio):00562         gr00BF         RMB       256-.               Reserved for future use
                      (/dd/defs/cocovtio):00563         
                      (/dd/defs/cocovtio):00564         * GPLoad buffer - $1200 in system block    . Currently ends at $1247, and $1248-$127f is unused
     1200             (/dd/defs/cocovtio):00565         GPBuf          EQU       $1200               Usefull address (start of GP buffer copy memory)
0100                  (/dd/defs/cocovtio):00566         GPBufSz        RMB       gb0000              common move buffer for gpload/get/put (72 bytes default)
                      (/dd/defs/cocovtio):00567         
                      (/dd/defs/cocovtio):00568         *****************************************************************************
                      (/dd/defs/cocovtio):00569         * Window table entry structure
                      (/dd/defs/cocovtio):00570         * These tables sit in system block 0 and there is 1 for every window init'd
                      (/dd/defs/cocovtio):00571         * including any overlay windows.
     0020             (/dd/defs/cocovtio):00572         MaxWind        EQU       32                  maximum allowable window tables
     1290             (/dd/defs/cocovtio):00573         WinBase        EQU       $1290               base address to start of window tables
                      (/dd/defs/cocovtio):00574                        ORG       -$10
FFF0                  (/dd/defs/cocovtio):00575         Wt.STbl        RMB       2                   Screen table pointer ($FFFF=Not used)       -$10
FFF2                  (/dd/defs/cocovtio):00576         Wt.BLnk        RMB       1                   overlay window parent entry # ($FF=base)    -$0E
FFF3                  (/dd/defs/cocovtio):00577         Wt.LStrt       RMB       2                   screen logical start address                -$0D
FFF5                  (/dd/defs/cocovtio):00578         Wt.CPX         RMB       1                   current X coord. start                      -$0B
FFF6                  (/dd/defs/cocovtio):00579         Wt.CPY         RMB       1                   current Y coord. start                      -$0A
FFF7                  (/dd/defs/cocovtio):00580         Wt.SZX         RMB       1                   current X size (CWArea)                     -$09
FFF8                  (/dd/defs/cocovtio):00581         Wt.SZY         RMB       1                   current Y size (CWArea)                     -$08
FFF9                  (/dd/defs/cocovtio):00582         Wt.SXFct       RMB       1                   X scaling factor                            -$07
FFFA                  (/dd/defs/cocovtio):00583         Wt.SYFct       RMB       1                   Y scaling factor (0=no scaling)             -$06
FFFB                  (/dd/defs/cocovtio):00584         Wt.Cur         RMB       2                   cursor physical address on screen           -$05
FFFD                  (/dd/defs/cocovtio):00585         Wt.FMsk        RMB       1                   font bit mask (based from left)             -$03
FFFE                  (/dd/defs/cocovtio):00586         Wt.CurX        RMB       2                   X coord of cursor                           -$02
0000                  (/dd/defs/cocovtio):00587         Wt.CurY        RMB       2                   Y Coord of cursor                            $00
0002                  (/dd/defs/cocovtio):00588         Wt.XBCnt       RMB       1                   width of window (in bytes)                   $02
0003                  (/dd/defs/cocovtio):00589         Wt.CWTmp       RMB       1                   bytes wide each text chr (1,2,4)             $03
0004                  (/dd/defs/cocovtio):00590         Wt.BRow        RMB       2                   bytes/text row (8x width in gfx)             $04
0006                  (/dd/defs/cocovtio):00591         Wt.Fore        RMB       1                   foreground palette #                         $06
0007                  (/dd/defs/cocovtio):00592         Wt.Back        RMB       1                   background palette #                         $07
0008                  (/dd/defs/cocovtio):00593         Wt.Attr        RMB       1                   default attributes (FUTTTBBB)                $08
0009                  (/dd/defs/cocovtio):00594         Wt.BSW         RMB       1                   character BSW switches                       $09
000A                  (/dd/defs/cocovtio):00595         Wt.LSet        RMB       1                   LSet type                                    $0A
000B                  (/dd/defs/cocovtio):00596         Wt.FBlk        RMB       1                   Font memory block #                          $0B
000C                  (/dd/defs/cocovtio):00597         Wt.FOff        RMB       2                   Font offset in block                         $0C
000E                  (/dd/defs/cocovtio):00598         Wt.PBlk        RMB       1                   PSet memory block #                          $0E
000F                  (/dd/defs/cocovtio):00599         Wt.POff        RMB       2                   PSet offset in block                         $0F
0011                  (/dd/defs/cocovtio):00600         Wt.OBlk        RMB       1                   Overlay memory block #                       $11
0012                  (/dd/defs/cocovtio):00601         Wt.OOff        RMB       2                   Overlay offset in block                      $12
0014                  (/dd/defs/cocovtio):00602         Wt.LVec        RMB       2                   LSet vector                                  $14
0016                  (/dd/defs/cocovtio):00603         Wt.PVec        RMB       2                   PSet vector                                  $16
0018                  (/dd/defs/cocovtio):00604         Wt.GBlk        RMB       1                   GCursor memory block #                       $18
0019                  (/dd/defs/cocovtio):00605         Wt.GOff        RMB       2                   GCursor offset in block                      $19
001B                  (/dd/defs/cocovtio):00606         Wt.MaxX        RMB       2                   Maximum X cord. (0-79,0-639)                 $1B
001D                  (/dd/defs/cocovtio):00607         Wt.MaxY        RMB       2                   Maximum Y cord. (0-24/25,0-191/199)          $1D
001F                  (/dd/defs/cocovtio):00608         Wt.BLen        RMB       2                   bytes left in GPLoad block below             $1F
0021                  (/dd/defs/cocovtio):00609         Wt.NBlk        RMB       1                   memory block # for next GPLoad               $21
0022                  (/dd/defs/cocovtio):00610         Wt.NOff        RMB       2                   Offset in block for next GPLoad              $22
0024                  (/dd/defs/cocovtio):00611         Wt.LStDf       RMB       2                   screen logical start default                 $24
                      (/dd/defs/cocovtio):00612         * NOTE: The following default settings are what the window was initialized
                      (/dd/defs/cocovtio):00613         *       with, and thus are the MAXIMUM start/size the window can handle
                      (/dd/defs/cocovtio):00614         *       until it is restarted (DWEnd & DWSet)
                      (/dd/defs/cocovtio):00615         *       They also appear to be used in WindInt to determine the coords &
                      (/dd/defs/cocovtio):00616         *       sizes for control+content regions
0026                  (/dd/defs/cocovtio):00617         Wt.DfCPX       RMB       1                   default X cord. start                        $26
0027                  (/dd/defs/cocovtio):00618         Wt.DfCPY       RMB       1                   default Y cord. start                        $27
0028                  (/dd/defs/cocovtio):00619         Wt.DfSZX       RMB       1                   default X size                               $28
0029                  (/dd/defs/cocovtio):00620         Wt.DfSZY       RMB       1                   default Y size                               $29
002A                  (/dd/defs/cocovtio):00621         Wt.Res         RMB       6                   unused                                   $2A-$2F
     0040             (/dd/defs/cocovtio):00622         Wt.Siz         EQU       .+$10
                      (/dd/defs/cocovtio):00623         
                      (/dd/defs/cocovtio):00624         *****************************************************************************
                      (/dd/defs/cocovtio):00625         * Screen table entrys
                      (/dd/defs/cocovtio):00626         * These tables sit in system block 0 base=$1A80
                      (/dd/defs/cocovtio):00627         
     0010             (/dd/defs/cocovtio):00628         STblMax        EQU       16                  Maximum number of screen tables
     1A80             (/dd/defs/cocovtio):00629         STblBse        EQU       $1A80               base address of screen tables
                      (/dd/defs/cocovtio):00630                        ORG       0
0000                  (/dd/defs/cocovtio):00631         St.Sty         RMB       1                   Screen type                         $00
0001                  (/dd/defs/cocovtio):00632         St.SBlk        RMB       1                   Ram block start #                   $01
0002                  (/dd/defs/cocovtio):00633         St.LStrt       RMB       2                   Screen logical start (for GIME)     $02
0004                  (/dd/defs/cocovtio):00634         St.BRow        RMB       1                   Bytes per row                       $04
0005                  (/dd/defs/cocovtio):00635         St.Brdr        RMB       1                   Border palette register #           $05
0006                  (/dd/defs/cocovtio):00636         St.Fore        RMB       1                   Foreground palette register #       $06
0007                  (/dd/defs/cocovtio):00637         St.Back        RMB       1                   Background palette register #       $07
0008                  (/dd/defs/cocovtio):00638         St.ScSiz       RMB       1                   screen size: 24..28 lines           $08
0009                  (/dd/defs/cocovtio):00639         St.Res         RMB       7                   UNUSED???                           $09
                      (/dd/defs/cocovtio):00640         * NOTE: SHOULD USE ONE OF THESE UNUSED BYTES TO KEEP THE # OF DEVICE WINDOW
                      (/dd/defs/cocovtio):00641         * TABLES THAT ARE USING THIS SCREEN TABLE. DWSET & DWEND WOULD KEEP TRACK OF
                      (/dd/defs/cocovtio):00642         * THESE, AND THE WINDINT TITLE BAR ROUTINE WOULD CHECK IT. IF IT IS ONLY 1,
                      (/dd/defs/cocovtio):00643         * IT WON'T BOTHER CHANGING THE TITLE BAR WHEN SELECTING WINDOWS
                      (/dd/defs/cocovtio):00644         * Other possibilities: Offset into screen to display (if we enable screens taller than
                      (/dd/defs/cocovtio):00645         *   a single screen), etc.
0010                  (/dd/defs/cocovtio):00646         St.Pals        RMB       16                  Palette register contents           $10
     0020             (/dd/defs/cocovtio):00647         St.Siz         EQU       .
                      (/dd/defs/cocovtio):00648         
                      (/dd/defs/cocovtio):00649         *****************************************************************************
                      (/dd/defs/cocovtio):00650         * Graphics buffer tables
                      (/dd/defs/cocovtio):00651         * They contain a 20 byte header (shown below), followed by the raw pixel
                      (/dd/defs/cocovtio):00652         * data.
                      (/dd/defs/cocovtio):00653                        ORG       0
0000                  (/dd/defs/cocovtio):00654         Grf.Bck        RMB       1                   back block link #                   $00
0001                  (/dd/defs/cocovtio):00655         Grf.Off        RMB       2                   back block header offset            $01
0003                  (/dd/defs/cocovtio):00656         Grf.Grp        RMB       1                   group #                             $03
0004                  (/dd/defs/cocovtio):00657         Grf.Buff       RMB       1                   buffer #                            $04
0005                  (/dd/defs/cocovtio):00658         Grf.BSz        RMB       2                   buffer size (not including header)  $05
0007                  (/dd/defs/cocovtio):00659         Grf.XSz        RMB       2                   X size (in pixels)                  $07
0009                  (/dd/defs/cocovtio):00660         Grf.YSz        RMB       2                   Y size (in pixels/bytes)            $09
000B                  (/dd/defs/cocovtio):00661         Grf.XBSz       RMB       1                   X size in bytes                     $0B
000C                  (/dd/defs/cocovtio):00662         Grf.LfPx       RMB       1                   # pixels used in first byte of line $0C
000D                  (/dd/defs/cocovtio):00663         Grf.RtPx       RMB       1                   # pixels used in last byte of line  $0D
000E                  (/dd/defs/cocovtio):00664         Grf.STY        RMB       1                   Screen type buffer intended for     $0E
000F                  (/dd/defs/cocovtio):00665         Grf.NBlk       RMB       1                   number blocks used                  $0F
0010                  (/dd/defs/cocovtio):00666         Grf.Pal        RMB       16                  Copy of palette registers?          $10
     0020             (/dd/defs/cocovtio):00667         Grf.Siz        EQU       .                   $20
                      (/dd/defs/cocovtio):00668         
                      (/dd/defs/cocovtio):00669         *****************************************************************************
                      (/dd/defs/cocovtio):00670         * GFX tables (1 for each window, 18 ($12) bytes each) pointed to by
                      (/dd/defs/cocovtio):00671         * $1075-$0176
                      (/dd/defs/cocovtio):00672         * GRFINT only uses gt0001-gt0004, the rest is exclusive to WINDINT
                      (/dd/defs/cocovtio):00673                        ORG       0
0000                  (/dd/defs/cocovtio):00674         Gt.WTyp        RMB       1                   WindInt window type (Framed, Scroll Bar, etc.) $00
0001                  (/dd/defs/cocovtio):00675         Gt.GXCur       RMB       2                   X coord of graphics cursor                     $01
0003                  (/dd/defs/cocovtio):00676         Gt.GYCur       RMB       2                   Y coord of graphics cursor                     $03
0005                  (/dd/defs/cocovtio):00677         Gt.DPtr        RMB       2                   Ptr to WindInt window descriptor               $05
0007                  (/dd/defs/cocovtio):00678         Gt.FClr        RMB       1                   Foreground color                               $07
0008                  (/dd/defs/cocovtio):00679         Gt.BClr        RMB       1                   Background color                               $08
0009                  (/dd/defs/cocovtio):00680         Gt.FMsk        RMB       1                   Foreground mask                                $09
000A                  (/dd/defs/cocovtio):00681         Gt.BMsk        RMB       1                   Background mask                                $0A
000B                  (/dd/defs/cocovtio):00682         Gt.GBlk        RMB       1                   Block # of graphics cursor                     $0B
000C                  (/dd/defs/cocovtio):00683         Gt.GOff        RMB       2                   Offset into block of graphics cursor           $0C
000E                  (/dd/defs/cocovtio):00684         Gt.Proc        RMB       1                   Process # of window creator                    $0E
000F                  (/dd/defs/cocovtio):00685         Gt.PBlk        RMB       1                   Process descriptor block # of creator          $0F
0010                  (/dd/defs/cocovtio):00686         Gt.Res         RMB       2                   ??? RESERVED ???                               $10
     0012             (/dd/defs/cocovtio):00687         GTabSz         EQU       .
                      (/dd/defs/cocovtio):00688         
                      (/dd/defs/cocovtio):00689         *****************************************************************************
                      (/dd/defs/cocovtio):00690         * This table is located in the graphics table memory and is offset from
                      (/dd/defs/cocovtio):00691         * graphics table pointer stored at $1075-$1076. This is used exclusively by
                      (/dd/defs/cocovtio):00692         * WindInt.
                      (/dd/defs/cocovtio):00693         * NOTE: USING UNUSED BYTES IN CC3 GLOBAL MEM, SET UP SEPARATE PTRS FOR EACH
                      (/dd/defs/cocovtio):00694         *  OF THE BELOW SO WE CAN SPEED UP ACCESS BY NOT HAVING TO DO A LOAD/LEAx
                      (/dd/defs/cocovtio):00695         *  COMBINATION EVERY TIME
                      (/dd/defs/cocovtio):00696                        ORG       $0240
0240                  (/dd/defs/cocovtio):00697                        RMB       WN.SIZ              copy of last accessed window descriptor
0262                  (/dd/defs/cocovtio):00698                        RMB       MN.SIZ              copy of last accessed menu descriptor
0279                  (/dd/defs/cocovtio):00699                        RMB       MI.SIZ              copy of last accessed item descriptor
028E                  (/dd/defs/cocovtio):00700                        RMB       65                  menu handling table (16 entrys of 4 bytes)
                      (/dd/defs/cocovtio):00701         
                      (/dd/defs/cocovtio):00702         *****************************************************************************
                      (/dd/defs/cocovtio):00703         * WindInt menu handling table entry definition
                      (/dd/defs/cocovtio):00704                        ORG       0
0000                  (/dd/defs/cocovtio):00705         MnuXNum        RMB       1                   menu #
0001                  (/dd/defs/cocovtio):00706         MnuXStrt       RMB       1                   X start text co-ordinate
0002                  (/dd/defs/cocovtio):00707         MnuXEnd        RMB       1                   X end text co-ordinate
0003                  (/dd/defs/cocovtio):00708                        RMB       1                   unused?
     0004             (/dd/defs/cocovtio):00709         MnuHSiz        EQU       .
                      (/dd/defs/cocovtio):00710         
                      (/dd/defs/cocovtio):00711         *****************************************************************************
                      (/dd/defs/cocovtio):00712         * Character binary switches
     0080             (/dd/defs/cocovtio):00713         Blink          EQU       %10000000           Blink characters (hardware text only)
     0080             (/dd/defs/cocovtio):00714         TChr           EQU       %10000000           transparent characters (both currently)
     0040             (/dd/defs/cocovtio):00715         Under          EQU       %01000000           underline characters (both)
     0020             (/dd/defs/cocovtio):00716         Bold           EQU       %00100000           bold characters (gfx only, maybe txt with color changes?)
     0010             (/dd/defs/cocovtio):00717         Prop           EQU       %00010000           proportional spacing of characters (gfx only)
     0008             (/dd/defs/cocovtio):00718         Scale          EQU       %00001000           automatic window scaling (gfx only)
     0004             (/dd/defs/cocovtio):00719         Invers         EQU       %00000100           inverse characters (both)
     0002             (/dd/defs/cocovtio):00720         NoCurs         EQU       %00000010           no cursor display (both)
     0001             (/dd/defs/cocovtio):00721         Protect        EQU       %00000001           device window protection (both)
                      (/dd/defs/cocovtio):00722         
                      (/dd/defs/cocovtio):00723         *****************************************************************************
                      (/dd/defs/cocovtio):00724         * Screen types (high bit set=hardware text, else graphics) in GRFDRV
     00FF             (/dd/defs/cocovtio):00725         Current        EQU       $ff                 Current screen
                      (/dd/defs/cocovtio):00726         *         equ   1          640x200x2
                      (/dd/defs/cocovtio):00727         *         equ   2          320x200x4
                      (/dd/defs/cocovtio):00728         *         equ   3          640x200x4
                      (/dd/defs/cocovtio):00729         *         equ   4          320x200x16
                      (/dd/defs/cocovtio):00730         *         equ   $85        80 column text
                      (/dd/defs/cocovtio):00731         *         equ   $86        40 column text
                      (/dd/defs/cocovtio):00732         
                      (/dd/defs/cocovtio):00733         *************************************
                      (/dd/defs/cocovtio):00734         * Window default palette color codes
                      (/dd/defs/cocovtio):00735         *
                      (/dd/defs/cocovtio):00736                        ORG       0
0000                  (/dd/defs/cocovtio):00737         White.         RMB       1
0001                  (/dd/defs/cocovtio):00738         Blue.          RMB       1
0002                  (/dd/defs/cocovtio):00739         Black.         RMB       1
0003                  (/dd/defs/cocovtio):00740         Green.         RMB       1
0004                  (/dd/defs/cocovtio):00741         Red.           RMB       1
0005                  (/dd/defs/cocovtio):00742         Yellow.        RMB       1
0006                  (/dd/defs/cocovtio):00743         Magenta.       RMB       1
0007                  (/dd/defs/cocovtio):00744         Cyan.          RMB       1
                      (/dd/defs/cocovtio):00745         
                      (         defsfile):00007                  use   /dd/defs/cocosdc.d
                      (/dd/defs/cocosdc.):00001         ********************************************************************
                      (/dd/defs/cocosdc.):00002         * cocosdc.d - CoCo SDC definitions
                      (/dd/defs/cocosdc.):00003         *
                      (/dd/defs/cocosdc.):00004         * $Id$
                      (/dd/defs/cocosdc.):00005         *
                      (/dd/defs/cocosdc.):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (/dd/defs/cocosdc.):00007         * Comment
                      (/dd/defs/cocosdc.):00008         * ------------------------------------------------------------------
                      (/dd/defs/cocosdc.):00009         *          2014/05/02  Boisy G. Pitre
                      (/dd/defs/cocosdc.):00010         * Created
                      (/dd/defs/cocosdc.):00011         
                      (/dd/defs/cocosdc.):00012         
     FF4A             (/dd/defs/cocosdc.):00013         SDAddr         SET       $FF4A
                      (/dd/defs/cocosdc.):00014         
                      (         defsfile):00008                  endc
                      (/dd/sourcecode/as):00024                  endc            
                      (/dd/sourcecode/as):00025         
     0021             (/dd/sourcecode/as):00026         tylg     set   Sbrtn+Objct
     0080             (/dd/sourcecode/as):00027         atrv     set   ReEnt+rev
     0000             (/dd/sourcecode/as):00028         rev      set   $00
     0001             (/dd/sourcecode/as):00029         edition  set   1
                      (/dd/sourcecode/as):00030         
     FF50             (/dd/sourcecode/as):00031         RTC.Base equ   $FF50
                      (/dd/sourcecode/as):00032         
                      (/dd/sourcecode/as):00033         
0000 87CD0076000D2180 (/dd/sourcecode/as):00034                  mod   eom,name,tylg,atrv,JmpTable,RTC.Base
     6F0014FF50
                      (/dd/sourcecode/as):00035         
000D 436C6F636BB2     (/dd/sourcecode/as):00036         name     fcs   "Clock2"
0013 01               (/dd/sourcecode/as):00037                  fcb   edition
                      (/dd/sourcecode/as):00038         
0014                  (/dd/sourcecode/as):00039         JmpTable                 
0014 39               (/dd/sourcecode/as):00040                  rts
0015 12               (/dd/sourcecode/as):00041                  nop             
0016 12               (/dd/sourcecode/as):00042                  nop             
0017 2002             (/dd/sourcecode/as):00043                  bra   GetTime   
0019 12               (/dd/sourcecode/as):00044                  nop             
001A 39               (/dd/sourcecode/as):00045                  rts
                      (/dd/sourcecode/as):00046         
                      (/dd/sourcecode/as):00047         
                      (/dd/sourcecode/as):00048         * MESS time update in Disto mode (ignores MPI)
                      (/dd/sourcecode/as):00049         *   Assumes that PC clock is in AM/PM mode!!!
001B 8EFF50           (/dd/sourcecode/as):00050         GetTime  ldx   #RTC.Base
001E 108E0028         (/dd/sourcecode/as):00051                  ldy   #D.Time
0022 C60C             (/dd/sourcecode/as):00052                  ldb   #12           counter for data
0024 E701             (/dd/sourcecode/as):00053                  stb   1,x
0026 A684             (/dd/sourcecode/as):00054                  lda   ,x
0028 8407             (/dd/sourcecode/as):00055                  anda  #7
                      (/dd/sourcecode/as):00056                  IFNE  Level-1
002A 9734             (/dd/sourcecode/as):00057                  sta   <D.Daywk
                      (/dd/sourcecode/as):00058                  ENDC
002C 5A               (/dd/sourcecode/as):00059                  decb
002D 8D28             (/dd/sourcecode/as):00060                  bsr   getval
002F A63F             (/dd/sourcecode/as):00061                  lda   -1,y
0031 8146             (/dd/sourcecode/as):00062                  cmpa  #70          if >xx70 then its 19xx
0033 2204             (/dd/sourcecode/as):00063                  bhi   not20
0035 8B64             (/dd/sourcecode/as):00064                  adda  #100
0037 A73F             (/dd/sourcecode/as):00065                  sta   -1,y
0039 8D1C             (/dd/sourcecode/as):00066         not20    bsr   getval       month
003B 8D1A             (/dd/sourcecode/as):00067                  bsr   getval       day
003D 8607             (/dd/sourcecode/as):00068                  lda   #7           AM/PM mask
003F E701             (/dd/sourcecode/as):00069                  stb   1,x
0041 A484             (/dd/sourcecode/as):00070                  anda  ,x
0043 8504             (/dd/sourcecode/as):00071                  bita  #4
0045 3401             (/dd/sourcecode/as):00072                  pshs  cc
0047 8403             (/dd/sourcecode/as):00073                  anda  #3
0049 8D12             (/dd/sourcecode/as):00074                  bsr   getval1
004B 3501             (/dd/sourcecode/as):00075                  puls  cc
004D 2706             (/dd/sourcecode/as):00076                  beq   AM
004F 860C             (/dd/sourcecode/as):00077                  lda   #12         convert to 24hr time as it is PM
0051 AB3F             (/dd/sourcecode/as):00078                  adda  -1,y
0053 A73F             (/dd/sourcecode/as):00079                  sta   -1,y
0055 8D00             (/dd/sourcecode/as):00080         AM       bsr   getval      minute
                      (/dd/sourcecode/as):00081         * and now fall through into get second
0057 860F             (/dd/sourcecode/as):00082         getval   lda   #$0f
0059 E701             (/dd/sourcecode/as):00083                  stb   1,x
005B A484             (/dd/sourcecode/as):00084                  anda  ,x
005D 5A               (/dd/sourcecode/as):00085         getval1  decb
005E 3404             (/dd/sourcecode/as):00086                  pshs  b
0060 C60A             (/dd/sourcecode/as):00087                  ldb   #10
0062 3D               (/dd/sourcecode/as):00088                  mul
0063 E7A4             (/dd/sourcecode/as):00089                  stb   ,y
0065 3504             (/dd/sourcecode/as):00090                  puls  b
0067 E701             (/dd/sourcecode/as):00091                  stb   1,x
0069 5A               (/dd/sourcecode/as):00092                  decb
006A A684             (/dd/sourcecode/as):00093                  lda   ,x
006C 840F             (/dd/sourcecode/as):00094                  anda  #$0f
006E ABA4             (/dd/sourcecode/as):00095                  adda  ,y
0070 A7A0             (/dd/sourcecode/as):00096                  sta   ,y+
0072 39               (/dd/sourcecode/as):00097                  rts
                      (/dd/sourcecode/as):00098         
0073 6CF198           (/dd/sourcecode/as):00099                  emod            
     0076             (/dd/sourcecode/as):00100         eom      equ   *         
                      (/dd/sourcecode/as):00101                  end             
