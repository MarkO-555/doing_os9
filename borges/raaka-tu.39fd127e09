                      (      raakatu.asm):00001         ;##$CPU 6809
                      (      raakatu.asm):00002         ;##$OriginalBinary raakatu.bin
                      (      raakatu.asm):00003         
                      (      raakatu.asm):00004         ;##-
                      (      raakatu.asm):00005         ;##- Menu structure for CodeToWeb HTML generator
                      (      raakatu.asm):00006         ;##-
                      (      raakatu.asm):00007         ;##Menu     3                 "Engine"
                      (      raakatu.asm):00008         ;##MenuLink Start                    "Program Entry"
                      (      raakatu.asm):00009         ;##MenuLink GetKey                   "Get a Key"
                      (      raakatu.asm):00010         ;##MenuLink DecodeBuffer             "Decode Input Buffer"
                      (      raakatu.asm):00011         ;##MenuLink DecodeWord               "Decode Single Word"
                      (      raakatu.asm):00012         ;##MenuLink InputWordTables          "GAME VOCABULARY"
                      (      raakatu.asm):00013         ;##MenuLink RAM                      "RAM Usage"
                      (      raakatu.asm):00014         ;##MenuLink PrintPackedMessage       "Print Packed Message"
                      (      raakatu.asm):00015         ;##MenuLink PrintCharacterAutoWrap   "Print Character (with auto-wrap)"
                      (      raakatu.asm):00016         ;##MenuLink UnpackBytes              "Unpack 2 bytes into 3 characters"
                      (      raakatu.asm):00017         ;##MenuLink FeedbackPrompts          "Feedback Prompts"
                      (      raakatu.asm):00018         ;##MenuLink PhraseList               "List of phrase forms"
                      (      raakatu.asm):00019         ;##-
                      (      raakatu.asm):00020         ;##Menu     2                    "Virtual Machine"
                      (      raakatu.asm):00021         ;##MenuLink ProcessCommand             "Process a Direct or Common Command"
                      (      raakatu.asm):00022         ;##MenuLink CommandJumpTable           "VM Command Jump Table"
                      (      raakatu.asm):00023         ;##MenuLink RoomDescriptions           "Information for each room"
                      (      raakatu.asm):00024         ;##MenuLink ObjectData                 "Object data"
                      (      raakatu.asm):00025         ;##MenuLink GeneralCommands            "General command handling"
                      (      raakatu.asm):00026         ;##MenuLink HelperCommands             "List of helper commands each with an ID" 
                      (      raakatu.asm):00027         ;##-
                      (      raakatu.asm):00028         ;##Menu     1                   "Script Commands"
                      (      raakatu.asm):00029         ;##MenuLink Com00_MoveActiveObjectToRoomAndLook         "00: Move active object to room and print room description"
                      (      raakatu.asm):00030         ;##MenuLink Com01_IsObjectInPackOrRoom                  "01: Check if requested object is here (in pack or room)"
                      (      raakatu.asm):00031         ;##MenuLink Com02_CheckObjectIsOwnedByActive            "02: Check if object is owned by active object"
                      (      raakatu.asm):00032         ;##MenuLink Com03_IsObjectYAtX                          "03: Check if requested object at target location" 
                      (      raakatu.asm):00033         ;##MenuLink Com04_PrintSYSTEMOrPlayerMessage            "04: Print message if SYSTEM or Player"
                      (      raakatu.asm):00034         ;##MenuLink Com05_IsRandomLessOrEqual                   "05: If last random is less than or equal"
                      (      raakatu.asm):00035         ;##MenuLink Com06_Inventory                             "06: Print inventory"
                      (      raakatu.asm):00036         ;##MenuLink Com07_Look                                  "07: Print room description"
                      (      raakatu.asm):00037         ;##MenuLink Com08_CompareObjectToFirstNoun              "08: Compare object to first noun"
                      (      raakatu.asm):00038         ;##MenuLink Com09_CompareObjectToSecondNoun             "09: Command object to second noun"
                      (      raakatu.asm):00039         ;##MenuLink Com0A_CompareToPhraseForm                   "0A: Compare value to current phrase form"
                      (      raakatu.asm):00040         ;##MenuLink Com0B_Switch                                "0B: Switch-statement. Execute a script based on a compare function."
                      (      raakatu.asm):00041         ;##MenuLink Com0C_FAIL                                  "0C: FAIL"
                      (      raakatu.asm):00042         ;##MenuLink Com0D_ExecutePassingList                    "0D: Execute a list of commands as long as they succeed"
                      (      raakatu.asm):00043         ;##MenuLink Com0E_ExecuteFailingList                    "0E: Execute a list of commands as long as they fail"
                      (      raakatu.asm):00044         ;##MenuLink Com0F_PickUpObject                          "0F: Pick up object"
                      (      raakatu.asm):00045         ;##MenuLink Com10_DropObject                            "10: Drop object"
                      (      raakatu.asm):00046         ;##MenuLink Com11_Print1stNounShortName                 "11: Print 1st noun short name"
                      (      raakatu.asm):00047         ;##MenuLink Com12_Print2ndNounShortName                 "12: Print 2nd noun short name"
                      (      raakatu.asm):00048         ;##MenuLink Com13_PhraseWithRoom1st2nd                  "13: Process phrase with room, 2nd noun, then 1st noun"
                      (      raakatu.asm):00049         ;##MenuLink Com14_ExecuteCommandAndReverseReturn        "14: Execute a command and reverse the return"
                      (      raakatu.asm):00050         ;##MenuLink Com15_CheckObjBits                          "15: Check object bits"
                      (      raakatu.asm):00051         ;##MenuLink Com16_PrintVarShortName                     "16: Print var short name"
                      (      raakatu.asm):00052         ;##MenuLink Com17_MoveObjectXToLocationY                "17: Move object to new location"
                      (      raakatu.asm):00053         ;##MenuLink Com18_CheckVarOwnedByActiveObject           "18: Check var object owned by active object"
                      (      raakatu.asm):00054         ;##MenuLink Com19_MoveActiveObjectToRoom                "19: Move active object to room"
                      (      raakatu.asm):00055         ;##MenuLink Com1A_SetVarObjectTo1stNoun                 "1A: Set var object to first noun"
                      (      raakatu.asm):00056         ;##MenuLink Com1B_SetVarObjectTo2ndNoun                 "1B: Set var object to second noun"
                      (      raakatu.asm):00057         ;##MenuLink Com1C_SetVarObject                          "1C: Set var object"
                      (      raakatu.asm):00058         ;##MenuLink Com1D_AttackObject                          "1D: Attack object"
                      (      raakatu.asm):00059         ;##MenuLink Com1E_SwapObjects                           "1E: Swap objects"
                      (      raakatu.asm):00060         ;##MenuLink Com1F_PrintMessage                          "1F: Print message"
                      (      raakatu.asm):00061         ;##MenuLink Com20_CheckActiveObject                     "20: Check active object"
                      (      raakatu.asm):00062         ;##MenuLink Com21_RunGeneralWithTempPhrase              "21: Execute general script with temporary phrase and nouns"
                      (      raakatu.asm):00063         ;##MenuLink Com22_CompareHealthToValue                  "22: Compare health to value"
                      (      raakatu.asm):00064         ;##MenuLink Com23_HealVarObject                         "23: Heal var object"
                      (      raakatu.asm):00065         ;##MenuLink Com24_EndlessLoop                           "24: Endless loop"
                      (      raakatu.asm):00066         ;##MenuLink Com25_RestartGame                           "25: Restart game"
                      (      raakatu.asm):00067         ;##MenuLink Com26_PrintScore                            "26: Print score"
                      (      raakatu.asm):00068         ;##-
                      (      raakatu.asm):00069         
                      (      raakatu.asm):00070         ;##RAM
                      (      raakatu.asm):00071         
                      (      raakatu.asm):00072         ;##+0088..  printCursor           screen pointer used by BASIC
                      (      raakatu.asm):00073         ;
                      (      raakatu.asm):00074         ;##+01A7..  tmp1A7                used in decoding the input                   
                      (      raakatu.asm):00075         ;##+01A9    tmp1A9                used in comparing X to Y                     
                      (      raakatu.asm):00076         ;##+01AA    not1AA                never used
                      (      raakatu.asm):00077         ;##+01AB    tmp1AB                used in lots of places                       
                      (      raakatu.asm):00078         ;##+01AC    not1AC                never used
                      (      raakatu.asm):00079         ;##+01AD    tmp1AD                used in the phrase decoding                  
                      (      raakatu.asm):00080         ;##+01AE    not1AE                never used
                      (      raakatu.asm):00081         ;##+01AF    not1AF                never used
                      (      raakatu.asm):00082         ;##+01B0    not1B0                never used
                      (      raakatu.asm):00083         ;##+01B1    not1B1                never used
                      (      raakatu.asm):00084         ;##+01B2    tmp1B2                used in word decoding                        
                      (      raakatu.asm):00085         ;##+01B3    verbWord              input verb word number                       
                      (      raakatu.asm):00086         ;##+01B4    perpWord              preposition word number                      
                      (      raakatu.asm):00087         ;##+01B5    prepGiven             preposition given flag                       
                      (      raakatu.asm):00088         ;##+01B6    phrasePrep            used in phrase decoding                      
                      (      raakatu.asm):00089         ;##+01B7    adjWord               adjective word number                        
                      (      raakatu.asm):00090         ;##+01B8    commandTarg           target object of input command               
                      (      raakatu.asm):00091         ;##+01B9    not1B9                cleared before decode but never used        
                      (      raakatu.asm):00092         ;##+01BA    lsbAdj1               screen LSB of 1st adjective                  
                      (      raakatu.asm):00093         ;##+01BB    lsbVerb               screen LSB of verb                           
                      (      raakatu.asm):00094         ;##+01BC    lsbCursor             screen lsb used in decoding the input line   
                      (      raakatu.asm):00095         ;##+01BD    lsbError              screen lsb used for flashing error messages  
                      (      raakatu.asm):00096         ;##+01BE    lastChar              last character printed to screen             
                      (      raakatu.asm):00097         ;##+01BF      VAR_OBJ_NUMBER      variable object number                       
                      (      raakatu.asm):00098         ;##+01C0..    VAR_OBJ_DATA        variable object data                         
                      (      raakatu.asm):00099         ;##+01C2    not1C2                never used
                      (      raakatu.asm):00100         ;##+01C3      FIRST_NOUN_NUM      first input noun number                      
                      (      raakatu.asm):00101         ;##+01C4    firstNounAdj          first input noun adjective word number
                      (      raakatu.asm):00102         ;##+01C5    firstNounLSB          first input noun screen LSB                  
                      (      raakatu.asm):00103         ;##+01C6..    FIRST_NOUN_DATA     first input noun object data                
                      (      raakatu.asm):00104         ;##+01C8    firstNounParams       first input noun parameter bits             
                      (      raakatu.asm):00105         ;##+01C9      SECOND_NOUN_NUM     second input noun number                     
                      (      raakatu.asm):00106         ;##+01CA    secondNounAdj         second input noun adjective word number
                      (      raakatu.asm):00107         ;##+01CB    secondNounLSB         second input noun noun screen LSB           
                      (      raakatu.asm):00108         ;##+01CC..    SECOND_NOUN_DATA    second input noun object data                
                      (      raakatu.asm):00109         ;##+01CE    secondNounParams      second input noun parameter bits             
                      (      raakatu.asm):00110         ;##+01CF    tmp1CF                another screen pointer used in decode       
                      (      raakatu.asm):00111         ;##+01D0    tmp1DO                used in making index of data fields         
                      (      raakatu.asm):00112         ;##+01D1      PHRASE_FORM         decoded phrase form                          
                      (      raakatu.asm):00113         ;##+01D2      ACTIVE_OBJ_NUM      active object                                
                      (      raakatu.asm):00114         ;##+01D3..    ACTIVE_OBJ_DATA     active object data                          
                      (      raakatu.asm):00115         ;##+01D5      CUR_ROOM            current room number                         
                      (      raakatu.asm):00116         ;##+01D6..    CUR_ROOM_DATA       current room data                          
                      (      raakatu.asm):00117         ;##+01D8..  nextToken             used in decoding input                      
                      (      raakatu.asm):00118         ;##+01DA    tmp1DA                used in unpacking bytes                      
                      (      raakatu.asm):00119         ;##+01DB    tmp1DB                used in unpacking bytes                    
                      (      raakatu.asm):00120         ;##+01DC    tmp1DC                used in unpacking bytes                     
                      (      raakatu.asm):00121         ;##+01DD    tmp1DD                used in unpacking bytes                     
                      (      raakatu.asm):00122         ;##+01DE    tmp1DE                used in unpacking bytes                      
                      (      raakatu.asm):00123         ;##+01DF    tmp1DF                used in unpacking bytes                     
                      (      raakatu.asm):00124         ;##+01E0    tmp1EO                used in unpacking bytes                      
                      (      raakatu.asm):00125         ;##+01E1    tmp1E1                used in making index of data fields         
                      (      raakatu.asm):00126         ;##+01E2    tmp1E2                used in input processing                    
                      (      raakatu.asm):00127         ;##+01E3    tillMORE              rows left until MORE prompt (not used here)               
                      (      raakatu.asm):00128         ;
                      (      raakatu.asm):00129         ; $01E4     inputTokens           input token buffer
                      (      raakatu.asm):00130         ; $03FF     stack                 top of stack (just below screen memory)
                      (      raakatu.asm):00131         
                      (      raakatu.asm):00132                  nam   Raaka-Tu
                      (      raakatu.asm):00133                  ttl   program module       
                      (      raakatu.asm):00134         
                      (      raakatu.asm):00135         * Disassembled 2004/07/13 07:31:17 by Disasm v1.5 (C) 1988 by RML
                      (      raakatu.asm):00136         
                      (      raakatu.asm):00137                  ifp1
                      (      raakatu.asm):00138                  use   os9.d
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0018                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
0018                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
0018                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
0018                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
0018                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
0018                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
                      (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0018                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0018                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
0018                  (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0024                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0024                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0034                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0034                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0034                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0034                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0034                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
0034                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
0034                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
0034                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
0034                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
0034                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
0034                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0034                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0034                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0034                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0034                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0034                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0034                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0034                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0034                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0034                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0034                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
0034                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
0034                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
0034                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
0034                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
0034                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
0034                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0034                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0034                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0034                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0034                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0034                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0034                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0034                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0034                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
00B1                  (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
00B1                  (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
00B1                  (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
00B1                  (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
00B1                  (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
00B1                  (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
00B1                  (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
00B1                  (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
00B1                  (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
00B1                  (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
00B1                  (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
00B1                  (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
00B1                  (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
00B1                  (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
00B1                  (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
00B1                  (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
00B1                  (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0000                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0000                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0002                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0004             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0025                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0025                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0025                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
0025                  (            os9.d):00820         DefIOSiz       EQU       12
0025                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
0025                  (            os9.d):00824         P$ID           RMB       1                   Process ID
0025                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
0025                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
0025                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
0025                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
0025                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
0025                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
0025                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
0025                  (            os9.d):00832         P$User         RMB       2                   User Index $09
0025                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
0025                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
0025                  (            os9.d):00835         P$State        RMB       1                   Status $0D
0025                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
0025                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
0025                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
0025                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
0025                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
0025                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
0025                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
0025                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
0025                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
0025                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
0025                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
0025                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
0025                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
0025                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
0025                  (            os9.d):00855         SysState       EQU       %10000000
0025                  (            os9.d):00856         TimSleep       EQU       %01000000
0025                  (            os9.d):00857         TimOut         EQU       %00100000
0025                  (            os9.d):00858         ImgChg         EQU       %00010000
0025                  (            os9.d):00859         Condem         EQU       %00000010
0025                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
0009                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     0009             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     0009             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (      raakatu.asm):00139                  endc
                      (      raakatu.asm):00140         
     0011             (      raakatu.asm):00141         tylg     set   Prgrm+Objct   
     0080             (      raakatu.asm):00142         atrv     set   ReEnt+rev
     0000             (      raakatu.asm):00143         rev      set   $00
                      (      raakatu.asm):00144         
     C000             (      raakatu.asm):00145         topmod   equ   $C000
                      (      raakatu.asm):00146         
0000 87CD39FD000D1180 (      raakatu.asm):00147                  mod   eom,name,tylg,atrv,start,size
     ED001603FF
                      (      raakatu.asm):00148         
0000.                 (      raakatu.asm):00149                   rmb   $01A7
01A7.                 (      raakatu.asm):00150         u01A7 rmb 1 ..  tmp1A7                used in decoding the input                   
01A8.                 (      raakatu.asm):00151         u01A8 rmb 1 ..  tmp1A7                used in decoding the input                   
01A9.                 (      raakatu.asm):00152         u01A9 rmb 1    tmp1A9                used in comparing X to Y                     
01AA.                 (      raakatu.asm):00153         u01AA rmb 1    not1AA                never used
01AB.                 (      raakatu.asm):00154         u01AB rmb 1    tmp1AB                used in lots of places                       
01AC.                 (      raakatu.asm):00155         u01AC rmb 1    not1AC                never used
01AD.                 (      raakatu.asm):00156         u01AD rmb 1    tmp1AD                used in the phrase decoding                  
01AE.                 (      raakatu.asm):00157         u01AE rmb 1    not1AE                never used
01AF.                 (      raakatu.asm):00158         u01AF rmb 1    not1AF                never used
01B0.                 (      raakatu.asm):00159         u01B0 rmb 1    not1B0                never used
01B1.                 (      raakatu.asm):00160         u01B1 rmb 1    not1B1                never used
01B2.                 (      raakatu.asm):00161         u01B2 rmb 1    tmp1B2                used in word decoding                        
01B3.                 (      raakatu.asm):00162         u01B3 rmb 1    verbWord              input verb word number                       
01B4.                 (      raakatu.asm):00163         u01B4 rmb 1    perpWord              preposition word number                      
01B5.                 (      raakatu.asm):00164         u01B5 rmb 1    prepGiven             preposition given flag                       
01B6.                 (      raakatu.asm):00165         u01B6 rmb 1    phrasePrep            used in phrase decoding                      
01B7.                 (      raakatu.asm):00166         u01B7 rmb 1    adjWord               adjective word number                        
01B8.                 (      raakatu.asm):00167         u01B8 rmb 1    commandTarg           target object of input command               
01B9.                 (      raakatu.asm):00168         u01B9 rmb 1    not1B9                cleared before decode but never used        
01BA.                 (      raakatu.asm):00169         u01BA rmb 1    lsbAdj1               screen LSB of 1st adjective                  
01BB.                 (      raakatu.asm):00170         u01BB rmb 1    lsbVerb               screen LSB of verb                           
01BC.                 (      raakatu.asm):00171         u01BC rmb 1    lsbCursor             screen lsb used in decoding the input line   
01BD.                 (      raakatu.asm):00172         u01BD rmb 1    lsbError              screen lsb used for flashing error messages  
01BE.                 (      raakatu.asm):00173         u01BE rmb 1    lastChar              last character printed to screen             
01BF.                 (      raakatu.asm):00174         u01BF rmb 1      VAR_OBJ_NUMBER      variable object number                       
01C0.                 (      raakatu.asm):00175         u01C0 rmb 2 ..    VAR_OBJ_DATA        variable object data                         
01C2.                 (      raakatu.asm):00176         u01C2 rmb 1    not1C2                never used
01C3.                 (      raakatu.asm):00177         u01C3 rmb 1      FIRST_NOUN_NUM      first input noun number                      
01C4.                 (      raakatu.asm):00178         u01C4 rmb 1    firstNounAdj          first input noun adjective word number
01C5.                 (      raakatu.asm):00179         u01C5 rmb 1    firstNounLSB          first input noun screen LSB                  
01C6.                 (      raakatu.asm):00180         u01C6 rmb 2 ..    FIRST_NOUN_DATA     first input noun object data                
01C8.                 (      raakatu.asm):00181         u01C8 rmb 1    firstNounParams       first input noun parameter bits             
01C9.                 (      raakatu.asm):00182         u01C9 rmb 1      SECOND_NOUN_NUM     second input noun number                     
01CA.                 (      raakatu.asm):00183         u01CA rmb 1    secondNounAdj         second input noun adjective word number
01CB.                 (      raakatu.asm):00184         u01CB rmb 1    secondNounLSB         second input noun noun screen LSB           
01CC.                 (      raakatu.asm):00185         u01CC rmb 2 ..    SECOND_NOUN_DATA    second input noun object data                
01CE.                 (      raakatu.asm):00186         u01CE rmb 1    secondNounParams      second input noun parameter bits             
01CF.                 (      raakatu.asm):00187         u01CF rmb 1    tmp1CF                another screen pointer used in decode       
01D0.                 (      raakatu.asm):00188         u01D0 rmb 1    tmp1DO                used in making index of data fields         
01D1.                 (      raakatu.asm):00189         u01D1 rmb 1      PHRASE_FORM         decoded phrase form                          
01D2.                 (      raakatu.asm):00190         u01D2 rmb 1      ACTIVE_OBJ_NUM      active object                                
01D3.                 (      raakatu.asm):00191         u01D3 rmb 2 ..    ACTIVE_OBJ_DATA     active object data                          
01D5.                 (      raakatu.asm):00192         u01D5 rmb 1      CUR_ROOM            current room number                         
01D6.                 (      raakatu.asm):00193         u01D6 rmb 2 ..    CUR_ROOM_DATA       current room data                          
01D8.                 (      raakatu.asm):00194         u01D8 rmb 2 ..  nextToken             used in decoding input                      
01DA.                 (      raakatu.asm):00195         u01DA rmb 1    tmp1DA                used in unpacking bytes                      
01DB.                 (      raakatu.asm):00196         u01DB rmb 1    tmp1DB                used in unpacking bytes                    
01DC.                 (      raakatu.asm):00197         u01DC rmb 1    tmp1DC                used in unpacking bytes                     
01DD.                 (      raakatu.asm):00198         u01DD rmb 1    tmp1DD                used in unpacking bytes                     
01DE.                 (      raakatu.asm):00199         u01DE rmb 1    tmp1DE                used in unpacking bytes                      
01DF.                 (      raakatu.asm):00200         u01DF rmb 1    tmp1DF                used in unpacking bytes                     
01E0.                 (      raakatu.asm):00201         u01E0 rmb 1    tmp1EO                used in unpacking bytes                      
01E1.                 (      raakatu.asm):00202         u01E1 rmb 1    tmp1E1                used in making index of data fields         
01E2.                 (      raakatu.asm):00203         u01E2 rmb 1    tmp1E2                used in input processing                    
01E3.                 (      raakatu.asm):00204         u01E3 rmb 1    tillMORE              rows left until MORE prompt (not used here)               
                      (      raakatu.asm):00205         ;
01E4.                 (      raakatu.asm):00206         u01E4 rmb $21b     inputTokens           input token buffer
     03FF             (      raakatu.asm):00207         u03FF equ .    stack                 top of stack (just below screen memory)
     03FF             (      raakatu.asm):00208         size  equ      .
                      (      raakatu.asm):00209         
     000D             (      raakatu.asm):00210         name     equ   *
000D 5261616B612D54F5 (      raakatu.asm):00211                  fcs   /Raaka-Tu/
0015 00               (      raakatu.asm):00212                  fcb   $00 
                      (      raakatu.asm):00213         
                      (      raakatu.asm):00214         ;##Start
     0016             (      raakatu.asm):00215         start    equ   *
0016 4F               (      raakatu.asm):00216                        clra                          ; 256 word (512 bytes on screen)
0017 8E0400           (      raakatu.asm):00217                        ldx       #$0400              ; Start of screen
001A CE6060           (      raakatu.asm):00218                        ldu       #$6060              ; Space-space
001D EF81             (      raakatu.asm):00219         L0607          stu       ,X++                ; Clear ...
001F 4A               (      raakatu.asm):00220                        deca                          ; ... text ...
0020 26FB             (      raakatu.asm):00221                        bne       L0607               ; ... screen
0022 10CE03FF         (      raakatu.asm):00222         L060C          lds       #$03FF              ; Stack starts just below screen
0026 861D             (      raakatu.asm):00223                        lda       #$1D                ; Player object ...
0028 B701D2           (      raakatu.asm):00224                        sta       u01D2               ; ... is the active object number
002B 8E05E0           (      raakatu.asm):00225                        ldx       #$05E0              ; Set cursor to ...
002E BF0088           (      raakatu.asm):00226                        stx       >$88                ; ... bottom row of screen
0031 C696             (      raakatu.asm):00227                        ldb       #$96                ; Starting ...
0033 F701D5           (      raakatu.asm):00228                        stb       u01D5               ; ... room
0036 308D0F3E         (      raakatu.asm):00229                        leax      L1523,pc            ; Room descriptions
003A 170403           (      raakatu.asm):00230                        lbsr      L0A1F               ; Find room data
003D BF01D6           (      raakatu.asm):00231                        stx       u01D6               ; Store current room data
0040 17072A           (      raakatu.asm):00232                        lbsr      L0D4A               ; Print room description
0043 860D             (      raakatu.asm):00233                        lda       #$0D                ; Print ...
0045 170B6C           (      raakatu.asm):00234                        lbsr      L1184               ; ... CR
                      (      raakatu.asm):00235         
                      (      raakatu.asm):00236         ;##MainLoop
0048 10CE03FF         (      raakatu.asm):00237         L0630          lds       #$03FF              ; Initialize stack
004C 17049E           (      raakatu.asm):00238                        lbsr      L0ACC               ; Get user input
004F 7F01B7           (      raakatu.asm):00239         L0637          clr       u01B7               ; Adjective word number
0052 7F01BA           (      raakatu.asm):00240                        clr       u01BA               ; LSB of 1st adjective in buffer (not used)
0055 7F01BB           (      raakatu.asm):00241                        clr       u01BB               ; LSB of verb
0058 7F01B2           (      raakatu.asm):00242                        clr       u01B2               ; Misc
005B 7F01B3           (      raakatu.asm):00243                        clr       u01B3               ; Verb word number
005E 7F01B9           (      raakatu.asm):00244                        clr       u01B9               ; Never used again
0061 7F01B8           (      raakatu.asm):00245                        clr       u01B8               ; Target object of command (not used)
0064 7F01B4           (      raakatu.asm):00246                        clr       u01B4               ; Preposition number
0067 7F01B5           (      raakatu.asm):00247                        clr       u01B5               ; Preposition given flag (not 0 if given)
006A 7F01BF           (      raakatu.asm):00248                        clr       u01BF               ; VAR object number
006D 7F01C3           (      raakatu.asm):00249                        clr       u01C3               ; 1st noun word number
0070 7F01C9           (      raakatu.asm):00250                        clr       u01C9               ; 2nd noun word number
0073 C61D             (      raakatu.asm):00251                        ldb       #$1D                ; Player object ...
0075 F701D2           (      raakatu.asm):00252                        stb       u01D2               ; ... is active object
0078 170AE7           (      raakatu.asm):00253                        lbsr      L1133               ; Get player object data
007B BF01D3           (      raakatu.asm):00254                        stx       u01D3               ; Active object's data
007E 1703E2           (      raakatu.asm):00255                        lbsr      L0A42               ; Skip length
0081 E684             (      raakatu.asm):00256                        ldb       ,X                  ; Get player location
0083 F701D5           (      raakatu.asm):00257                        stb       u01D5               ; Current room
0086 308D0EEE         (      raakatu.asm):00258                        leax      L1523,pc            ; Room scripts
008A 1703B3           (      raakatu.asm):00259                        lbsr      L0A1F               ; Find sublist ... script for room
008D BF01D6           (      raakatu.asm):00260                        stx       u01D6               ; Script for current room
0090 8E01E3           (      raakatu.asm):00261                        ldx       #u01E3              ; Input token list area
0093 BF01D8           (      raakatu.asm):00262                        stx       u01D8               ; Where decoder fills in
0096 6F84             (      raakatu.asm):00263                        clr       ,X                  ; Empty token ... clear the list
0098 8E05E0           (      raakatu.asm):00264                        ldx       #$05E0              ; Bottom row is input buffer
009B 1704C4           (      raakatu.asm):00265         L0682          lbsr      L0B42               ; Decode input word
009E 270B             (      raakatu.asm):00266                        beq       L0692               ; All words done
00A0 A680             (      raakatu.asm):00267         L0687          lda       ,X+                 ; Next character
00A2 8160             (      raakatu.asm):00268                        cmpa      #$60                ; A space?
00A4 27F5             (      raakatu.asm):00269                        beq       L0682               ; Yes ... decode next
00A6 8C0600           (      raakatu.asm):00270                        cmpx      #$0600              ; End of input buffer?
00A9 26F5             (      raakatu.asm):00271                        bne       L0687               ; No ... look for next word
00AB 8C0600           (      raakatu.asm):00272         L0692          cmpx      #$0600              ; End of input buffer?
                      (      raakatu.asm):00273         
00AE 26EB             (      raakatu.asm):00274                        bne       L0682               ; No ... keep looking
00B0 6F9F01D8         (      raakatu.asm):00275                        clr       [u01D8]             ; Terminate token list
00B4 8E01E3           (      raakatu.asm):00276                        ldx       #u01E3              ; Input buffer
00B7 A684             (      raakatu.asm):00277                        lda       ,X                  ; List number of first word
00B9 10270093         (      raakatu.asm):00278                        lbeq      L0736               ; Nothing entered
00BD 8102             (      raakatu.asm):00279                        cmpa      #$02                ; First word a noun?
                      (      raakatu.asm):00280         
00BF 260F             (      raakatu.asm):00281                        bne       L06B7               ; No ... move on
00C1 3001             (      raakatu.asm):00282                        leax      1,X                 ; Point to word number
00C3 A684             (      raakatu.asm):00283                        lda       ,X                  ; Get word number
00C5 301F             (      raakatu.asm):00284                        leax      -1,X                ; Back to list number
00C7 8106             (      raakatu.asm):00285                        cmpa      #$06                ; Living things (people, dogs, etc) are <6
                      (      raakatu.asm):00286         
00C9 2405             (      raakatu.asm):00287                        bcc       L06B7               ; Not a living thing
00CB B701B8           (      raakatu.asm):00288                        sta       u01B8               ; Remember living thing. We are giving them a command so process normally
00CE 3003             (      raakatu.asm):00289                        leax      3,X                 ; Next word
                      (      raakatu.asm):00290         
00D0 A680             (      raakatu.asm):00291         L06B7          lda       ,X+                 ; Word list
                      (      raakatu.asm):00292         
00D2 277C             (      raakatu.asm):00293                        beq       L0736               ; End of list ... go process
00D4 E684             (      raakatu.asm):00294                        ldb       ,X                  ; Word number to B
00D6 EE81             (      raakatu.asm):00295                        ldu       ,X++                ; LSB to LSB of U
00D8 3410             (      raakatu.asm):00296                        pshs      X                   ; Hold token buffer
00DA 4A               (      raakatu.asm):00297                        deca                          ; List 1? Verbs?
                      (      raakatu.asm):00298         
00DB 2622             (      raakatu.asm):00299                        bne       L06E5               ; No ... continue
                      (      raakatu.asm):00300         
                      (      raakatu.asm):00301         ; I believe the goal here was to allow multiple verbs given on an input line
                      (      raakatu.asm):00302         ; to be translated to a single verb. The code finds a replacement list for the
                      (      raakatu.asm):00303         ; newly given verb and then runs the list two bytes at a time comparing one
                      (      raakatu.asm):00304         ; of the entries to the last given verb and storing the second byte if there
                      (      raakatu.asm):00305         ; is a match. I believe that is what is SUPPOSED to happen, but I believe the
                      (      raakatu.asm):00306         ; code has a bug or two. It actually does nothing at all. The replacement
                      (      raakatu.asm):00307         ; list for BEDLAM and RAAKATU is empty so the code is never used anyway.
                      (      raakatu.asm):00308         ;
00DD 308D0CA6         (      raakatu.asm):00309                        leax      L1333-1,pc          ;  Multi verb translation list (empty list for BEDLAM and RAAKATU)
00E1 17035C           (      raakatu.asm):00310                        lbsr      L0A1F               ;  Look for an entry for the given verb
                      (      raakatu.asm):00311         
00E4 2413             (      raakatu.asm):00312                        bcc       L06DF               ;  No entry ... use the word as-is
00E6 17037A           (      raakatu.asm):00313                        lbsr      L0A42               ;  Skip length of entry
00E9 17038D           (      raakatu.asm):00314         L06CF          lbsr      L0A58               ;  End of list?
00EC 1F98             (      raakatu.asm):00315                        tfr       B,A                 ;  ?? Held in A but ...
                      (      raakatu.asm):00316         
00EE 2409             (      raakatu.asm):00317                        bcc       L06DF               ;  Reached end of list. This input is the verb.
00F0 E680             (      raakatu.asm):00318                        ldb       ,X+                 ;  ??
00F2 A680             (      raakatu.asm):00319                        lda       ,X+                 ;  ?? ... A is mangled here?
00F4 F101B3           (      raakatu.asm):00320                        cmpb      u01B3               ;  ?? Compare to 01B3 ...
                      (      raakatu.asm):00321         
00F7 26F0             (      raakatu.asm):00322                        bne       L06CF               ;  Continue running list
00F9 F701B3           (      raakatu.asm):00323         L06DF          stb       u01B3               ;  ?? ... then store if equal?
00FC 16004C           (      raakatu.asm):00324                        lbra      L0731               ;  Continue with next word
                      (      raakatu.asm):00325         
00FF 4A               (      raakatu.asm):00326         L06E5          deca                          ;  List 2 Noun
0100 2636             (      raakatu.asm):00327                        bne       L071E               ;  Not a noun
0102 7D01B5           (      raakatu.asm):00328                        tst       u01B5               ;  Has prepostion been given?
                      (      raakatu.asm):00329         
0105 2720             (      raakatu.asm):00330                        beq       L070D               ;  No ... this is first noun
0107 8E01C9           (      raakatu.asm):00331                        ldx       #u01C9              ;  2nd noun area
010A E780             (      raakatu.asm):00332         L06F0          stb       ,X+                 ;  Store word number
010C B601B7           (      raakatu.asm):00333                        lda       u01B7               ;  Last adjective
010F A780             (      raakatu.asm):00334                        sta       ,X+                 ;  Keep with noun
0111 B601BA           (      raakatu.asm):00335                        lda       u01BA               ;  LSB of adjective
0114 A784             (      raakatu.asm):00336                        sta       ,X                  ;  Keep with noun
                      (      raakatu.asm):00337         
0116 2604             (      raakatu.asm):00338                        bne       L0702               ;  There was one ... go on
0118 1F30             (      raakatu.asm):00339                        tfr       U,D                 ;  Use LSB of ...
011A E784             (      raakatu.asm):00340                        stb       ,X                  ;  ... noun if no adjective
011C 7F01B7           (      raakatu.asm):00341         L0702          clr       u01B7               ;  Adjective moved
011F 7F01B5           (      raakatu.asm):00342                        clr       u01B5               ;  Preposition moved
0122 7F01BA           (      raakatu.asm):00343                        clr       u01BA               ;  LSB moved
                      (      raakatu.asm):00344         
0125 2024             (      raakatu.asm):00345                        bra       L0731               ;  Continue with next word
                      (      raakatu.asm):00346         
0127 BE01C3           (      raakatu.asm):00347         L070D          ldx       u01C3               ;  Copy ...
012A BF01C9           (      raakatu.asm):00348                        stx       u01C9               ;  ... any ...
012D BE01C5           (      raakatu.asm):00349                        ldx       u01C5               ;  ... first noun ...
0130 BF01CB           (      raakatu.asm):00350                        stx       u01CB               ;  ... to second
0133 8E01C3           (      raakatu.asm):00351                        ldx       #u01C3              ;  First word area
                      (      raakatu.asm):00352         
0136 20D2             (      raakatu.asm):00353                        bra       L06F0               ;  Go fill out first word
                      (      raakatu.asm):00354         
0138 4A               (      raakatu.asm):00355         L071E          deca                          ;  List 3 Adjective
                      (      raakatu.asm):00356         
0139 260A             (      raakatu.asm):00357                        bne       L072B               ;  Not a proposition
013B F701B7           (      raakatu.asm):00358                        stb       u01B7               ;  Store adjective number
013E 1F30             (      raakatu.asm):00359                        tfr       U,D                 ;  Store ...
0140 F701BA           (      raakatu.asm):00360                        stb       u01BA               ;  ... adjective LSB in buffer
                      (      raakatu.asm):00361         
0143 2006             (      raakatu.asm):00362                        bra       L0731               ;  Continue with next word
                      (      raakatu.asm):00363         
0145 F701B4           (      raakatu.asm):00364         L072B          stb       u01B4               ;  Preposition
0148 F701B5           (      raakatu.asm):00365                        stb       u01B5               ;  Preoposition given (noun should follow)
014B 3510             (      raakatu.asm):00366         L0731          puls      X                   ;  Restore token pointer
014D 16FF80           (      raakatu.asm):00367                        lbra      L06B7               ;  Next word
                      (      raakatu.asm):00368         
                      (      raakatu.asm):00369         
0150 7D01B3           (      raakatu.asm):00370         L0736          tst       u01B3               ;  Verb given?
0153 1027025F         (      raakatu.asm):00371                        lbeq      L0995               ;  No ... ?VERB? error
0157 8E01C9           (      raakatu.asm):00372                        ldx       #u01C9              ;  Second noun
015A 1700E2           (      raakatu.asm):00373                        lbsr      L0822               ;  Decode it (only returns if OK)
015D B701C9           (      raakatu.asm):00374                        sta       u01C9               ;  Hold target object index
0160 BF01CC           (      raakatu.asm):00375                        stx       u01CC               ;  Hold target object pointer
0163 8E01C3           (      raakatu.asm):00376                        ldx       #u01C3              ;  First noun
0166 1700D6           (      raakatu.asm):00377                        lbsr      L0822               ;  Decode it (only returns if OK)
0169 B701C3           (      raakatu.asm):00378                        sta       u01C3               ;  Hold target object index
016C BF01C6           (      raakatu.asm):00379                        stx       u01C6               ;  Hold target object pointer
016F 7F01B5           (      raakatu.asm):00380                        clr       u01B5               ;  Clear preposition flag
                      (      raakatu.asm):00381         
0172 BE01C6           (      raakatu.asm):00382                        ldx       u01C6               ;  Pointer to first noun object data
0175 B601C3           (      raakatu.asm):00383                        lda       u01C3               ;  First noun index
                      (      raakatu.asm):00384         
0178 2707             (      raakatu.asm):00385                        beq       L0767               ;  No first noun ... store a 0
017A 1702E6           (      raakatu.asm):00386                        lbsr      L0A42               ;  Skip ID and load end
017D 3002             (      raakatu.asm):00387                        leax      2,X                 ;  Skip 2 bytes
017F A684             (      raakatu.asm):00388                        lda       ,X                  ;  Object parameter bits
0181 B701C8           (      raakatu.asm):00389         L0767          sta       u01C8               ;  Hold first noun's parameter bits
                      (      raakatu.asm):00390         
0184 BE01CC           (      raakatu.asm):00391                        ldx       u01CC               ;  Pointer to second noun object data
0187 B601C9           (      raakatu.asm):00392                        lda       u01C9               ;  Second noun number
                      (      raakatu.asm):00393         
018A 2707             (      raakatu.asm):00394                        beq       L0779               ;  No second noun ... store 0
018C 1702D4           (      raakatu.asm):00395                        lbsr      L0A42               ;  Skip ID and load end
018F 3002             (      raakatu.asm):00396                        leax      2,X                 ;  Skip 2 bytes
0191 A684             (      raakatu.asm):00397                        lda       ,X                  ;  Object parameter bits
0193 B701CE           (      raakatu.asm):00398         L0779          sta       u01CE               ;  Hold second noun's parameter bits
                      (      raakatu.asm):00399         
0196 308D0C16         (      raakatu.asm):00400                        leax      L135B,pc            ;  Syntax list
019A A684             (      raakatu.asm):00401         L077F          lda       ,X                  ;  End of list?
019C 102701D1         (      raakatu.asm):00402                        lbeq      L0951               ;  Yes ... "?PHRASE?"
01A0 B601B3           (      raakatu.asm):00403                        lda       u01B3               ;  Verb ...
01A3 A180             (      raakatu.asm):00404                        cmpa      ,X+                 ;  ... matches?
                      (      raakatu.asm):00405         
01A5 265B             (      raakatu.asm):00406                        bne       L07E7               ;  No ... move to next entry
01A7 A684             (      raakatu.asm):00407                        lda       ,X                  ;  Phrase's proposition
01A9 B701B6           (      raakatu.asm):00408                        sta       u01B6               ;  Hold it
01AC B601B4           (      raakatu.asm):00409                        lda       u01B4               ;  Preposition word number
                      (      raakatu.asm):00410         
01AF 2704             (      raakatu.asm):00411                        beq       L079A               ;  None given ... skip prep check
01B1 A184             (      raakatu.asm):00412                        cmpa      ,X                  ;  Given prep matches?
                      (      raakatu.asm):00413         
01B3 264D             (      raakatu.asm):00414                        bne       L07E7               ;  No ... move to next phrase
01B5 3001             (      raakatu.asm):00415         L079A          leax      1,X                 ;  Skip to next phrase component
01B7 A684             (      raakatu.asm):00416                        lda       ,X                  ;  First noun required by phrase
                      (      raakatu.asm):00417         
01B9 2714             (      raakatu.asm):00418                        beq       L07B4               ;  Not given in phrase ... skip check
01BB B601C3           (      raakatu.asm):00419                        lda       u01C3               ;  1st noun index
                      (      raakatu.asm):00420         
01BE 2616             (      raakatu.asm):00421                        bne       L07BB               ;  Requested by phrase but not given by user ... next phrase
01C0 B601BB           (      raakatu.asm):00422                        lda       u01BB               ;  LSB of verb ...
01C3 B701BD           (      raakatu.asm):00423                        sta       u01BD               ;  ... to location of error
01C6 108E01C3         (      raakatu.asm):00424                        ldy       #u01C3              ;  Descriptor for 1st noun
01CA 170124           (      raakatu.asm):00425                        lbsr      L08D2               ;  Decode 1st noun as per phrase
                      (      raakatu.asm):00426         
01CD 2007             (      raakatu.asm):00427                        bra       L07BB               ;  We just processed a first one. We know it is there.
01CF B601C3           (      raakatu.asm):00428         L07B4          lda       u01C3               ;  Is there a 1st noun?
                      (      raakatu.asm):00429         
01D2 1026019B         (      raakatu.asm):00430                        lbne      L0951               ; No ... next entry
01D6 3001             (      raakatu.asm):00431         L07BB          leax      1,X                 ; Next in phrase
01D8 A684             (      raakatu.asm):00432                        lda       ,X                  ; Phrase wants a second noun?
                      (      raakatu.asm):00433         
01DA 2719             (      raakatu.asm):00434                        beq       L07DA               ; No ... skip
01DC B601C9           (      raakatu.asm):00435                        lda       u01C9               ; User given 2nd noun
                      (      raakatu.asm):00436         
01DF 261B             (      raakatu.asm):00437                        bne       L07E1               ; Yes ... use this phrase
01E1 B601BC           (      raakatu.asm):00438                        lda       u01BC               ; Location of ...
01E4 B701BD           (      raakatu.asm):00439                        sta       u01BD               ; ... error on screen
01E7 8601             (      raakatu.asm):00440                        lda       #$01                ; Set preposition ...
01E9 B701B5           (      raakatu.asm):00441                        sta       u01B5               ; ... flag to YES
01EC 108E01C9         (      raakatu.asm):00442                        ldy       #u01C9              ; 2nd noun index
01F0 1700FE           (      raakatu.asm):00443                        lbsr      L08D2               ; Decode 2nd noun as per phrase
                      (      raakatu.asm):00444         
01F3 2007             (      raakatu.asm):00445                        bra       L07E1               ; Use this
                      (      raakatu.asm):00446         
01F5 B601C9           (      raakatu.asm):00447         L07DA          lda       u01C9               ; Is there a second noun?
01F8 10260175         (      raakatu.asm):00448                        lbne      L0951               ; No ... phrase error
01FC 3001             (      raakatu.asm):00449         L07E1          leax      1,X                 ; Get matched ...
01FE A684             (      raakatu.asm):00450                        lda       ,X                  ; ... phrase number
                      (      raakatu.asm):00451         
0200 2009             (      raakatu.asm):00452                        bra       L07F0               ; Store and continue
0202 3001             (      raakatu.asm):00453         L07E7          leax      1,X                 ; Skip ...
0204 3001             (      raakatu.asm):00454                        leax      1,X                 ; ... to ...
0206 3002             (      raakatu.asm):00455                        leax      2,X                 ; ... next entry
0208 16FF8F           (      raakatu.asm):00456                        lbra      L077F               ; Keep looking
                      (      raakatu.asm):00457         
                      (      raakatu.asm):00458         ; Unlike BEDLAM, there is no giving a command to something else. Just
                      (      raakatu.asm):00459         ; ignore any commanded object and give the phrase to the user.
                      (      raakatu.asm):00460         
020B B701D1           (      raakatu.asm):00461         L07F0          sta       u01D1               ; Store the phrase number
020E 8E05FF           (      raakatu.asm):00462                        ldx       #$05FF              ; Move cursor to ...
0211 BF0088           (      raakatu.asm):00463                        stx       >$88                ; ... end of line
0214 860D             (      raakatu.asm):00464                        lda       #$0D                ; Print ...
0216 17099B           (      raakatu.asm):00465                        lbsr      L1184               ; ... CR
0219 B601C3           (      raakatu.asm):00466                        lda       u01C3               ; First noun given?
                      (      raakatu.asm):00467         
021C 260C             (      raakatu.asm):00468                        bne       L080E               ; Yes ... keep what we have
021E BE01CC           (      raakatu.asm):00469                        ldx       u01CC               ; Move 2nd ...
0221 BF01C6           (      raakatu.asm):00470                        stx       u01C6               ; ... noun to ...
0224 B601C9           (      raakatu.asm):00471                        lda       u01C9               ; ... first ...
0227 B701C3           (      raakatu.asm):00472                        sta       u01C3               ; ... descriptor
022A 308D2A63         (      raakatu.asm):00473         L080E          leax      L323C,pc            ; General command scripts
022E 170232           (      raakatu.asm):00474                        lbsr      L0A42               ; Skip over end delta
0231 1703EF           (      raakatu.asm):00475                        lbsr      L0C03               ; Execute script
0234 170754           (      raakatu.asm):00476                        lbsr      L0F66               ; Allow objects to move
0237 860D             (      raakatu.asm):00477                        lda       #$0D                ; Print ...
0239 170978           (      raakatu.asm):00478                        lbsr      L1184               ; ... CR
023C 16FE09           (      raakatu.asm):00479                        lbra      L0630               ; Top of game loop
                      (      raakatu.asm):00480         
                      (      raakatu.asm):00481         
                      (      raakatu.asm):00482         ; This function decodes the NOUN descriptor pointed to by X. The AJECTIVE-NOUN
                      (      raakatu.asm):00483         ; pair is compared to all objects in the room (and pack). If no adjective
                      (      raakatu.asm):00484         ; is given and there are multiple matching objects (like multiple doors with
                      (      raakatu.asm):00485         ; different colors) then the "?WHICH?" prompt is given. If there is no 
                      (      raakatu.asm):00486         ; matching object then "?WHAT?" is given. If this function returns then
                      (      raakatu.asm):00487         ; the mapping was successful.
                      (      raakatu.asm):00488         ;
                      (      raakatu.asm):00489         ; @param X pointer to the noun descriptor to decode
                      (      raakatu.asm):00490         ; @return A index of target object
                      (      raakatu.asm):00491         ; @return X pointer to target object data
                      (      raakatu.asm):00492         ;
023F 7F01BF           (      raakatu.asm):00493         L0822          clr       u01BF               ; Input object number
0242 E680             (      raakatu.asm):00494                        ldb       ,X+                 ; Word number of noun
0244 F701B2           (      raakatu.asm):00495                        stb       u01B2               ; Hold it
                      (      raakatu.asm):00496         
0247 2602             (      raakatu.asm):00497                        bne       L082E               ; Real object ... go decode
0249 4F               (      raakatu.asm):00498                        clra                          ; Not found
024A 39               (      raakatu.asm):00499                        rts                           ; Out
024B A680             (      raakatu.asm):00500         L082E          lda       ,X+                 ; Noun's adjective
024D B701B7           (      raakatu.asm):00501                        sta       u01B7               ; Hold it
0250 A684             (      raakatu.asm):00502                        lda       ,X                  ; LSB of word in buffer
0252 B701CF           (      raakatu.asm):00503                        sta       u01CF               ; Hold it
0255 308D18FB         (      raakatu.asm):00504                        leax      L20FF,pc            ; Object data
0259 1701E4           (      raakatu.asm):00505                        lbsr      L0A1F               ; Get pointer to next object that matches word
                      (      raakatu.asm):00506         
025C 245A             (      raakatu.asm):00507                        bcc       L089A               ; Not found
025E 3420             (      raakatu.asm):00508         L0840          pshs      Y                   ; Hold end of object data
0260 3410             (      raakatu.asm):00509                        pshs      X                   ; Hold pointer to noun descriptor
0262 B601E1           (      raakatu.asm):00510                        lda       u01E1               ; Index of object in the object list
0265 B701E2           (      raakatu.asm):00511                        sta       u01E2               ; Remember this
0268 17005D           (      raakatu.asm):00512                        lbsr      L08AA               ; Is object in this room or on player?
                      (      raakatu.asm):00513         
026B 2657             (      raakatu.asm):00514                        bne       L08A6               ; No ... can't be target ... out
026D B601B7           (      raakatu.asm):00515                        lda       u01B7               ; Noun's adjective
                      (      raakatu.asm):00516         
0270 271F             (      raakatu.asm):00517                        beq       L0873               ; No adjective ... skip this
0272 3510             (      raakatu.asm):00518                        puls      X                   ; Restore pointer to noun descriptor
0274 3410             (      raakatu.asm):00519                        pshs      X                   ; Hold it again
0276 1701EA           (      raakatu.asm):00520                        lbsr      L0A42               ; Skip the id and end
0279 3003             (      raakatu.asm):00521                        leax      3,X                 ; Skip the object data
027B C601             (      raakatu.asm):00522                        ldb       #$01                ; Look up adjective ...
027D 1701C8           (      raakatu.asm):00523                        lbsr      L0A27               ; ... list for object
                      (      raakatu.asm):00524         
0280 240F             (      raakatu.asm):00525                        bcc       L0873               ; No adjective ... ignore
0282 1701DE           (      raakatu.asm):00526                        lbsr      L0A42               ; Skip the id and length
0285 1701F1           (      raakatu.asm):00527         L0867          lbsr      L0A58               ; End of adjective list?
                      (      raakatu.asm):00528         
0288 243A             (      raakatu.asm):00529                        bcc       L08A6               ; Yes ... no match ... next object
028A B601B7           (      raakatu.asm):00530                        lda       u01B7               ; Adjective
028D A180             (      raakatu.asm):00531                        cmpa      ,X+                 ; In this list?
                      (      raakatu.asm):00532         
028F 26F4             (      raakatu.asm):00533                        bne       L0867               ; No ... keep searching list
0291 3510             (      raakatu.asm):00534         L0873          puls      X                   ; Restore object pointer
0293 B601BF           (      raakatu.asm):00535                        lda       u01BF               ; Last object index that matched
0296 10260113         (      raakatu.asm):00536                        lbne      L098C               ; Multiple matches ... do "?WHICH?"
029A B601E2           (      raakatu.asm):00537                        lda       u01E2               ; Object index
029D B701BF           (      raakatu.asm):00538                        sta       u01BF               ; Current guess at matching object index
02A0 BF01C0           (      raakatu.asm):00539                        stx       u01C0               ; Input object data
02A3 1701BD           (      raakatu.asm):00540         L0885          lbsr      L0A42               ; Skip id and end
02A6 1F21             (      raakatu.asm):00541                        tfr       Y,X                 ; Next object
02A8 3520             (      raakatu.asm):00542                        puls      Y                   ; End of object data
02AA F601B2           (      raakatu.asm):00543                        ldb       u01B2               ; Restore word number of noun
02AD B601E2           (      raakatu.asm):00544                        lda       u01E2               ; Current object index
02B0 B701E1           (      raakatu.asm):00545                        sta       u01E1               ; Start count for next pass
02B3 170192           (      raakatu.asm):00546                        lbsr      L0A27               ; Find next matching object
                      (      raakatu.asm):00547         
02B6 25A6             (      raakatu.asm):00548                        bcs       L0840               ; Got one ... go test it
02B8 BE01C0           (      raakatu.asm):00549         L089A          ldx       u01C0               ; Object data to X
02BB B601BF           (      raakatu.asm):00550                        lda       u01BF               ; Object found?
                      (      raakatu.asm):00551         
02BE 2603             (      raakatu.asm):00552                        bne       L08A5               ; Yes ...  out
02C0 1600A5           (      raakatu.asm):00553                        lbra      L0948               ; No ... "?WHAT?"
02C3 39               (      raakatu.asm):00554         L08A5          rts                           ; Done
02C4 3510             (      raakatu.asm):00555         L08A6          puls      X                   ; Restore object pointer
                      (      raakatu.asm):00556         
02C6 20DB             (      raakatu.asm):00557                        bra       L0885               ; Do next object
                      (      raakatu.asm):00558         
                      (      raakatu.asm):00559         ; This function checks if the target object is in the current room or being
                      (      raakatu.asm):00560         ; held by the active object.
                      (      raakatu.asm):00561         ;
                      (      raakatu.asm):00562         ; @param X pointer to target object
                      (      raakatu.asm):00563         ; @return Z=1 for yes or Z=0 for no
                      (      raakatu.asm):00564         ;
02C8 170198           (      raakatu.asm):00565         L08AA          lbsr      L0A42               ; Skip size
02CB B601D5           (      raakatu.asm):00566                        lda       u01D5               ; Current room number
02CE A184             (      raakatu.asm):00567                        cmpa      ,X                  ; Is object in room?
                      (      raakatu.asm):00568         
02D0 27F1             (      raakatu.asm):00569                        beq       L08A5               ; Yes ... return OK
02D2 A684             (      raakatu.asm):00570                        lda       ,X                  ; Get object's room number
                      (      raakatu.asm):00571         
02D4 2718             (      raakatu.asm):00572                        beq       L08CF               ; 0 ... fail
02D6 81FF             (      raakatu.asm):00573                        cmpa      #$FF                ; FF ...
                      (      raakatu.asm):00574         
02D8 27E9             (      raakatu.asm):00575                        beq       L08A5               ; ... return OK
02DA 8580             (      raakatu.asm):00576                        bita      #$80                ; Upper bit of object location set ...
                      (      raakatu.asm):00577         
02DC 2610             (      raakatu.asm):00578                        bne       L08CF               ; ... then fail
02DE E684             (      raakatu.asm):00579                        ldb       ,X                  ; Location again
02E0 F101D2           (      raakatu.asm):00580                        cmpb      u01D2               ; Being held by the active object?
                      (      raakatu.asm):00581         
02E3 27DE             (      raakatu.asm):00582                        beq       L08A5               ; Yes ... return OK
02E5 308D186B         (      raakatu.asm):00583                        leax      L20FF,pc            ; Strange. 117D does this too.
02E9 170876           (      raakatu.asm):00584                        lbsr      L1133               ; Get object's container object (if any)
                      (      raakatu.asm):00585         
02EC 20DA             (      raakatu.asm):00586                        bra       L08AA               ; Repeat check
02EE 8A01             (      raakatu.asm):00587         L08CF          ora       #$01                ; Mark failure
02F0 39               (      raakatu.asm):00588                        rts                           ; Out
                      (      raakatu.asm):00589         
                      (      raakatu.asm):00590         ; This function fills the noun descriptor pointed to by Y with the object
                      (      raakatu.asm):00591         ; in current room or on user that matches the parameter value from the
                      (      raakatu.asm):00592         ; phrase script. If there is not exactly one such object then flash an error
                      (      raakatu.asm):00593         ; like "WITH ?WHAT?" using the current preposition or just "?WHAT?" if there
                      (      raakatu.asm):00594         ; isn't one.
                      (      raakatu.asm):00595         ;
                      (      raakatu.asm):00596         ; @param Y pointer to noun descriptor to fill
                      (      raakatu.asm):00597         ; @param X pointer to phrase data
                      (      raakatu.asm):00598         ; @return descriptor filled out with object
                      (      raakatu.asm):00599         ;
02F1 3410             (      raakatu.asm):00600         L08D2          pshs      X                   ; Hold phrase data pointer
02F3 7F01B2           (      raakatu.asm):00601                        clr       u01B2               ; Found word flag
02F6 7F01E1           (      raakatu.asm):00602                        clr       u01E1               ; Object index starts at 0
02F9 3420             (      raakatu.asm):00603                        pshs      Y                   ; Hold noun descriptor
02FB A684             (      raakatu.asm):00604                        lda       ,X                  ; Object parameter mask bits
02FD B701AB           (      raakatu.asm):00605                        sta       u01AB               ; Hold
0300 308D1850         (      raakatu.asm):00606                        leax      L20FF,pc            ; Object data
0304 17015C           (      raakatu.asm):00607                        lbsr      L0A42               ; Skip ID and load end
0307 17016F           (      raakatu.asm):00608         L08E7          lbsr      L0A58               ; At end of object data?
                      (      raakatu.asm):00609         
030A 2440             (      raakatu.asm):00610                        bcc       L092C               ; Yes ... done
030C 7C01E1           (      raakatu.asm):00611                        inc       u01E1               ; Bump object index
030F 3420             (      raakatu.asm):00612                        pshs      Y                   ; Hold end of object
0311 3410             (      raakatu.asm):00613                        pshs      X                   ; Hold pointer to object
0313 17FFB2           (      raakatu.asm):00614                        lbsr      L08AA               ; Is object in room or on player?
0316 3510             (      raakatu.asm):00615                        puls      X                   ; Restore pointer to object
                      (      raakatu.asm):00616         
0318 262D             (      raakatu.asm):00617                        bne       L0927               ; No ... next object
031A E684             (      raakatu.asm):00618                        ldb       ,X                  ; Object word number
031C BF01D8           (      raakatu.asm):00619                        stx       u01D8               ; Pointer to object data
031F 170141           (      raakatu.asm):00620                        lbsr      L0A42               ; Skip ID and load end
0322 3002             (      raakatu.asm):00621                        leax      2,X                 ; Point to object parameters
0324 A684             (      raakatu.asm):00622                        lda       ,X                  ; Get parameters
0326 B401AB           (      raakatu.asm):00623                        anda      u01AB               ; Compare to phrase data ...
0329 B101AB           (      raakatu.asm):00624                        cmpa      u01AB               ; ... this is a strange way to do it
                      (      raakatu.asm):00625         
032C 2613             (      raakatu.asm):00626                        bne       L0921               ; Not a match ... next word
032E B601B2           (      raakatu.asm):00627                        lda       u01B2               ; Already got a word number?
                      (      raakatu.asm):00628         
0331 2647             (      raakatu.asm):00629                        bne       L095A               ; Yes ... error
0333 F701B2           (      raakatu.asm):00630                        stb       u01B2               ; Found word number
0336 A684             (      raakatu.asm):00631                        lda       ,X                  ; Remember ...
0338 B701B7           (      raakatu.asm):00632                        sta       u01B7               ; ... object parameters
033B BE01D8           (      raakatu.asm):00633                        ldx       u01D8               ; Remember ...
033E BF01AD           (      raakatu.asm):00634                        stx       u01AD               ; ... object pointer
0341 1E12             (      raakatu.asm):00635         L0921          exg       X,Y                 ; Start of next object to X
0343 3520             (      raakatu.asm):00636                        puls      Y                   ; Restore end of object pointer
                      (      raakatu.asm):00637         
0345 20C0             (      raakatu.asm):00638                        bra       L08E7               ; Continue with next object
0347 170119           (      raakatu.asm):00639         L0927          lbsr      L0A42               ; Skip ID and load end
                      (      raakatu.asm):00640         
034A 20F5             (      raakatu.asm):00641                        bra       L0921               ; Try next object
034C B601B2           (      raakatu.asm):00642         L092C          lda       u01B2               ; Did we find an object word?
                      (      raakatu.asm):00643         
034F 2729             (      raakatu.asm):00644                        beq       L095A               ; No .... error
0351 3520             (      raakatu.asm):00645                        puls      Y                   ; Noun descriptor
0353 BE01AD           (      raakatu.asm):00646                        ldx       u01AD               ; Object data pointer
0356 B601E1           (      raakatu.asm):00647                        lda       u01E1               ; New ...
0359 A7A4             (      raakatu.asm):00648                        sta       ,Y                  ; ... object number
035B 3123             (      raakatu.asm):00649                        leay      3,Y                 ; New ...
035D AFA1             (      raakatu.asm):00650                        stx       ,Y++                ; ... pointer to object data
035F B601B7           (      raakatu.asm):00651                        lda       u01B7               ; New ...
0362 A7A4             (      raakatu.asm):00652                        sta       ,Y                  ; ... object parameters
0364 3510             (      raakatu.asm):00653                        puls      X                   ; Restore phrase data pointer
0366 4F               (      raakatu.asm):00654                        clra                          ; Set Z=1
0367 39               (      raakatu.asm):00655                        rts                           ; Done
                      (      raakatu.asm):00656         
0368 318D0A2C         (      raakatu.asm):00657         L0948          leay      L1343,pc            ; "?WHAT?"
036C B601CF           (      raakatu.asm):00658                        lda       u01CF               ; LSB of screen location
                      (      raakatu.asm):00659         
036F 204B             (      raakatu.asm):00660                        bra       L099B               ; Go flash error and try again
                      (      raakatu.asm):00661         
0371 318D0A32         (      raakatu.asm):00662         L0951          leay      L1352,pc            ; "?PHRASE?"
0375 B601BC           (      raakatu.asm):00663                        lda       u01BC               ; LSB of screen location
                      (      raakatu.asm):00664         
0378 2042             (      raakatu.asm):00665                        bra       L099B               ; Go flash error and try again
                      (      raakatu.asm):00666         
037A B601B5           (      raakatu.asm):00667         L095A          lda       u01B5               ; Preposition given?
                      (      raakatu.asm):00668         
037D 2725             (      raakatu.asm):00669                        beq       L0983               ; No ... just plain "?WHAT?"
037F B601B4           (      raakatu.asm):00670                        lda       u01B4               ; Preposition word number?
                      (      raakatu.asm):00671         
0382 2620             (      raakatu.asm):00672                        bne       L0983               ; No word ... just plain "?WHAT?"
0384 308D359C         (      raakatu.asm):00673                        leax      L3ECF,pc            ; Prepositions list
0388 E684             (      raakatu.asm):00674         L0967          ldb       ,X                  ; Length of word
                      (      raakatu.asm):00675         
038A 2718             (      raakatu.asm):00676                        beq       L0983               ; Reached the end ... do "?WHAT?"
038C 3410             (      raakatu.asm):00677                        pshs      X                   ; Hold start of word
038E E680             (      raakatu.asm):00678                        ldb       ,X+                 ; Get length again
0390 3A               (      raakatu.asm):00679                        abx                           ; Point to end of word
0391 B601B6           (      raakatu.asm):00680                        lda       u01B6               ; Target preposition
0394 A180             (      raakatu.asm):00681                        cmpa      ,X+                 ; Matches?
                      (      raakatu.asm):00682         
0396 2704             (      raakatu.asm):00683                        beq       L097B               ; Yes ... error includes this word
0398 3506             (      raakatu.asm):00684                        puls      A,B                 ; Restore stack
                      (      raakatu.asm):00685         
039A 20EC             (      raakatu.asm):00686                        bra       L0967               ; Next word
039C 3520             (      raakatu.asm):00687         L097B          puls      Y                   ; Word text to Y
039E B601BD           (      raakatu.asm):00688                        lda       u01BD               ; LSB of error message
03A1 17005E           (      raakatu.asm):00689                        lbsr      L09E1               ; Push preposition word
03A4 318D09F0         (      raakatu.asm):00690         L0983          leay      L1343,pc            ; "?WHAT?"
03A8 B601BD           (      raakatu.asm):00691                        lda       u01BD               ; LSB of screen location
                      (      raakatu.asm):00692         
03AB 200F             (      raakatu.asm):00693                        bra       L099B               ; Go flash error and try again
03AD 318D09EE         (      raakatu.asm):00694         L098C          leay      L134A,pc            ; "?WHICH"?
03B1 B601CF           (      raakatu.asm):00695                        lda       u01CF               ; LSB of screen location
                      (      raakatu.asm):00696         
03B4 2006             (      raakatu.asm):00697                        bra       L099B               ; Go flash error and try again
03B6 318D09D7         (      raakatu.asm):00698         L0995          leay      L133C,pc            ; "?VERB?"
                      (      raakatu.asm):00699         
03BA 86E0             (      raakatu.asm):00700                        lda       #$E0                ; LSB of start of input line
03BC 10CE03FF         (      raakatu.asm):00701         L099B          lds       #$03FF              ; Reset the stack (we jump back into the main loop)
03C0 8E05E0           (      raakatu.asm):00702                        ldx       #$05E0              ; Error goes at start of line
03C3 17003C           (      raakatu.asm):00703                        lbsr      L09E1               ; Push error message on and pause
03C6 A6A4             (      raakatu.asm):00704         L09A5          lda       ,Y                  ; Get length
03C8 B701AB           (      raakatu.asm):00705                        sta       u01AB               ; Hold in counter
03CB 3410             (      raakatu.asm):00706                        pshs      X                   ; Hold X
03CD 8660             (      raakatu.asm):00707         L09AC          lda       #$60                ; SPACE
03CF A780             (      raakatu.asm):00708                        sta       ,X+                 ; Flash off ...
03D1 7A01AB           (      raakatu.asm):00709                        dec       u01AB               ; ... error ...
                      (      raakatu.asm):00710         
03D4 26F7             (      raakatu.asm):00711                        bne       L09AC               ; ... word
03D6 17001E           (      raakatu.asm):00712                        lbsr      L09D6               ; Long delay
03D9 3510             (      raakatu.asm):00713                        puls      X                   ; Restore insertion point
03DB 5A               (      raakatu.asm):00714                        decb                          ; All flashes done?
                      (      raakatu.asm):00715         
03DC 2614             (      raakatu.asm):00716                        bne       L09D1               ; No ... keep flashing error word
03DE A6A4             (      raakatu.asm):00717                        lda       ,Y                  ; Size of error word
03E0 4C               (      raakatu.asm):00718                        inca                          ; Plus the extra space
03E1 B701AB           (      raakatu.asm):00719                        sta       u01AB               ; Hold counter
03E4 170115           (      raakatu.asm):00720         L09C3          lbsr      L0ADB               ; Close up the ...
03E7 7A01AB           (      raakatu.asm):00721                        dec       u01AB               ; ... error ...
                      (      raakatu.asm):00722         
03EA 26F8             (      raakatu.asm):00723                        bne       L09C3               ; ... word
03EC 170095           (      raakatu.asm):00724                        lbsr      L0A63               ; Get input line
03EF 16FC5D           (      raakatu.asm):00725                        lbra      L0637               ; Continue processing
03F2 17002C           (      raakatu.asm):00726         L09D1          lbsr      L0A00               ; Flash message and pause
                      (      raakatu.asm):00727         
03F5 20CF             (      raakatu.asm):00728                        bra       L09A5               ; Continue flashing and read new line
                      (      raakatu.asm):00729         
                      (      raakatu.asm):00730         ;Long delay
03F7 8632             (      raakatu.asm):00731         L09D6          lda       #$32                ; Outer loop counts
03F9 7A01AB           (      raakatu.asm):00732         L09D8          dec       u01AB               ; Decrease inner count (doesn't matter what's there)
                      (      raakatu.asm):00733         
03FC 26FB             (      raakatu.asm):00734                        bne       L09D8               ; Kill inner time
03FE 4A               (      raakatu.asm):00735                        deca                          ; All 256 loops done?
                      (      raakatu.asm):00736         
03FF 26F8             (      raakatu.asm):00737                        bne       L09D8               ; No ... keep pausing
0401 39               (      raakatu.asm):00738                        rts                           ; Done
                      (      raakatu.asm):00739         
0402 B701AB           (      raakatu.asm):00740         L09E1          sta       u01AB               ; Hold LSB of cursor
0405 CC05E0           (      raakatu.asm):00741                        ldd       #$05E0              ; Start of input line
0408 F601AB           (      raakatu.asm):00742                        ldb       u01AB               ; Replace LSB
040B 1F01             (      raakatu.asm):00743                        tfr       D,X                 ; Place for error word in X
040D A6A4             (      raakatu.asm):00744                        lda       ,Y                  ; Get length of message
040F 4C               (      raakatu.asm):00745                        inca                          ; Plus a space after
0410 B701AB           (      raakatu.asm):00746                        sta       u01AB               ; Store length
0413 3420             (      raakatu.asm):00747                        pshs      Y                   ; Hold message
0415 17010F           (      raakatu.asm):00748         L09F4          lbsr      L0B06               ; Slide right past insertion point
0418 7A01AB           (      raakatu.asm):00749                        dec       u01AB               ; Space opened up?
                      (      raakatu.asm):00750         
041B 26F8             (      raakatu.asm):00751                        bne       L09F4               ; No ... open all the spaces for the error word
041D 3520             (      raakatu.asm):00752                        puls      Y                   ; Restore pointer
041F C608             (      raakatu.asm):00753                        ldb       #$08                ; 8 flashes
0421 A6A4             (      raakatu.asm):00754         L0A00          lda       ,Y                  ; Count again
0423 B701AB           (      raakatu.asm):00755                        sta       u01AB               ; Size of word
0426 3434             (      raakatu.asm):00756                        pshs      Y,X,B               ; Hold all
0428 3121             (      raakatu.asm):00757                        leay      1,Y                 ; Skip size
042A A6A0             (      raakatu.asm):00758         L0A09          lda       ,Y+                 ; Copy error word ...
042C A780             (      raakatu.asm):00759                        sta       ,X+                 ; ... to screen
042E 7A01AB           (      raakatu.asm):00760                        dec       u01AB               ; All done?
                      (      raakatu.asm):00761         
0431 26F7             (      raakatu.asm):00762                        bne       L0A09               ; No ... go back and do all
0433 3001             (      raakatu.asm):00763                        leax      1,X                 ; Bump ...
0435 1F10             (      raakatu.asm):00764                        tfr       X,D                 ; ... LSB ...
0437 F701BD           (      raakatu.asm):00765                        stb       u01BD               ; ... of screen pointer
043A 17FFBA           (      raakatu.asm):00766                        lbsr      L09D6               ; Long pause
043D 3534             (      raakatu.asm):00767                        puls      B,X,Y               ; Restore
043F 39               (      raakatu.asm):00768                        rts                           ; Done
                      (      raakatu.asm):00769         
                      (      raakatu.asm):00770         ; FindSublist
                      (      raakatu.asm):00771         ; Find a sublist by ID within a master list.
                      (      raakatu.asm):00772         ; X=pointer to master list
                      (      raakatu.asm):00773         ; B=sublist ID
                      (      raakatu.asm):00774         ; Return sublist pointer in X
                      (      raakatu.asm):00775         ; Return C=0 if not found, C=1 if found
0440 3001             (      raakatu.asm):00776         L0A1F          leax      1,X                 ; Skip list ID
0442 170020           (      raakatu.asm):00777                        lbsr      L0A44               ; Read end of list to Y
0445 7F01E1           (      raakatu.asm):00778                        clr       u01E1               ; Clear index of sublist
0448 17002E           (      raakatu.asm):00779         L0A27          lbsr      L0A58               ; Compare X to Y
                      (      raakatu.asm):00780         
044B 2501             (      raakatu.asm):00781                        bcs       L0A2D               ; X is smaller ... keep going
044D 39               (      raakatu.asm):00782                        rts                           ; Done (C=0 not found)
044E 7C01E1           (      raakatu.asm):00783         L0A2D          inc       u01E1               ; Keep up with index of sublist
0451 E184             (      raakatu.asm):00784                        cmpb      ,X                  ; Is this the sublist we want?
                      (      raakatu.asm):00785         
0453 270B             (      raakatu.asm):00786                        beq       L0A3F               ; Found ... C=1 and out
0455 3420             (      raakatu.asm):00787                        pshs      Y                   ; Hold the end
0457 170009           (      raakatu.asm):00788                        lbsr      L0A42               ; Skip ID and read end of list to Y
045A 1F21             (      raakatu.asm):00789                        tfr       Y,X                 ; Jump to the end of this list
045C 3520             (      raakatu.asm):00790                        puls      Y                   ; Restore the end of the master lsit
                      (      raakatu.asm):00791         
045E 20E8             (      raakatu.asm):00792                        bra       L0A27               ; Keep looking for the sublist
                      (      raakatu.asm):00793         ;
0460 1A01             (      raakatu.asm):00794         L0A3F          orcc      #$01                ; C=1
0462 39               (      raakatu.asm):00795                        rts                           ; Done
                      (      raakatu.asm):00796         
                      (      raakatu.asm):00797         ;##-SkipIDLoadEnd
                      (      raakatu.asm):00798         ; Skip the ID byte and load the end of the list in Y.
0463 3001             (      raakatu.asm):00799         L0A42          leax      1,X                 ; Bump script pointer
                      (      raakatu.asm):00800         ;
                      (      raakatu.asm):00801         ;##LoadEnd
                      (      raakatu.asm):00802         ; Load the end of the list in Y.
0465 4F               (      raakatu.asm):00803         L0A44          clra                          ; Upper is 0
0466 3404             (      raakatu.asm):00804                        pshs      B                   ; Hold lower
0468 E680             (      raakatu.asm):00805                        ldb       ,X+                 ; Get lower
046A C580             (      raakatu.asm):00806                        bitb      #$80                ; One or two byte value?
                      (      raakatu.asm):00807         
046C 2706             (      raakatu.asm):00808                        beq       L0A53               ; Just a one byte ... use it
046E C47F             (      raakatu.asm):00809                        andb      #$7F                ; This is the ...
0470 1F98             (      raakatu.asm):00810                        tfr       B,A                 ; ... MSB
0472 E680             (      raakatu.asm):00811                        ldb       ,X+                 ; Now get 2nd byte (LSB)
0474 318B             (      raakatu.asm):00812         L0A53          leay      D,X                 ; Offset script
0476 3504             (      raakatu.asm):00813                        puls      B                   ; Restore B
0478 39               (      raakatu.asm):00814                        rts                           ; Done
                      (      raakatu.asm):00815         
                      (      raakatu.asm):00816         ;##CompareXY
                      (      raakatu.asm):00817         ; Compare X to Y (flags = X - Y)
0479 10BF01A9         (      raakatu.asm):00818         L0A58          sty       u01A9               ; Do compare ...
047D BC01A9           (      raakatu.asm):00819                        cmpx      u01A9               ; X - Y
0480 39               (      raakatu.asm):00820                        rts                           ; Done
                      (      raakatu.asm):00821         
                      (      raakatu.asm):00822         ;##GetInputLine
0481 8E05E0           (      raakatu.asm):00823         L0A60          ldx       #$05E0              ; Start of bottom row
0484 1700BD           (      raakatu.asm):00824         L0A63          lbsr      L0B23               ; Slide bottom row to right after cursor and draw cursor
0487 1700C2           (      raakatu.asm):00825         L0A66          lbsr      L0B2B               ; Get a key from the keyboard
048A 8115             (      raakatu.asm):00826                        cmpa      #$15                ;
                      (      raakatu.asm):00827         
048C 2720             (      raakatu.asm):00828                        beq       L0A8D               ; Swap cursor and character to left
048E 815D             (      raakatu.asm):00829                        cmpa      #$5D                ; ']' ?
                      (      raakatu.asm):00830         
0490 272F             (      raakatu.asm):00831                        beq       L0AA0               ; Swap cursor and character to right
0492 8109             (      raakatu.asm):00832                        cmpa      #$09                ; Backspace
                      (      raakatu.asm):00833         
0494 273E             (      raakatu.asm):00834                        beq       L0AB3               ; Go handle backspace
0496 810D             (      raakatu.asm):00835                        cmpa      #$0D                ; CR?
                      (      raakatu.asm):00836         
0498 274F             (      raakatu.asm):00837                        beq       L0AC8               ; Handle it and out
049A 810C             (      raakatu.asm):00838                        cmpa      #$0C                ; BREAK?
                      (      raakatu.asm):00839         
049C 274F             (      raakatu.asm):00840                        beq       L0ACC               ; Yes ... clear the row
049E 8108             (      raakatu.asm):00841                        cmpa      #$08                ; Backspace?
                      (      raakatu.asm):00842         
04A0 273B             (      raakatu.asm):00843                        beq       L0ABC               ; Yes go handle
04A2 8C05FF           (      raakatu.asm):00844                        cmpx      #$05FF              ; At the end of the screen?
                      (      raakatu.asm):00845         
04A5 27E0             (      raakatu.asm):00846                        beq       L0A66               ; Yes ... ignore and get another
04A7 17007D           (      raakatu.asm):00847                        lbsr      L0B06               ; Slide bottom row beyond insertion
04AA A780             (      raakatu.asm):00848                        sta       ,X+                 ; Store character
                      (      raakatu.asm):00849         
04AC 20D9             (      raakatu.asm):00850                        bra       L0A66               ; Go get another character
                      (      raakatu.asm):00851         
04AE 8C05E0           (      raakatu.asm):00852         L0A8D          cmpx      #$05E0              ; Nothing typed?
                      (      raakatu.asm):00853         
04B1 27D4             (      raakatu.asm):00854                        beq       L0A66               ; Yes ... ignore and get another
04B3 301F             (      raakatu.asm):00855                        leax      -1,X                ; Swap ...
04B5 A680             (      raakatu.asm):00856                        lda       ,X+                 ; ... cursor ...
04B7 A784             (      raakatu.asm):00857                        sta       ,X                  ; ... and ...
04B9 301F             (      raakatu.asm):00858                        leax      -1,X                ; ... character ...
04BB 86CF             (      raakatu.asm):00859                        lda       #$CF                ; ... to the ...
04BD A784             (      raakatu.asm):00860                        sta       ,X                  ; ... left
                      (      raakatu.asm):00861         
04BF 20C6             (      raakatu.asm):00862                        bra       L0A66               ; Go get another character
                      (      raakatu.asm):00863         
04C1 8C05FF           (      raakatu.asm):00864         L0AA0          cmpx      #$05FF              ; End of screen?
                      (      raakatu.asm):00865         
04C4 27C1             (      raakatu.asm):00866                        beq       L0A66               ; Yes ... go get another key
04C6 3001             (      raakatu.asm):00867                        leax      1,X                 ; Swap ...
04C8 A684             (      raakatu.asm):00868                        lda       ,X                  ; ... cursor ...
04CA 301F             (      raakatu.asm):00869                        leax      -1,X                ; ... and ...
04CC A780             (      raakatu.asm):00870                        sta       ,X+                 ; ... character ...
04CE 86CF             (      raakatu.asm):00871                        lda       #$CF                ; ... to the ...
04D0 A784             (      raakatu.asm):00872                        sta       ,X                  ; ... right
                      (      raakatu.asm):00873         
04D2 20B3             (      raakatu.asm):00874                        bra       L0A66               ; Go get another key
                      (      raakatu.asm):00875         ;
04D4 170025           (      raakatu.asm):00876         L0AB3          lbsr      L0ADB               ; Back off trailing cursor block
04D7 86CF             (      raakatu.asm):00877                        lda       #$CF                ; Store ...
04D9 A784             (      raakatu.asm):00878                        sta       ,X                  ; ... cursor block
                      (      raakatu.asm):00879         
04DB 20AA             (      raakatu.asm):00880                        bra       L0A66               ; Go get another key
                      (      raakatu.asm):00881         ;
04DD 8C05E0           (      raakatu.asm):00882         L0ABC          cmpx      #$05E0              ; At the start of the row?
                      (      raakatu.asm):00883         
04E0 27A5             (      raakatu.asm):00884                        beq       L0A66               ; Yes ... go get another key
04E2 301F             (      raakatu.asm):00885                        leax      -1,X                ; Back up one character
04E4 170015           (      raakatu.asm):00886                        lbsr      L0ADB               ; Erase the end
                      (      raakatu.asm):00887         
04E7 209E             (      raakatu.asm):00888                        bra       L0A66               ; Go get another key
                      (      raakatu.asm):00889         ;
04E9 170010           (      raakatu.asm):00890         L0AC8          lbsr      L0ADB               ; Back off cursor character
04EC 39               (      raakatu.asm):00891         L0ACB          rts                           ; Done
                      (      raakatu.asm):00892         ;
04ED 8E05E0           (      raakatu.asm):00893         L0ACC          ldx       #$05E0              ; Start of bottom row
04F0 C620             (      raakatu.asm):00894                        ldb       #$20                ; 32 characters on the row
04F2 8660             (      raakatu.asm):00895                        lda       #$60                ; SPACE character
04F4 A780             (      raakatu.asm):00896         L0AD3          sta       ,X+                 ; Clear ...
04F6 5A               (      raakatu.asm):00897                        decb                          ; ... the ...
                      (      raakatu.asm):00898         
04F7 26FB             (      raakatu.asm):00899                        bne       L0AD3               ; ... bottom row
04F9 16FF85           (      raakatu.asm):00900                        lbra      L0A60               ; Go get another key
                      (      raakatu.asm):00901         ;
04FC 1F13             (      raakatu.asm):00902         L0ADB          tfr       X,U                 ; Hold X
04FE 3101             (      raakatu.asm):00903                        leay      1,X                 ; Clear trailing ...
0500 8660             (      raakatu.asm):00904                        lda       #$60                ; ... cursor ...
0502 A784             (      raakatu.asm):00905                        sta       ,X                  ; ... block
                      (      raakatu.asm):00906         ;
0504 108C0600         (      raakatu.asm):00907                        cmpy      #$0600              ; End of screen?
                      (      raakatu.asm):00908         
0508 27E2             (      raakatu.asm):00909                        beq       L0ACB               ; Yes out
050A 108C0601         (      raakatu.asm):00910                        cmpy      #$0601              ; End of screen?
                      (      raakatu.asm):00911         
050E 27DC             (      raakatu.asm):00912                        beq       L0ACB               ; Yes out
0510 108C0602         (      raakatu.asm):00913                        cmpy      #$0602              ; End of screen?
                      (      raakatu.asm):00914         
0514 27D6             (      raakatu.asm):00915                        beq       L0ACB               ; Yes out
0516 A6A0             (      raakatu.asm):00916         L0AF5          lda       ,Y+                 ; Back ...
0518 A780             (      raakatu.asm):00917                        sta       ,X+                 ; ... up ...
051A 108C0600         (      raakatu.asm):00918                        cmpy      #$0600              ; ... row ...
                      (      raakatu.asm):00919         
051E 26F6             (      raakatu.asm):00920                        bne       L0AF5               ; ... over cursor
0520 8660             (      raakatu.asm):00921                        lda       #$60                ; Clear last ...
0522 A784             (      raakatu.asm):00922                        sta       ,X                  ; ... character
0524 1F31             (      raakatu.asm):00923                        tfr       U,X                 ; Restore X
0526 39               (      raakatu.asm):00924                        rts                           ; Done
                      (      raakatu.asm):00925         ;
0527 8C0600           (      raakatu.asm):00926         L0B06          cmpx      #$0600              ; Past end of screen?
                      (      raakatu.asm):00927         
052A 2717             (      raakatu.asm):00928                        beq       L0B22               ; Yes ... out
052C BF01A7           (      raakatu.asm):00929                        stx       u01A7               ; Hold insertion point
052F 8E0600           (      raakatu.asm):00930                        ldx       #$0600              ; End+1
0532 108E05FF         (      raakatu.asm):00931                        ldy       #$05FF              ; End
0536 E6A2             (      raakatu.asm):00932         L0B15          ldb       ,-Y                 ; Slide bottom row ...
0538 E782             (      raakatu.asm):00933                        stb       ,-X                 ; ... to the right
053A BC01A7           (      raakatu.asm):00934                        cmpx      u01A7               ; At the insertion point?
                      (      raakatu.asm):00935         
053D 26F7             (      raakatu.asm):00936                        bne       L0B15               ; No ... slide all
053F C660             (      raakatu.asm):00937                        ldb       #$60                ; SPACE
0541 E784             (      raakatu.asm):00938                        stb       ,X                  ; Clear first character
0543 39               (      raakatu.asm):00939         L0B22          rts                           ; Done
                      (      raakatu.asm):00940         ;
0544 17FFE0           (      raakatu.asm):00941         L0B23          lbsr      L0B06               ; Slide row over from cursor
0547 86CF             (      raakatu.asm):00942                        lda       #$CF                ; Cursor character (white block)
0549 A784             (      raakatu.asm):00943                        sta       ,X                  ; Cursor to screen
054B 39               (      raakatu.asm):00944                        rts                           ; Done
                      (      raakatu.asm):00945         
                      (      raakatu.asm):00946         ;##-GetKey
054C 1707A7           (      raakatu.asm):00947         L0B2B          lbsr      L12A8               ; Get random number every key
                      (      raakatu.asm):00948         *L0B2E          jsr       [$A000]             ; Get key from user
054F 17341B           (      raakatu.asm):00949                                    lbsr      os9read
0552 4D               (      raakatu.asm):00950                        tsta                          ; Anything pressed?
                      (      raakatu.asm):00951         
0553 27F7             (      raakatu.asm):00952                        beq       L0B2B               ; No ... keep waiting
0555 8141             (      raakatu.asm):00953                        cmpa      #$41                ; Letter 'A'
                      (      raakatu.asm):00954         
0557 2406             (      raakatu.asm):00955                        bcc       L0B3F               ; Greater or equal ... use it
0559 8120             (      raakatu.asm):00956                        cmpa      #$20                ; Space
                      (      raakatu.asm):00957         
055B 2502             (      raakatu.asm):00958                        bcs       L0B3F               ; Lower .... use it
055D 8B40             (      raakatu.asm):00959                        adda      #$40                ; Not really sure why. '!' becomes 'a'.
055F 39               (      raakatu.asm):00960         L0B3F          rts                           ; Done
                      (      raakatu.asm):00961         
                      (      raakatu.asm):00962         
                      (      raakatu.asm):00963         ;##DecodeBuffer
                      (      raakatu.asm):00964         ; X=input buffer on screen (1 before)
                      (      raakatu.asm):00965         ; 1D8=pointer to result token list
                      (      raakatu.asm):00966         ; Return 1CF LSB of first word
                      (      raakatu.asm):00967         ; Return 1BB LSB of next word
                      (      raakatu.asm):00968         ; Return list of 3-byte tokens filled into buffer pointed to by 1D8:
                      (      raakatu.asm):00969         ;   NN WW PP
                      (      raakatu.asm):00970         ;     NN = list number
                      (      raakatu.asm):00971         ;     WW = word number
                      (      raakatu.asm):00972         ;     PP = LSB of word on screen
                      (      raakatu.asm):00973         ;
0560 3001             (      raakatu.asm):00974         L0B40          leax      1,X                 ; Next in buffer
                      (      raakatu.asm):00975         ;
0562 1F10             (      raakatu.asm):00976         L0B42          tfr       X,D                 ; Hold ...
0564 F701CF           (      raakatu.asm):00977                        stb       u01CF               ; ... LSB of first word (could be ignored)
0567 8C0600           (      raakatu.asm):00978                        cmpx      #$0600              ; End of buffer?
                      (      raakatu.asm):00979         
056A 27F3             (      raakatu.asm):00980                        beq       L0B3F               ; Yes ... out
056C A684             (      raakatu.asm):00981                        lda       ,X                  ; Next in input
056E 8160             (      raakatu.asm):00982                        cmpa      #$60                ; Valid character?
                      (      raakatu.asm):00983         
0570 24EE             (      raakatu.asm):00984                        bcc       L0B40               ; No ... skip till we find one
0572 318D3108         (      raakatu.asm):00985                        leay      L3C29,pc            ; Word token table
0576 170032           (      raakatu.asm):00986                        lbsr      L0B8B               ; Try first list
                      (      raakatu.asm):00987         
0579 27E7             (      raakatu.asm):00988                        beq       L0B42               ; Found a match ... ignore it
057B C601             (      raakatu.asm):00989                        ldb       #$01                ; Staring list number
057D 3121             (      raakatu.asm):00990         L0B5D          leay      1,Y                 ; Next list of words
057F 170029           (      raakatu.asm):00991                        lbsr      L0B8B               ; Try and match
                      (      raakatu.asm):00992         
0582 2708             (      raakatu.asm):00993                        beq       L0B6C               ; Found a match ... record it
0584 5C               (      raakatu.asm):00994                        incb                          ; Next list of words
0585 C105             (      raakatu.asm):00995                        cmpb      #$05                ; All tried?
                      (      raakatu.asm):00996         
0587 26F4             (      raakatu.asm):00997                        bne       L0B5D               ; No ... go back and try all
0589 8A01             (      raakatu.asm):00998                        ora       #$01                ; Not-zero ... error
058B 39               (      raakatu.asm):00999                        rts                           ; Done
                      (      raakatu.asm):01000         
058C 1E12             (      raakatu.asm):01001         L0B6C          exg       X,Y                 ; X to Y
058E BE01D8           (      raakatu.asm):01002                        ldx       u01D8               ; Current result token pointer
0591 E780             (      raakatu.asm):01003                        stb       ,X+                 ; Store list number
0593 A780             (      raakatu.asm):01004                        sta       ,X+                 ; Store word number
0595 B601CF           (      raakatu.asm):01005                        lda       u01CF               ; Start of word
0598 A780             (      raakatu.asm):01006                        sta       ,X+                 ; Store word start
059A BF01D8           (      raakatu.asm):01007                        stx       u01D8               ; Bump result token pointer
059D 1E12             (      raakatu.asm):01008                        exg       X,Y                 ; Restore X
059F C101             (      raakatu.asm):01009                        cmpb      #$01                ; Is this the first (VERB) list?
                      (      raakatu.asm):01010         
05A1 2606             (      raakatu.asm):01011                        bne       L0B89               ; No ... skip marking
05A3 B601BC           (      raakatu.asm):01012                        lda       u01BC               ; Mark the input buffer location ...
05A6 B701BB           (      raakatu.asm):01013                        sta       u01BB               ; ... of the verb
05A9 4F               (      raakatu.asm):01014         L0B89          clra                          ; OK
05AA 39               (      raakatu.asm):01015                        rts                           ; Return
                      (      raakatu.asm):01016         
                      (      raakatu.asm):01017         ;##DecodeWord
                      (      raakatu.asm):01018         ; Y=input match table
                      (      raakatu.asm):01019         ; X=pointer to input buffer word
                      (      raakatu.asm):01020         ; Return word data in A if found
                      (      raakatu.asm):01021         ; Return is-zero if found, not-zero if not found
                      (      raakatu.asm):01022         ; Return 1AB with word data (if found)
                      (      raakatu.asm):01023         ; Return 1BC with LSB of pointer-to-next-word
                      (      raakatu.asm):01024         ;
                      (      raakatu.asm):01025         ; 1A7,1A8 Temporary
                      (      raakatu.asm):01026         ; 1AB Temporary
                      (      raakatu.asm):01027         ; 1D0 Temporary 
                      (      raakatu.asm):01028         ;
05AB A6A4             (      raakatu.asm):01029         L0B8B          lda       ,Y                  ; Length of word
                      (      raakatu.asm):01030         
05AD 2603             (      raakatu.asm):01031                        bne       L0B92               ; It is a word ... go check it
05AF 8A01             (      raakatu.asm):01032                        ora       #$01                ; End of list ...
05B1 39               (      raakatu.asm):01033                        rts                           ; ... return not-zero
05B2 B701AB           (      raakatu.asm):01034         L0B92          sta       u01AB               ; Temporary
05B5 B701D0           (      raakatu.asm):01035                        sta       u01D0               ; Temporary
05B8 3410             (      raakatu.asm):01036                        pshs      X                   ; Hold pointer to input word
05BA 3121             (      raakatu.asm):01037                        leay      1,Y                 ; Skip over word length in table
05BC A684             (      raakatu.asm):01038         L0B9C          lda       ,X                  ; Character from input (from screen)
05BE 8160             (      raakatu.asm):01039                        cmpa      #$60                ; Space?
                      (      raakatu.asm):01040         
05C0 2753             (      raakatu.asm):01041                        beq       L0BF5               ; Yes. Didn't match the target word. Next.
05C2 8C0600           (      raakatu.asm):01042                        cmpx      #$0600              ; Past screen (end of buffer)?
                      (      raakatu.asm):01043         
05C5 274E             (      raakatu.asm):01044                        beq       L0BF5               ; Yes. Didn't match the target word. next
05C7 8160             (      raakatu.asm):01045                        cmpa      #$60                ; Valid character?
                      (      raakatu.asm):01046         
05C9 2504             (      raakatu.asm):01047                        bcs       L0BAF               ; Yes ... do compare
05CB 3001             (      raakatu.asm):01048                        leax      1,X                 ; No ... skip this
                      (      raakatu.asm):01049         
05CD 20ED             (      raakatu.asm):01050                        bra       L0B9C               ; Look for valid character
05CF A1A4             (      raakatu.asm):01051         L0BAF          cmpa      ,Y                  ; Matches target word?
                      (      raakatu.asm):01052         
05D1 2642             (      raakatu.asm):01053                        bne       L0BF5               ; No ... next word
05D3 3001             (      raakatu.asm):01054                        leax      1,X                 ; Next in input
05D5 3121             (      raakatu.asm):01055                        leay      1,Y                 ; Next in match
05D7 7A01AB           (      raakatu.asm):01056                        dec       u01AB               ; All done?
                      (      raakatu.asm):01057         
05DA 26E0             (      raakatu.asm):01058                        bne       L0B9C               ; No ... keep looking
05DC B601D0           (      raakatu.asm):01059                        lda       u01D0               ; Original length
05DF 8106             (      raakatu.asm):01060                        cmpa      #$06                ; Six letter input?
                      (      raakatu.asm):01061         
05E1 2706             (      raakatu.asm):01062                        beq       L0BC9               ; Yes ... could be truncated. That's enough of a match.
05E3 A684             (      raakatu.asm):01063                        lda       ,X                  ; Next from screen
05E5 8160             (      raakatu.asm):01064                        cmpa      #$60                ; Space? End of word?
                      (      raakatu.asm):01065         
05E7 2533             (      raakatu.asm):01066                        bcs       L0BFC               ; No. Try next word
05E9 A6A4             (      raakatu.asm):01067         L0BC9          lda       ,Y                  ; Get the word data
05EB 3520             (      raakatu.asm):01068                        puls      Y                   ; Drop the input buffer pointer
05ED B701AB           (      raakatu.asm):01069                        sta       u01AB               ; Hold the word data
05F0 A684             (      raakatu.asm):01070         L0BD0          lda       ,X                  ; Next in input buffer?
05F2 8160             (      raakatu.asm):01071                        cmpa      #$60                ; Is it a space?
                      (      raakatu.asm):01072         
05F4 270C             (      raakatu.asm):01073                        beq       L0BE2               ; Yes ... ready for next word
05F6 BF01A7           (      raakatu.asm):01074                        stx       u01A7               ; Start of next word (in case end of buffer)
05F9 8C0600           (      raakatu.asm):01075                        cmpx      #$0600              ; Is this the end of the input buffer?
                      (      raakatu.asm):01076         
05FC 270A             (      raakatu.asm):01077                        beq       L0BE8               ; Yes. Done
05FE 3001             (      raakatu.asm):01078                        leax      1,X                 ; Skip to next input word
                      (      raakatu.asm):01079         
0600 20EE             (      raakatu.asm):01080                        bra       L0BD0               ; Keep looking for input
0602 BF01A7           (      raakatu.asm):01081         L0BE2          stx       u01A7               ; Pointer to ending space
0605 7C01A8           (      raakatu.asm):01082                        inc       u01A8               ; Point to next character past space (start of next word)
0608 B601A8           (      raakatu.asm):01083         L0BE8          lda       u01A8               ; Keep ...
060B B701BC           (      raakatu.asm):01084                        sta       u01BC               ; ... only LSB
060E B601AB           (      raakatu.asm):01085                        lda       u01AB               ; Return word data in A
0611 7F01A7           (      raakatu.asm):01086                        clr       u01A7               ; return is-zero for found
0614 39               (      raakatu.asm):01087                        rts                           ; Done
                      (      raakatu.asm):01088         ;
0615 3121             (      raakatu.asm):01089         L0BF5          leay      1,Y                 ; Skip next in word data
0617 7A01AB           (      raakatu.asm):01090                        dec       u01AB               ; All skipped
                      (      raakatu.asm):01091         
061A 26F9             (      raakatu.asm):01092                        bne       L0BF5               ; No ... skip all
061C 3510             (      raakatu.asm):01093         L0BFC          puls      X                   ; Restore pointer to word
061E 3121             (      raakatu.asm):01094                        leay      1,Y                 ; Skip word data
0620 16FF88           (      raakatu.asm):01095                        lbra      L0B8B               ; Keep trying
                      (      raakatu.asm):01096         
                      (      raakatu.asm):01097         ;##ProcessCommand
                      (      raakatu.asm):01098         ; Either a direct command or a common command
0623 A680             (      raakatu.asm):01099         L0C03          lda       ,X+                 ; Next in script
0625 1F89             (      raakatu.asm):01100                        tfr       A,B                 ; Hold original command
0627 8580             (      raakatu.asm):01101                        bita      #$80                ; Upper bit set?
                      (      raakatu.asm):01102         
0629 2714             (      raakatu.asm):01103                        beq       L0C1E               ; No ... do commands
062B 3430             (      raakatu.asm):01104                        pshs      Y,X                 ; Hold
062D 308D2C1E         (      raakatu.asm):01105                        leax      L37FA,pc            ; Common commands
0631 17FE0C           (      raakatu.asm):01106                        lbsr      L0A1F               ; Find common command
                      (      raakatu.asm):01107         
0634 2406             (      raakatu.asm):01108                        bcc       L0C1B               ; Not found ... skip
0636 17FE2A           (      raakatu.asm):01109                        lbsr      L0A42               ; Skip length of command
0639 17FFE7           (      raakatu.asm):01110                        lbsr      L0C03               ; Execute command
063C 3530             (      raakatu.asm):01111         L0C1B          puls      X,Y                 ; Restore
063E 39               (      raakatu.asm):01112                        rts                           ; Out
                      (      raakatu.asm):01113         
063F 1F98             (      raakatu.asm):01114         L0C1E          tfr       B,A                 ; Hold original command
0641 318D06F5         (      raakatu.asm):01115         L0C20          leay      L12E5,pc            ; Function table
0645 48               (      raakatu.asm):01116                        asla                          ; Jump to ...
0646 6EB6             (      raakatu.asm):01117                        jmp       [A,Y]               ; ... command
                      (      raakatu.asm):01118         
                      (      raakatu.asm):01119         ;##Com0D_ExecutePassingList
                      (      raakatu.asm):01120         ; Execute a list of commands as long as they pass. Either way end pointing one
                      (      raakatu.asm):01121         ; past end.
                      (      raakatu.asm):01122         ; Data: LENGTH + list of command
0648 17FE1A           (      raakatu.asm):01123         L0C27          lbsr      L0A44               ; Read length of command
064B 17FE2B           (      raakatu.asm):01124         L0C2A          lbsr      L0A58               ; Are we past the end?
                      (      raakatu.asm):01125         
064E 240C             (      raakatu.asm):01126                        bcc       L0C3B               ; Yes ... end successfully
0650 3420             (      raakatu.asm):01127                        pshs      Y                   ; Hold the end
0652 17FFCE           (      raakatu.asm):01128                        lbsr      L0C03               ; Execute the command
0655 3520             (      raakatu.asm):01129                        puls      Y                   ; Restore the end
                      (      raakatu.asm):01130         
0657 27F2             (      raakatu.asm):01131                        beq       L0C2A               ; Command successful? Yes ... keep processing
0659 1E12             (      raakatu.asm):01132                        exg       X,Y                 ; Fail ... put us at the end
065B 39               (      raakatu.asm):01133                        rts                           ; Done
065C 1E12             (      raakatu.asm):01134         L0C3B          exg       X,Y                 ; Point to end of list
065E 4F               (      raakatu.asm):01135                        clra                          ; Z=1 ... success
065F 39               (      raakatu.asm):01136                        rts                           ; Done
                      (      raakatu.asm):01137         
                      (      raakatu.asm):01138         ;##Com0E_ExecuteFailingList
0660 17FE02           (      raakatu.asm):01139         L0C3F          lbsr      L0A44               ; Load the end
0663 17FE13           (      raakatu.asm):01140         L0C42          lbsr      L0A58               ; Reached end of list?
                      (      raakatu.asm):01141         
0666 240C             (      raakatu.asm):01142                        bcc       L0C53               ; Yes ... error
0668 3420             (      raakatu.asm):01143                        pshs      Y                   ; Hold end of command
066A 17FFB6           (      raakatu.asm):01144                        lbsr      L0C03               ; Execute command
066D 3520             (      raakatu.asm):01145                        puls      Y                   ; Restore end
                      (      raakatu.asm):01146         
066F 26F2             (      raakatu.asm):01147                        bne       L0C42               ; Command failed ... try next
0671 1E12             (      raakatu.asm):01148                        exg       X,Y                 ; Set script pointer to end of list
0673 39               (      raakatu.asm):01149                        rts                           ; Out
                      (      raakatu.asm):01150         ; 
0674 1E12             (      raakatu.asm):01151         L0C53          exg       X,Y                 ; Set script pointer to end of list
0676 8A01             (      raakatu.asm):01152                        ora       #$01                ; Return fail
0678 39               (      raakatu.asm):01153                        rts                           ; Done
                      (      raakatu.asm):01154         
                      (      raakatu.asm):01155         ;##Com0B_Switch
0679 17FDE9           (      raakatu.asm):01156         L0C58          lbsr      L0A44               ; Get size of switch list
067C E680             (      raakatu.asm):01157                        ldb       ,X+                 ; Get function to call
067E 17FDF8           (      raakatu.asm):01158         L0C5D          lbsr      L0A58               ; End of options?
                      (      raakatu.asm):01159         
0681 24F1             (      raakatu.asm):01160                        bcc       L0C53               ; Yes ... out with error
0683 3420             (      raakatu.asm):01161                        pshs      Y                   ; Hold total switch size
0685 3404             (      raakatu.asm):01162                        pshs      B                   ; Hold function to call
0687 1F98             (      raakatu.asm):01163                        tfr       B,A                 ; Call the ...
0689 17FFB5           (      raakatu.asm):01164                        lbsr      L0C20               ; ... target function
068C 3504             (      raakatu.asm):01165                        puls      B                   ; Restore function to call
                      (      raakatu.asm):01166         
068E 2709             (      raakatu.asm):01167                        beq       L0C78               ; Got our script ... go do it
0690 17FDD2           (      raakatu.asm):01168                        lbsr      L0A44               ; Size of pass script
0693 1E12             (      raakatu.asm):01169                        exg       X,Y                 ; Skip over this option
0695 3520             (      raakatu.asm):01170                        puls      Y                   ; End of script
                      (      raakatu.asm):01171         
0697 20E5             (      raakatu.asm):01172                        bra       L0C5D               ; Keep looking
0699 17FDC9           (      raakatu.asm):01173         L0C78          lbsr      L0A44               ; Skip length
069C 17FF84           (      raakatu.asm):01174                        lbsr      L0C03               ; Execute
069F 3510             (      raakatu.asm):01175                        puls      X                   ; Restore script
06A1 39               (      raakatu.asm):01176                        rts                           ; Done
                      (      raakatu.asm):01177         
                      (      raakatu.asm):01178         ;##Com00_MoveActiveObjectToRoomAndLook
06A2 170009           (      raakatu.asm):01179         L0C81          lbsr      L0C8D               ; Move active object to new room
06A5 3410             (      raakatu.asm):01180                        pshs      X                   ; Hold script
06A7 1700C3           (      raakatu.asm):01181                        lbsr      L0D4A               ; Print room description and objects
06AA 3510             (      raakatu.asm):01182                        puls      X                   ; Restore script
06AC 4F               (      raakatu.asm):01183                        clra                          ; OK
06AD 39               (      raakatu.asm):01184                        rts                           ; Done
                      (      raakatu.asm):01185         
                      (      raakatu.asm):01186         ;##Com19_MoveActiveObjectToRoom
06AE A680             (      raakatu.asm):01187         L0C8D          lda       ,X+                 ; New room number
06B0 3410             (      raakatu.asm):01188                        pshs      X                   ; Hold script
06B2 B701D5           (      raakatu.asm):01189                        sta       u01D5               ; Store new actvie room number
06B5 1F89             (      raakatu.asm):01190                        tfr       A,B                 ; Store ...
06B7 308D08BD         (      raakatu.asm):01191                        leax      L1523,pc            ; ... pointer ...
06BB 17FD82           (      raakatu.asm):01192                        lbsr      L0A1F               ; ... to ...
06BE BF01D6           (      raakatu.asm):01193                        stx       u01D6               ; ... new room
06C1 BE01D3           (      raakatu.asm):01194                        ldx       u01D3               ; Active object
06C4 17FD9C           (      raakatu.asm):01195                        lbsr      L0A42               ; Skip size
06C7 B601D5           (      raakatu.asm):01196                        lda       u01D5               ; New location
06CA A784             (      raakatu.asm):01197                        sta       ,X                  ; Move object to active room
06CC 3510             (      raakatu.asm):01198                        puls      X                   ; Restore script
06CE 4F               (      raakatu.asm):01199                        clra                          ; OK
06CF 39               (      raakatu.asm):01200                        rts                           ; Done
                      (      raakatu.asm):01201         
                      (      raakatu.asm):01202         ;##Com1A_SetVarObjectTo1stNoun
06D0 FE01C6           (      raakatu.asm):01203         L0CAE          ldu       u01C6               ; Copy 1st noun ...
06D3 FF01C0           (      raakatu.asm):01204                        stu       u01C0               ; ... data pointer
06D6 B601C3           (      raakatu.asm):01205                        lda       u01C3               ; Copy 1st noun ...
06D9 B701BF           (      raakatu.asm):01206                        sta       u01BF               ; ... object number
06DC 4F               (      raakatu.asm):01207                        clra                          ; Z=1 for OK
06DD 39               (      raakatu.asm):01208                        rts                           ; Done
                      (      raakatu.asm):01209         
                      (      raakatu.asm):01210         ;##Com1B_SetVarObjectTo2ndNoun
06DE FE01CC           (      raakatu.asm):01211         L0CBC          ldu       u01CC               ; Copy 2nd noun ...
06E1 FF01C0           (      raakatu.asm):01212                        stu       u01C0               ; ... data pointer
06E4 B601C9           (      raakatu.asm):01213                        lda       u01C9               ; Copy 2nd noun ...
06E7 B701BF           (      raakatu.asm):01214                        sta       u01BF               ; ... object number
06EA 4F               (      raakatu.asm):01215                        clra                          ; Z=1 for OK
06EB 39               (      raakatu.asm):01216                        rts                           ; Done
                      (      raakatu.asm):01217         
                      (      raakatu.asm):01218         ;##Com1C_SetVarObject
06EC E680             (      raakatu.asm):01219         L0CCA          ldb       ,X+                 ; Get object number from script
06EE 3410             (      raakatu.asm):01220                        pshs      X                   ; Hold script pointer
06F0 F701BF           (      raakatu.asm):01221                        stb       u01BF               ; Store target object number
                      (      raakatu.asm):01222         
06F3 2706             (      raakatu.asm):01223                        beq       L0CD9               ; 0 ... no-object
06F5 17046A           (      raakatu.asm):01224                        lbsr      L1133               ; Find object data
06F8 BF01C0           (      raakatu.asm):01225                        stx       u01C0               ; Store target object data
06FB 3510             (      raakatu.asm):01226         L0CD9          puls      X                   ; Restore script
06FD 4F               (      raakatu.asm):01227                        clra                          ; Return OK
06FE 39               (      raakatu.asm):01228                        rts                           ; Done
                      (      raakatu.asm):01229         
                      (      raakatu.asm):01230         ;##Com21_RunGeneralWithTempPhrase
06FF FE01C6           (      raakatu.asm):01231         L0CDD          ldu       u01C6               ; 1st noun data ...
0702 3440             (      raakatu.asm):01232                        pshs      U                   ; ... on stack
0704 FE01CC           (      raakatu.asm):01233                        ldu       u01CC               ; 2nd noun data ...
0707 3440             (      raakatu.asm):01234                        pshs      U                   ; ... on stack
0709 B601C9           (      raakatu.asm):01235                        lda       u01C9               ; 2nd noun number
070C F601C3           (      raakatu.asm):01236                        ldb       u01C3               ; 1st noun number
070F 3406             (      raakatu.asm):01237                        pshs      B,A                 ; Hold these
0711 B601D1           (      raakatu.asm):01238                        lda       u01D1               ; Phrase number
0714 3402             (      raakatu.asm):01239                        pshs      A                   ; Hold it
0716 A680             (      raakatu.asm):01240                        lda       ,X+                 ; New temporary ...
0718 B701D1           (      raakatu.asm):01241                        sta       u01D1               ; ... phrase number
071B EC81             (      raakatu.asm):01242                        ldd       ,X++                ; Temporary 1st and 2nd noun numbers
071D F701AB           (      raakatu.asm):01243                        stb       u01AB               ; Hold 2nd noun for now
0720 3410             (      raakatu.asm):01244                        pshs      X                   ; Hold script
0722 B701C3           (      raakatu.asm):01245                        sta       u01C3               ; Temporary 1st noun
0725 1F89             (      raakatu.asm):01246                        tfr       A,B                 ; To B (for lookup)
                      (      raakatu.asm):01247         
0727 2706             (      raakatu.asm):01248                        beq       L0D0D               ; Not one ... skip
0729 170436           (      raakatu.asm):01249                        lbsr      L1133               ; Lookup object in B
072C BF01C6           (      raakatu.asm):01250                        stx       u01C6               ; Temporary 1st noun data
072F F601AB           (      raakatu.asm):01251         L0D0D          ldb       u01AB               ; Temporary 2nd noun ...
0732 F701C9           (      raakatu.asm):01252                        stb       u01C9               ; ... index
                      (      raakatu.asm):01253         
0735 2706             (      raakatu.asm):01254                        beq       L0D1B               ; There isn't one ... skip
0737 170428           (      raakatu.asm):01255                        lbsr      L1133               ; Lookup object in B
073A BF01CC           (      raakatu.asm):01256                        stx       u01CC               ; Temporary 2nd noun
073D 308D2550         (      raakatu.asm):01257         L0D1B          leax      L323C,pc           ; General commands
0741 17FD1F           (      raakatu.asm):01258                        lbsr      L0A42               ; Skip ID and length
0744 17FEDC           (      raakatu.asm):01259                        lbsr      L0C03               ; Execute general script
0747 1FA8             (      raakatu.asm):01260                        tfr       CC,A                ; Hold the result ...
0749 B701AB           (      raakatu.asm):01261                        sta       u01AB               ; ... for a moment
074C 3520             (      raakatu.asm):01262                        puls      Y                   ;
074E 3502             (      raakatu.asm):01263                        puls      A                   ;
0750 B701D1           (      raakatu.asm):01264                        sta       u01D1               ; Restore ...
0753 3506             (      raakatu.asm):01265                        puls      A,B                 ; ... phrase ...
0755 F701C3           (      raakatu.asm):01266                        stb       u01C3               ; ... and ...
0758 B701C9           (      raakatu.asm):01267                        sta       u01C9               ; ... nouns
075B 3540             (      raakatu.asm):01268                        puls      U                   ;
075D FF01CC           (      raakatu.asm):01269                        stu       u01CC               ;
0760 3540             (      raakatu.asm):01270                        puls      U                   ;
0762 FF01C6           (      raakatu.asm):01271                        stu       u01C6               ;
0765 1E12             (      raakatu.asm):01272                        exg       X,Y                 ;
0767 B601AB           (      raakatu.asm):01273                        lda       u01AB               ;
076A 1F8A             (      raakatu.asm):01274                        tfr       A,CC                ; Restore result
076C 39               (      raakatu.asm):01275         L0D49          rts                           ; Done
                      (      raakatu.asm):01276         
                      (      raakatu.asm):01277         ; Print room description
076D B601D2           (      raakatu.asm):01278         L0D4A          lda       u01D2               ; Actiuve object number
0770 811D             (      raakatu.asm):01279                        cmpa      #$1D                ; Is this the SYSTEM object?
                      (      raakatu.asm):01280         
0772 26F8             (      raakatu.asm):01281                        bne       L0D49               ; No ... return
0774 BE01D6           (      raakatu.asm):01282                        ldx       u01D6               ; Current room script
0777 17FCE9           (      raakatu.asm):01283                        lbsr      L0A42               ; Skip length
077A 3001             (      raakatu.asm):01284                        leax      1,X                 ;
077C C603             (      raakatu.asm):01285                        ldb       #$03                ; You are in DESCRIPTION script
077E 17FCC7           (      raakatu.asm):01286                        lbsr      L0A27               ; Get room description
                      (      raakatu.asm):01287         
0781 2405             (      raakatu.asm):01288                        bcc       L0D65               ; No room description ... print objects in room
0783 3001             (      raakatu.asm):01289                        leax      1,X                 ; Assume length is one byte
0785 1703F4           (      raakatu.asm):01290                        lbsr      L114C               ; Print the packed message
                      (      raakatu.asm):01291         ;
                      (      raakatu.asm):01292         ; Print object descriptions
                      (      raakatu.asm):01293         ;
0788 308D13C8         (      raakatu.asm):01294         L0D65          leax      L20FF,pc            ; Object data
078C 17FCD4           (      raakatu.asm):01295                        lbsr      L0A42               ; Skip length
078F 3420             (      raakatu.asm):01296         L0D6B          pshs      Y                   ; Hold end
0791 17FCCF           (      raakatu.asm):01297                        lbsr      L0A42               ; Skip this object's length
0794 B601D5           (      raakatu.asm):01298                        lda       u01D5               ; Current room
0797 A184             (      raakatu.asm):01299                        cmpa      ,X                  ; Object in room?
                      (      raakatu.asm):01300         
0799 2612             (      raakatu.asm):01301                        bne       L0D89               ; No ... next object
079B 3003             (      raakatu.asm):01302                        leax      3,X                 ; Skip data
079D C603             (      raakatu.asm):01303                        ldb       #$03                ; Get description ...
079F 17FCA6           (      raakatu.asm):01304                        lbsr      L0A27               ; ... field
                      (      raakatu.asm):01305         
07A2 2409             (      raakatu.asm):01306                        bcc       L0D89               ; No description ... next object
07A4 3001             (      raakatu.asm):01307                        leax      1,X                 ; Skip length
07A6 3420             (      raakatu.asm):01308                        pshs      Y                   ; Hold end of object
07A8 1703D1           (      raakatu.asm):01309                        lbsr      L114C               ; Print description
07AB 3520             (      raakatu.asm):01310                        puls      Y                   ; Restore length
07AD 1E12             (      raakatu.asm):01311         L0D89          exg       X,Y                 ; Next object
07AF 3520             (      raakatu.asm):01312                        puls      Y                   ; End of objects
07B1 17FCC5           (      raakatu.asm):01313                        lbsr      L0A58               ; All done?
                      (      raakatu.asm):01314         
07B4 25D9             (      raakatu.asm):01315                        bcs       L0D6B               ; No ... keep printing
07B6 39               (      raakatu.asm):01316         L0D92          rts                           ; Done
                      (      raakatu.asm):01317         
                      (      raakatu.asm):01318         ;##Com01_IsObjectInPackOrRoom
07B7 E680             (      raakatu.asm):01319         L0D93          ldb       ,X+                 ; Get object number from script
07B9 3410             (      raakatu.asm):01320                        pshs      X                   ; Hold script pointer
07BB 1703A4           (      raakatu.asm):01321                        lbsr      L1133               ; Get object data
07BE 17FB07           (      raakatu.asm):01322                        lbsr      L08AA               ; See if it is in pack or room
07C1 3510             (      raakatu.asm):01323                        puls      X                   ; Restore script
07C3 39               (      raakatu.asm):01324                        rts                           ; Out
                      (      raakatu.asm):01325         
                      (      raakatu.asm):01326         ;##Com20_CheckActiveObject
07C4 B601D2           (      raakatu.asm):01327         L0DA0          lda       u01D2               ; Active object
07C7 A180             (      raakatu.asm):01328                        cmpa      ,X+                 ; Matches target?
07C9 39               (      raakatu.asm):01329                        rts                           ; Done
                      (      raakatu.asm):01330         
                      (      raakatu.asm):01331         ;##Com02_CheckObjectIsOwnedByActive
07CA E680             (      raakatu.asm):01332         L0DA6          ldb       ,X+
07CC 1601B5           (      raakatu.asm):01333                        lbra      L0F5F
                      (      raakatu.asm):01334              
                      (      raakatu.asm):01335         ;##Com03_IsObjectYAtX
                      (      raakatu.asm):01336         ; Check to see if an object is at a target location.
07CF EC81             (      raakatu.asm):01337         L0DAB          ldd       ,X++                ; Room and object
07D1 3410             (      raakatu.asm):01338                        pshs      X                   ; Hold script
07D3 B701AB           (      raakatu.asm):01339                        sta       u01AB               ; Remember the room
07D6 170389           (      raakatu.asm):01340                        lbsr      L1133               ; Locate the object
07D9 17FC87           (      raakatu.asm):01341                        lbsr      L0A42               ; Skip the length
07DC EC81             (      raakatu.asm):01342                        ldd       ,X++                ; Get the room to A
07DE B101AB           (      raakatu.asm):01343                        cmpa      u01AB               ; Is this object in the target place?
07E1 3510             (      raakatu.asm):01344                        puls      X                   ; Restore script
07E3 39               (      raakatu.asm):01345                        rts                           ; Out
                      (      raakatu.asm):01346         
                      (      raakatu.asm):01347         ;##Com0C_FAIL
                      (      raakatu.asm):01348         ; Always fail
07E4 8A01             (      raakatu.asm):01349         L0DC0          ora       #$01                ; Set the fail flag
07E6 39               (      raakatu.asm):01350                        rts                           ; Done
                      (      raakatu.asm):01351         
                      (      raakatu.asm):01352         ;##Com04_PrintSYSTEMOrPlayerMessage
07E7 B601D2           (      raakatu.asm):01353         L0DC3          lda       u01D2               ; Active object
07EA 811D             (      raakatu.asm):01354                        cmpa      #$1D                ; Is this the player?
                      (      raakatu.asm):01355         
                      (      raakatu.asm):01356         
07EC 260E             (      raakatu.asm):01357                        bne       L0DD8               ; No ... must be system
                      (      raakatu.asm):01358         
                      (      raakatu.asm):01359         ;##Com1F_PrintMessage
07EE C61D             (      raakatu.asm):01360         L0DCA          ldb       #$1D                ; Player number
07F0 3410             (      raakatu.asm):01361                        pshs      X                   ; Hold script
07F2 17036D           (      raakatu.asm):01362                        lbsr      L1133               ; Look up Player
07F5 17FAD0           (      raakatu.asm):01363                        lbsr      L08AA               ; Is Player in current room?
07F8 3510             (      raakatu.asm):01364                        puls      X                   ; Restore
                      (      raakatu.asm):01365         
07FA 2707             (      raakatu.asm):01366                        beq       L0DDF               ; Yes ... do printing
07FC 17FC66           (      raakatu.asm):01367         L0DD8          lbsr      L0A44               ; Skip to ...
07FF 1E12             (      raakatu.asm):01368                        exg       X,Y                 ; ... end of packed message.
                      (      raakatu.asm):01369         
0801 2003             (      raakatu.asm):01370                        bra       L0DE2               ; Return OK but no printing
0803 170376           (      raakatu.asm):01371         L0DDF          lbsr      L114C               ; Print packed message at X
0806 4F               (      raakatu.asm):01372         L0DE2          clra                          ; OK
0807 39               (      raakatu.asm):01373         L0DE3          rts                           ; Done
                      (      raakatu.asm):01374         
                      (      raakatu.asm):01375         ;##Com07_Look
0808 17FF62           (      raakatu.asm):01376         L0DE4          lbsr      L0D4A               ; Print room description
080B 4F               (      raakatu.asm):01377                        clra                          ; OK
080C 39               (      raakatu.asm):01378                        rts                           ; Done
                      (      raakatu.asm):01379         
                      (      raakatu.asm):01380         ;##Com06_Inventory
080D 3410             (      raakatu.asm):01381         L0DE9          pshs      X                   ; Hold script pointer
080F 860D             (      raakatu.asm):01382         L0DEB          lda       #$0D                ; Print ...
0811 1703A0           (      raakatu.asm):01383                        lbsr      L1184               ; ... CR
0814 308D133C         (      raakatu.asm):01384                        leax      L20FF,pc            ; Objects
0818 17FC48           (      raakatu.asm):01385                        lbsr      L0A42               ; Skip size of objects
                      (      raakatu.asm):01386         ;
081B 17FC5B           (      raakatu.asm):01387         L0DF6          lbsr      L0A58               ; CompareXY
                      (      raakatu.asm):01388         
081E 2424             (      raakatu.asm):01389                        bcc       L0E1F               ; End of list ... out
0820 3420             (      raakatu.asm):01390                        pshs      Y                   ; Hold end of master list of objects
0822 17FC3E           (      raakatu.asm):01391                        lbsr      L0A42               ; Get pointer to next object
0825 E684             (      raakatu.asm):01392                        ldb       ,X                  ; Object location
0827 F101D2           (      raakatu.asm):01393                        cmpb      u01D2               ; Active object?
                      (      raakatu.asm):01394         
082A 2612             (      raakatu.asm):01395                        bne       L0E19               ; No ... skip this object
082C 3003             (      raakatu.asm):01396                        leax      3,X                 ; Skip data
082E C602             (      raakatu.asm):01397                        ldb       #$02                ; Find short name ...
0830 17FC15           (      raakatu.asm):01398                        lbsr      L0A27               ; ... string
                      (      raakatu.asm):01399         
0833 2409             (      raakatu.asm):01400                        bcc       L0E19               ; No short name ... skip
0835 3001             (      raakatu.asm):01401                        leax      1,X                 ; Skip the 02 data id
0837 3420             (      raakatu.asm):01402                        pshs      Y                   ; Hold next-object
0839 170337           (      raakatu.asm):01403                        lbsr      L1143               ; Print packed message and CR
083C 3520             (      raakatu.asm):01404                        puls      Y                   ; Restore next-object
083E 1E12             (      raakatu.asm):01405         L0E19          exg       X,Y                 ; Move to next object
0840 3520             (      raakatu.asm):01406                        puls      Y                   ; End of master list
                      (      raakatu.asm):01407         
0842 20D7             (      raakatu.asm):01408                        bra       L0DF6               ; Do all objects
0844 4F               (      raakatu.asm):01409         L0E1F          clra                          ; Success
0845 3510             (      raakatu.asm):01410                        puls      X                   ; Restore script pointer
0847 39               (      raakatu.asm):01411                        rts                           ; Done
                      (      raakatu.asm):01412         
                      (      raakatu.asm):01413         ;##Com08_CompareObjectToFirstNoun
0848 FE01C6           (      raakatu.asm):01414         L0E23          ldu       u01C6               ; 1st noun data
084B B601C3           (      raakatu.asm):01415                        lda       u01C3               ; 1st noun number
                      (      raakatu.asm):01416         ;
084E FF01D8           (      raakatu.asm):01417         L0E29          stu       u01D8               ; Hold
0851 4D               (      raakatu.asm):01418                        tsta                          ; Is there an object?
                      (      raakatu.asm):01419         
0852 2710             (      raakatu.asm):01420                        beq       L0E3F               ; No ... error
0854 E680             (      raakatu.asm):01421                        ldb       ,X+                 ; Object number from script
0856 3410             (      raakatu.asm):01422                        pshs      X                   ; Hold script
0858 170307           (      raakatu.asm):01423                        lbsr      L1133               ; Find object
085B 1E12             (      raakatu.asm):01424                        exg       X,Y                 ; Pointer of found object to Y
085D 3510             (      raakatu.asm):01425                        puls      X                   ; Restore script pointer
085F 10BC01D8         (      raakatu.asm):01426                        cmpy      u01D8               ; Object the same?
0863 39               (      raakatu.asm):01427                        rts                           ; Done
0864 5D               (      raakatu.asm):01428         L0E3F          tstb                          ; B can't be 0 ... Z=0 error
0865 39               (      raakatu.asm):01429                        rts                           ; Done
                      (      raakatu.asm):01430         
                      (      raakatu.asm):01431         ;##Com09_CompareObjectToSecondNoun
0866 FE01CC           (      raakatu.asm):01432         L0E41          ldu       u01CC               ; 2nd noun data
0869 B601C9           (      raakatu.asm):01433                        lda       u01C9               ; 2nd noun number
                      (      raakatu.asm):01434         
086C 20E0             (      raakatu.asm):01435                        bra       L0E29               ; Do compare
                      (      raakatu.asm):01436         
                      (      raakatu.asm):01437         ;##Com0A_CompareToPhraseForm
086E E680             (      raakatu.asm):01438         L0E49          ldb       ,X+                 ; Compare from script ...
0870 F101D1           (      raakatu.asm):01439                        cmpb      u01D1               ; ... to phrase form
0873 39               (      raakatu.asm):01440                        rts                           ; Done
                      (      raakatu.asm):01441         
                      (      raakatu.asm):01442         ;##Com0F_PickUpObject
                      (      raakatu.asm):01443         ; Move noun object to pack.
0874 3410             (      raakatu.asm):01444         L0E4F          pshs      X                   ; Hold script
0876 BE01C0           (      raakatu.asm):01445                        ldx       u01C0               ; Pointer to noun object
0879 17FBE7           (      raakatu.asm):01446                        lbsr      L0A42               ; Skip length
087C B601D2           (      raakatu.asm):01447                        lda       u01D2               ; Back pack "location" value
087F A784             (      raakatu.asm):01448                        sta       ,X                  ; Move object to pack
0881 4F               (      raakatu.asm):01449                        clra                          ; OK
0882 3510             (      raakatu.asm):01450                        puls      X                   ; Restore script
0884 39               (      raakatu.asm):01451                        rts                           ; Done
                      (      raakatu.asm):01452         
                      (      raakatu.asm):01453         ;##Com10_DropObject
                      (      raakatu.asm):01454         ; Move noun object to current room.
0885 3410             (      raakatu.asm):01455         L0E60          pshs      X                   ; Hold script
0887 BE01C0           (      raakatu.asm):01456                        ldx       u01C0               ; Pointer to noun object
088A 17FBD6           (      raakatu.asm):01457                        lbsr      L0A42               ; Skip length
088D B601D5           (      raakatu.asm):01458                        lda       u01D5               ; Current room
0890 A784             (      raakatu.asm):01459                        sta       ,X                  ; Move object to room
0892 3510             (      raakatu.asm):01460                        puls      X                   ; Restore script
0894 4F               (      raakatu.asm):01461                        clra                          ; Done
0895 39               (      raakatu.asm):01462                        rts                           ; Out
                      (      raakatu.asm):01463         
                      (      raakatu.asm):01464         ;##Com13_PhraseWithRoom1st2nd
0896 3410             (      raakatu.asm):01465         L0E71          pshs      X                   ; Save script
0898 BE01D6           (      raakatu.asm):01466                        ldx       u01D6               ; Current room script
089B 17FBC5           (      raakatu.asm):01467                        lbsr      L0A42               ; Skip id and length
089E 3001             (      raakatu.asm):01468                        leax      1,X                 ; Skip
08A0 C604             (      raakatu.asm):01469                        ldb       #$04                ; Get ...
08A2 17FBA3           (      raakatu.asm):01470                        lbsr      L0A27               ; ... phrase script
                      (      raakatu.asm):01471         
08A5 2408             (      raakatu.asm):01472                        bcc       L0E8A               ; No phrase script ... skip
08A7 17FBB9           (      raakatu.asm):01473                        lbsr      L0A42               ; Skip id and length
08AA 17FD76           (      raakatu.asm):01474                        lbsr      L0C03               ; Execute
                      (      raakatu.asm):01475         
08AD 273B             (      raakatu.asm):01476                        beq       L0EC5               ; Move passed ... OK and out
08AF B601C9           (      raakatu.asm):01477         L0E8A          lda       u01C9               ; Is there a 2nd noun?
                      (      raakatu.asm):01478         
08B2 2717             (      raakatu.asm):01479                        beq       L0EA6               ; No ... skip
08B4 BE01CC           (      raakatu.asm):01480                        ldx       u01CC               ; Second noun data
08B7 17FBA9           (      raakatu.asm):01481                        lbsr      L0A42               ; Skip ...
08BA 3003             (      raakatu.asm):01482                        leax      3,X                 ; ... object header
08BC C606             (      raakatu.asm):01483                        ldb       #$06                ; Get "noun is second" ...
08BE 17FB87           (      raakatu.asm):01484                        lbsr      L0A27               ; ... phrase script
                      (      raakatu.asm):01485         
08C1 2408             (      raakatu.asm):01486                        bcc       L0EA6               ; None ... move on
08C3 17FB9D           (      raakatu.asm):01487                        lbsr      L0A42               ; Skip header
08C6 17FD5A           (      raakatu.asm):01488                        lbsr      L0C03               ; Execute script
                      (      raakatu.asm):01489         
08C9 271F             (      raakatu.asm):01490                        beq       L0EC5               ; Script passed ... OK and out
08CB B601C3           (      raakatu.asm):01491         L0EA6          lda       u01C3               ; Is there a 1st noun?
                      (      raakatu.asm):01492         
08CE 2605             (      raakatu.asm):01493                        bne       L0EB0               ; Yes ... go do it
08D0 3510             (      raakatu.asm):01494         L0EAB          puls      X                   ; Restore script
08D2 8A01             (      raakatu.asm):01495                        ora       #$01                ; Nobody took the phrase ..
08D4 39               (      raakatu.asm):01496                        rts                           ; .. error and and out
08D5 BE01C6           (      raakatu.asm):01497         L0EB0          ldx       u01C6               ; First noun data
08D8 17FB88           (      raakatu.asm):01498                        lbsr      L0A42               ; Skip ...
08DB 3003             (      raakatu.asm):01499                        leax      3,X                 ; ... object header
08DD C607             (      raakatu.asm):01500                        ldb       #$07                ; Get "noun is first" ...
08DF 17FB66           (      raakatu.asm):01501                        lbsr      L0A27               ; ... phrase script
                      (      raakatu.asm):01502         
08E2 24EC             (      raakatu.asm):01503                        bcc       L0EAB               ; None ... error and out
08E4 17FB7C           (      raakatu.asm):01504                        lbsr      L0A42               ; Skip the id and length
08E7 17FD39           (      raakatu.asm):01505                        lbsr      L0C03               ; Execute script (use return)
08EA 3510             (      raakatu.asm):01506         L0EC5          puls      X                   ; Restore script pointer
08EC 39               (      raakatu.asm):01507                        rts                           ; Done
                      (      raakatu.asm):01508         
                      (      raakatu.asm):01509         ;##Com16_PrintVarShortName
08ED 3410             (      raakatu.asm):01510         L0EC8          pshs      X                   ; Save script pointer
08EF BE01C0           (      raakatu.asm):01511                        ldx       u01C0               ; Var noun data
08F2 B601BF           (      raakatu.asm):01512                        lda       u01BF               ; Var noun index
                      (      raakatu.asm):01513         
08F5 2008             (      raakatu.asm):01514                        bra       L0EDA               ; Print short name
                      (      raakatu.asm):01515         
                      (      raakatu.asm):01516         ;##Com11_Print1stNounShortName
08F7 3410             (      raakatu.asm):01517         L0ED2          pshs      X                   ; Save script pointer
08F9 BE01C6           (      raakatu.asm):01518                        ldx       u01C6               ; 1st noun data
08FC B601C3           (      raakatu.asm):01519                        lda       u01C3               ; 1st noun index
                      (      raakatu.asm):01520         ;
                      (      raakatu.asm):01521         
08FF 27E9             (      raakatu.asm):01522         L0EDA          beq       L0EC5               ; Return Z=1 return
0901 C61D             (      raakatu.asm):01523                        ldb       #$1D                ; User object
0903 3410             (      raakatu.asm):01524                        pshs      X                   ; Hold noun data
0905 17025A           (      raakatu.asm):01525                        lbsr      L1133               ; Lookup user object
0908 17F9BD           (      raakatu.asm):01526                        lbsr      L08AA               ; User in current room?
090B 3510             (      raakatu.asm):01527                        puls      X                   ; Restore noun data
                      (      raakatu.asm):01528         
090D 2611             (      raakatu.asm):01529                        bne       L0EFB               ; Not in current room ... skip print
090F 17FB51           (      raakatu.asm):01530                        lbsr      L0A42               ; Skip object ...
0912 3003             (      raakatu.asm):01531                        leax      3,X                 ; ... header
0914 C602             (      raakatu.asm):01532                        ldb       #$02                ; Get object ...
0916 17FB2F           (      raakatu.asm):01533                        lbsr      L0A27               ; ... short name
                      (      raakatu.asm):01534         
0919 2405             (      raakatu.asm):01535                        bcc       L0EFB               ; No short name ... out with OK
091B 3001             (      raakatu.asm):01536                        leax      1,X                 ; Skip the 2
091D 17025C           (      raakatu.asm):01537                        lbsr      L114C               ; Print packed message at X
0920 3510             (      raakatu.asm):01538         L0EFB          puls      X                   ; Restore script
0922 4F               (      raakatu.asm):01539                        clra                          ; Return ...
0923 39               (      raakatu.asm):01540                        rts                           ; ... OK
                      (      raakatu.asm):01541         
                      (      raakatu.asm):01542         ;##Com12_Print2ndNounShortName
0924 3410             (      raakatu.asm):01543         L0EFF          pshs      X                   ; Save script pointer
0926 BE01CC           (      raakatu.asm):01544                        ldx       u01CC               ; 2nd noun data
0929 B601C9           (      raakatu.asm):01545                        lda       u01C9               ; 2nd noun index
                      (      raakatu.asm):01546         
092C 20D1             (      raakatu.asm):01547                        bra       L0EDA               ; Print short name
                      (      raakatu.asm):01548         
                      (      raakatu.asm):01549         ;##Com15_CheckObjBits
                      (      raakatu.asm):01550         ; Check target bits in an object.
092E 3410             (      raakatu.asm):01551         L0F09          pshs      X                   ; Hold script pointer
0930 BE01C0           (      raakatu.asm):01552                        ldx       u01C0               ; Input object pointer
0933 B601BF           (      raakatu.asm):01553                        lda       u01BF               ; Var object number
                      (      raakatu.asm):01554         
0936 270E             (      raakatu.asm):01555                        beq       L0F21               ; No object ... return error
0938 17FB28           (      raakatu.asm):01556                        lbsr      L0A42               ; Skip the pointer-to-next object
093B 3002             (      raakatu.asm):01557                        leax      2,X                 ; Skip to data byte
093D A684             (      raakatu.asm):01558                        lda       ,X                  ; Get the object data
093F 3510             (      raakatu.asm):01559                        puls      X                   ; Restore the script
0941 A484             (      raakatu.asm):01560                        anda      ,X                  ; Mask off all but target bits
0943 A880             (      raakatu.asm):01561                        eora      ,X+                 ; Check target bits  (a 1 result in a pass)
0945 39               (      raakatu.asm):01562                        rts                           ; Done
                      (      raakatu.asm):01563         
0946 3510             (      raakatu.asm):01564         L0F21          puls      X                   ; Restore script pointer
0948 3001             (      raakatu.asm):01565                        leax      1,X                 ; Skip data
094A 8A01             (      raakatu.asm):01566                        ora       #$01                ; Set error
094C 39               (      raakatu.asm):01567                        rts                           ; Return
                      (      raakatu.asm):01568         
                      (      raakatu.asm):01569         ;##Com14_ExecuteCommandAndReverseReturn
094D 17FCD3           (      raakatu.asm):01570         L0F28          lbsr      L0C03               ; Execute command
                      (      raakatu.asm):01571         
0950 2603             (      raakatu.asm):01572                        bne       L0F30               ; Command returned a non-zero ... return zero
0952 8A01             (      raakatu.asm):01573                        ora       #$01                ; Command returned a zero ... return non-zerio
0954 39               (      raakatu.asm):01574                        rts                           ; Done
0955 4F               (      raakatu.asm):01575         L0F30          clra                          ; Zero
0956 39               (      raakatu.asm):01576                        rts                           ; Done
                      (      raakatu.asm):01577         
                      (      raakatu.asm):01578         ;##Com17_MoveObjectXToLocationY
0957 E680             (      raakatu.asm):01579         L0F32          ldb       ,X+                 ; Get object number
0959 3410             (      raakatu.asm):01580                        pshs      X                   ; Hold script
095B 170204           (      raakatu.asm):01581                        lbsr      L1133               ; Find object
095E 17FB02           (      raakatu.asm):01582                        lbsr      L0A42               ; Skip over length
0961 3520             (      raakatu.asm):01583                        puls      Y                   ; Script to Y
0963 A6A0             (      raakatu.asm):01584                        lda       ,Y+                 ; Get new location
0965 A784             (      raakatu.asm):01585                        sta       ,X                  ; Set object's new location
0967 1E12             (      raakatu.asm):01586                        exg       X,Y                 ; X now past data
0969 4F               (      raakatu.asm):01587                        clra                          ; OK
096A 39               (      raakatu.asm):01588         L0F45          rts                           ; Done
                      (      raakatu.asm):01589         
                      (      raakatu.asm):01590         ;##Com18_CheckVarOwnedByActiveObject
096B 3410             (      raakatu.asm):01591         L0F46          pshs      X                   ; Save script pointer
096D BE01C0           (      raakatu.asm):01592                        ldx       u01C0               ; Var object data
0970 17FAF0           (      raakatu.asm):01593         L0F4B          lbsr      L0A42               ; Skip length
0973 E684             (      raakatu.asm):01594                        ldb       ,X                  ; Location
0975 3510             (      raakatu.asm):01595                        puls      X                   ; Restore script
0977 1027F973         (      raakatu.asm):01596                        lbeq      L08CF               ; Out-of-game ... error and out
097B F101D2           (      raakatu.asm):01597                        cmpb      u01D2               ; Is this the active object?
                      (      raakatu.asm):01598         
097E 27EA             (      raakatu.asm):01599                        beq       L0F45               ; Yes ... return OK
0980 C580             (      raakatu.asm):01600                        bitb      #$80                ; Test upper bit
                      (      raakatu.asm):01601         
0982 26E6             (      raakatu.asm):01602                        bne       L0F45               ; It is in a room ... error and out
                      (      raakatu.asm):01603         ;
0984 3410             (      raakatu.asm):01604         L0F5F          pshs      X                   ; Hold script
0986 1701D9           (      raakatu.asm):01605                        lbsr      L1133               ; Look up owner object
                      (      raakatu.asm):01606         
0989 20E5             (      raakatu.asm):01607                        bra       L0F4B               ; Check again
                      (      raakatu.asm):01608         
                      (      raakatu.asm):01609         ; Execute any turn-scripts on the objects
098B 308D11C5         (      raakatu.asm):01610         L0F66          leax      L20FF,pc            ; Start of object data
098F 7F01D0           (      raakatu.asm):01611                        clr       u01D0               ; Object number
0992 17FACE           (      raakatu.asm):01612                        lbsr      L0A42               ; Skip length
0995 17FAE1           (      raakatu.asm):01613         L0F6F          lbsr      L0A58               ; End of objects?
                      (      raakatu.asm):01614         
0998 24D0             (      raakatu.asm):01615                        bcc       L0F45               ; Yes ... out
099A 7C01D0           (      raakatu.asm):01616                        inc       u01D0               ; Next object number
099D 3420             (      raakatu.asm):01617                        pshs      Y                   ; Hold end-of-objects
099F 17FAC1           (      raakatu.asm):01618                        lbsr      L0A42               ; Skip length
09A2 A684             (      raakatu.asm):01619                        lda       ,X                  ; Location
09A4 B701AB           (      raakatu.asm):01620                        sta       u01AB               ; Hold
09A7 3420             (      raakatu.asm):01621                        pshs      Y                   ; End of object
09A9 A684             (      raakatu.asm):01622                        lda       ,X                  ; Location
                      (      raakatu.asm):01623         
09AB 2743             (      raakatu.asm):01624                        beq       L0FC9               ; If it is out-of-game it doesn't get a turn
09AD 3003             (      raakatu.asm):01625                        leax      3,X                 ; Skip data
09AF C608             (      raakatu.asm):01626                        ldb       #$08                ; Turn-script
09B1 17FA94           (      raakatu.asm):01627                        lbsr      L0A27               ; Find turn script
                      (      raakatu.asm):01628         
09B4 243A             (      raakatu.asm):01629                        bcc       L0FC9               ; Nothing to do ... next object
09B6 17FAAA           (      raakatu.asm):01630                        lbsr      L0A42               ; Skip length
09B9 3410             (      raakatu.asm):01631                        pshs      X                   ; Hold pointer
09BB 170338           (      raakatu.asm):01632                        lbsr      L12A8               ; Generate random number
09BE F601D0           (      raakatu.asm):01633                        ldb       u01D0               ; Current object number ...
09C1 F701D2           (      raakatu.asm):01634                        stb       u01D2               ; ... is now the active object
09C4 17019B           (      raakatu.asm):01635                        lbsr      L1133               ; Get its data pointer
09C7 BF01D3           (      raakatu.asm):01636                        stx       u01D3               ; Hold pointer to active object data
09CA F601AB           (      raakatu.asm):01637                        ldb       u01AB               ; Object's location
09CD 5D               (      raakatu.asm):01638         L0FA7          tstb                          ; Check upper bit
                      (      raakatu.asm):01639         
09CE 2B0E             (      raakatu.asm):01640                        bmi       L0FB8               ; If in a room ... go handle
09D0 17018F           (      raakatu.asm):01641                        lbsr      L1133               ; Get object's owner
09D3 17FA8D           (      raakatu.asm):01642                        lbsr      L0A42               ; Skip length
09D6 E684             (      raakatu.asm):01643                        ldb       ,X                  ; Get owner location
                      (      raakatu.asm):01644         
09D8 26F3             (      raakatu.asm):01645                        bne       L0FA7               ; Still in game ... find room location of owner chain
09DA 3510             (      raakatu.asm):01646                        puls      X                   ; Restore pointer
                      (      raakatu.asm):01647         
09DC 2012             (      raakatu.asm):01648                        bra       L0FC9               ; Next object
09DE F701D5           (      raakatu.asm):01649         L0FB8          stb       u01D5               ; Objects location
09E1 308D0593         (      raakatu.asm):01650                        leax      L1523,pc            ; Get room ...
09E5 17FA58           (      raakatu.asm):01651                        lbsr      L0A1F               ; ... scripts for object
09E8 BF01D6           (      raakatu.asm):01652                        stx       u01D6               ; Hold
09EB 3510             (      raakatu.asm):01653                        puls      X                   ; Restore turn-script
09ED 17FC33           (      raakatu.asm):01654                        lbsr      L0C03               ; Execute turn-script
09F0 3510             (      raakatu.asm):01655         L0FC9          puls      X                   ; Restore
09F2 3520             (      raakatu.asm):01656                        puls      Y                   ; Restore
                      (      raakatu.asm):01657         
09F4 209F             (      raakatu.asm):01658                        bra       L0F6F               ; Next object
                      (      raakatu.asm):01659         
                      (      raakatu.asm):01660         ;##Com05_IsRandomLessOrEqual
09F6 3410             (      raakatu.asm):01661         L0FCF          pshs       x
09F8 308D0391         (      raakatu.asm):01662                        leax       L1338,pc            ; Random value
09FC A684             (      raakatu.asm):01663                                    lda        ,x
09FE 3510             (      raakatu.asm):01664                                    puls       x
                      (      raakatu.asm):01665                                    
0A00 A180             (      raakatu.asm):01666                        cmpa      ,X+                 ; Compare random value to script
                      (      raakatu.asm):01667         
0A02 2505             (      raakatu.asm):01668                        bcs       L0FDB               ; If less than ... OK
                      (      raakatu.asm):01669         
0A04 2703             (      raakatu.asm):01670                        beq       L0FDB               ; If the same ... OK
0A06 8A01             (      raakatu.asm):01671         L0FD8          ora       #$01                ; Greater than ... FAIL
0A08 39               (      raakatu.asm):01672                        rts                           ; Done
0A09 4F               (      raakatu.asm):01673         L0FDB          clra                          ; Less than or equal ... OK
0A0A 39               (      raakatu.asm):01674                        rts                           ; Done
                      (      raakatu.asm):01675         
                      (      raakatu.asm):01676         ;##Com1D_AttackObject
0A0B A680             (      raakatu.asm):01677         L0FDD          lda       ,X+                 ; Get attack value
0A0D B701AB           (      raakatu.asm):01678                        sta       u01AB               ; Hold attack value
0A10 3410             (      raakatu.asm):01679                        pshs      X                   ; Hold script
0A12 BE01C0           (      raakatu.asm):01680                        ldx       u01C0               ; Target object data
0A15 17FA4B           (      raakatu.asm):01681                        lbsr      L0A42               ; Skip length
0A18 3003             (      raakatu.asm):01682                        leax      3,X                 ; Skip object data
0A1A 3410             (      raakatu.asm):01683                        pshs      X                   ; Hold X ...
0A1C 3420             (      raakatu.asm):01684                        pshs      Y                   ; ... and Y
0A1E C609             (      raakatu.asm):01685                        ldb       #$09                ; Get target's ...
0A20 17FA25           (      raakatu.asm):01686                        lbsr      L0A27               ; ... combat info
                      (      raakatu.asm):01687         
0A23 2429             (      raakatu.asm):01688                        bcc       L1020               ; Not found. Do nothing (return OK)
0A25 17FA3B           (      raakatu.asm):01689                        lbsr      L0A42               ; Skip length
0A28 3001             (      raakatu.asm):01690                        leax      1,X                 ; Hit points
0A2A A684             (      raakatu.asm):01691                        lda       ,X                  ; Hit points
0A2C B001AB           (      raakatu.asm):01692                        suba      u01AB               ; Subtract attack from hit points
                      (      raakatu.asm):01693         
0A2F 2401             (      raakatu.asm):01694                        bcc       L1004               ; Not negative ... keep it
0A31 4F               (      raakatu.asm):01695                        clra                          ; Floor the hit points
0A32 A784             (      raakatu.asm):01696         L1004          sta       ,X                  ; New hit points
0A34 3520             (      raakatu.asm):01697                        puls      Y                   ; Restore ...
0A36 3510             (      raakatu.asm):01698                        puls      X                   ; ... X and Y
0A38 4D               (      raakatu.asm):01699                        tsta                          ; Hit points zero?
                      (      raakatu.asm):01700         
0A39 2704             (      raakatu.asm):01701                        beq       L1011               ; Yes ... object dies
0A3B 3510             (      raakatu.asm):01702         L100D          puls      X                   ; Restore list
0A3D 4F               (      raakatu.asm):01703                        clra                          ; Return OK
0A3E 39               (      raakatu.asm):01704                        rts                           ; Done
                      (      raakatu.asm):01705         
                      (      raakatu.asm):01706         ;Handle object being killed
0A3F C60A             (      raakatu.asm):01707         L1011          ldb       #$0A                ; Object being killed script
0A41 17FA04           (      raakatu.asm):01708                        lbsr      L0A27               ; Find a script for handling being killed
                      (      raakatu.asm):01709         
0A44 24F5             (      raakatu.asm):01710                        bcc       L100D               ; Not found ... nothing happens (return OK)
0A46 17FA1A           (      raakatu.asm):01711                        lbsr      L0A42               ; Skip id and length
0A49 17FBD7           (      raakatu.asm):01712                        lbsr      L0C03               ; Execute "being killed" script
                      (      raakatu.asm):01713         
0A4C 20ED             (      raakatu.asm):01714                        bra       L100D               ; Done (return OK)
                      (      raakatu.asm):01715         
0A4E 3520             (      raakatu.asm):01716         L1020          puls      Y                   ; Reset ...
0A50 3510             (      raakatu.asm):01717                        puls      X                   ; ... stack
                      (      raakatu.asm):01718         
0A52 20E7             (      raakatu.asm):01719                        bra       L100D               ; Return OK
                      (      raakatu.asm):01720         
                      (      raakatu.asm):01721         ;##Com1E_SwapObjects
0A54 E680             (      raakatu.asm):01722         L1026          ldb       ,X+                 ; 1st object number
0A56 A680             (      raakatu.asm):01723                        lda       ,X+                 ; 2nd object
0A58 B701AB           (      raakatu.asm):01724                        sta       u01AB               ; Hold second object
0A5B 3410             (      raakatu.asm):01725                        pshs      X                   ; Hold script
0A5D 170102           (      raakatu.asm):01726                        lbsr      L1133               ; Look up object
0A60 17FA00           (      raakatu.asm):01727                        lbsr      L0A42               ; Skip length
0A63 1F13             (      raakatu.asm):01728                        tfr       X,U                 ; 1st object pointer to U
0A65 F601AB           (      raakatu.asm):01729                        ldb       u01AB               ; 2nd object
0A68 1700F7           (      raakatu.asm):01730                        lbsr      L1133               ; Look up object
0A6B 17F9F5           (      raakatu.asm):01731                        lbsr      L0A42               ; Skip length
0A6E A684             (      raakatu.asm):01732                        lda       ,X                  ; Swap ...
0A70 E6C4             (      raakatu.asm):01733                        ldb       ,U                  ; ... location ...
0A72 A7C4             (      raakatu.asm):01734                        sta       ,U                  ; ... of ...
0A74 E784             (      raakatu.asm):01735                        stb       ,X                  ; ... objects
                      (      raakatu.asm):01736         
0A76 3510             (      raakatu.asm):01737                        puls      X                   ; Restore script pointer
0A78 4F               (      raakatu.asm):01738                        clra                          ; Z=1 OK
0A79 39               (      raakatu.asm):01739                        rts                           ; Done
                      (      raakatu.asm):01740         
                      (      raakatu.asm):01741         ;##Com22_CompareHealthToValue
0A7A A680             (      raakatu.asm):01742         L104C          lda       ,X+                 ; Get value
0A7C 3410             (      raakatu.asm):01743                        pshs      X                   ; Hold script pointer
0A7E B701AB           (      raakatu.asm):01744                        sta       u01AB               ; Hold value
0A81 BE01C0           (      raakatu.asm):01745                        ldx       u01C0               ; Var object data
0A84 17F9DC           (      raakatu.asm):01746                        lbsr      L0A42               ; Skip length
0A87 3003             (      raakatu.asm):01747                        leax      3,X                 ; Skip data
0A89 C609             (      raakatu.asm):01748                        ldb       #$09                ; Get object ...
0A8B 17F9BA           (      raakatu.asm):01749                        lbsr      L0A27               ; ... hit points
                      (      raakatu.asm):01750         
0A8E 240E             (      raakatu.asm):01751                        bcc       L1070               ; Doesn't have any ... error and out
0A90 17F9D0           (      raakatu.asm):01752                        lbsr      L0A42               ; Skip length
0A93 3001             (      raakatu.asm):01753                        leax      1,X                 ; Get current ...
0A95 A684             (      raakatu.asm):01754                        lda       ,X                  ; ... hit points
0A97 B101AB           (      raakatu.asm):01755                        cmpa      u01AB               ; Compare hit points to value
                      (      raakatu.asm):01756         
0A9A 2507             (      raakatu.asm):01757                        bcs       L1075               ; Less than ..
                      (      raakatu.asm):01758         
0A9C 2705             (      raakatu.asm):01759                        beq       L1075               ; ... or equal ... OK and out
0A9E 3510             (      raakatu.asm):01760         L1070          puls      X                   ; Restore script
0AA0 8A01             (      raakatu.asm):01761                        ora       #$01                ; Error
0AA2 39               (      raakatu.asm):01762                        rts                           ; Done
0AA3 3510             (      raakatu.asm):01763         L1075          puls      X                   ; Restore script
0AA5 4F               (      raakatu.asm):01764                        clra                          ; OK
0AA6 39               (      raakatu.asm):01765                        rts                           ; Done
                      (      raakatu.asm):01766         
                      (      raakatu.asm):01767         ;##Com23_HealVarObject
0AA7 A680             (      raakatu.asm):01768         L1079          lda       ,X+                 ; Get healing value
0AA9 B701AB           (      raakatu.asm):01769                        sta       u01AB               ; Hold it
0AAC 3410             (      raakatu.asm):01770                        pshs      X                   ; Hold script
0AAE BE01C0           (      raakatu.asm):01771                        ldx       u01C0               ; Var object data
0AB1 17F9AF           (      raakatu.asm):01772                        lbsr      L0A42               ; Skip length
0AB4 3003             (      raakatu.asm):01773                        leax      3,X                 ; Skip data
0AB6 C609             (      raakatu.asm):01774                        ldb       #$09                ; Get object ...
0AB8 17F98D           (      raakatu.asm):01775                        lbsr      L0A27               ; ... hit points
                      (      raakatu.asm):01776         
0ABB 24E6             (      raakatu.asm):01777                        bcc       L1075               ; No entry ... do nothing (but OK)
0ABD 17F9A3           (      raakatu.asm):01778                        lbsr      L0A42               ; Skip length
0AC0 EC84             (      raakatu.asm):01779                        ldd       ,X                  ; Get HP info
0AC2 FB01AB           (      raakatu.asm):01780                        addb      u01AB               ; Add to health
0AC5 B701AB           (      raakatu.asm):01781                        sta       u01AB               ; Max value
0AC8 F101AB           (      raakatu.asm):01782                        cmpb      u01AB               ; Over the max?
                      (      raakatu.asm):01783         
0ACB 2503             (      raakatu.asm):01784                        bcs       L10A2               ; No ... keep it
0ACD F601AB           (      raakatu.asm):01785                        ldb       u01AB               ; Use max value
0AD0 3001             (      raakatu.asm):01786         L10A2          leax      1,X                 ; Store ...
0AD2 E784             (      raakatu.asm):01787                        stb       ,X                  ; ... new health
                      (      raakatu.asm):01788         
0AD4 20CD             (      raakatu.asm):01789                        bra       L1075               ; OK out
                      (      raakatu.asm):01790         
                      (      raakatu.asm):01791         ;##Com25_RestartGame
                      (      raakatu.asm):01792         ; No return to script
0AD6 860D             (      raakatu.asm):01793         L10A8          lda       #$0D                ; Print first ...
0AD8 1700D9           (      raakatu.asm):01794                        lbsr      L1184               ; ... CR
0ADB 860D             (      raakatu.asm):01795                        lda       #$0D                ; Print second ...
0ADD 1700D4           (      raakatu.asm):01796                        lbsr      L1184               ; ... CR
0AE0 16F53F           (      raakatu.asm):01797                        lbra      L060C               ; Restart game
                      (      raakatu.asm):01798         
                      (      raakatu.asm):01799         ;##Com24_EndlessLoop
                      (      raakatu.asm):01800         
0AE3 20FE             (      raakatu.asm):01801         L10B5          bra       L10B5               ; Spin forever
                      (      raakatu.asm):01802         
                      (      raakatu.asm):01803         ; This snippet of code is never called by anyone, but this is a print
                      (      raakatu.asm):01804         ; for null-terminate ASCII strings. Presumably the PrintScore function
                      (      raakatu.asm):01805         ; used this at one time.
                      (      raakatu.asm):01806         
0AE5 A6A0             (      raakatu.asm):01807         L10B7          lda       ,Y+                 ; Get next character
                      (      raakatu.asm):01808         
0AE7 2709             (      raakatu.asm):01809                        beq       L10C4               ; Null means done
0AE9 3420             (      raakatu.asm):01810                        pshs      Y                   ; Hold Y
0AEB 1700C6           (      raakatu.asm):01811                        lbsr      L1184               ; Print character
0AEE 3520             (      raakatu.asm):01812                        puls      Y                   ; Restore Y
                      (      raakatu.asm):01813         
0AF0 20F3             (      raakatu.asm):01814                        bra       L10B7               ; Keep going
0AF2 39               (      raakatu.asm):01815         L10C4          rts                           ; Done
                      (      raakatu.asm):01816         
                      (      raakatu.asm):01817         ;##Com26_PrintScore
                      (      raakatu.asm):01818         ; Second byte of object data is points. If the object is in the
                      (      raakatu.asm):01819         ; treasure room (dropped or carried) it counts double.
0AF3 3410             (      raakatu.asm):01820         L10C5          pshs      X
0AF5 7F01AF           (      raakatu.asm):01821                        clr       u01AF               ; Score tally
0AF8 7F01B0           (      raakatu.asm):01822                        clr       u01B0
0AFB B601D5           (      raakatu.asm):01823                        lda       u01D5               ; Player location
0AFE 8196             (      raakatu.asm):01824                        cmpa      #$96                ; Player in the treasure room?
                      (      raakatu.asm):01825         
0B00 2603             (      raakatu.asm):01826                        bne       L10D7               ; No ... regular score
0B02 7C01B0           (      raakatu.asm):01827                        inc       u01B0               ; Yes ... carried objects count double
0B05 308D104B         (      raakatu.asm):01828         L10D7          leax      L20FF,pc            ; Object data
0B09 17F957           (      raakatu.asm):01829                        lbsr      L0A42               ; Skip header
0B0C 17F96A           (      raakatu.asm):01830         L10DD          lbsr      L0A58               ; Reached end?
                      (      raakatu.asm):01831         
0B0F 242D             (      raakatu.asm):01832                        bcc       L110F               ; Yes ... move on
0B11 3420             (      raakatu.asm):01833                        pshs      Y                   ; Hold end
0B13 17F94D           (      raakatu.asm):01834                        lbsr      L0A42               ; Skip object length
0B16 E680             (      raakatu.asm):01835                        ldb       ,X+                 ; Get owner
0B18 C196             (      raakatu.asm):01836                        cmpb      #$96                ; Treasure room?
                      (      raakatu.asm):01837         
0B1A 2704             (      raakatu.asm):01838                        beq       L10F1               ; Yes ... count it
0B1C C11D             (      raakatu.asm):01839                        cmpb      #$1D                ; Carried by user?
                      (      raakatu.asm):01840         
0B1E 2618             (      raakatu.asm):01841                        bne       L1109               ; No ... next object
0B20 B601AF           (      raakatu.asm):01842         L10F1          lda       u01AF               ; Score tally
0B23 AB84             (      raakatu.asm):01843                        adda      ,X                  ; Add to score value
0B25 19               (      raakatu.asm):01844                        daa                           ; Decimal adjust
0B26 B701AF           (      raakatu.asm):01845                        sta       u01AF               ; New score
0B29 C196             (      raakatu.asm):01846                        cmpb      #$96                ; Treasure room?
                      (      raakatu.asm):01847         
0B2B 2705             (      raakatu.asm):01848                        beq       L1103               ; Yes ... counts double
0B2D 7D01B0           (      raakatu.asm):01849                        tst       u01B0               ; Player in treasure room?
                      (      raakatu.asm):01850         
0B30 2706             (      raakatu.asm):01851                        beq       L1109               ; No ... just count once
0B32 AB84             (      raakatu.asm):01852         L1103          adda      ,X                  ; Double ...
0B34 19               (      raakatu.asm):01853                        daa                           ; ... the ...
0B35 B701AF           (      raakatu.asm):01854                        sta       u01AF               ; ... score value
0B38 1F21             (      raakatu.asm):01855         L1109          tfr       Y,X                 ; Next object
0B3A 3520             (      raakatu.asm):01856                        puls      Y                   ; Restore end of list
                      (      raakatu.asm):01857         
0B3C 20CE             (      raakatu.asm):01858                        bra       L10DD               ; Do all objects
                      (      raakatu.asm):01859         ;        
0B3E B601AF           (      raakatu.asm):01860         L110F          lda       u01AF               ; Score value
0B41 47               (      raakatu.asm):01861                        asra                          ; Left ...
0B42 47               (      raakatu.asm):01862                        asra                          ; ... most ...
0B43 47               (      raakatu.asm):01863                        asra                          ; ... digit ...
0B44 47               (      raakatu.asm):01864                        asra                          ; ... value
0B45 8B30             (      raakatu.asm):01865                        adda      #$30                ; Convert to ASCII
0B47 17006A           (      raakatu.asm):01866                        lbsr      L1184               ; Print the left digit
0B4A B601AF           (      raakatu.asm):01867                        lda       u01AF               ; Score value
0B4D 840F             (      raakatu.asm):01868                        anda      #$0F                ; Mask off the right digit
0B4F 8B30             (      raakatu.asm):01869                        adda      #$30                ; Convert ot ASCII
0B51 170060           (      raakatu.asm):01870                        lbsr      L1184               ; Print the right digit
0B54 862E             (      raakatu.asm):01871                        lda       #$2E                ; Print ...
0B56 17005B           (      raakatu.asm):01872                        lbsr      L1184               ; ... "."
0B59 8620             (      raakatu.asm):01873                        lda       #$20                ; Print ...
0B5B 170056           (      raakatu.asm):01874                        lbsr      L1184               ; ... SPACE
0B5E 3510             (      raakatu.asm):01875                        puls      X                   ; Restore script
0B60 4F               (      raakatu.asm):01876                        clra                          ; OK
0B61 39               (      raakatu.asm):01877                        rts                           ; Done
                      (      raakatu.asm):01878         
                      (      raakatu.asm):01879         ; Find object index in B
0B62 308D0FEE         (      raakatu.asm):01880         L1133          leax      L20FF,pc            ; Start of objects
0B66 17F8FA           (      raakatu.asm):01881                        lbsr      L0A42               ; Skip end
0B69 5A               (      raakatu.asm):01882         L1139          decb                          ; Found desired object?
                      (      raakatu.asm):01883         
0B6A 2786             (      raakatu.asm):01884                        beq       L10C4               ; Yes ... out OK
0B6C 17F8F4           (      raakatu.asm):01885                        lbsr      L0A42               ; Length of object
0B6F 1E12             (      raakatu.asm):01886                        exg       X,Y                 ; Next object
                      (      raakatu.asm):01887         
0B71 20F6             (      raakatu.asm):01888                        bra       L1139               ; Keep looking
                      (      raakatu.asm):01889         
                      (      raakatu.asm):01890         ; Print packed message and CR
0B73 170006           (      raakatu.asm):01891         L1143          lbsr      L114C               ; Print packed message at X
0B76 860D             (      raakatu.asm):01892                        lda       #$0D                ; Print ...
0B78 170039           (      raakatu.asm):01893                        lbsr      L1184               ; ... CR
0B7B 39               (      raakatu.asm):01894                        rts                           ; Done
                      (      raakatu.asm):01895         
                      (      raakatu.asm):01896         ;##PrintPackedMessage
                      (      raakatu.asm):01897         ; X points to compressed string. First byte (or two) is the length.
0B7C 4F               (      raakatu.asm):01898         L114C          clra                          ; Assume MSB is 0
0B7D E684             (      raakatu.asm):01899                        ldb       ,X                  ; Get length
0B7F C580             (      raakatu.asm):01900                        bitb      #$80                ; Is it single byte length?
                      (      raakatu.asm):01901         
0B81 2704             (      raakatu.asm):01902                        beq       L1157               ; Yes ... use D
0B83 A680             (      raakatu.asm):01903                        lda       ,X+                 ; Get the ...
0B85 847F             (      raakatu.asm):01904                        anda      #$7F                ; ... MSB and ...
0B87 E680             (      raakatu.asm):01905         L1157          ldb       ,X+                 ; ... LSB
0B89 FD01AB           (      raakatu.asm):01906                        std       u01AB               ; Store byte count
0B8C FC01AB           (      raakatu.asm):01907         L115C          ldd       u01AB               ; Number of bytes left in message
0B8F 10830002         (      raakatu.asm):01908                        cmpd      #$0002              ; Less than 2?
                      (      raakatu.asm):01909         
0B93 250E             (      raakatu.asm):01910                        bcs       L1173               ; Yes ... these aren't compressed
0B95 170085           (      raakatu.asm):01911                        lbsr      L11EC               ; Decompress and print two bytes pointed to by X
0B98 FC01AB           (      raakatu.asm):01912                        ldd       u01AB               ; Get byte count
0B9B 830002           (      raakatu.asm):01913                        subd      #$0002              ; Handled 2
0B9E FD01AB           (      raakatu.asm):01914                        std       u01AB               ; Store count
                      (      raakatu.asm):01915         
0BA1 20E9             (      raakatu.asm):01916                        bra       L115C               ; Keep decompressing
0BA3 5D               (      raakatu.asm):01917         L1173          tstb                          ; Any characters on the end to print?
                      (      raakatu.asm):01918         
0BA4 2708             (      raakatu.asm):01919                        beq       L117E               ; No ... skip
0BA6 A680             (      raakatu.asm):01920                        lda       ,X+                 ; Get character
0BA8 170009           (      raakatu.asm):01921                        lbsr      L1184               ; Print the character
0BAB 5A               (      raakatu.asm):01922                        decb                          ; Decrement count
                      (      raakatu.asm):01923         
0BAC 20F5             (      raakatu.asm):01924                        bra       L1173               ; Keeop going
0BAE 8620             (      raakatu.asm):01925         L117E          lda       #$20                ; Print ...
0BB0 170001           (      raakatu.asm):01926                        lbsr      L1184               ; ... space on end
0BB3 39               (      raakatu.asm):01927                        rts                           ; Done
                      (      raakatu.asm):01928         
                      (      raakatu.asm):01929         ;##PrintCharacterAutoWrap
                      (      raakatu.asm):01930         ; Print character in A to screen. This handles auto word-wrapping and
                      (      raakatu.asm):01931         ; auto MORE prompting.
                      (      raakatu.asm):01932         ;
0BB4 3406             (      raakatu.asm):01933         L1184          pshs      B,A                 ; Hold B and A
0BB6 B601BE           (      raakatu.asm):01934                        lda       u01BE               ; Last printed character
0BB9 8120             (      raakatu.asm):01935                        cmpa      #$20                ; Last printed a space?
0BBB 261C             (      raakatu.asm):01936                        bne       L11A7               ; No ... print this
0BBD 3506             (      raakatu.asm):01937                        puls      A,B                 ; Hold
0BBF 8120             (      raakatu.asm):01938                        cmpa      #$20                ; Space now?
0BC1 2758             (      raakatu.asm):01939                        beq       L11EA               ; Yes ... just ignore
0BC3 812E             (      raakatu.asm):01940                        cmpa      #$2E                ; A '.' ?
0BC5 2708             (      raakatu.asm):01941                        beq       L119F               ; Yes. Ignore leading space.
0BC7 813F             (      raakatu.asm):01942                        cmpa      #$3F                ; A '?' ?
0BC9 2704             (      raakatu.asm):01943                        beq       L119F               ; Yes. Ignore leading space.
0BCB 8121             (      raakatu.asm):01944                        cmpa      #$21                ; A '!' ?
0BCD 260C             (      raakatu.asm):01945                        bne       L11A9               ; Yes. Ignore leading space.
0BCF FE0088           (      raakatu.asm):01946         L119F          ldu       >$88                ; Back screen ...
0BD2 335F             (      raakatu.asm):01947                        leau      -1,U                ; ... pointer up ...
0BD4 FF0088           (      raakatu.asm):01948                        stu       >$88                ; ... over ignored space
0BD7 2002             (      raakatu.asm):01949                        bra       L11A9               ; Store and print
0BD9 3506             (      raakatu.asm):01950         L11A7          puls      A,B                 ; Restore A and B
0BDB B701BE           (      raakatu.asm):01951         L11A9          sta       u01BE               ; Last printed character
                      (      raakatu.asm):01952         *L11AC          jsr       [$A002]             ; Output character
0BDE 172D9A           (      raakatu.asm):01953                        lbsr      os9write
0BE1 B60089           (      raakatu.asm):01954                        lda       >$89                ; LSB of screen position
0BE4 81FE             (      raakatu.asm):01955                        cmpa      #$FE                ; Reached end of screen?
0BE6 2533             (      raakatu.asm):01956                        bcs       L11EA               ; No ... done
0BE8 FE0088           (      raakatu.asm):01957                        ldu       >$88                ; Cursor position
0BEB 33C8DF           (      raakatu.asm):01958                        leau      $-21,U              ; Back up to end of current row
0BEE 860D             (      raakatu.asm):01959                        lda       #$0D                ; CR ...
                      (      raakatu.asm):01960         *L11BD          jsr       [$A002]             ; ... to screen
0BF0 172D88           (      raakatu.asm):01961                        lbsr      os9write
0BF3 A6C4             (      raakatu.asm):01962         L11C1          lda       ,U                  ; Find the ...
0BF5 8160             (      raakatu.asm):01963                        cmpa      #$60                ; ... space before ...
0BF7 2704             (      raakatu.asm):01964                        beq       L11CB               ; ... the last ...
0BF9 335F             (      raakatu.asm):01965                        leau      -1,U                ; ... word ...
0BFB 20F6             (      raakatu.asm):01966                        bra       L11C1               ; ... on the line
0BFD 3341             (      raakatu.asm):01967         L11CB          leau      1,U                 ; Now pointing to last word on line
0BFF A6C4             (      raakatu.asm):01968                        lda       ,U                  ; Get next character in buffer
0C01 8160             (      raakatu.asm):01969                        cmpa      #$60                ; Is it a space?
0C03 2716             (      raakatu.asm):01970                        beq       L11EA               ; Yes ... all done
0C05 3404             (      raakatu.asm):01971                        pshs      B                   ; Hold B
0C07 C660             (      raakatu.asm):01972                        ldb       #$60                ; Put ...
0C09 E7C4             (      raakatu.asm):01973                        stb       ,U                  ; ... space
0C0B 3504             (      raakatu.asm):01974                        puls      B                   ; Restore B
0C0D 8160             (      raakatu.asm):01975                        cmpa      #$60                ; Make sure ...
0C0F 2502             (      raakatu.asm):01976                        bcs       L11E1               ; ... upper ...
0C11 8040             (      raakatu.asm):01977                        suba      #$40                ; ... case
0C13 B701BE           (      raakatu.asm):01978         L11E1          sta       u01BE               ; Last printed character
                      (      raakatu.asm):01979         *L11E4          jsr       [$A002]             ; Output to screen
0C16 172D62           (      raakatu.asm):01980                        lbsr      os9write
0C19 20E2             (      raakatu.asm):01981                        bra       L11CB               ; Move overhang to next line
0C1B 39               (      raakatu.asm):01982         L11EA          rts                           ; Done
0C1C 39               (      raakatu.asm):01983                        rts                           ; OOPS
                      (      raakatu.asm):01984         
                      (      raakatu.asm):01985         ;##UnpackBytes
                      (      raakatu.asm):01986         ; Unpack three characters stored in 2 bytes pointed to by X and print to screen.
                      (      raakatu.asm):01987         ; Every 2 bytes holds 3 characters. Each character can be from 0 to 39.
                      (      raakatu.asm):01988         ; 40*40*40 = 64000 ... totally ingenious.
                      (      raakatu.asm):01989         ;
0C1D 318D00D1         (      raakatu.asm):01990         L11EC          leay      L12A4,pc            ;
0C21 C603             (      raakatu.asm):01991                        ldb       #$03                ;
0C23 3410             (      raakatu.asm):01992                                    pshs      x
0C25 308D00C6         (      raakatu.asm):01993                        leax      L12A1,pc
0C29 E784             (      raakatu.asm):01994                                    stb       ,x
0C2B 3510             (      raakatu.asm):01995                                    puls      x
0C2D A680             (      raakatu.asm):01996                        lda       ,X+                 ;
0C2F B701DE           (      raakatu.asm):01997                        sta       u01DE               ;
0C32 A680             (      raakatu.asm):01998                        lda       ,X+                 ;
0C34 B701DD           (      raakatu.asm):01999                        sta       u01DD               ;
0C37 3123             (      raakatu.asm):02000                        leay      3,Y                 ;
0C39 CE0028           (      raakatu.asm):02001         L1201          ldu       #$0028              ;
0C3C 3410             (      raakatu.asm):02002                                    pshs      x
0C3E 308D00AE         (      raakatu.asm):02003                                leax      L12A2,pc
0C42 EF84             (      raakatu.asm):02004                                    stu       ,x
0C44 3510             (      raakatu.asm):02005                                    puls      x
0C46 8611             (      raakatu.asm):02006                        lda       #$11                ;
0C48 B701DA           (      raakatu.asm):02007                        sta       u01DA               ;
0C4B 7F01DB           (      raakatu.asm):02008                        clr       u01DB               ;
0C4E 7F01DC           (      raakatu.asm):02009                        clr       u01DC               ;
0C51 7901DE           (      raakatu.asm):02010         L1212          rol       u01DE               ;
0C54 7901DD           (      raakatu.asm):02011                        rol       u01DD               ;
0C57 7A01DA           (      raakatu.asm):02012                        dec       u01DA               ;
                      (      raakatu.asm):02013         
0C5A 274D             (      raakatu.asm):02014                        beq       L1256               ;
0C5C 8600             (      raakatu.asm):02015                        lda       #$00                ;
0C5E 8900             (      raakatu.asm):02016                        adca      #$00                ; This algorithm is identical to the decompression
0C60 7801DC           (      raakatu.asm):02017                        asl       u01DC               ; used in Pyramid2000. Check the comments there for
0C63 7901DB           (      raakatu.asm):02018                        rol       u01DB               ; more detail.
0C66 BB01DC           (      raakatu.asm):02019                        adda      u01DC               ;
0C69 3410             (      raakatu.asm):02020                        pshs      x
0C6B 308D0082         (      raakatu.asm):02021                                    leax      L12A3,pc
0C6F A084             (      raakatu.asm):02022                                    suba      ,x
0C71 3510             (      raakatu.asm):02023                                    puls      x
0C73 B701E0           (      raakatu.asm):02024                        sta       u01E0               ;
0C76 B601DB           (      raakatu.asm):02025         L1230          lda       u01DB               ;
0C79 3410             (      raakatu.asm):02026                                    pshs      x
0C7B 308C72           (      raakatu.asm):02027                                    leax      L12A2,pc
0C7E A284             (      raakatu.asm):02028                                    sbca      ,x
0C80 3510             (      raakatu.asm):02029                                    puls      x
0C82 B701DF           (      raakatu.asm):02030                        sta       u01DF               ;
0C85 2412             (      raakatu.asm):02031                        bcc       L1246               ;
0C87 FC01DF           (      raakatu.asm):02032                                    ldd       u01DF
                      (      raakatu.asm):02033                                    
0C8A 3410             (      raakatu.asm):02034                                    pshs      x
0C8C 308C61           (      raakatu.asm):02035                                    leax      L12A2,pc
0C8F F301DF           (      raakatu.asm):02036                                    addd      u01DF
0C92 3510             (      raakatu.asm):02037                                    puls      x
                      (      raakatu.asm):02038                                    
0C94 FD01DB           (      raakatu.asm):02039                        std       u01DB               ;
0C97 2006             (      raakatu.asm):02040                        bra       L124C               ;
0C99 FC01DF           (      raakatu.asm):02041         L1246          ldd       u01DF               ;
0C9C FD01DB           (      raakatu.asm):02042                        std       u01DB               ;
                      (      raakatu.asm):02043         ; Compliment C flag and continue
0C9F 2504             (      raakatu.asm):02044         L124C          bcs       L1252               ;
0CA1 1A01             (      raakatu.asm):02045                        orcc      #$01                ;
0CA3 20AC             (      raakatu.asm):02046                        bra       L1212               ;
0CA5 1CFE             (      raakatu.asm):02047         L1252          andcc     #$FE                ;
0CA7 20A8             (      raakatu.asm):02048                        bra       L1212               ;
                      (      raakatu.asm):02049         ; Process the result of the division
0CA9 FC01DB           (      raakatu.asm):02050         L1256          ldd       u01DB
0CAC 3410             (      raakatu.asm):02051                                    pshs      x
0CAE 308C28           (      raakatu.asm):02052                                    leax      L1279,pc
0CB1 E384             (      raakatu.asm):02053                                    addd      ,x
0CB3 3510             (      raakatu.asm):02054                                    puls      x
0CB5 1F03             (      raakatu.asm):02055                        tfr       D,U                 ;
0CB7 A6C4             (      raakatu.asm):02056                        lda       ,U                  ;
0CB9 A7A2             (      raakatu.asm):02057                        sta       ,-Y                 ;
0CBB 3410             (      raakatu.asm):02058                                    pshs      x
0CBD 308C2F           (      raakatu.asm):02059                                    leax      L12A1,pc
0CC0 6A84             (      raakatu.asm):02060                                    dec       ,x
0CC2 3510             (      raakatu.asm):02061                                    puls      x
0CC4 1026FF71         (      raakatu.asm):02062                        lbne      L1201               ;
0CC8 318C27           (      raakatu.asm):02063                        leay      L12A4,pc            ;
0CCB C603             (      raakatu.asm):02064                        ldb       #$03                ;
0CCD A6A0             (      raakatu.asm):02065         L126D          lda       ,Y+                 ;
0CCF 17FEE2           (      raakatu.asm):02066                        lbsr      L1184               ; Print character
0CD2 5A               (      raakatu.asm):02067                        decb                          ;
                      (      raakatu.asm):02068         
0CD3 26F8             (      raakatu.asm):02069                        bne       L126D               ;
0CD5 FC01AB           (      raakatu.asm):02070                        ldd       u01AB               ;
0CD8 39               (      raakatu.asm):02071                        rts                           ;
                      (      raakatu.asm):02072         
                      (      raakatu.asm):02073         ; Character translation table
                      (      raakatu.asm):02074         ;     ?  !  2  .  "  '  <  >  /  0  3  A  B  C  D  E
0CD9 3C3E2F3033414243 (      raakatu.asm):02075         L1279          fcb       $3C,$3E,$2F,$30,$33,$41,$42,$43,$44,$45
     4445
                      (      raakatu.asm):02076         ;     F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U
0CE3 4C4D4E4F50515253 (      raakatu.asm):02077                        fcb       $4C,$4D,$4E,$4F,$50,$51,$52,$53,$54,$55
     5455
0CED 2C2E             (      raakatu.asm):02078                        fcb       $2C,$2E
                      (      raakatu.asm):02079         ;     V  W  X  Y  Z  -  ,  .
                      (      raakatu.asm):02080         
0CEF 00               (      raakatu.asm):02081         L12A1          fcb       $00                 ; Temporaries for decompression algorithm above            
0CF0 00               (      raakatu.asm):02082         L12A2          fcb       $00
0CF1 00               (      raakatu.asm):02083         L12A3          fcb       $00
0CF2 00000000         (      raakatu.asm):02084         L12A4          fcb       $00,$00,$00,$00
                      (      raakatu.asm):02085         
                      (      raakatu.asm):02086         ; Generate random number
0CF6 3414             (      raakatu.asm):02087         L12A8          pshs      X,B                 ; Random number generator. Uses seed at 13B8.
0CF8 308D0091         (      raakatu.asm):02088                        leax      L1338,pc            ;
0CFC C617             (      raakatu.asm):02089                        ldb       #$17                ;
0CFE A684             (      raakatu.asm):02090                        lda       ,X                  ;
0D00 3001             (      raakatu.asm):02091         L12B1          leax      1,X                 ;
0D02 1A01             (      raakatu.asm):02092                        orcc      #$01                ;
0D04 8406             (      raakatu.asm):02093                        anda      #$06                ;
                      (      raakatu.asm):02094         
0D06 2707             (      raakatu.asm):02095                        beq       L12C0               ;
0D08 8106             (      raakatu.asm):02096                        cmpa      #$06                ;
0D0A 1A01             (      raakatu.asm):02097                        orcc      #$01                ;
0D0C 2701             (      raakatu.asm):02098                        beq       L12C0               ;
0D0E 4F               (      raakatu.asm):02099                        clra                          ;
0D0F A684             (      raakatu.asm):02100         L12C0          lda       ,X                  ;
0D11 2503             (      raakatu.asm):02101                        bcs       L12C7               ;
0D13 44               (      raakatu.asm):02102                        lsra                          ;
0D14 2003             (      raakatu.asm):02103                        bra       L12CA               ;
0D16 44               (      raakatu.asm):02104         L12C7          lsra                          ;
0D17 8A80             (      raakatu.asm):02105                        ora       #$80                ;
0D19 A784             (      raakatu.asm):02106         L12CA          sta       ,X                  ;
0D1B 301F             (      raakatu.asm):02107                        leax      -1,X                ;
0D1D A684             (      raakatu.asm):02108                        lda       ,X                  ;
0D1F 2503             (      raakatu.asm):02109                        bcs       L12D5               ;
0D21 44               (      raakatu.asm):02110                        lsra                          ;
0D22 2003             (      raakatu.asm):02111                        bra       L12D8               ;
0D24 44               (      raakatu.asm):02112         L12D5          lsra                          ;
0D25 8A80             (      raakatu.asm):02113                        ora       #$80                ;
0D27 84FE             (      raakatu.asm):02114         L12D8          anda      #$FE                ;
0D29 A784             (      raakatu.asm):02115                        sta       ,X                  ;
0D2B 5A               (      raakatu.asm):02116                        decb                          ;
0D2C 26D2             (      raakatu.asm):02117                        bne       L12B1
0D2E 3410             (      raakatu.asm):02118                                    pshs      x
0D30 308C5B           (      raakatu.asm):02119                                    leax      L1339,pc            ;
0D33 A684             (      raakatu.asm):02120                        lda       ,x                  ;
0D35 3510             (      raakatu.asm):02121                                    puls      x
0D37 3514             (      raakatu.asm):02122                        puls      B,X                 ;
0D39 39               (      raakatu.asm):02123                        rts                           ;
                      (      raakatu.asm):02124         
                      (      raakatu.asm):02125         ; -----------------------------------------------------------------------------------------------------------------
                      (      raakatu.asm):02126         ; Data Here Down
                      (      raakatu.asm):02127         ; -----------------------------------------------------------------------------------------------------------------
                      (      raakatu.asm):02128         
                      (      raakatu.asm):02129         ; -----------------------------------------------------------------------------------------------------------------
                      (      raakatu.asm):02130         ; Data Here Down
                      (      raakatu.asm):02131         ; -----------------------------------------------------------------------------------------------------------------
                      (      raakatu.asm):02132         
                      (      raakatu.asm):02133         ;##CommandJumpTable 
0D3A C6A2             (      raakatu.asm):02134         L12E5    fdb   L0C81+topmod
0D3C C7B7             (      raakatu.asm):02135                  fdb   L0D93+topmod
0D3E C7CA             (      raakatu.asm):02136                  fdb   L0DA6+topmod
0D40 C7CF             (      raakatu.asm):02137                          fdb   L0DAB+topmod
0D42 C7E7             (      raakatu.asm):02138                          fdb   L0DC3+topmod
0D44 C9F6             (      raakatu.asm):02139                          fdb   L0FCF+topmod
0D46 C80D             (      raakatu.asm):02140                  fdb   L0DE9+topmod
0D48 C808             (      raakatu.asm):02141                          fdb   L0DE4+topmod
0D4A C848             (      raakatu.asm):02142                          fdb   L0E23+topmod
0D4C C866             (      raakatu.asm):02143                          fdb   L0E41+topmod
0D4E C86E             (      raakatu.asm):02144                  fdb   L0E49+topmod
0D50 C679             (      raakatu.asm):02145                          fdb   L0C58+topmod
0D52 C7E4             (      raakatu.asm):02146                          fdb   L0DC0+topmod
0D54 C648             (      raakatu.asm):02147                          fdb   L0C27+topmod
0D56 C660             (      raakatu.asm):02148                  fdb   L0C3F+topmod
0D58 C874             (      raakatu.asm):02149                          fdb   L0E4F+topmod
0D5A C885             (      raakatu.asm):02150                          fdb   L0E60+topmod
0D5C C8F7             (      raakatu.asm):02151                          fdb   L0ED2+topmod
0D5E C924             (      raakatu.asm):02152                  fdb   L0EFF+topmod
0D60 C896             (      raakatu.asm):02153                          fdb   L0E71+topmod
0D62 C94D             (      raakatu.asm):02154                          fdb   L0F28+topmod
0D64 C92E             (      raakatu.asm):02155                          fdb   L0F09+topmod
0D66 C8ED             (      raakatu.asm):02156                  fdb   L0EC8+topmod
0D68 C957             (      raakatu.asm):02157                          fdb   L0F32+topmod
0D6A C96B             (      raakatu.asm):02158                          fdb   L0F46+topmod
0D6C C6AE             (      raakatu.asm):02159                          fdb   L0C8D+topmod
0D6E C6D0             (      raakatu.asm):02160                  fdb   L0CAE+topmod
0D70 C6DE             (      raakatu.asm):02161                          fdb   L0CBC+topmod
0D72 C6EC             (      raakatu.asm):02162                          fdb   L0CCA+topmod
0D74 CA0B             (      raakatu.asm):02163                          fdb   L0FDD+topmod
0D76 CA54             (      raakatu.asm):02164                  fdb   L1026+topmod
0D78 C7EE             (      raakatu.asm):02165                          fdb   L0DCA+topmod
0D7A C7C4             (      raakatu.asm):02166                          fdb   L0DA0+topmod
0D7C C6FF             (      raakatu.asm):02167                          fdb   L0CDD+topmod
0D7E CA7A             (      raakatu.asm):02168                  fdb   L104C+topmod
0D80 CAA7             (      raakatu.asm):02169                          fdb   L1079+topmod
0D82 CAE3             (      raakatu.asm):02170                          fdb   L10B5+topmod
0D84 CAD6             (      raakatu.asm):02171                          fdb   L10A8+topmod
0D86 CAF3             (      raakatu.asm):02172                  fdb   L10C5+topmod
                      (      raakatu.asm):02173         
                      (      raakatu.asm):02174         ; Multi-verb replacement list (code doesn't work that uses this anyway)              
0D88 00               (      raakatu.asm):02175         L1333          fcb       $00                 ; List is the length. List is pointed to by 1331 which is ignored
                      (      raakatu.asm):02176         
                      (      raakatu.asm):02177         ; Random number seed
0D89 1223441D         (      raakatu.asm):02178         L1334          fcb       $12,$23,$44,$1D
0D8D 27               (      raakatu.asm):02179         L1338          fcb       $27
                      (      raakatu.asm):02180         
0D8E 4D2D13           (      raakatu.asm):02181         L1339          fcb       $4D,$2D,$13
                      (      raakatu.asm):02182         
                      (      raakatu.asm):02183         ;##FeedbackPrompts
                      (      raakatu.asm):02184         ; "?VERB?"  
0D91 063F564552423F   (      raakatu.asm):02185         L133C          fcb       $06,$3F,$56,$45,$52,$42,$3F
                      (      raakatu.asm):02186         ;       
                      (      raakatu.asm):02187         ; "?WHAT?"
0D98 063F574841543F   (      raakatu.asm):02188         L1343          fcb       $06,$3F,$57,$48,$41,$54,$3F
                      (      raakatu.asm):02189         ;          
                      (      raakatu.asm):02190         ; "?WHICH?"        
0D9F 073F57484943483F (      raakatu.asm):02191         L134A          fcb       $07,$3F,$57,$48,$49,$43,$48,$3F
                      (      raakatu.asm):02192         ;           
                      (      raakatu.asm):02193         ; "?PHRASE?"         
0DA7 083F504852415345 (      raakatu.asm):02194         L1352          fcb       $08,$3F,$50,$48,$52,$41,$53,$45,$3F
     3F
                      (      raakatu.asm):02195         
                      (      raakatu.asm):02196         ;##PhraseList 
0DB0 0500000001       (      raakatu.asm):02197         L135B          fcb       $05,$00,$00,$00,$01 ; 01: NORTH *     *          *       
0DB5 0600000002       (      raakatu.asm):02198         L1360          fcb       $06,$00,$00,$00,$02 ; 02: SOUTH *     *          *       
0DBA 0700000003       (      raakatu.asm):02199         L1365          fcb       $07,$00,$00,$00,$03 ; 03: EAST *      *          *       
0DBF 0800000004       (      raakatu.asm):02200         L136A          fcb       $08,$00,$00,$00,$04 ; 04: WEST *      *          *       
0DC4 0900200005       (      raakatu.asm):02201         L136F          fcb       $09,$00,$20,$00,$05 ; 05: GET *       ..C.....   *       
0DC9 3407008005       (      raakatu.asm):02202         L1374          fcb       $34,$07,$00,$80,$05 ; 05: PICK UP     *          u.......
0DCE 3407800005       (      raakatu.asm):02203         L1379          fcb       $34,$07,$80,$00,$05 ; 05: PICK UP     u.......   *       
0DD3 0A00200006       (      raakatu.asm):02204         L137E          fcb       $0A,$00,$20,$00,$06 ; 06: DROP *      ..C.....   *       
0DD8 0A0580800F       (      raakatu.asm):02205         L1383          fcb       $0A,$05,$80,$80,$0F ; 0F: DROP IN     u.......   u.......
0DDD 0A06008816       (      raakatu.asm):02206         L1388          fcb       $0A,$06,$00,$88,$16 ; 16: DROP OUT    *          u...A...
0DE2 0B00000007       (      raakatu.asm):02207         L138D          fcb       $0B,$00,$00,$00,$07 ; 07: INVENT *    *          *       
0DE7 0100040008       (      raakatu.asm):02208         L1392          fcb       $01,$00,$04,$00,$08 ; 08: READ *      .....X..   *       
0DEC 0402104009       (      raakatu.asm):02209         L1397          fcb       $04,$02,$10,$40,$09 ; 09: ATTACK WITH ...P....   .v......
0DF1 0C0000000A       (      raakatu.asm):02210         L139C          fcb       $0C,$00,$00,$00,$0A ; 0A: LOOK *      *          *       
0DF6 0C0300800B       (      raakatu.asm):02211         L13A1          fcb       $0C,$03,$00,$80,$0B ; 0B: LOOK AT     *          u.......
0DFB 0C0400800C       (      raakatu.asm):02212         L13A6          fcb       $0C,$04,$00,$80,$0C ; 0C: LOOK UNDER  *          u.......
0E00 0C05008010       (      raakatu.asm):02213         L13AB          fcb       $0C,$05,$00,$80,$10 ; 10: LOOK IN     *          u.......
0E05 030340100D       (      raakatu.asm):02214         L13B0          fcb       $03,$03,$40,$10,$0D ; 0D: THROW AT    .v......   ...P....
0E0A 0305808039       (      raakatu.asm):02215         L13B5          fcb       $03,$05,$80,$80,$39 ; 39: THROW IN    u.......   u.......
0E0F 0308002006       (      raakatu.asm):02216         L13BA          fcb       $03,$08,$00,$20,$06 ; 06: THROW DOWN  *          ..C.....
0E14 030180100E       (      raakatu.asm):02217         L13BF          fcb       $03,$01,$80,$10,$0E ; 0E: THROW TO    u.......   ...P....
0E19 0D0180100E       (      raakatu.asm):02218         L13C4          fcb       $0D,$01,$80,$10,$0E ; 0E: GIVE TO     u.......   ...P....
0E1E 0E0080000B       (      raakatu.asm):02219         L13C9          fcb       $0E,$00,$80,$00,$0B ; 0B: EXAMIN *    u.......   *       
0E23 0E0500800B       (      raakatu.asm):02220         L13CE          fcb       $0E,$05,$00,$80,$0B ; 0B: EXAMIN IN   *          u.......
0E28 0F00800011       (      raakatu.asm):02221         L13D3          fcb       $0F,$00,$80,$00,$11 ; 11: OPEN *      u.......   *       
0E2D 0F0280803A       (      raakatu.asm):02222         L13D8          fcb       $0F,$02,$80,$80,$3A ; 3A: OPEN WITH   u.......   u.......
0E32 1000800012       (      raakatu.asm):02223         L13DD          fcb       $10,$00,$80,$00,$12 ; 12: PULL *      u.......   *       
0E37 1008008012       (      raakatu.asm):02224         L13E2          fcb       $10,$08,$00,$80,$12 ; 12: PULL DOWN   *          u.......
0E3C 1006008005       (      raakatu.asm):02225         L13E7          fcb       $10,$06,$00,$80,$05 ; 05: PULL OUT    *          u.......
0E41 1006800005       (      raakatu.asm):02226         L13EC          fcb       $10,$06,$80,$00,$05 ; 05: PULL OUT    u.......   *       
0E46 100700802D       (      raakatu.asm):02227         L13F1          fcb       $10,$07,$00,$80,$2D ; 2D: PULL UP     *          u.......
0E4B 100780002D       (      raakatu.asm):02228         L13F6          fcb       $10,$07,$80,$00,$2D ; 2D: PULL UP     u.......   *       
0E50 1102888814       (      raakatu.asm):02229         L13FB          fcb       $11,$02,$88,$88,$14 ; 14: LIGHT WITH  u...A...   u...A...
0E55 1200800015       (      raakatu.asm):02230         L1400          fcb       $12,$00,$80,$00,$15 ; 15: EAT *       u.......   *       
0E5A 1306008816       (      raakatu.asm):02231         L1405          fcb       $13,$06,$00,$88,$16 ; 16: BLOW OUT    *          u...A...
0E5F 1400880016       (      raakatu.asm):02232         L140A          fcb       $14,$00,$88,$00,$16 ; 16: EXTING *    u...A...   *       
0E64 1500800017       (      raakatu.asm):02233         L140F          fcb       $15,$00,$80,$00,$17 ; 17: CLIMB *     u.......   *       
0E69 1507008017       (      raakatu.asm):02234         L1414          fcb       $15,$07,$00,$80,$17 ; 17: CLIMB UP    *          u.......
0E6E 1508008017       (      raakatu.asm):02235         L1419          fcb       $15,$08,$00,$80,$17 ; 17: CLIMB DOWN  *          u.......
0E73 1509008017       (      raakatu.asm):02236         L141E          fcb       $15,$09,$00,$80,$17 ; 17: CLIMB OVER  *          u.......
0E78 150C008017       (      raakatu.asm):02237         L1423          fcb       $15,$0C,$00,$80,$17 ; 17: CLIMB ON    *          u.......
0E7D 1505000036       (      raakatu.asm):02238         L1428          fcb       $15,$05,$00,$00,$36 ; 36: CLIMB IN    *          *       
0E82 1505008036       (      raakatu.asm):02239         L142D          fcb       $15,$05,$00,$80,$36 ; 36: CLIMB IN    *          u.......
0E87 1506000037       (      raakatu.asm):02240         L1432          fcb       $15,$06,$00,$00,$37 ; 37: CLIMB OUT   *          *       
0E8C 1506008037       (      raakatu.asm):02241         L1437          fcb       $15,$06,$00,$80,$37 ; 37: CLIMB OUT   *          u.......
0E91 1504008038       (      raakatu.asm):02242         L143C          fcb       $15,$04,$00,$80,$38 ; 38: CLIMB UNDER *          u.......
0E96 1600800018       (      raakatu.asm):02243         L1441          fcb       $16,$00,$80,$00,$18 ; 18: RUB *       u.......   *       
0E9B 180000001A       (      raakatu.asm):02244         L1446          fcb       $18,$00,$00,$00,$1A ; 1A: ??? *       *          *       
0EA0 0501000001       (      raakatu.asm):02245         L144B          fcb       $05,$01,$00,$00,$01 ; 01: NORTH TO    *          *       
0EA5 0601000002       (      raakatu.asm):02246         L1450          fcb       $06,$01,$00,$00,$02 ; 02: SOUTH TO    *          *       
0EAA 0701000003       (      raakatu.asm):02247         L1455          fcb       $07,$01,$00,$00,$03 ; 03: EAST TO     *          *       
0EAF 0801000004       (      raakatu.asm):02248         L145A          fcb       $08,$01,$00,$00,$04 ; 04: WEST TO     *          *       
0EB4 0A08002006       (      raakatu.asm):02249         L145F          fcb       $0A,$08,$00,$20,$06 ; 06: DROP DOWN   *          ..C.....
0EB9 0A08200006       (      raakatu.asm):02250         L1464          fcb       $0A,$08,$20,$00,$06 ; 06: DROP DOWN   ..C.....   *       
0EBE 0A0A208006       (      raakatu.asm):02251         L1469          fcb       $0A,$0A,$20,$80,$06 ; 06: DROP BEHIND ..C.....   u.......
0EC3 0A04208006       (      raakatu.asm):02252         L146E          fcb       $0A,$04,$20,$80,$06 ; 06: DROP UNDER  ..C.....   u.......
0EC8 0A0C208006       (      raakatu.asm):02253         L1473          fcb       $0A,$0C,$20,$80,$06 ; 06: DROP ON     ..C.....   u.......
0ECD 0C0700000A       (      raakatu.asm):02254         L1478          fcb       $0C,$07,$00,$00,$0A ; 0A: LOOK UP     *          *       
0ED2 0C0800000A       (      raakatu.asm):02255         L147D          fcb       $0C,$08,$00,$00,$0A ; 0A: LOOK DOWN   *          *       
0ED7 0C0980000B       (      raakatu.asm):02256         L1482          fcb       $0C,$09,$80,$00,$0B ; 0B: LOOK OVER   u.......   *       
0EDC 0C0900800B       (      raakatu.asm):02257         L1487          fcb       $0C,$09,$00,$80,$0B ; 0B: LOOK OVER   *          u.......
0EE1 0C0B00000A       (      raakatu.asm):02258         L148C          fcb       $0C,$0B,$00,$00,$0A ; 0A: LOOK AROUND *          *       
0EE6 0C0A00000A       (      raakatu.asm):02259         L1491          fcb       $0C,$0A,$00,$00,$0A ; 0A: LOOK BEHIND *          *       
0EEB 0C0B00801B       (      raakatu.asm):02260         L1496          fcb       $0C,$0B,$00,$80,$1B ; 1B: LOOK AROUND *          u.......
0EF0 0C0A00801C       (      raakatu.asm):02261         L149B          fcb       $0C,$0A,$00,$80,$1C ; 1C: LOOK BEHIND *          u.......
0EF5 3200000021       (      raakatu.asm):02262         L14A0          fcb       $32,$00,$00,$00,$21 ; 21: PLUGH *     *          *       
0EFA 2B00000022       (      raakatu.asm):02263         L14A5          fcb       $2B,$00,$00,$00,$22 ; 22: SCREAM *    *          *       
0EFF 2D00000023       (      raakatu.asm):02264         L14AA          fcb       $2D,$00,$00,$00,$23 ; 23: QUIT *      *          *       
0F04 2C00000025       (      raakatu.asm):02265         L14AF          fcb       $2C,$00,$00,$00,$25 ; 25: LEAVE *     *          *       
0F09 2C00200006       (      raakatu.asm):02266         L14B4          fcb       $2C,$00,$20,$00,$06 ; 06: LEAVE *     ..C.....   *       
0F0E 2100000025       (      raakatu.asm):02267         L14B9          fcb       $21,$00,$00,$00,$25 ; 25: GO *        *          *       
0F13 210100803D       (      raakatu.asm):02268         L14BE          fcb       $21,$01,$00,$80,$3D ; 3D: GO TO       *          u.......
0F18 2105008036       (      raakatu.asm):02269         L14C3          fcb       $21,$05,$00,$80,$36 ; 36: GO IN       *          u.......
0F1D 2106008037       (      raakatu.asm):02270         L14C8          fcb       $21,$06,$00,$80,$37 ; 37: GO OUT      *          u.......
0F22 2104008038       (      raakatu.asm):02271         L14CD          fcb       $21,$04,$00,$80,$38 ; 38: GO UNDER    *          u.......
0F27 2107008017       (      raakatu.asm):02272         L14D2          fcb       $21,$07,$00,$80,$17 ; 17: GO UP       *          u.......
0F2C 2108008017       (      raakatu.asm):02273         L14D7          fcb       $21,$08,$00,$80,$17 ; 17: GO DOWN     *          u.......
0F31 210B008026       (      raakatu.asm):02274         L14DC          fcb       $21,$0B,$00,$80,$26 ; 26: GO AROUND   *          u.......
0F36 2300800027       (      raakatu.asm):02275         L14E1          fcb       $23,$00,$80,$00,$27 ; 27: KICK *      u.......   *       
0F3B 2308008027       (      raakatu.asm):02276         L14E6          fcb       $23,$08,$00,$80,$27 ; 27: KICK DOWN   *          u.......
0F40 2305008027       (      raakatu.asm):02277         L14EB          fcb       $23,$05,$00,$80,$27 ; 27: KICK IN     *          u.......
0F45 2402108028       (      raakatu.asm):02278         L14F0          fcb       $24,$02,$10,$80,$28 ; 28: FEED WITH   ...P....   u.......
0F4A 2401801029       (      raakatu.asm):02279         L14F5          fcb       $24,$01,$80,$10,$29 ; 29: FEED TO     u.......   ...P....
0F4F 280000002C       (      raakatu.asm):02280         L14FA          fcb       $28,$00,$00,$00,$2C ; 2C: SCORE *     *          *       
0F54 1C0080002D       (      raakatu.asm):02281         L14FF          fcb       $1C,$00,$80,$00,$2D ; 2D: LIFT *      u.......   *       
0F59 1F0000002F       (      raakatu.asm):02282         L1504          fcb       $1F,$00,$00,$00,$2F ; 2F: WAIT *      *          *       
0F5E 1F0B00002F       (      raakatu.asm):02283         L1509          fcb       $1F,$0B,$00,$00,$2F ; 2F: WAIT AROUND *          *       
0F63 090700002F       (      raakatu.asm):02284         L150E          fcb       $09,$07,$00,$00,$2F ; 2F: GET UP      *          *       
0F68 2009008034       (      raakatu.asm):02285         L1513          fcb       $20,$09,$00,$80,$34 ; 34: JUMP OVER   *          u.......
0F6D 2005008036       (      raakatu.asm):02286         L1518          fcb       $20,$05,$00,$80,$36 ; 36: JUMP IN     *          u.......
0F72 2006008037       (      raakatu.asm):02287         L151D          fcb       $20,$06,$00,$80,$37 ; 37: JUMP OUT    *          u.......
0F77 00               (      raakatu.asm):02288         L1522          fcb       $00
                      (      raakatu.asm):02289         
                      (      raakatu.asm):02290         
                      (      raakatu.asm):02291         ;##RoomDescriptions
0F78 008BD9           (      raakatu.asm):02292         L1523          fcb       $00,$8B,$D9         ; Script list size=0BD9
0F7B 815E00           (      raakatu.asm):02293         L1526          fcb       $81,$5E,$00         ;   Script number=81 size=005E data=00
0F7E 0352             (      raakatu.asm):02294         L1529          fcb       $03,$52             ;     Data tag=03 size=0052
0F80 C7DE94144B5E8396 (      raakatu.asm):02295         L152B          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$5F,$17,$46,$48 ;       YOU ARE IN A SMALL ROOM WITH GRANITE WALLS
     5F174648
0F8C 3917DB9F56D10971 (      raakatu.asm):02296         L1537          fcb       $39,$17,$DB,$9F,$56,$D1,$09,$71,$D0,$B0,$7F,$7B ;       AND FLOOR. THERE IS A SMALL OPENING TO THE
     D0B07F7B
0F98 F3170D8D90140858 (      raakatu.asm):02297         L1543          fcb       $F3,$17,$0D,$8D,$90,$14,$08,$58,$81,$8D,$1B,$B5 ;       EAST AND A LARGE HOLE IN THE CEILING.
     818D1BB5
0FA4 5FBE5BB14B7B5545 (      raakatu.asm):02298         L154F          fcb       $5F,$BE,$5B,$B1,$4B,$7B,$55,$45,$8E,$91,$11,$8A ;       .
     8E91118A
0FB0 F0A4917A89178217 (      raakatu.asm):02299         L155B          fcb       $F0,$A4,$91,$7A,$89,$17,$82,$17,$47,$5E,$66,$49 ;       .
     475E6649
0FBC 901403583B16B7B1 (      raakatu.asm):02300         L1567          fcb       $90,$14,$03,$58,$3B,$16,$B7,$B1,$A9,$15,$DB,$8B ;       .
     A915DB8B
0FC8 837A5FBED714437A (      raakatu.asm):02301         L1573          fcb       $83,$7A,$5F,$BE,$D7,$14,$43,$7A,$CF,$98 ;       .
     CF98
0FD2 0407             (      raakatu.asm):02302         L157D          fcb       $04,$07             ;     Data tag=04 size=0007
0FD4 0B05             (      raakatu.asm):02303         L157F          fcb       $0B,$05             ;         Command_0B_SWITCH size=05
0FD6 0A03             (      raakatu.asm):02304         L1581          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
0FD8 02               (      raakatu.asm):02305         L1583          fcb       $02                 ;           IF_NOT_JUMP address=1586
0FD9 0082             (      raakatu.asm):02306         L1584          fcb       $00,$82             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=82
0FDB 8280C400         (      raakatu.asm):02307         L1586          fcb       $82,$80,$C4,$00     ;   Script number=82 size=00C4 data=00
0FDF 0380AB           (      raakatu.asm):02308         L158A          fcb       $03,$80,$AB         ;     Data tag=03 size=00AB
0FE2 C7DE94144B5E8396 (      raakatu.asm):02309         L158D          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$3B,$16,$B7,$B1 ;       YOU ARE IN A LARGE RECTANGULAR ROOM. ON THE
     3B16B7B1
0FEE 2F17FB55C798548B (      raakatu.asm):02310         L1599          fcb       $2F,$17,$FB,$55,$C7,$98,$54,$8B,$39,$17,$FF,$9F ;       FLOOR OF THE EAST SIDE OF THE ROOM IS AN
     3917FF9F
0FFA C0168217485E818D (      raakatu.asm):02311         L15A5          fcb       $C0,$16,$82,$17,$48,$5E,$81,$8D,$91,$AF,$96,$64 ;       INTRICATE ORIENTAL RUG STRETCHING BETWEEN
     91AF9664
1006 DB72955F15BCFF78 (      raakatu.asm):02312         L15B1          fcb       $DB,$72,$95,$5F,$15,$BC,$FF,$78,$B8,$16,$82,$17 ;       THE NORTH AND SOUTH WALLS. IN THE EAST WALL
     B8168217
1012 545E3FA0D5159014 (      raakatu.asm):02313         L15BD          fcb       $54,$5E,$3F,$A0,$D5,$15,$90,$14,$D0,$15,$F3,$BF ;       IS A HUGE CARVED WOODEN DOOR. TO THE SOUTH,
     D015F3BF
101E 1653515E07B2BB9A (      raakatu.asm):02314         L15C9          fcb       $16,$53,$51,$5E,$07,$B2,$BB,$9A,$14,$8A,$6B,$C4 ;       A SMALL HOLE LEADS TO A DARK PASSAGE WAY.
     148A6BC4
102A 0CBA7D629073C46A (      raakatu.asm):02315         L15D5          fcb       $0C,$BA,$7D,$62,$90,$73,$C4,$6A,$91,$62,$30,$60 ;       .
     91623060
1036 8217505EBEA00371 (      raakatu.asm):02316         L15E1          fcb       $82,$17,$50,$5E,$BE,$A0,$03,$71,$33,$98,$47,$B9 ;       .
     339847B9
1042 53BE0ED02F8ED015 (      raakatu.asm):02317         L15ED          fcb       $53,$BE,$0E,$D0,$2F,$8E,$D0,$15,$82,$17,$47,$5E ;       .
     8217475E
104E 6649F317F38C4B7B (      raakatu.asm):02318         L15F9          fcb       $66,$49,$F3,$17,$F3,$8C,$4B,$7B,$4A,$45,$77,$C4 ;       .
     4A4577C4
105A D3140FB4195836A0 (      raakatu.asm):02319         L1605          fcb       $D3,$14,$0F,$B4,$19,$58,$36,$A0,$83,$61,$81,$5B ;       .
     8361815B
1066 1BB56BBF5FBE6117 (      raakatu.asm):02320         L1611          fcb       $1B,$B5,$6B,$BF,$5F,$BE,$61,$17,$82,$C6,$03,$EE ;       .
     82C603EE
1072 5F174648A915DB8B (      raakatu.asm):02321         L161D          fcb       $5F,$17,$46,$48,$A9,$15,$DB,$8B,$E3,$8B,$0B,$5C ;       .
     E38B0B5C
107E 6BBF46453549DB16 (      raakatu.asm):02322         L1629          fcb       $6B,$BF,$46,$45,$35,$49,$DB,$16,$D3,$B9,$9B,$6C ;       .
     D3B99B6C
108A 1BD02E           (      raakatu.asm):02323         L1635          fcb       $1B,$D0,$2E         ;       .
108D 0413             (      raakatu.asm):02324         L1638          fcb       $04,$13             ;     Data tag=04 size=0013
108F 0B11             (      raakatu.asm):02325         L163A          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
1091 0A04             (      raakatu.asm):02326         L163C          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1093 02               (      raakatu.asm):02327         L163E          fcb       $02                 ;           IF_NOT_JUMP address=1641
1094 0081             (      raakatu.asm):02328         L163F          fcb       $00,$81             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=81
1096 02               (      raakatu.asm):02329         L1641          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1097 02               (      raakatu.asm):02330         L1642          fcb       $02                 ;           IF_NOT_JUMP address=1645
1098 0083             (      raakatu.asm):02331         L1643          fcb       $00,$83             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=83
109A 03               (      raakatu.asm):02332         L1645          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
109B 06               (      raakatu.asm):02333         L1646          fcb       $06                 ;           IF_NOT_JUMP address=164D
109C 0D04             (      raakatu.asm):02334         L1647          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
109E 201D             (      raakatu.asm):02335         L1649          fcb       $20,$1D             ;               Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
10A0 8B               (      raakatu.asm):02336         L164B          fcb       $8B                 ;               CommonCommand_8B
10A1 81               (      raakatu.asm):02337         L164C          fcb       $81                 ;               CommonCommand_81
10A2 833A00           (      raakatu.asm):02338         L164D          fcb       $83,$3A,$00         ;   Script number=83 size=003A data=00
10A5 032A             (      raakatu.asm):02339         L1650          fcb       $03,$2A             ;     Data tag=03 size=002A
10A7 C7DE94144B5E8396 (      raakatu.asm):02340         L1652          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FB,$14,$4B,$B2 ;       YOU ARE IN A DARK PASSAGE WAY WHICH SLOPES
     FB144BB2
10B3 55A409B7595E3B4A (      raakatu.asm):02341         L165E          fcb       $55,$A4,$09,$B7,$59,$5E,$3B,$4A,$23,$D1,$13,$54 ;       UP AND TO THE SOUTH.
     23D11354
10BF C9B8F5A4B2179014 (      raakatu.asm):02342         L166A          fcb       $C9,$B8,$F5,$A4,$B2,$17,$90,$14,$16,$58,$D6,$9C ;       .
     1658D69C
10CB DB7247B977BE     (      raakatu.asm):02343         L1676          fcb       $DB,$72,$47,$B9,$77,$BE ;       .
10D1 040B             (      raakatu.asm):02344         L167C          fcb       $04,$0B             ;     Data tag=04 size=000B
10D3 0B09             (      raakatu.asm):02345         L167E          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
10D5 0A01             (      raakatu.asm):02346         L1680          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
10D7 02               (      raakatu.asm):02347         L1682          fcb       $02                 ;           IF_NOT_JUMP address=1685
10D8 0082             (      raakatu.asm):02348         L1683          fcb       $00,$82             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=82
10DA 02               (      raakatu.asm):02349         L1685          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
10DB 02               (      raakatu.asm):02350         L1686          fcb       $02                 ;           IF_NOT_JUMP address=1689
10DC 0084             (      raakatu.asm):02351         L1687          fcb       $00,$84             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=84
10DE 846700           (      raakatu.asm):02352         L1689          fcb       $84,$67,$00         ;   Script number=84 size=0067 data=00
10E1 0353             (      raakatu.asm):02353         L168C          fcb       $03,$53             ;     Data tag=03 size=0053
10E3 C7DE9414435E16BC (      raakatu.asm):02354         L168E          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$82,$BF ;       YOU ARE AT THE TOP OF A PASSAGE WHICH SLOPES
     DB7282BF
10EF B8167B1455A409B7 (      raakatu.asm):02355         L169A          fcb       $B8,$16,$7B,$14,$55,$A4,$09,$B7,$59,$5E,$85,$73 ;       DOWN AND TO THE NORTH. THERE IS A CORRIDOR
     595E8573
10FB 1571828D4B62895B (      raakatu.asm):02356         L16A6          fcb       $15,$71,$82,$8D,$4B,$62,$89,$5B,$83,$96,$33,$98 ;       TO THE EAST AND ANOTHER TO THE WEST.
     83963398
1107 6BBF5FBE9916C2B3 (      raakatu.asm):02357         L16B2          fcb       $6B,$BF,$5F,$BE,$99,$16,$C2,$B3,$56,$F4,$F4,$72 ;       .
     56F4F472
1113 4B5EC3B5E11473B3 (      raakatu.asm):02358         L16BE          fcb       $4B,$5E,$C3,$B5,$E1,$14,$73,$B3,$84,$5B,$89,$17 ;       .
     845B8917
111F 8217475E66499014 (      raakatu.asm):02359         L16CA          fcb       $82,$17,$47,$5E,$66,$49,$90,$14,$03,$58,$06,$9A ;       .
     0358069A
112B F47289178217595E (      raakatu.asm):02360         L16D6          fcb       $F4,$72,$89,$17,$82,$17,$59,$5E,$66,$62,$2E ;       .
     66622E
1136 040F             (      raakatu.asm):02361         L16E1          fcb       $04,$0F             ;     Data tag=04 size=000F
1138 0B0D             (      raakatu.asm):02362         L16E3          fcb       $0B,$0D             ;         Command_0B_SWITCH size=0D
113A 0A01             (      raakatu.asm):02363         L16E5          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
113C 02               (      raakatu.asm):02364         L16E7          fcb       $02                 ;           IF_NOT_JUMP address=16EA
113D 0083             (      raakatu.asm):02365         L16E8          fcb       $00,$83             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=83
113F 04               (      raakatu.asm):02366         L16EA          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1140 02               (      raakatu.asm):02367         L16EB          fcb       $02                 ;           IF_NOT_JUMP address=16EE
1141 00A1             (      raakatu.asm):02368         L16EC          fcb       $00,$A1             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A1
1143 03               (      raakatu.asm):02369         L16EE          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1144 02               (      raakatu.asm):02370         L16EF          fcb       $02                 ;           IF_NOT_JUMP address=16F2
1145 0085             (      raakatu.asm):02371         L16F0          fcb       $00,$85             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=85
1147 854400           (      raakatu.asm):02372         L16F2          fcb       $85,$44,$00         ;   Script number=85 size=0044 data=00
114A 0326             (      raakatu.asm):02373         L16F5          fcb       $03,$26             ;     Data tag=03 size=0026
114C 63BECBB5C3B57317 (      raakatu.asm):02374         L16F7          fcb       $63,$BE,$CB,$B5,$C3,$B5,$73,$17,$1B,$B8,$E6,$A4 ;       THIS IS A T SHAPED ROOM WITH EXITS EAST,
     1BB8E6A4
1158 3917DB9F56D10771 (      raakatu.asm):02375         L1703          fcb       $39,$17,$DB,$9F,$56,$D1,$07,$71,$96,$D7,$C7,$B5 ;       SOUTH, AND WEST.
     96D7C7B5
1164 664915EE36A17376 (      raakatu.asm):02376         L170F          fcb       $66,$49,$15,$EE,$36,$A1,$73,$76,$8E,$48,$F7,$17 ;       .
     8E48F717
1170 17BA             (      raakatu.asm):02377         L171B          fcb       $17,$BA             ;       .
1172 0419             (      raakatu.asm):02378         L171D          fcb       $04,$19             ;     Data tag=04 size=0019
1174 0B17             (      raakatu.asm):02379         L171F          fcb       $0B,$17             ;         Command_0B_SWITCH size=17
1176 0A04             (      raakatu.asm):02380         L1721          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1178 02               (      raakatu.asm):02381         L1723          fcb       $02                 ;           IF_NOT_JUMP address=1726
1179 0084             (      raakatu.asm):02382         L1724          fcb       $00,$84             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=84
117B 02               (      raakatu.asm):02383         L1726          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
117C 02               (      raakatu.asm):02384         L1727          fcb       $02                 ;           IF_NOT_JUMP address=172A
117D 0086             (      raakatu.asm):02385         L1728          fcb       $00,$86             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=86
117F 03               (      raakatu.asm):02386         L172A          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1180 0C               (      raakatu.asm):02387         L172B          fcb       $0C                 ;           IF_NOT_JUMP address=1738
1181 0D0A             (      raakatu.asm):02388         L172C          fcb       $0D,$0A             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=10
1183 0088             (      raakatu.asm):02389         L172E          fcb       $00,$88             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=88
1185 14               (      raakatu.asm):02390         L1730          fcb       $14                 ;               Command_14_EXECUTE_COMMAND_REVERSE_STATUS
1186 0D05             (      raakatu.asm):02391         L1731          fcb       $0D,$05             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=5
1188 201D             (      raakatu.asm):02392         L1733          fcb       $20,$1D             ;                   Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
118A 0107             (      raakatu.asm):02393         L1735          fcb       $01,$07             ;                   Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=07(StatueWest)
118C 82               (      raakatu.asm):02394         L1737          fcb       $82                 ;                   CommonCommand_82
118D 863F00           (      raakatu.asm):02395         L1738          fcb       $86,$3F,$00         ;   Script number=86 size=003F data=00
1190 032F             (      raakatu.asm):02396         L173B          fcb       $03,$2F             ;     Data tag=03 size=002F
1192 C7DE94144B5E8396 (      raakatu.asm):02397         L173D          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$39,$17,$DB,$9F ;       YOU ARE IN A ROOM WITH GRAY STONE WALLS.
     3917DB9F
119E 56D10971DBB06617 (      raakatu.asm):02398         L1749          fcb       $56,$D1,$09,$71,$DB,$B0,$66,$17,$0F,$A0,$F3,$17 ;       PASSAGES LEAD NORTH AND EAST.
     0FA0F317
11AA 0D8D52F465497747 (      raakatu.asm):02399         L1755          fcb       $0D,$8D,$52,$F4,$65,$49,$77,$47,$CE,$B5,$86,$5F ;       .
     CEB5865F
11B6 9916C2B390140758 (      raakatu.asm):02400         L1761          fcb       $99,$16,$C2,$B3,$90,$14,$07,$58,$66,$49,$2E ;       .
     66492E
11C1 040B             (      raakatu.asm):02401         L176C          fcb       $04,$0B             ;     Data tag=04 size=000B
11C3 0B09             (      raakatu.asm):02402         L176E          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
11C5 0A01             (      raakatu.asm):02403         L1770          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
11C7 02               (      raakatu.asm):02404         L1772          fcb       $02                 ;           IF_NOT_JUMP address=1775
11C8 0085             (      raakatu.asm):02405         L1773          fcb       $00,$85             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=85
11CA 03               (      raakatu.asm):02406         L1775          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
11CB 02               (      raakatu.asm):02407         L1776          fcb       $02                 ;           IF_NOT_JUMP address=1779
11CC 0087             (      raakatu.asm):02408         L1777          fcb       $00,$87             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=87
11CE 874400           (      raakatu.asm):02409         L1779          fcb       $87,$44,$00         ;   Script number=87 size=0044 data=00
11D1 032F             (      raakatu.asm):02410         L177C          fcb       $03,$2F             ;     Data tag=03 size=002F
11D3 63BECBB5C3B53917 (      raakatu.asm):02411         L177E          fcb       $63,$BE,$CB,$B5,$C3,$B5,$39,$17,$8E,$C5,$39,$17 ;       THIS IS A ROUND ROOM WITH HIGH WALLS. THE
     8EC53917
11DF DB9F56D10A717A79 (      raakatu.asm):02412         L178A          fcb       $DB,$9F,$56,$D1,$0A,$71,$7A,$79,$F3,$17,$0D,$8D ;       ONLY OPENING IS TO THE WEST.
     F3170D8D
11EB 56F4DB7216A051DB (      raakatu.asm):02413         L1796          fcb       $56,$F4,$DB,$72,$16,$A0,$51,$DB,$F0,$A4,$91,$7A ;       .
     F0A4917A
11F7 D51589178217595E (      raakatu.asm):02414         L17A2          fcb       $D5,$15,$89,$17,$82,$17,$59,$5E,$66,$62,$2E ;       .
     66622E
1202 0410             (      raakatu.asm):02415         L17AD          fcb       $04,$10             ;     Data tag=04 size=0010
1204 0B0E             (      raakatu.asm):02416         L17AF          fcb       $0B,$0E             ;         Command_0B_SWITCH size=0E
1206 0A05             (      raakatu.asm):02417         L17B1          fcb       $0A,$05             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=05 phrase="05: GET *       ..C.....   *       "
1208 07               (      raakatu.asm):02418         L17B3          fcb       $07                 ;           IF_NOT_JUMP address=17BB
1209 0D05             (      raakatu.asm):02419         L17B4          fcb       $0D,$05             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=5
120B 0808             (      raakatu.asm):02420         L17B6          fcb       $08,$08             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=08(GoldRing
120D 198C             (      raakatu.asm):02421         L17B8          fcb       $19,$8C             ;               Command_19_MOVE_ACTIVE_OBJECT_TO_ROOM room=8C
120F 0C               (      raakatu.asm):02422         L17BA          fcb       $0C                 ;               Command_0C_FAIL
1210 04               (      raakatu.asm):02423         L17BB          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1211 02               (      raakatu.asm):02424         L17BC          fcb       $02                 ;           IF_NOT_JUMP address=17BF
1212 0086             (      raakatu.asm):02425         L17BD          fcb       $00,$86             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=86
1214 887900           (      raakatu.asm):02426         L17BF          fcb       $88,$79,$00         ;   Script number=88 size=0079 data=00
1217 0357             (      raakatu.asm):02427         L17C2          fcb       $03,$57             ;     Data tag=03 size=0057
1219 C7DE94144B5E8396 (      raakatu.asm):02428         L17C4          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$8C,$17,$90,$78 ;       YOU ARE IN A TRIANGULAR ROOM WITH OPENINGS
     8C179078
1225 2E6F234901B35990 (      raakatu.asm):02429         L17D0          fcb       $2E,$6F,$23,$49,$01,$B3,$59,$90,$82,$7B,$C2,$16 ;       IN THE EAST AND WEST CORNERS. THERE IS A
     827BC216
1231 9361C598D0158217 (      raakatu.asm):02430         L17DC          fcb       $93,$61,$C5,$98,$D0,$15,$82,$17,$47,$5E,$66,$49 ;       STATUE IN THE SOUTH CORNER WITH BOW AND
     475E6649
123D 901419586662E114 (      raakatu.asm):02431         L17E8          fcb       $90,$14,$19,$58,$66,$62,$E1,$14,$CF,$B2,$AF,$B3 ;       ARROW.
     CFB2AFB3
1249 82172F62D5157B14 (      raakatu.asm):02432         L17F4          fcb       $82,$17,$2F,$62,$D5,$15,$7B,$14,$FB,$B9,$67,$C0 ;       .
     FBB967C0
1255 D0158217555E36A1 (      raakatu.asm):02433         L1800          fcb       $D0,$15,$82,$17,$55,$5E,$36,$A1,$05,$71,$B8,$A0 ;       .
     0571B8A0
1261 236256D104716BA1 (      raakatu.asm):02434         L180C          fcb       $23,$62,$56,$D1,$04,$71,$6B,$A1,$8E,$48,$94,$14 ;       .
     8E489414
126D 09B32E           (      raakatu.asm):02435         L1818          fcb       $09,$B3,$2E         ;       .
1270 041D             (      raakatu.asm):02436         L181B          fcb       $04,$1D             ;     Data tag=04 size=001D
1272 0B1B             (      raakatu.asm):02437         L181D          fcb       $0B,$1B             ;         Command_0B_SWITCH size=1B
1274 0A04             (      raakatu.asm):02438         L181F          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1276 0B               (      raakatu.asm):02439         L1821          fcb       $0B                 ;           IF_NOT_JUMP address=182D
1277 0E09             (      raakatu.asm):02440         L1822          fcb       $0E,$09             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=9
1279 0D05             (      raakatu.asm):02441         L1824          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
127B 201D             (      raakatu.asm):02442         L1826          fcb       $20,$1D             ;                 Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
127D 0107             (      raakatu.asm):02443         L1828          fcb       $01,$07             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=07(StatueWest)
127F 82               (      raakatu.asm):02444         L182A          fcb       $82                 ;                 CommonCommand_82
1280 0085             (      raakatu.asm):02445         L182B          fcb       $00,$85             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=85
1282 03               (      raakatu.asm):02446         L182D          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1283 0B               (      raakatu.asm):02447         L182E          fcb       $0B                 ;           IF_NOT_JUMP address=183A
1284 0E09             (      raakatu.asm):02448         L182F          fcb       $0E,$09             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=9
1286 0D05             (      raakatu.asm):02449         L1831          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
1288 201D             (      raakatu.asm):02450         L1833          fcb       $20,$1D             ;                 Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
128A 0106             (      raakatu.asm):02451         L1835          fcb       $01,$06             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=06(StatueEast)
128C 82               (      raakatu.asm):02452         L1837          fcb       $82                 ;                 CommonCommand_82
128D 0089             (      raakatu.asm):02453         L1838          fcb       $00,$89             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=89
128F 895D00           (      raakatu.asm):02454         L183A          fcb       $89,$5D,$00         ;   Script number=89 size=005D data=00
1292 033F             (      raakatu.asm):02455         L183D          fcb       $03,$3F             ;     Data tag=03 size=003F
1294 C7DE9414435E16BC (      raakatu.asm):02456         L183F          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$47,$B9 ;       YOU ARE AT THE SOUTH END OF THE GREAT
     DB7247B9
12A0 53BE8E61B8168217 (      raakatu.asm):02457         L184B          fcb       $53,$BE,$8E,$61,$B8,$16,$82,$17,$49,$5E,$63,$B1 ;       CENTRAL HALLWAY. EXITS EXIST IN THE EAST AND
     495E63B1
12AC 05BC9E61CEB09B15 (      raakatu.asm):02458         L1857          fcb       $05,$BC,$9E,$61,$CE,$B0,$9B,$15,$11,$8D,$5F,$4A ;       WEST WALLS.
     118D5F4A
12B8 3A158D7B3A15667B (      raakatu.asm):02459         L1863          fcb       $3A,$15,$8D,$7B,$3A,$15,$66,$7B,$D0,$15,$82,$17 ;       .
     D0158217
12C4 475E664990141958 (      raakatu.asm):02460         L186F          fcb       $47,$5E,$66,$49,$90,$14,$19,$58,$66,$62,$F3,$17 ;       .
     6662F317
12D0 0D8D2E           (      raakatu.asm):02461         L187B          fcb       $0D,$8D,$2E         ;       .
12D3 0419             (      raakatu.asm):02462         L187E          fcb       $04,$19             ;     Data tag=04 size=0019
12D5 0B17             (      raakatu.asm):02463         L1880          fcb       $0B,$17             ;         Command_0B_SWITCH size=17
12D7 0A04             (      raakatu.asm):02464         L1882          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
12D9 0C               (      raakatu.asm):02465         L1884          fcb       $0C                 ;           IF_NOT_JUMP address=1891
12DA 0D0A             (      raakatu.asm):02466         L1885          fcb       $0D,$0A             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=10
12DC 0088             (      raakatu.asm):02467         L1887          fcb       $00,$88             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=88
12DE 14               (      raakatu.asm):02468         L1889          fcb       $14                 ;               Command_14_EXECUTE_COMMAND_REVERSE_STATUS
12DF 0D05             (      raakatu.asm):02469         L188A          fcb       $0D,$05             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=5
12E1 201D             (      raakatu.asm):02470         L188C          fcb       $20,$1D             ;                   Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
12E3 0106             (      raakatu.asm):02471         L188E          fcb       $01,$06             ;                   Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=06(StatueEast)
12E5 82               (      raakatu.asm):02472         L1890          fcb       $82                 ;                   CommonCommand_82
12E6 01               (      raakatu.asm):02473         L1891          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
12E7 02               (      raakatu.asm):02474         L1892          fcb       $02                 ;           IF_NOT_JUMP address=1895
12E8 0090             (      raakatu.asm):02475         L1893          fcb       $00,$90             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=90
12EA 03               (      raakatu.asm):02476         L1895          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
12EB 02               (      raakatu.asm):02477         L1896          fcb       $02                 ;           IF_NOT_JUMP address=1899
12EC 008A             (      raakatu.asm):02478         L1897          fcb       $00,$8A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8A
12EE 8A3A00           (      raakatu.asm):02479         L1899          fcb       $8A,$3A,$00         ;   Script number=8A size=003A data=00
12F1 0326             (      raakatu.asm):02480         L189C          fcb       $03,$26             ;     Data tag=03 size=0026
12F3 63BECBB5C3B57317 (      raakatu.asm):02481         L189E          fcb       $63,$BE,$CB,$B5,$C3,$B5,$73,$17,$1B,$B8,$E6,$A4 ;       THIS IS A T SHAPED ROOM WITH EXITS EAST,
     1BB8E6A4
12FF 3917DB9F56D10771 (      raakatu.asm):02482         L18AA          fcb       $39,$17,$DB,$9F,$56,$D1,$07,$71,$96,$D7,$C7,$B5 ;       SOUTH, AND WEST.
     96D7C7B5
130B 664915EE36A17376 (      raakatu.asm):02483         L18B6          fcb       $66,$49,$15,$EE,$36,$A1,$73,$76,$8E,$48,$F7,$17 ;       .
     8E48F717
1317 17BA             (      raakatu.asm):02484         L18C2          fcb       $17,$BA             ;       .
1319 040F             (      raakatu.asm):02485         L18C4          fcb       $04,$0F             ;     Data tag=04 size=000F
131B 0B0D             (      raakatu.asm):02486         L18C6          fcb       $0B,$0D             ;         Command_0B_SWITCH size=0D
131D 0A04             (      raakatu.asm):02487         L18C8          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
131F 02               (      raakatu.asm):02488         L18CA          fcb       $02                 ;           IF_NOT_JUMP address=18CD
1320 0089             (      raakatu.asm):02489         L18CB          fcb       $00,$89             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=89
1322 02               (      raakatu.asm):02490         L18CD          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1323 02               (      raakatu.asm):02491         L18CE          fcb       $02                 ;           IF_NOT_JUMP address=18D1
1324 008B             (      raakatu.asm):02492         L18CF          fcb       $00,$8B             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8B
1326 03               (      raakatu.asm):02493         L18D1          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1327 02               (      raakatu.asm):02494         L18D2          fcb       $02                 ;           IF_NOT_JUMP address=18D5
1328 008D             (      raakatu.asm):02495         L18D3          fcb       $00,$8D             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8D
132A 8B3F00           (      raakatu.asm):02496         L18D5          fcb       $8B,$3F,$00         ;   Script number=8B size=003F data=00
132D 032F             (      raakatu.asm):02497         L18D8          fcb       $03,$2F             ;     Data tag=03 size=002F
132F C7DE94144B5E8396 (      raakatu.asm):02498         L18DA          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$39,$17,$DB,$9F ;       YOU ARE IN A ROOM WITH GREY STONE WALLS.
     3917DB9F
133B 56D109717BB16617 (      raakatu.asm):02499         L18E6          fcb       $56,$D1,$09,$71,$7B,$B1,$66,$17,$0F,$A0,$F3,$17 ;       PASSAGES LEAD NORTH AND EAST.
     0FA0F317
1347 0D8D52F465497747 (      raakatu.asm):02500         L18F2          fcb       $0D,$8D,$52,$F4,$65,$49,$77,$47,$CE,$B5,$86,$5F ;       .
     CEB5865F
1353 9916C2B390140758 (      raakatu.asm):02501         L18FE          fcb       $99,$16,$C2,$B3,$90,$14,$07,$58,$66,$49,$2E ;       .
     66492E
135E 040B             (      raakatu.asm):02502         L1909          fcb       $04,$0B             ;     Data tag=04 size=000B
1360 0B09             (      raakatu.asm):02503         L190B          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
1362 0A01             (      raakatu.asm):02504         L190D          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
1364 02               (      raakatu.asm):02505         L190F          fcb       $02                 ;           IF_NOT_JUMP address=1912
1365 008A             (      raakatu.asm):02506         L1910          fcb       $00,$8A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8A
1367 03               (      raakatu.asm):02507         L1912          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1368 02               (      raakatu.asm):02508         L1913          fcb       $02                 ;           IF_NOT_JUMP address=1916
1369 008C             (      raakatu.asm):02509         L1914          fcb       $00,$8C             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8C
136B 8C4400           (      raakatu.asm):02510         L1916          fcb       $8C,$44,$00         ;   Script number=8C size=0044 data=00
136E 032F             (      raakatu.asm):02511         L1919          fcb       $03,$2F             ;     Data tag=03 size=002F
1370 63BECBB5C3B53917 (      raakatu.asm):02512         L191B          fcb       $63,$BE,$CB,$B5,$C3,$B5,$39,$17,$8E,$C5,$39,$17 ;       THIS IS A ROUND ROOM WITH HIGH WALLS. THE
     8EC53917
137C DB9F56D10A717A79 (      raakatu.asm):02513         L1927          fcb       $DB,$9F,$56,$D1,$0A,$71,$7A,$79,$F3,$17,$0D,$8D ;       ONLY OPENING IS TO THE WEST.
     F3170D8D
1388 56F4DB7216A051DB (      raakatu.asm):02514         L1933          fcb       $56,$F4,$DB,$72,$16,$A0,$51,$DB,$F0,$A4,$91,$7A ;       .
     F0A4917A
1394 D51589178217595E (      raakatu.asm):02515         L193F          fcb       $D5,$15,$89,$17,$82,$17,$59,$5E,$66,$62,$2E ;       .
     66622E
139F 0410             (      raakatu.asm):02516         L194A          fcb       $04,$10             ;     Data tag=04 size=0010
13A1 0B0E             (      raakatu.asm):02517         L194C          fcb       $0B,$0E             ;         Command_0B_SWITCH size=0E
13A3 0A05             (      raakatu.asm):02518         L194E          fcb       $0A,$05             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=05 phrase="05: GET *       ..C.....   *       "
13A5 07               (      raakatu.asm):02519         L1950          fcb       $07                 ;           IF_NOT_JUMP address=1958
13A6 0D05             (      raakatu.asm):02520         L1951          fcb       $0D,$05             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=5
13A8 0808             (      raakatu.asm):02521         L1953          fcb       $08,$08             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=08(GoldRing
13AA 1987             (      raakatu.asm):02522         L1955          fcb       $19,$87             ;               Command_19_MOVE_ACTIVE_OBJECT_TO_ROOM room=87
13AC 0C               (      raakatu.asm):02523         L1957          fcb       $0C                 ;               Command_0C_FAIL
13AD 04               (      raakatu.asm):02524         L1958          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
13AE 02               (      raakatu.asm):02525         L1959          fcb       $02                 ;           IF_NOT_JUMP address=195C
13AF 008B             (      raakatu.asm):02526         L195A          fcb       $00,$8B             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8B
13B1 8D4D00           (      raakatu.asm):02527         L195C          fcb       $8D,$4D,$00         ;   Script number=8D size=004D data=00
13B4 033D             (      raakatu.asm):02528         L195F          fcb       $03,$3D             ;     Data tag=03 size=003D
13B6 C7DE94144B5E8396 (      raakatu.asm):02529         L1961          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$DF,$16,$96,$BE ;       YOU ARE IN A PETITE CHAMBER. THERE IS A
     DF1696BE
13C2 455E4F72744D56F4 (      raakatu.asm):02530         L196D          fcb       $45,$5E,$4F,$72,$74,$4D,$56,$F4,$F4,$72,$4B,$5E ;       LARGER ROOM TO THE NORTH AND A PASSAGE TO
     F4724B5E
13CE C3B53B16B7B194AF (      raakatu.asm):02531         L1979          fcb       $C3,$B5,$3B,$16,$B7,$B1,$94,$AF,$3F,$A0,$89,$17 ;       THE WEST.
     3FA08917
13DA 8217505EBEA00371 (      raakatu.asm):02532         L1985          fcb       $82,$17,$50,$5E,$BE,$A0,$03,$71,$33,$98,$52,$45 ;       .
     33985245
13E6 6549774789178217 (      raakatu.asm):02533         L1991          fcb       $65,$49,$77,$47,$89,$17,$82,$17,$59,$5E,$66,$62 ;       .
     595E6662
13F2 2E               (      raakatu.asm):02534         L199D          fcb       $2E                 ;       .
13F3 040B             (      raakatu.asm):02535         L199E          fcb       $04,$0B             ;     Data tag=04 size=000B
13F5 0B09             (      raakatu.asm):02536         L19A0          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
13F7 0A04             (      raakatu.asm):02537         L19A2          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
13F9 02               (      raakatu.asm):02538         L19A4          fcb       $02                 ;           IF_NOT_JUMP address=19A7
13FA 008A             (      raakatu.asm):02539         L19A5          fcb       $00,$8A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8A
13FC 01               (      raakatu.asm):02540         L19A7          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
13FD 02               (      raakatu.asm):02541         L19A8          fcb       $02                 ;           IF_NOT_JUMP address=19AB
13FE 008E             (      raakatu.asm):02542         L19A9          fcb       $00,$8E             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8E
1400 8E80A200         (      raakatu.asm):02543         L19AB          fcb       $8E,$80,$A2,$00     ;   Script number=8E size=00A2 data=00
1404 033B             (      raakatu.asm):02544         L19AF          fcb       $03,$3B             ;     Data tag=03 size=003B
1406 C7DE94144B5E8396 (      raakatu.asm):02545         L19B1          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$3B,$16,$B7,$B1 ;       YOU ARE IN A LARGE ROOM WHICH SMELLS OF
     3B16B7B1
1412 3917DB9F23D11354 (      raakatu.asm):02546         L19BD          fcb       $39,$17,$DB,$9F,$23,$D1,$13,$54,$E7,$B8,$0D,$8D ;       DECAYING FLESH. THERE ARE EXITS NORTH AND
     E7B80D8D
141E B816FF141B53917A (      raakatu.asm):02547         L19C9          fcb       $B8,$16,$FF,$14,$1B,$53,$91,$7A,$56,$15,$5A,$62 ;       SOUTH.
     56155A62
142A 56F4F472435E5BB1 (      raakatu.asm):02548         L19D5          fcb       $56,$F4,$F4,$72,$43,$5E,$5B,$B1,$23,$63,$0B,$C0 ;       .
     23630BC0
1436 049A53BE8E486117 (      raakatu.asm):02549         L19E1          fcb       $04,$9A,$53,$BE,$8E,$48,$61,$17,$82,$C6,$2E ;       .
     82C62E
1441 0462             (      raakatu.asm):02550         L19EC          fcb       $04,$62             ;     Data tag=04 size=0062
1443 0B60             (      raakatu.asm):02551         L19EE          fcb       $0B,$60             ;         Command_0B_SWITCH size=60
1445 0A02             (      raakatu.asm):02552         L19F0          fcb       $0A,$02             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1447 02               (      raakatu.asm):02553         L19F2          fcb       $02                 ;           IF_NOT_JUMP address=19F5
1448 008D             (      raakatu.asm):02554         L19F3          fcb       $00,$8D             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8D
144A 01               (      raakatu.asm):02555         L19F5          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
144B 59               (      raakatu.asm):02556         L19F6          fcb       $59                 ;           IF_NOT_JUMP address=1A50
144C 0E57             (      raakatu.asm):02557         L19F7          fcb       $0E,$57             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=87
144E 0D1D             (      raakatu.asm):02558         L19F9          fcb       $0D,$1D             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=29
1450 011E             (      raakatu.asm):02559         L19FB          fcb       $01,$1E             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1E(LiveGargoyle)
1452 201D             (      raakatu.asm):02560         L19FD          fcb       $20,$1D             ;                 Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
1454 04               (      raakatu.asm):02561         L19FF          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1455 175FBE7315C1B13F (      raakatu.asm):02562         L1A00          fcb       $17,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$B6,$14,$5D ;                   THE GARGOYLE BLOCKS THE WAY NORTH.
     DEB6145D
1461 9ED6B5DB721BD099 (      raakatu.asm):02563         L1A0C          fcb       $9E,$D6,$B5,$DB,$72,$1B,$D0,$99,$16,$C2,$B3,$2E ;                   .
     16C2B32E
146D 0D34             (      raakatu.asm):02564         L1A18          fcb       $0D,$34             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=52
146F 201D             (      raakatu.asm):02565         L1A1A          fcb       $20,$1D             ;                 Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
1471 010A             (      raakatu.asm):02566         L1A1C          fcb       $01,$0A             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=0A(StoneGargoyle)
1473 170A00           (      raakatu.asm):02567         L1A1E          fcb       $17,$0A,$00         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=0A(StoneGargoyle) location=00
1476 171E8E           (      raakatu.asm):02568         L1A21          fcb       $17,$1E,$8E         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1E(LiveGargoyle) location=8E
1479 04               (      raakatu.asm):02569         L1A24          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
147A 285FBE7315C1B13F (      raakatu.asm):02570         L1A25          fcb       $28,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$E1,$14,$35 ;                   THE GARGOYLE COMES TO LIFE AND JUMPS DOWN TO
     DEE11435
1486 92891743165B668E (      raakatu.asm):02571         L1A31          fcb       $92,$89,$17,$43,$16,$5B,$66,$8E,$48,$FF,$15,$ED ;                   BLOCK YOUR WAY!
     48FF15ED
1492 93091503D26BBF89 (      raakatu.asm):02572         L1A3D          fcb       $93,$09,$15,$03,$D2,$6B,$BF,$89,$4E,$8B,$54,$C7 ;                   .
     4E8B54C7
149E DE99AF394A       (      raakatu.asm):02573         L1A49          fcb       $DE,$99,$AF,$39,$4A ;                   .
14A3 008F             (      raakatu.asm):02574         L1A4E          fcb       $00,$8F             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8F
14A5 8F3A00           (      raakatu.asm):02575         L1A50          fcb       $8F,$3A,$00         ;   Script number=8F size=003A data=00
14A8 032E             (      raakatu.asm):02576         L1A53          fcb       $03,$2E             ;     Data tag=03 size=002E
14AA 63BECBB5C3B57B17 (      raakatu.asm):02577         L1A55          fcb       $63,$BE,$CB,$B5,$C3,$B5,$7B,$17,$F3,$8C,$01,$B3 ;       THIS IS A TALL ROOM CARVED OF STONE WITH A
     F38C01B3
14B6 45904049F35FC39E (      raakatu.asm):02578         L1A61          fcb       $45,$90,$40,$49,$F3,$5F,$C3,$9E,$09,$BA,$5B,$98 ;       SINGLE EXIT TO THE SOUTH. 
     09BA5B98
14C2 56D103715B17BE98 (      raakatu.asm):02579         L1A6D          fcb       $56,$D1,$03,$71,$5B,$17,$BE,$98,$47,$5E,$96,$D7 ;       .
     475E96D7
14CE 89178217555E36A1 (      raakatu.asm):02580         L1A79          fcb       $89,$17,$82,$17,$55,$5E,$36,$A1,$9B,$76 ;       .
     9B76
14D8 0407             (      raakatu.asm):02581         L1A83          fcb       $04,$07             ;     Data tag=04 size=0007
14DA 0B05             (      raakatu.asm):02582         L1A85          fcb       $0B,$05             ;         Command_0B_SWITCH size=05
14DC 0A02             (      raakatu.asm):02583         L1A87          fcb       $0A,$02             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
14DE 02               (      raakatu.asm):02584         L1A89          fcb       $02                 ;           IF_NOT_JUMP address=1A8C
14DF 008E             (      raakatu.asm):02585         L1A8A          fcb       $00,$8E             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=8E
14E1 9080A200         (      raakatu.asm):02586         L1A8C          fcb       $90,$80,$A2,$00     ;   Script number=90 size=00A2 data=00
14E5 0356             (      raakatu.asm):02587         L1A90          fcb       $03,$56             ;     Data tag=03 size=0056
14E7 C7DE9414435E16BC (      raakatu.asm):02588         L1A92          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$04,$9A ;       YOU ARE AT THE NORTH END OF THE GREAT
     DB72049A
14F3 53BE8E61B8168217 (      raakatu.asm):02589         L1A9E          fcb       $53,$BE,$8E,$61,$B8,$16,$82,$17,$49,$5E,$63,$B1 ;       CENTRAL HALLWAY. EXITS EXIST IN THE EAST AND
     495E63B1
14FF 05BC9E61CEB09B15 (      raakatu.asm):02590         L1AAA          fcb       $05,$BC,$9E,$61,$CE,$B0,$9B,$15,$11,$8D,$5F,$4A ;       WEST WALLS. THERE IS A DOOR ON THE NORTH
     118D5F4A
150B 3A158D7B3A15667B (      raakatu.asm):02591         L1AB6          fcb       $3A,$15,$8D,$7B,$3A,$15,$66,$7B,$D0,$15,$82,$17 ;       WALL.
     D0158217
1517 475E664990141958 (      raakatu.asm):02592         L1AC2          fcb       $47,$5E,$66,$49,$90,$14,$19,$58,$66,$62,$F3,$17 ;       .
     6662F317
1523 0D8D56F4F4724B5E (      raakatu.asm):02593         L1ACE          fcb       $0D,$8D,$56,$F4,$F4,$72,$4B,$5E,$C3,$B5,$09,$15 ;       .
     C3B50915
152F A3A003A05FBE9916 (      raakatu.asm):02594         L1ADA          fcb       $A3,$A0,$03,$A0,$5F,$BE,$99,$16,$C2,$B3,$F3,$17 ;       .
     C2B3F317
153B 178D             (      raakatu.asm):02595         L1AE6          fcb       $17,$8D             ;       .
153D 0447             (      raakatu.asm):02596         L1AE8          fcb       $04,$47             ;     Data tag=04 size=0047
153F 0B45             (      raakatu.asm):02597         L1AEA          fcb       $0B,$45             ;         Command_0B_SWITCH size=45
1541 0A02             (      raakatu.asm):02598         L1AEC          fcb       $0A,$02             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1543 02               (      raakatu.asm):02599         L1AEE          fcb       $02                 ;           IF_NOT_JUMP address=1AF1
1544 0089             (      raakatu.asm):02600         L1AEF          fcb       $00,$89             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=89
1546 03               (      raakatu.asm):02601         L1AF1          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1547 02               (      raakatu.asm):02602         L1AF2          fcb       $02                 ;           IF_NOT_JUMP address=1AF5
1548 00A0             (      raakatu.asm):02603         L1AF3          fcb       $00,$A0             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A0
154A 01               (      raakatu.asm):02604         L1AF5          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
154B 36               (      raakatu.asm):02605         L1AF6          fcb       $36                 ;           IF_NOT_JUMP address=1B2D
154C 0E34             (      raakatu.asm):02606         L1AF7          fcb       $0E,$34             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=52
154E 0D14             (      raakatu.asm):02607         L1AF9          fcb       $0D,$14             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=20
1550 011B             (      raakatu.asm):02608         L1AFB          fcb       $01,$1B             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1B(ClosedDoor)
1552 04               (      raakatu.asm):02609         L1AFD          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1553 105FBE0915A3A089 (      raakatu.asm):02610         L1AFE          fcb       $10,$5F,$BE,$09,$15,$A3,$A0,$89,$4E,$A5,$54,$DB ;                   THE DOOR BLOCKS PASSAGE.
     4EA554DB
155F 16D3B9BF6C       (      raakatu.asm):02611         L1B0A          fcb       $16,$D3,$B9,$BF,$6C ;                   .
1564 0D1C             (      raakatu.asm):02612         L1B0F          fcb       $0D,$1C             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=28
1566 0091             (      raakatu.asm):02613         L1B11          fcb       $00,$91             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=91
1568 171B91           (      raakatu.asm):02614         L1B13          fcb       $17,$1B,$91         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1B(ClosedDoor) location=91
156B 04               (      raakatu.asm):02615         L1B16          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
156C 125FBE0915A3A0C9 (      raakatu.asm):02616         L1B17          fcb       $12,$5F,$BE,$09,$15,$A3,$A0,$C9,$54,$B5,$B7,$AF ;                   THE DOOR CLOSES BEHIND YOU.
     54B5B7AF
1578 1490731B583FA1   (      raakatu.asm):02617         L1B23          fcb       $14,$90,$73,$1B,$58,$3F,$A1 ;                   .
157F 171C00           (      raakatu.asm):02618         L1B2A          fcb       $17,$1C,$00         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1C(OpenDoor) location=00
1582 04               (      raakatu.asm):02619         L1B2D          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1583 02               (      raakatu.asm):02620         L1B2E          fcb       $02                 ;           IF_NOT_JUMP address=1B31
1584 0092             (      raakatu.asm):02621         L1B2F          fcb       $00,$92             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=92
1586 91808F00         (      raakatu.asm):02622         L1B31          fcb       $91,$80,$8F,$00     ;   Script number=91 size=008F data=00
158A 0322             (      raakatu.asm):02623         L1B35          fcb       $03,$22             ;     Data tag=03 size=0022
158C C7DE94144B5E8396 (      raakatu.asm):02624         L1B37          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$CB,$17,$4E,$C5 ;       YOU ARE IN A VAULT WITH A LARGE DOOR TO THE
     CB174EC5
1598 FB1753BE4E453149 (      raakatu.asm):02625         L1B43          fcb       $FB,$17,$53,$BE,$4E,$45,$31,$49,$46,$5E,$44,$A0 ;       SOUTH. 
     465E44A0
15A4 89178217555E36A1 (      raakatu.asm):02626         L1B4F          fcb       $89,$17,$82,$17,$55,$5E,$36,$A1,$9B,$76 ;       .
     9B76
15AE 0468             (      raakatu.asm):02627         L1B59          fcb       $04,$68             ;     Data tag=04 size=0068
15B0 0B66             (      raakatu.asm):02628         L1B5B          fcb       $0B,$66             ;         Command_0B_SWITCH size=66
15B2 0A02             (      raakatu.asm):02629         L1B5D          fcb       $0A,$02             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
15B4 2F               (      raakatu.asm):02630         L1B5F          fcb       $2F                 ;           IF_NOT_JUMP address=1B8F
15B5 0E2D             (      raakatu.asm):02631         L1B60          fcb       $0E,$2D             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=45
15B7 0D10             (      raakatu.asm):02632         L1B62          fcb       $0D,$10             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=16
15B9 011B             (      raakatu.asm):02633         L1B64          fcb       $01,$1B             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1B(ClosedDoor)
15BB 04               (      raakatu.asm):02634         L1B66          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
15BC 0C5FBE0915A3A04B (      raakatu.asm):02635         L1B67          fcb       $0C,$5F,$BE,$09,$15,$A3,$A0,$4B,$7B,$2F,$B8,$9B ;                   THE DOOR IS SHUT. 
     7B2FB89B
15C8 C1               (      raakatu.asm):02636         L1B73          fcb       $C1                 ;                   .
15C9 0D19             (      raakatu.asm):02637         L1B74          fcb       $0D,$19             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=25
15CB 0090             (      raakatu.asm):02638         L1B76          fcb       $00,$90             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=90
15CD 171B90           (      raakatu.asm):02639         L1B78          fcb       $17,$1B,$90         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1B(ClosedDoor) location=90
15D0 04               (      raakatu.asm):02640         L1B7B          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
15D1 0F5FBE0915A3A0C9 (      raakatu.asm):02641         L1B7C          fcb       $0F,$5F,$BE,$09,$15,$A3,$A0,$C9,$54,$B5,$B7,$89 ;                   THE DOOR CLOSES AGAIN.
     54B5B789
15DD 14D0472E         (      raakatu.asm):02642         L1B88          fcb       $14,$D0,$47,$2E     ;                   .
15E1 171C00           (      raakatu.asm):02643         L1B8C          fcb       $17,$1C,$00         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1C(OpenDoor) location=00
15E4 11               (      raakatu.asm):02644         L1B8F          fcb       $11                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=11 phrase="11: OPEN *      u.......   *       "
15E5 32               (      raakatu.asm):02645         L1B90          fcb       $32                 ;           IF_NOT_JUMP address=1BC3
15E6 0E30             (      raakatu.asm):02646         L1B91          fcb       $0E,$30             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=48
15E8 0D10             (      raakatu.asm):02647         L1B93          fcb       $0D,$10             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=16
15EA 081C             (      raakatu.asm):02648         L1B95          fcb       $08,$1C             ;                 Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=1C(OpenDoor
15EC 04               (      raakatu.asm):02649         L1B97          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
15ED 0C8D7B8E1463B1FB (      raakatu.asm):02650         L1B98          fcb       $0C,$8D,$7B,$8E,$14,$63,$B1,$FB,$5C,$5F,$A0,$1B ;                   ITS ALREADY OPEN. 
     5C5FA01B
15F9 9C               (      raakatu.asm):02651         L1BA4          fcb       $9C                 ;                   .
15FA 0D1C             (      raakatu.asm):02652         L1BA5          fcb       $0D,$1C             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=28
15FC 081B             (      raakatu.asm):02653         L1BA7          fcb       $08,$1B             ;                 Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=1B(ClosedDoor
15FE 171C91           (      raakatu.asm):02654         L1BA9          fcb       $17,$1C,$91         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1C(OpenDoor) location=91
1601 171B00           (      raakatu.asm):02655         L1BAC          fcb       $17,$1B,$00         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=1B(ClosedDoor) location=00
1604 04               (      raakatu.asm):02656         L1BAF          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1605 1264B7B7C6B0C6D6 (      raakatu.asm):02657         L1BB0          fcb       $12,$64,$B7,$B7,$C6,$B0,$C6,$D6,$6A,$DB,$72,$81 ;                   SCRUUUUUNG THE DOOR OPENS. 
     6ADB7281
1611 5B91AFF0A45BBB   (      raakatu.asm):02658         L1BBC          fcb       $5B,$91,$AF,$F0,$A4,$5B,$BB ;                   .
1618 924B00           (      raakatu.asm):02659         L1BC3          fcb       $92,$4B,$00         ;   Script number=92 size=004B data=00
161B 033B             (      raakatu.asm):02660         L1BC6          fcb       $03,$3B             ;     Data tag=03 size=003B
161D C7DE9414435E16BC (      raakatu.asm):02661         L1BC8          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$9E,$61 ;       YOU ARE AT THE ENTRANCE TO A LONG DARK
     DB729E61
1629 D0B09B536BBF4E45 (      raakatu.asm):02662         L1BD4          fcb       $D0,$B0,$9B,$53,$6B,$BF,$4E,$45,$11,$A0,$FB,$14 ;       TUNNEL WHICH LEADS WEST. THERE IS A PASSAGE
     11A0FB14
1635 4BB270C06E98FA17 (      raakatu.asm):02663         L1BE0          fcb       $4B,$B2,$70,$C0,$6E,$98,$FA,$17,$DA,$78,$3F,$16 ;       EAST.
     DA783F16
1641 0D47F71717BA8217 (      raakatu.asm):02664         L1BEC          fcb       $0D,$47,$F7,$17,$17,$BA,$82,$17,$2F,$62,$D5,$15 ;       .
     2F62D515
164D 7B1455A409B7475E (      raakatu.asm):02665         L1BF8          fcb       $7B,$14,$55,$A4,$09,$B7,$47,$5E,$66,$49,$2E ;       .
     66492E
1658 040B             (      raakatu.asm):02666         L1C03          fcb       $04,$0B             ;     Data tag=04 size=000B
165A 0B09             (      raakatu.asm):02667         L1C05          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
165C 0A03             (      raakatu.asm):02668         L1C07          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
165E 02               (      raakatu.asm):02669         L1C09          fcb       $02                 ;           IF_NOT_JUMP address=1C0C
165F 0090             (      raakatu.asm):02670         L1C0A          fcb       $00,$90             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=90
1661 04               (      raakatu.asm):02671         L1C0C          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1662 02               (      raakatu.asm):02672         L1C0D          fcb       $02                 ;           IF_NOT_JUMP address=1C10
1663 0093             (      raakatu.asm):02673         L1C0E          fcb       $00,$93             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=93
1665 932200           (      raakatu.asm):02674         L1C10          fcb       $93,$22,$00         ;   Script number=93 size=0022 data=00
1668 0312             (      raakatu.asm):02675         L1C13          fcb       $03,$12             ;     Data tag=03 size=0012
166A C7DE94144B5E9696 (      raakatu.asm):02676         L1C15          fcb       $C7,$DE,$94,$14,$4B,$5E,$96,$96,$DB,$72,$54,$59 ;       YOU ARE IN THE DARK TUNNEL.
     DB725459
1676 D68398C55761     (      raakatu.asm):02677         L1C21          fcb       $D6,$83,$98,$C5,$57,$61 ;       .
167C 040B             (      raakatu.asm):02678         L1C27          fcb       $04,$0B             ;     Data tag=04 size=000B
167E 0B09             (      raakatu.asm):02679         L1C29          fcb       $0B,$09             ;         Command_0B_SWITCH size=09
1680 0A03             (      raakatu.asm):02680         L1C2B          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1682 02               (      raakatu.asm):02681         L1C2D          fcb       $02                 ;           IF_NOT_JUMP address=1C30
1683 0092             (      raakatu.asm):02682         L1C2E          fcb       $00,$92             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=92
1685 04               (      raakatu.asm):02683         L1C30          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1686 02               (      raakatu.asm):02684         L1C31          fcb       $02                 ;           IF_NOT_JUMP address=1C34
1687 0094             (      raakatu.asm):02685         L1C32          fcb       $00,$94             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=94
1689 945800           (      raakatu.asm):02686         L1C34          fcb       $94,$58,$00         ;   Script number=94 size=0058 data=00
168C 033B             (      raakatu.asm):02687         L1C37          fcb       $03,$3B             ;     Data tag=03 size=003B
168E C7DE9414435E16BC (      raakatu.asm):02688         L1C39          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$9E,$61 ;       YOU ARE AT THE ENTRANCE TO A LONG DARK
     DB729E61
169A D0B09B536BBF4E45 (      raakatu.asm):02689         L1C45          fcb       $D0,$B0,$9B,$53,$6B,$BF,$4E,$45,$11,$A0,$FB,$14 ;       TUNNEL WHICH LEADS EAST. THERE IS A PASSAGE
     11A0FB14
16A6 4BB270C06E98FA17 (      raakatu.asm):02690         L1C51          fcb       $4B,$B2,$70,$C0,$6E,$98,$FA,$17,$DA,$78,$3F,$16 ;       WEST.
     DA783F16
16B2 0D47231517BA8217 (      raakatu.asm):02691         L1C5D          fcb       $0D,$47,$23,$15,$17,$BA,$82,$17,$2F,$62,$D5,$15 ;       .
     2F62D515
16BE 7B1455A409B7595E (      raakatu.asm):02692         L1C69          fcb       $7B,$14,$55,$A4,$09,$B7,$59,$5E,$66,$62,$2E ;       .
     66622E
16C9 0418             (      raakatu.asm):02693         L1C74          fcb       $04,$18             ;     Data tag=04 size=0018
16CB 0B16             (      raakatu.asm):02694         L1C76          fcb       $0B,$16             ;         Command_0B_SWITCH size=16
16CD 0A03             (      raakatu.asm):02695         L1C78          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
16CF 02               (      raakatu.asm):02696         L1C7A          fcb       $02                 ;           IF_NOT_JUMP address=1C7D
16D0 0093             (      raakatu.asm):02697         L1C7B          fcb       $00,$93             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=93
16D2 04               (      raakatu.asm):02698         L1C7D          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
16D3 0F               (      raakatu.asm):02699         L1C7E          fcb       $0F                 ;           IF_NOT_JUMP address=1C8E
16D4 0E0D             (      raakatu.asm):02700         L1C7F          fcb       $0E,$0D             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=13
16D6 0D09             (      raakatu.asm):02701         L1C81          fcb       $0D,$09             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=9
16D8 201D             (      raakatu.asm):02702         L1C83          fcb       $20,$1D             ;                 Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
16DA 030016           (      raakatu.asm):02703         L1C85          fcb       $03,$00,$16         ;                 Command_03_IS_OBJECT_AT_LOCATION object=16(DeadSerpent) location=00
16DD 171595           (      raakatu.asm):02704         L1C88          fcb       $17,$15,$95         ;                 Command_17_MOVE_OBJECT_TO_LOCATION object=15(LiveSerpent) location=95
16E0 0C               (      raakatu.asm):02705         L1C8B          fcb       $0C                 ;                 Command_0C_FAIL
16E1 0095             (      raakatu.asm):02706         L1C8C          fcb       $00,$95             ;               Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=95
16E3 953200           (      raakatu.asm):02707         L1C8E          fcb       $95,$32,$00         ;   Script number=95 size=0032 data=00
16E6 0320             (      raakatu.asm):02708         L1C91          fcb       $03,$20             ;     Data tag=03 size=0020
16E8 C7DE94144B5E8396 (      raakatu.asm):02709         L1C93          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$3B,$16,$B7,$B1 ;       YOU ARE IN A LARGE ROOM WITH A SINGLE EXIT
     3B16B7B1
16F4 3917DB9F56D10371 (      raakatu.asm):02710         L1C9F          fcb       $39,$17,$DB,$9F,$56,$D1,$03,$71,$5B,$17,$BE,$98 ;       EAST.
     5B17BE98
1700 475E96D7231517BA (      raakatu.asm):02711         L1CAB          fcb       $47,$5E,$96,$D7,$23,$15,$17,$BA ;       .
1708 040D             (      raakatu.asm):02712         L1CB3          fcb       $04,$0D             ;     Data tag=04 size=000D
170A 0B0B             (      raakatu.asm):02713         L1CB5          fcb       $0B,$0B             ;         Command_0B_SWITCH size=0B
170C 0A36             (      raakatu.asm):02714         L1CB7          fcb       $0A,$36             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
170E 01               (      raakatu.asm):02715         L1CB9          fcb       $01                 ;           IF_NOT_JUMP address=1CBB
170F 8F               (      raakatu.asm):02716         L1CBA          fcb       $8F                 ;             CommonCommand_8F
1710 17               (      raakatu.asm):02717         L1CBB          fcb       $17                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
1711 01               (      raakatu.asm):02718         L1CBC          fcb       $01                 ;           IF_NOT_JUMP address=1CBE
1712 8F               (      raakatu.asm):02719         L1CBD          fcb       $8F                 ;             CommonCommand_8F
1713 03               (      raakatu.asm):02720         L1CBE          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1714 02               (      raakatu.asm):02721         L1CBF          fcb       $02                 ;           IF_NOT_JUMP address=1CC2
1715 0094             (      raakatu.asm):02722         L1CC0          fcb       $00,$94             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=94
1717 963000           (      raakatu.asm):02723         L1CC2          fcb       $96,$30,$00         ;   Script number=96 size=0030 data=00
171A 0318             (      raakatu.asm):02724         L1CC5          fcb       $03,$18             ;     Data tag=03 size=0018
171C C7DE94144B5E8396 (      raakatu.asm):02725         L1CC7          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FF,$14,$97,$9A ;       YOU ARE IN A DENSE DARK DAMP JUNGLE.
     FF14979A
1728 FB144BB24F590CA3 (      raakatu.asm):02726         L1CD3          fcb       $FB,$14,$4B,$B2,$4F,$59,$0C,$A3,$91,$C5,$FF,$8B ;       .
     91C5FF8B
1734 0413             (      raakatu.asm):02727         L1CDF          fcb       $04,$13             ;     Data tag=04 size=0013
1736 0B11             (      raakatu.asm):02728         L1CE1          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
1738 0A01             (      raakatu.asm):02729         L1CE3          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
173A 02               (      raakatu.asm):02730         L1CE5          fcb       $02                 ;           IF_NOT_JUMP address=1CE8
173B 00A3             (      raakatu.asm):02731         L1CE6          fcb       $00,$A3             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A3
173D 02               (      raakatu.asm):02732         L1CE8          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
173E 02               (      raakatu.asm):02733         L1CE9          fcb       $02                 ;           IF_NOT_JUMP address=1CEC
173F 00A4             (      raakatu.asm):02734         L1CEA          fcb       $00,$A4             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A4
1741 04               (      raakatu.asm):02735         L1CEC          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1742 02               (      raakatu.asm):02736         L1CED          fcb       $02                 ;           IF_NOT_JUMP address=1CF0
1743 0097             (      raakatu.asm):02737         L1CEE          fcb       $00,$97             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=97
1745 03               (      raakatu.asm):02738         L1CF0          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1746 02               (      raakatu.asm):02739         L1CF1          fcb       $02                 ;           IF_NOT_JUMP address=1CF4
1747 00A4             (      raakatu.asm):02740         L1CF2          fcb       $00,$A4             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A4
1749 973000           (      raakatu.asm):02741         L1CF4          fcb       $97,$30,$00         ;   Script number=97 size=0030 data=00
174C 0318             (      raakatu.asm):02742         L1CF7          fcb       $03,$18             ;     Data tag=03 size=0018
174E C7DE94144B5E8396 (      raakatu.asm):02743         L1CF9          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FB,$14,$4B,$B2 ;       YOU ARE IN A DARK DENSE DAMP JUNGLE.
     FB144BB2
175A F0599BB74F590CA3 (      raakatu.asm):02744         L1D05          fcb       $F0,$59,$9B,$B7,$4F,$59,$0C,$A3,$91,$C5,$FF,$8B ;       .
     91C5FF8B
1766 0413             (      raakatu.asm):02745         L1D11          fcb       $04,$13             ;     Data tag=04 size=0013
1768 0B11             (      raakatu.asm):02746         L1D13          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
176A 0A01             (      raakatu.asm):02747         L1D15          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
176C 02               (      raakatu.asm):02748         L1D17          fcb       $02                 ;           IF_NOT_JUMP address=1D1A
176D 00A2             (      raakatu.asm):02749         L1D18          fcb       $00,$A2             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A2
176F 02               (      raakatu.asm):02750         L1D1A          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1770 02               (      raakatu.asm):02751         L1D1B          fcb       $02                 ;           IF_NOT_JUMP address=1D1E
1771 0096             (      raakatu.asm):02752         L1D1C          fcb       $00,$96             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=96
1773 03               (      raakatu.asm):02753         L1D1E          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1774 02               (      raakatu.asm):02754         L1D1F          fcb       $02                 ;           IF_NOT_JUMP address=1D22
1775 00A3             (      raakatu.asm):02755         L1D20          fcb       $00,$A3             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A3
1777 04               (      raakatu.asm):02756         L1D22          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1778 02               (      raakatu.asm):02757         L1D23          fcb       $02                 ;           IF_NOT_JUMP address=1D26
1779 0098             (      raakatu.asm):02758         L1D24          fcb       $00,$98             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=98
177B 984000           (      raakatu.asm):02759         L1D26          fcb       $98,$40,$00         ;   Script number=98 size=0040 data=00
177E 0328             (      raakatu.asm):02760         L1D29          fcb       $03,$28             ;     Data tag=03 size=0028
1780 6CBE29A11671DB72 (      raakatu.asm):02761         L1D2B          fcb       $6C,$BE,$29,$A1,$16,$71,$DB,$72,$F0,$81,$BF,$6D ;       THROUGH THE JUNGLE YOU SEE THE EAST WALL OF
     F081BF6D
178C 511855C21B605FBE (      raakatu.asm):02762         L1D37          fcb       $51,$18,$55,$C2,$1B,$60,$5F,$BE,$23,$15,$F3,$B9 ;       A GREAT TEMPLE. 
     2315F3B9
1798 0ED0118A83648415 (      raakatu.asm):02763         L1D43          fcb       $0E,$D0,$11,$8A,$83,$64,$84,$15,$96,$5F,$7F,$17 ;       .
     965F7F17
17A4 E693DB63         (      raakatu.asm):02764         L1D4F          fcb       $E6,$93,$DB,$63     ;       .
17A8 0413             (      raakatu.asm):02765         L1D53          fcb       $04,$13             ;     Data tag=04 size=0013
17AA 0B11             (      raakatu.asm):02766         L1D55          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
17AC 0A01             (      raakatu.asm):02767         L1D57          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
17AE 02               (      raakatu.asm):02768         L1D59          fcb       $02                 ;           IF_NOT_JUMP address=1D5C
17AF 009B             (      raakatu.asm):02769         L1D5A          fcb       $00,$9B             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9B
17B1 02               (      raakatu.asm):02770         L1D5C          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
17B2 02               (      raakatu.asm):02771         L1D5D          fcb       $02                 ;           IF_NOT_JUMP address=1D60
17B3 0099             (      raakatu.asm):02772         L1D5E          fcb       $00,$99             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=99
17B5 03               (      raakatu.asm):02773         L1D60          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
17B6 02               (      raakatu.asm):02774         L1D61          fcb       $02                 ;           IF_NOT_JUMP address=1D64
17B7 0097             (      raakatu.asm):02775         L1D62          fcb       $00,$97             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=97
17B9 04               (      raakatu.asm):02776         L1D64          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
17BA 02               (      raakatu.asm):02777         L1D65          fcb       $02                 ;           IF_NOT_JUMP address=1D68
17BB 009E             (      raakatu.asm):02778         L1D66          fcb       $00,$9E             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9E
17BD 994400           (      raakatu.asm):02779         L1D68          fcb       $99,$44,$00         ;   Script number=99 size=0044 data=00
17C0 032C             (      raakatu.asm):02780         L1D6B          fcb       $03,$2C             ;     Data tag=03 size=002C
17C2 837A4545E38B10B2 (      raakatu.asm):02781         L1D6D          fcb       $83,$7A,$45,$45,$E3,$8B,$10,$B2,$C4,$6A,$59,$60 ;       IN A CLEARING BEFORE YOU STANDS THE SOUTH
     C46A5960
17CE 5BB1C7DE66178E48 (      raakatu.asm):02782         L1D79          fcb       $5B,$B1,$C7,$DE,$66,$17,$8E,$48,$D6,$B5,$DB,$72 ;       WALL OF A GREAT TEMPLE. 
     D6B5DB72
17DA 47B953BE0ED0118A (      raakatu.asm):02783         L1D85          fcb       $47,$B9,$53,$BE,$0E,$D0,$11,$8A,$83,$64,$84,$15 ;       .
     83648415
17E6 965F7F17E693DB63 (      raakatu.asm):02784         L1D91          fcb       $96,$5F,$7F,$17,$E6,$93,$DB,$63 ;       .
17EE 0413             (      raakatu.asm):02785         L1D99          fcb       $04,$13             ;     Data tag=04 size=0013
17F0 0B11             (      raakatu.asm):02786         L1D9B          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
17F2 0A01             (      raakatu.asm):02787         L1D9D          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
17F4 02               (      raakatu.asm):02788         L1D9F          fcb       $02                 ;           IF_NOT_JUMP address=1DA2
17F5 009F             (      raakatu.asm):02789         L1DA0          fcb       $00,$9F             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9F
17F7 02               (      raakatu.asm):02790         L1DA2          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
17F8 02               (      raakatu.asm):02791         L1DA3          fcb       $02                 ;           IF_NOT_JUMP address=1DA6
17F9 0096             (      raakatu.asm):02792         L1DA4          fcb       $00,$96             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=96
17FB 03               (      raakatu.asm):02793         L1DA6          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
17FC 02               (      raakatu.asm):02794         L1DA7          fcb       $02                 ;           IF_NOT_JUMP address=1DAA
17FD 0098             (      raakatu.asm):02795         L1DA8          fcb       $00,$98             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=98
17FF 04               (      raakatu.asm):02796         L1DAA          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1800 02               (      raakatu.asm):02797         L1DAB          fcb       $02                 ;           IF_NOT_JUMP address=1DAE
1801 009A             (      raakatu.asm):02798         L1DAC          fcb       $00,$9A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9A
1803 9A5900           (      raakatu.asm):02799         L1DAE          fcb       $9A,$59,$00         ;   Script number=9A size=0059 data=00
1806 0341             (      raakatu.asm):02800         L1DB1          fcb       $03,$41             ;     Data tag=03 size=0041
1808 6CBE29A11671DB72 (      raakatu.asm):02801         L1DB3          fcb       $6C,$BE,$29,$A1,$16,$71,$DB,$72,$F0,$59,$9B,$B7 ;       THROUGH THE DENSE UNDERGROWTH, YOU CAN SEE
     F0599BB7
1814 8EC5316209B376BE (      raakatu.asm):02802         L1DBF          fcb       $8E,$C5,$31,$62,$09,$B3,$76,$BE,$51,$18,$45,$C2 ;       THE GREAT BRONZE GATES ON THE WEST WALL OF
     511845C2
1820 8348A7B78217495E (      raakatu.asm):02803         L1DCB          fcb       $83,$48,$A7,$B7,$82,$17,$49,$5E,$63,$B1,$04,$BC ;       THE TEMPLE.
     63B104BC
182C 00B35BE3166C4B62 (      raakatu.asm):02804         L1DD7          fcb       $00,$B3,$5B,$E3,$16,$6C,$4B,$62,$03,$A0,$5F,$BE ;       .
     03A05FBE
1838 F717F3B90ED0118A (      raakatu.asm):02805         L1DE3          fcb       $F7,$17,$F3,$B9,$0E,$D0,$11,$8A,$96,$64,$DB,$72 ;       .
     9664DB72
1844 EFBDFFA52E       (      raakatu.asm):02806         L1DEF          fcb       $EF,$BD,$FF,$A5,$2E ;       .
1849 0413             (      raakatu.asm):02807         L1DF4          fcb       $04,$13             ;     Data tag=04 size=0013
184B 0B11             (      raakatu.asm):02808         L1DF6          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
184D 0A01             (      raakatu.asm):02809         L1DF8          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
184F 02               (      raakatu.asm):02810         L1DFA          fcb       $02                 ;           IF_NOT_JUMP address=1DFD
1850 009B             (      raakatu.asm):02811         L1DFB          fcb       $00,$9B             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9B
1852 02               (      raakatu.asm):02812         L1DFD          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1853 02               (      raakatu.asm):02813         L1DFE          fcb       $02                 ;           IF_NOT_JUMP address=1E01
1854 0099             (      raakatu.asm):02814         L1DFF          fcb       $00,$99             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=99
1856 03               (      raakatu.asm):02815         L1E01          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1857 02               (      raakatu.asm):02816         L1E02          fcb       $02                 ;           IF_NOT_JUMP address=1E05
1858 009C             (      raakatu.asm):02817         L1E03          fcb       $00,$9C             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9C
185A 04               (      raakatu.asm):02818         L1E05          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
185B 02               (      raakatu.asm):02819         L1E06          fcb       $02                 ;           IF_NOT_JUMP address=1E09
185C 00A4             (      raakatu.asm):02820         L1E07          fcb       $00,$A4             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A4
185E 9B4D00           (      raakatu.asm):02821         L1E09          fcb       $9B,$4D,$00         ;   Script number=9B size=004D data=00
1861 0335             (      raakatu.asm):02822         L1E0C          fcb       $03,$35             ;     Data tag=03 size=0035
1863 6CBE29A103717315 (      raakatu.asm):02823         L1E0E          fcb       $6C,$BE,$29,$A1,$03,$71,$73,$15,$0B,$A3,$96,$96 ;       THROUGH A GAP IN THE JUNGLE YOU CAN SEE THE
     0BA39696
186F DB72F081BF6D5118 (      raakatu.asm):02824         L1E1A          fcb       $DB,$72,$F0,$81,$BF,$6D,$51,$18,$45,$C2,$83,$48 ;       NORTH WALL OF A MAGNIFICENT TEMPLE.
     45C28348
187B A7B78217505EBEA0 (      raakatu.asm):02825         L1E26          fcb       $A7,$B7,$82,$17,$50,$5E,$BE,$A0,$19,$71,$46,$48 ;       .
     19714648
1887 B8167B1489910899 (      raakatu.asm):02826         L1E32          fcb       $B8,$16,$7B,$14,$89,$91,$08,$99,$D7,$78,$B3,$9A ;       .
     D778B39A
1893 EFBDFFA52E       (      raakatu.asm):02827         L1E3E          fcb       $EF,$BD,$FF,$A5,$2E ;       .
1898 0413             (      raakatu.asm):02828         L1E43          fcb       $04,$13             ;     Data tag=04 size=0013
189A 0B11             (      raakatu.asm):02829         L1E45          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
189C 0A01             (      raakatu.asm):02830         L1E47          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
189E 02               (      raakatu.asm):02831         L1E49          fcb       $02                 ;           IF_NOT_JUMP address=1E4C
189F 00A2             (      raakatu.asm):02832         L1E4A          fcb       $00,$A2             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A2
18A1 02               (      raakatu.asm):02833         L1E4C          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
18A2 02               (      raakatu.asm):02834         L1E4D          fcb       $02                 ;           IF_NOT_JUMP address=1E50
18A3 009D             (      raakatu.asm):02835         L1E4E          fcb       $00,$9D             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9D
18A5 04               (      raakatu.asm):02836         L1E50          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
18A6 02               (      raakatu.asm):02837         L1E51          fcb       $02                 ;           IF_NOT_JUMP address=1E54
18A7 009A             (      raakatu.asm):02838         L1E52          fcb       $00,$9A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9A
18A9 03               (      raakatu.asm):02839         L1E54          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
18AA 02               (      raakatu.asm):02840         L1E55          fcb       $02                 ;           IF_NOT_JUMP address=1E58
18AB 0098             (      raakatu.asm):02841         L1E56          fcb       $00,$98             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=98
18AD 9C3A00           (      raakatu.asm):02842         L1E58          fcb       $9C,$3A,$00         ;   Script number=9C size=003A data=00
18B0 0326             (      raakatu.asm):02843         L1E5B          fcb       $03,$26             ;     Data tag=03 size=0026
18B2 C7DE9414555E50BD (      raakatu.asm):02844         L1E5D          fcb       $C7,$DE,$94,$14,$55,$5E,$50,$BD,$90,$5A,$C4,$6A ;       YOU ARE STANDING BEFORE THE WEST ENTRANCE OF
     905AC46A
18BE 59605BB15FBEF717 (      raakatu.asm):02845         L1E69          fcb       $59,$60,$5B,$B1,$5F,$BE,$F7,$17,$F3,$B9,$9E,$61 ;       THE TEMPLE. 
     F3B99E61
18CA D0B09B53C39E5FBE (      raakatu.asm):02846         L1E75          fcb       $D0,$B0,$9B,$53,$C3,$9E,$5F,$BE,$7F,$17,$E6,$93 ;       .
     7F17E693
18D6 DB63             (      raakatu.asm):02847         L1E81          fcb       $DB,$63             ;       .
18D8 040F             (      raakatu.asm):02848         L1E83          fcb       $04,$0F             ;     Data tag=04 size=000F
18DA 0B0D             (      raakatu.asm):02849         L1E85          fcb       $0B,$0D             ;         Command_0B_SWITCH size=0D
18DC 0A01             (      raakatu.asm):02850         L1E87          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
18DE 02               (      raakatu.asm):02851         L1E89          fcb       $02                 ;           IF_NOT_JUMP address=1E8C
18DF 009D             (      raakatu.asm):02852         L1E8A          fcb       $00,$9D             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9D
18E1 02               (      raakatu.asm):02853         L1E8C          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
18E2 02               (      raakatu.asm):02854         L1E8D          fcb       $02                 ;           IF_NOT_JUMP address=1E90
18E3 009F             (      raakatu.asm):02855         L1E8E          fcb       $00,$9F             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9F
18E5 04               (      raakatu.asm):02856         L1E90          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
18E6 02               (      raakatu.asm):02857         L1E91          fcb       $02                 ;           IF_NOT_JUMP address=1E94
18E7 009A             (      raakatu.asm):02858         L1E92          fcb       $00,$9A             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9A
18E9 9D80B300         (      raakatu.asm):02859         L1E94          fcb       $9D,$80,$B3,$00     ;   Script number=9D size=00B3 data=00
18ED 0312             (      raakatu.asm):02860         L1E98          fcb       $03,$12             ;     Data tag=03 size=0012
18EF C7DE9414435E16BC (      raakatu.asm):02861         L1E9A          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$04,$9A ;       YOU ARE AT THE NORTH WALL. 
     DB72049A
18FB 53BE0ED09B8F     (      raakatu.asm):02862         L1EA6          fcb       $53,$BE,$0E,$D0,$9B,$8F ;       .
1901 04809B           (      raakatu.asm):02863         L1EAC          fcb       $04,$80,$9B         ;     Data tag=04 size=009B
1904 0B8098           (      raakatu.asm):02864         L1EAF          fcb       $0B,$80,$98         ;         Command_0B_SWITCH size=98
1907 0A01             (      raakatu.asm):02865         L1EB2          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
1909 02               (      raakatu.asm):02866         L1EB4          fcb       $02                 ;           IF_NOT_JUMP address=1EB7
190A 009B             (      raakatu.asm):02867         L1EB5          fcb       $00,$9B             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9B
190C 03               (      raakatu.asm):02868         L1EB7          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
190D 02               (      raakatu.asm):02869         L1EB8          fcb       $02                 ;           IF_NOT_JUMP address=1EBB
190E 009E             (      raakatu.asm):02870         L1EB9          fcb       $00,$9E             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9E
1910 17               (      raakatu.asm):02871         L1EBB          fcb       $17                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
1911 8088             (      raakatu.asm):02872         L1EBC          fcb       $80,$88             ;           IF_NOT_JUMP address=1F46
1913 0D8085           (      raakatu.asm):02873         L1EBE          fcb       $0D,$80,$85         ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=133
1916 0821             (      raakatu.asm):02874         L1EC1          fcb       $08,$21             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=21(Vines
1918 0E8080           (      raakatu.asm):02875         L1EC3          fcb       $0E,$80,$80         ;               Command_0E_EXECUTE_LIST_WHILE_FAIL size=128
191B 0D54             (      raakatu.asm):02876         L1EC6          fcb       $0D,$54             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=84
191D 057F             (      raakatu.asm):02877         L1EC8          fcb       $05,$7F             ;                   Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=7F
191F 04               (      raakatu.asm):02878         L1ECA          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1920 2AC7DEDE14647A89 (      raakatu.asm):02879         L1ECB          fcb       $2A,$C7,$DE,$DE,$14,$64,$7A,$89,$17,$82,$17,$54 ;                     YOU CLIMB TO THE ROOF.  AS YOU STEP ON THE
     17821754
192C 5E38A03BF44B49C7 (      raakatu.asm):02880         L1ED7          fcb       $5E,$38,$A0,$3B,$F4,$4B,$49,$C7,$DE,$66,$17,$D3 ;                     ROOF, IT COLLAPSES. 
     DE6617D3
1938 6103A05FBE3917E6 (      raakatu.asm):02881         L1EE3          fcb       $61,$03,$A0,$5F,$BE,$39,$17,$E6,$9E,$D6,$15,$E1 ;                     .
     9ED615E1
1944 14FB8C17A75BBB   (      raakatu.asm):02882         L1EEF          fcb       $14,$FB,$8C,$17,$A7,$5B,$BB ;                     .
194B 173600           (      raakatu.asm):02883         L1EF6          fcb       $17,$36,$00         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=36(Jungle) location=00
194E 1729FF           (      raakatu.asm):02884         L1EF9          fcb       $17,$29,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=29(Floor) location=FF
1951 172AFF           (      raakatu.asm):02885         L1EFC          fcb       $17,$2A,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=2A(Exit) location=FF
1954 172BFF           (      raakatu.asm):02886         L1EFF          fcb       $17,$2B,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=2B(Passage) location=FF
1957 172CFF           (      raakatu.asm):02887         L1F02          fcb       $17,$2C,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=2C(Hole) location=FF
195A 172DFF           (      raakatu.asm):02888         L1F05          fcb       $17,$2D,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=2D(Corridor) location=FF
195D 172EFF           (      raakatu.asm):02889         L1F08          fcb       $17,$2E,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=2E(Corner) location=FF
1960 1731FF           (      raakatu.asm):02890         L1F0B          fcb       $17,$31,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=31(Hallway) location=FF
1963 1734FF           (      raakatu.asm):02891         L1F0E          fcb       $17,$34,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=34(Entrance) location=FF
1966 1735FF           (      raakatu.asm):02892         L1F11          fcb       $17,$35,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=35(Tunnel) location=FF
1969 173AFF           (      raakatu.asm):02893         L1F14          fcb       $17,$3A,$FF         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=3A(Ceiling) location=FF
196C 173C00           (      raakatu.asm):02894         L1F17          fcb       $17,$3C,$00         ;                   Command_17_MOVE_OBJECT_TO_LOCATION object=3C(Object3C) location=00
196F 0081             (      raakatu.asm):02895         L1F1A          fcb       $00,$81             ;                   Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=81
1971 04               (      raakatu.asm):02896         L1F1C          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1972 284B49C7DEDE1464 (      raakatu.asm):02897         L1F1D          fcb       $28,$4B,$49,$C7,$DE,$DE,$14,$64,$7A,$16,$EE,$DB ;                   AS YOU CLIMB, THE VINE GIVES WAY AND YOU
     7A16EEDB
197E 7210CB495ECF7BD9 (      raakatu.asm):02898         L1F29          fcb       $72,$10,$CB,$49,$5E,$CF,$7B,$D9,$B5,$3B,$4A,$8E ;                   FALL TO THE GROUND.
     B53B4A8E
198A 48511848C2464889 (      raakatu.asm):02899         L1F35          fcb       $48,$51,$18,$48,$C2,$46,$48,$89,$17,$82,$17,$49 ;                   .
     17821749
1996 5E07B35798       (      raakatu.asm):02900         L1F41          fcb       $5E,$07,$B3,$57,$98 ;                   .
199B 04               (      raakatu.asm):02901         L1F46          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
199C 02               (      raakatu.asm):02902         L1F47          fcb       $02                 ;           IF_NOT_JUMP address=1F4A
199D 009C             (      raakatu.asm):02903         L1F48          fcb       $00,$9C             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9C
199F 9E2500           (      raakatu.asm):02904         L1F4A          fcb       $9E,$25,$00         ;   Script number=9E size=0025 data=00
19A2 0311             (      raakatu.asm):02905         L1F4D          fcb       $03,$11             ;     Data tag=03 size=0011
19A4 C7DE9414435E16BC (      raakatu.asm):02906         L1F4F          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$95,$5F ;       YOU ARE AT THE EAST WALL.
     DB72955F
19B0 19BC46482E       (      raakatu.asm):02907         L1F5B          fcb       $19,$BC,$46,$48,$2E ;       .
19B5 040F             (      raakatu.asm):02908         L1F60          fcb       $04,$0F             ;     Data tag=04 size=000F
19B7 0B0D             (      raakatu.asm):02909         L1F62          fcb       $0B,$0D             ;         Command_0B_SWITCH size=0D
19B9 0A01             (      raakatu.asm):02910         L1F64          fcb       $0A,$01             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
19BB 02               (      raakatu.asm):02911         L1F66          fcb       $02                 ;           IF_NOT_JUMP address=1F69
19BC 009D             (      raakatu.asm):02912         L1F67          fcb       $00,$9D             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9D
19BE 02               (      raakatu.asm):02913         L1F69          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
19BF 02               (      raakatu.asm):02914         L1F6A          fcb       $02                 ;           IF_NOT_JUMP address=1F6D
19C0 009F             (      raakatu.asm):02915         L1F6B          fcb       $00,$9F             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9F
19C2 03               (      raakatu.asm):02916         L1F6D          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
19C3 02               (      raakatu.asm):02917         L1F6E          fcb       $02                 ;           IF_NOT_JUMP address=1F71
19C4 0098             (      raakatu.asm):02918         L1F6F          fcb       $00,$98             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=98
19C6 9F2600           (      raakatu.asm):02919         L1F71          fcb       $9F,$26,$00         ;   Script number=9F size=0026 data=00
19C9 0312             (      raakatu.asm):02920         L1F74          fcb       $03,$12             ;     Data tag=03 size=0012
19CB C7DE9414435E16BC (      raakatu.asm):02921         L1F76          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$47,$B9 ;       YOU ARE AT THE SOUTH WALL. 
     DB7247B9
19D7 53BE0ED09B8F     (      raakatu.asm):02922         L1F82          fcb       $53,$BE,$0E,$D0,$9B,$8F ;       .
19DD 040F             (      raakatu.asm):02923         L1F88          fcb       $04,$0F             ;     Data tag=04 size=000F
19DF 0B0D             (      raakatu.asm):02924         L1F8A          fcb       $0B,$0D             ;         Command_0B_SWITCH size=0D
19E1 0A04             (      raakatu.asm):02925         L1F8C          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
19E3 02               (      raakatu.asm):02926         L1F8E          fcb       $02                 ;           IF_NOT_JUMP address=1F91
19E4 009C             (      raakatu.asm):02927         L1F8F          fcb       $00,$9C             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9C
19E6 03               (      raakatu.asm):02928         L1F91          fcb       $03                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
19E7 02               (      raakatu.asm):02929         L1F92          fcb       $02                 ;           IF_NOT_JUMP address=1F95
19E8 009E             (      raakatu.asm):02930         L1F93          fcb       $00,$9E             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9E
19EA 02               (      raakatu.asm):02931         L1F95          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
19EB 02               (      raakatu.asm):02932         L1F96          fcb       $02                 ;           IF_NOT_JUMP address=1F99
19EC 0099             (      raakatu.asm):02933         L1F97          fcb       $00,$99             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=99
19EE A02000           (      raakatu.asm):02934         L1F99          fcb       $A0,$20,$00         ;   Script number=A0 size=0020 data=00
19F1 0314             (      raakatu.asm):02935         L1F9C          fcb       $03,$14             ;     Data tag=03 size=0014
19F3 C7DE94144B5E8396 (      raakatu.asm):02936         L1F9E          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$CF,$17,$7B,$B4 ;       YOU ARE IN A VERY SMALL ROOM. 
     CF177BB4
19FF E3B8F38C01B3DB95 (      raakatu.asm):02937         L1FAA          fcb       $E3,$B8,$F3,$8C,$01,$B3,$DB,$95 ;       .
1A07 0407             (      raakatu.asm):02938         L1FB2          fcb       $04,$07             ;     Data tag=04 size=0007
1A09 0B05             (      raakatu.asm):02939         L1FB4          fcb       $0B,$05             ;         Command_0B_SWITCH size=05
1A0B 0A04             (      raakatu.asm):02940         L1FB6          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1A0D 02               (      raakatu.asm):02941         L1FB8          fcb       $02                 ;           IF_NOT_JUMP address=1FBB
1A0E 0090             (      raakatu.asm):02942         L1FB9          fcb       $00,$90             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=90
1A10 A12C00           (      raakatu.asm):02943         L1FBB          fcb       $A1,$2C,$00         ;   Script number=A1 size=002C data=00
1A13 0320             (      raakatu.asm):02944         L1FBE          fcb       $03,$20             ;     Data tag=03 size=0020
1A15 C7DE94144B5E8396 (      raakatu.asm):02945         L1FC0          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$5F,$17,$46,$48 ;       YOU ARE IN A SMALL ROOM WITH A SINGLE EXIT
     5F174648
1A21 3917DB9F56D10371 (      raakatu.asm):02946         L1FCC          fcb       $39,$17,$DB,$9F,$56,$D1,$03,$71,$5B,$17,$BE,$98 ;       EAST.
     5B17BE98
1A2D 475E96D7231517BA (      raakatu.asm):02947         L1FD8          fcb       $47,$5E,$96,$D7,$23,$15,$17,$BA ;       .
1A35 0407             (      raakatu.asm):02948         L1FE0          fcb       $04,$07             ;     Data tag=04 size=0007
1A37 0B05             (      raakatu.asm):02949         L1FE2          fcb       $0B,$05             ;         Command_0B_SWITCH size=05
1A39 0A03             (      raakatu.asm):02950         L1FE4          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1A3B 02               (      raakatu.asm):02951         L1FE6          fcb       $02                 ;           IF_NOT_JUMP address=1FE9
1A3C 0084             (      raakatu.asm):02952         L1FE7          fcb       $00,$84             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=84
1A3E A23000           (      raakatu.asm):02953         L1FE9          fcb       $A2,$30,$00         ;   Script number=A2 size=0030 data=00
1A41 0318             (      raakatu.asm):02954         L1FEC          fcb       $03,$18             ;     Data tag=03 size=0018
1A43 C7DE94144B5E8396 (      raakatu.asm):02955         L1FEE          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FB,$14,$4B,$B2 ;       YOU ARE IN A DARK DAMP DENSE JUNGLE.
     FB144BB2
1A4F 4F5906A39D614C5E (      raakatu.asm):02956         L1FFA          fcb       $4F,$59,$06,$A3,$9D,$61,$4C,$5E,$91,$C5,$FF,$8B ;       .
     91C5FF8B
1A5B 0413             (      raakatu.asm):02957         L2006          fcb       $04,$13             ;     Data tag=04 size=0013
1A5D 0B11             (      raakatu.asm):02958         L2008          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
1A5F 0A03             (      raakatu.asm):02959         L200A          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1A61 02               (      raakatu.asm):02960         L200C          fcb       $02                 ;           IF_NOT_JUMP address=200F
1A62 00A4             (      raakatu.asm):02961         L200D          fcb       $00,$A4             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A4
1A64 01               (      raakatu.asm):02962         L200F          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
1A65 02               (      raakatu.asm):02963         L2010          fcb       $02                 ;           IF_NOT_JUMP address=2013
1A66 0096             (      raakatu.asm):02964         L2011          fcb       $00,$96             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=96
1A68 02               (      raakatu.asm):02965         L2013          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1A69 02               (      raakatu.asm):02966         L2014          fcb       $02                 ;           IF_NOT_JUMP address=2017
1A6A 00A3             (      raakatu.asm):02967         L2015          fcb       $00,$A3             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A3
1A6C 04               (      raakatu.asm):02968         L2017          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1A6D 02               (      raakatu.asm):02969         L2018          fcb       $02                 ;           IF_NOT_JUMP address=201B
1A6E 0097             (      raakatu.asm):02970         L2019          fcb       $00,$97             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=97
1A70 A33000           (      raakatu.asm):02971         L201B          fcb       $A3,$30,$00         ;   Script number=A3 size=0030 data=00
1A73 0318             (      raakatu.asm):02972         L201E          fcb       $03,$18             ;     Data tag=03 size=0018
1A75 C7DE94144B5E8396 (      raakatu.asm):02973         L2020          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FF,$14,$97,$9A ;       YOU ARE IN A DENSE DAMP DARK JUNGLE.
     FF14979A
1A81 FB14D3935459CC83 (      raakatu.asm):02974         L202C          fcb       $FB,$14,$D3,$93,$54,$59,$CC,$83,$91,$C5,$FF,$8B ;       .
     91C5FF8B
1A8D 0413             (      raakatu.asm):02975         L2038          fcb       $04,$13             ;     Data tag=04 size=0013
1A8F 0B11             (      raakatu.asm):02976         L203A          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
1A91 0A03             (      raakatu.asm):02977         L203C          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1A93 02               (      raakatu.asm):02978         L203E          fcb       $02                 ;           IF_NOT_JUMP address=2041
1A94 00A4             (      raakatu.asm):02979         L203F          fcb       $00,$A4             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A4
1A96 01               (      raakatu.asm):02980         L2041          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
1A97 02               (      raakatu.asm):02981         L2042          fcb       $02                 ;           IF_NOT_JUMP address=2045
1A98 00A2             (      raakatu.asm):02982         L2043          fcb       $00,$A2             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A2
1A9A 02               (      raakatu.asm):02983         L2045          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1A9B 02               (      raakatu.asm):02984         L2046          fcb       $02                 ;           IF_NOT_JUMP address=2049
1A9C 0096             (      raakatu.asm):02985         L2047          fcb       $00,$96             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=96
1A9E 04               (      raakatu.asm):02986         L2049          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1A9F 02               (      raakatu.asm):02987         L204A          fcb       $02                 ;           IF_NOT_JUMP address=204D
1AA0 0097             (      raakatu.asm):02988         L204B          fcb       $00,$97             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=97
1AA2 A43000           (      raakatu.asm):02989         L204D          fcb       $A4,$30,$00         ;   Script number=A4 size=0030 data=00
1AA5 0318             (      raakatu.asm):02990         L2050          fcb       $03,$18             ;     Data tag=03 size=0018
1AA7 C7DE94144B5E8396 (      raakatu.asm):02991         L2052          fcb       $C7,$DE,$94,$14,$4B,$5E,$83,$96,$FB,$14,$D3,$93 ;       YOU ARE IN A DAMP DARK DENSE JUNGLE.
     FB14D393
1AB3 5459C6839D614C5E (      raakatu.asm):02992         L205E          fcb       $54,$59,$C6,$83,$9D,$61,$4C,$5E,$91,$C5,$FF,$8B ;       .
     91C5FF8B
1ABF 0413             (      raakatu.asm):02993         L206A          fcb       $04,$13             ;     Data tag=04 size=0013
1AC1 0B11             (      raakatu.asm):02994         L206C          fcb       $0B,$11             ;         Command_0B_SWITCH size=11
1AC3 0A03             (      raakatu.asm):02995         L206E          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1AC5 02               (      raakatu.asm):02996         L2070          fcb       $02                 ;           IF_NOT_JUMP address=2073
1AC6 00A3             (      raakatu.asm):02997         L2071          fcb       $00,$A3             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A3
1AC8 01               (      raakatu.asm):02998         L2073          fcb       $01                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
1AC9 02               (      raakatu.asm):02999         L2074          fcb       $02                 ;           IF_NOT_JUMP address=2077
1ACA 00A2             (      raakatu.asm):03000         L2075          fcb       $00,$A2             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A2
1ACC 02               (      raakatu.asm):03001         L2077          fcb       $02                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
1ACD 02               (      raakatu.asm):03002         L2078          fcb       $02                 ;           IF_NOT_JUMP address=207B
1ACE 0096             (      raakatu.asm):03003         L2079          fcb       $00,$96             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=96
1AD0 04               (      raakatu.asm):03004         L207B          fcb       $04                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1AD1 02               (      raakatu.asm):03005         L207C          fcb       $02                 ;           IF_NOT_JUMP address=207F
1AD2 00A3             (      raakatu.asm):03006         L207D          fcb       $00,$A3             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A3
1AD4 A52C00           (      raakatu.asm):03007         L207F          fcb       $A5,$2C,$00         ;   Script number=A5 size=002C data=00
1AD7 0320             (      raakatu.asm):03008         L2082          fcb       $03,$20             ;     Data tag=03 size=0020
1AD9 C7DE94144B5E9696 (      raakatu.asm):03009         L2084          fcb       $C7,$DE,$94,$14,$4B,$5E,$96,$96,$DB,$72,$A5,$B7 ;       YOU ARE IN THE SECRET PASSAGE WHICH LEADS
     DB72A5B7
1AE5 76B1DB16D3B99B6C (      raakatu.asm):03010         L2090          fcb       $76,$B1,$DB,$16,$D3,$B9,$9B,$6C,$23,$D1,$13,$54 ;       EAST. 
     23D11354
1AF1 E38B0B5C955F9BC1 (      raakatu.asm):03011         L209C          fcb       $E3,$8B,$0B,$5C,$95,$5F,$9B,$C1 ;       .
1AF9 0407             (      raakatu.asm):03012         L20A4          fcb       $04,$07             ;     Data tag=04 size=0007
1AFB 0B05             (      raakatu.asm):03013         L20A6          fcb       $0B,$05             ;         Command_0B_SWITCH size=05
1AFD 0A03             (      raakatu.asm):03014         L20A8          fcb       $0A,$03             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
1AFF 02               (      raakatu.asm):03015         L20AA          fcb       $02                 ;           IF_NOT_JUMP address=20AD
1B00 00A6             (      raakatu.asm):03016         L20AB          fcb       $00,$A6             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A6
1B02 A65000           (      raakatu.asm):03017         L20AD          fcb       $A6,$50,$00         ;   Script number=A6 size=0050 data=00
1B05 032C             (      raakatu.asm):03018         L20B0          fcb       $03,$2C             ;     Data tag=03 size=002C
1B07 C7DE9414435E16BC (      raakatu.asm):03019         L20B2          fcb       $C7,$DE,$94,$14,$43,$5E,$16,$BC,$DB,$72,$8E,$61 ;       YOU ARE AT THE END OF THE PASSAGE. THERE IS
     DB728E61
1B13 B8168217525E6549 (      raakatu.asm):03020         L20BE          fcb       $B8,$16,$82,$17,$52,$5E,$65,$49,$77,$47,$56,$F4 ;       A HOLE IN THE CEILING.
     774756F4
1B1F F4724B5EC3B5A915 (      raakatu.asm):03021         L20CA          fcb       $F4,$72,$4B,$5E,$C3,$B5,$A9,$15,$DB,$8B,$83,$7A ;       .
     DB8B837A
1B2B 5FBED714437ACF98 (      raakatu.asm):03022         L20D6          fcb       $5F,$BE,$D7,$14,$43,$7A,$CF,$98 ;       .
1B33 041F             (      raakatu.asm):03023         L20DE          fcb       $04,$1F             ;     Data tag=04 size=001F
1B35 0B1D             (      raakatu.asm):03024         L20E0          fcb       $0B,$1D             ;         Command_0B_SWITCH size=1D
1B37 0A04             (      raakatu.asm):03025         L20E2          fcb       $0A,$04             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
1B39 02               (      raakatu.asm):03026         L20E4          fcb       $02                 ;           IF_NOT_JUMP address=20E7
1B3A 00A5             (      raakatu.asm):03027         L20E5          fcb       $00,$A5             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A5
1B3C 17               (      raakatu.asm):03028         L20E7          fcb       $17                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
1B3D 05               (      raakatu.asm):03029         L20E8          fcb       $05                 ;           IF_NOT_JUMP address=20EE
1B3E 0D03             (      raakatu.asm):03030         L20E9          fcb       $0D,$03             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1B40 082C             (      raakatu.asm):03031         L20EB          fcb       $08,$2C             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=2C(Hole
1B42 91               (      raakatu.asm):03032         L20ED          fcb       $91                 ;               CommonCommand_91
1B43 36               (      raakatu.asm):03033         L20EE          fcb       $36                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
1B44 05               (      raakatu.asm):03034         L20EF          fcb       $05                 ;           IF_NOT_JUMP address=20F5
1B45 0D03             (      raakatu.asm):03035         L20F0          fcb       $0D,$03             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1B47 082C             (      raakatu.asm):03036         L20F2          fcb       $08,$2C             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=2C(Hole
1B49 91               (      raakatu.asm):03037         L20F4          fcb       $91                 ;               CommonCommand_91
1B4A 37               (      raakatu.asm):03038         L20F5          fcb       $37                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=37 phrase="37: CLIMB OUT   *          *       "
1B4B 05               (      raakatu.asm):03039         L20F6          fcb       $05                 ;           IF_NOT_JUMP address=20FC
1B4C 0D03             (      raakatu.asm):03040         L20F7          fcb       $0D,$03             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1B4E 082C             (      raakatu.asm):03041         L20F9          fcb       $08,$2C             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=2C(Hole
1B50 91               (      raakatu.asm):03042         L20FB          fcb       $91                 ;               CommonCommand_91
1B51 33               (      raakatu.asm):03043         L20FC          fcb       $33                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=33 phrase="??"
1B52 01               (      raakatu.asm):03044         L20FD          fcb       $01                 ;           IF_NOT_JUMP address=20FF
1B53 91               (      raakatu.asm):03045         L20FE          fcb       $91                 ;             CommonCommand_91
                      (      raakatu.asm):03046         ; ENDOF 1523
                      (      raakatu.asm):03047         
                      (      raakatu.asm):03048         ;##ObjectData
                      (      raakatu.asm):03049         ; Objects are referenced by index in this list with the first object being "Object 1".
                      (      raakatu.asm):03050         ; The first three data bytes are as follows AA BB CC:
                      (      raakatu.asm):03051         ;   AA = location. If >80 then it is a room. If <80 then it is held by an object.
                      (      raakatu.asm):03052         ;   BB = score points
                      (      raakatu.asm):03053         ;   CC = --CPAXOL
                      (      raakatu.asm):03054         ;    C=1 if object can be carried
                      (      raakatu.asm):03055         ;    P=1 if object is a person;
                      (      raakatu.asm):03056         ;    A=1 if open/close-able
                      (      raakatu.asm):03057         ;    X=1 if lock/unlock-able 
                      (      raakatu.asm):03058         ;    O=1 if closed
                      (      raakatu.asm):03059         ;    L=1 if locked
                      (      raakatu.asm):03060         ;
                      (      raakatu.asm):03061         ; Objects can have various fields tagged as follows:
                      (      raakatu.asm):03062         ;   01 = list of adjectives (size+bytes) not used in RAAKATU
                      (      raakatu.asm):03063         ;   02 = short name (packed string)
                      (      raakatu.asm):03064         ;   03 = long description (packed string)
                      (      raakatu.asm):03065         ;   04 (never used)
                      (      raakatu.asm):03066         ;   05 (never used)
                      (      raakatu.asm):03067         ;   06 = command handling if object is second noun (script)
                      (      raakatu.asm):03068         ;   07 = command handling if object is first noun (script)
                      (      raakatu.asm):03069         ;   08 = turn-script executed for objects turn in game (script)
                      (      raakatu.asm):03070         ;   09 = hitpoint information (2 bytess) AA BB. AA=max hit points  BB=current hit points
                      (      raakatu.asm):03071         ;   0A = script executed with killed (script) 
                      (      raakatu.asm):03072         ;   0B = script executed if command is given to object (script) not used in RAAKATU
                      (      raakatu.asm):03073         ;
1B54 00913A           (      raakatu.asm):03074         L20FF          fcb       $00,$91,$3A         ; Number=00 size=113A
                      (      raakatu.asm):03075         ; Object_01 Object1
1B57 0103             (      raakatu.asm):03076         L2102          fcb       $01,$03             ;   Number=01 size=0003
1B59 000000           (      raakatu.asm):03077         L2104          fcb       $00,$00,$00         ;     room=00 scorePoints=00 bits=00 *       
                      (      raakatu.asm):03078         ; Object_02 Object2
1B5C 0303             (      raakatu.asm):03079         L2107          fcb       $03,$03             ;   Number=03 size=0003
1B5E 000000           (      raakatu.asm):03080         L2109          fcb       $00,$00,$00         ;     room=00 scorePoints=00 bits=00 *       
                      (      raakatu.asm):03081         ; Object_03 Rug
1B61 0648             (      raakatu.asm):03082         L210C          fcb       $06,$48             ;   Number=06 size=0048
1B63 820080           (      raakatu.asm):03083         L210E          fcb       $82,$00,$80         ;     room=82 scorePoints=00 bits=80 u.......
1B66 02               (      raakatu.asm):03084         L2111          fcb       $02                 ;     02 SHORT NAME
1B67 02E9B3           (      raakatu.asm):03085         L2112          fcb       $02,$E9,$B3         ;       RUG
1B6A 073F             (      raakatu.asm):03086         L2115          fcb       $07,$3F             ;     07 COMMAND HANDLING IF FIRST NOUN
1B6C 0B3D             (      raakatu.asm):03087         L2117          fcb       $0B,$3D             ;       Command_0B_SWITCH size=3D
1B6E 0A0C             (      raakatu.asm):03088         L2119          fcb       $0A,$0C             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=0C phrase="0C: LOOK UNDER  *          u......."
1B70 01               (      raakatu.asm):03089         L211B          fcb       $01                 ;         IF_NOT_JUMP address=211D
1B71 8C               (      raakatu.asm):03090         L211C          fcb       $8C                 ;           CommonCommand_8C
1B72 36               (      raakatu.asm):03091         L211D          fcb       $36                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
1B73 01               (      raakatu.asm):03092         L211E          fcb       $01                 ;         IF_NOT_JUMP address=2120
1B74 8A               (      raakatu.asm):03093         L211F          fcb       $8A                 ;           CommonCommand_8A
1B75 33               (      raakatu.asm):03094         L2120          fcb       $33                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=33 phrase="??"
1B76 01               (      raakatu.asm):03095         L2121          fcb       $01                 ;         IF_NOT_JUMP address=2123
1B77 8A               (      raakatu.asm):03096         L2122          fcb       $8A                 ;           CommonCommand_8A
1B78 34               (      raakatu.asm):03097         L2123          fcb       $34                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=34 phrase="34: JUMP OVER   *          u......."
1B79 01               (      raakatu.asm):03098         L2124          fcb       $01                 ;         IF_NOT_JUMP address=2126
1B7A 8A               (      raakatu.asm):03099         L2125          fcb       $8A                 ;           CommonCommand_8A
1B7B 35               (      raakatu.asm):03100         L2126          fcb       $35                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=35 phrase="??"
1B7C 01               (      raakatu.asm):03101         L2127          fcb       $01                 ;         IF_NOT_JUMP address=2129
1B7D 8B               (      raakatu.asm):03102         L2128          fcb       $8B                 ;           CommonCommand_8B
1B7E 2D               (      raakatu.asm):03103         L2129          fcb       $2D                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=2D phrase="2D: PULL UP     *          u......."
1B7F 01               (      raakatu.asm):03104         L212A          fcb       $01                 ;         IF_NOT_JUMP address=212C
1B80 8C               (      raakatu.asm):03105         L212B          fcb       $8C                 ;           CommonCommand_8C
1B81 26               (      raakatu.asm):03106         L212C          fcb       $26                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=26 phrase="26: GO AROUND   *          u......."
1B82 28               (      raakatu.asm):03107         L212D          fcb       $28                 ;         IF_NOT_JUMP address=2156
1B83 04               (      raakatu.asm):03108         L212E          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1B84 26C7DED314E69616 (      raakatu.asm):03109         L212F          fcb       $26,$C7,$DE,$D3,$14,$E6,$96,$16,$EE,$DB,$72,$E9 ;             YOU CAN'T, THE RUG STRETCHES ALL THE WAY
     EEDB72E9
1B90 B3661776B11F54C3 (      raakatu.asm):03110         L213B          fcb       $B3,$66,$17,$76,$B1,$1F,$54,$C3,$B5,$F3,$8C,$5F ;             ACROSS THE ROOM.
     B5F38C5F
1B9C BEF31743DBB955CB (      raakatu.asm):03111         L2147          fcb       $BE,$F3,$17,$43,$DB,$B9,$55,$CB,$B9,$5F,$BE,$39 ;             .
     B95FBE39
1BA8 17FF9F           (      raakatu.asm):03112         L2153          fcb       $17,$FF,$9F         ;             .
                      (      raakatu.asm):03113         ; Object_04 DoorCarvings
1BAB 095E             (      raakatu.asm):03114         L2156          fcb       $09,$5E             ;   Number=09 size=005E
1BAD 820084           (      raakatu.asm):03115         L2158          fcb       $82,$00,$84         ;     room=82 scorePoints=00 bits=84 u....X..
1BB0 02               (      raakatu.asm):03116         L215B          fcb       $02                 ;     02 SHORT NAME
1BB1 03815B52         (      raakatu.asm):03117         L215C          fcb       $03,$81,$5B,$52     ;       DOOR
1BB5 0754             (      raakatu.asm):03118         L2160          fcb       $07,$54             ;     07 COMMAND HANDLING IF FIRST NOUN
1BB7 0E52             (      raakatu.asm):03119         L2162          fcb       $0E,$52             ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=82
1BB9 0D22             (      raakatu.asm):03120         L2164          fcb       $0D,$22             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=34
1BBB 0A08             (      raakatu.asm):03121         L2166          fcb       $0A,$08             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
1BBD 04               (      raakatu.asm):03122         L2168          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1BBE 1E5FBED31413B4C5 (      raakatu.asm):03123         L2169          fcb       $1E,$5F,$BE,$D3,$14,$13,$B4,$C5,$98,$C0,$16,$82 ;             THE CARVINGS ON THE DOOR SAY, "DO NOT
     98C01682
1BCA 17465E44A05317B3 (      raakatu.asm):03124         L2175          fcb       $17,$46,$5E,$44,$A0,$53,$17,$B3,$E0,$49,$1B,$99 ;             ENTER."
     E0491B99
1BD6 1607BCBF9A1CB5   (      raakatu.asm):03125         L2181          fcb       $16,$07,$BC,$BF,$9A,$1C,$B5 ;             .
1BDD 0D2C             (      raakatu.asm):03126         L2188          fcb       $0D,$2C             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=44
1BDF 14               (      raakatu.asm):03127         L218A          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
1BE0 0A0B             (      raakatu.asm):03128         L218B          fcb       $0A,$0B             ;             Command_0A_COMPARE_TO_PHRASE_FORM val=0B phrase="0B: LOOK AT     *          u......."
1BE2 04               (      raakatu.asm):03129         L218D          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1BE3 27C7DEC6229B155B (      raakatu.asm):03130         L218E          fcb       $27,$C7,$DE,$C6,$22,$9B,$15,$5B,$CA,$6B,$BF,$2B ;             YOU'LL HAVE TO GO TO THE EAST SIDE OF THE
     CA6BBF2B
1BEF 6E6BBF5FBE2315F3 (      raakatu.asm):03131         L219A          fcb       $6E,$6B,$BF,$5F,$BE,$23,$15,$F3,$B9,$46,$B8,$51 ;             ROOM TO DO THAT.
     B946B851
1BFB 5E9664DB7201B356 (      raakatu.asm):03132         L21A6          fcb       $5E,$96,$64,$DB,$72,$01,$B3,$56,$90,$C6,$9C,$D6 ;             .
     90C69CD6
1C07 9C56722E         (      raakatu.asm):03133         L21B2          fcb       $9C,$56,$72,$2E     ;             .
                      (      raakatu.asm):03134         ; Object_05 Food
1C0B 0C2A             (      raakatu.asm):03135         L21B6          fcb       $0C,$2A             ;   Number=0C size=002A
1C0D 8400A0           (      raakatu.asm):03136         L21B8          fcb       $84,$00,$A0         ;     room=84 scorePoints=00 bits=A0 u.C.....
1C10 03               (      raakatu.asm):03137         L21BB          fcb       $03                 ;     03 DESCRIPTION
1C11 0D5FBE5BB14B7B01 (      raakatu.asm):03138         L21BC          fcb       $0D,$5F,$BE,$5B,$B1,$4B,$7B,$01,$68,$0A,$58,$2F ;       THERE IS FOOD HERE.
     680A582F
1C1D 622E             (      raakatu.asm):03139         L21C8          fcb       $62,$2E             ;       .
1C1F 0711             (      raakatu.asm):03140         L21CA          fcb       $07,$11             ;     07 COMMAND HANDLING IF FIRST NOUN
1C21 0D0F             (      raakatu.asm):03141         L21CC          fcb       $0D,$0F             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=15
1C23 0A15             (      raakatu.asm):03142         L21CE          fcb       $0A,$15             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
1C25 04               (      raakatu.asm):03143         L21D0          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1C26 04F44FABA2       (      raakatu.asm):03144         L21D1          fcb       $04,$F4,$4F,$AB,$A2 ;           BURP! 
1C2B 170500           (      raakatu.asm):03145         L21D6          fcb       $17,$05,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=05(Food) location=00
1C2E 1C1D             (      raakatu.asm):03146         L21D9          fcb       $1C,$1D             ;         Command_1C_SET_VAR_OBJECT object=1D (USER)
1C30 230F             (      raakatu.asm):03147         L21DB          fcb       $23,$0F             ;         Command_23_HEAL_VAR_OBJECT value=0F
1C32 02               (      raakatu.asm):03148         L21DD          fcb       $02                 ;     02 SHORT NAME
1C33 03016844         (      raakatu.asm):03149         L21DE          fcb       $03,$01,$68,$44     ;       FOOD
                      (      raakatu.asm):03150         ; Object_06 StatueEast
1C37 0D2A             (      raakatu.asm):03151         L21E2          fcb       $0D,$2A             ;   Number=0D size=002A
1C39 880080           (      raakatu.asm):03152         L21E4          fcb       $88,$00,$80         ;     room=88 scorePoints=00 bits=80 u.......
1C3C 02               (      raakatu.asm):03153         L21E7          fcb       $02                 ;     02 SHORT NAME
1C3D 04FBB967C0       (      raakatu.asm):03154         L21E8          fcb       $04,$FB,$B9,$67,$C0 ;       STATUE
1C42 0705             (      raakatu.asm):03155         L21ED          fcb       $07,$05             ;     07 COMMAND HANDLING IF FIRST NOUN
1C44 0D03             (      raakatu.asm):03156         L21EF          fcb       $0D,$03             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1C46 0A12             (      raakatu.asm):03157         L21F1          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
1C48 8D               (      raakatu.asm):03158         L21F3          fcb       $8D                 ;         CommonCommand_8D
1C49 03               (      raakatu.asm):03159         L21F4          fcb       $03                 ;     03 DESCRIPTION
1C4A 185FBE66178F494B (      raakatu.asm):03160         L21F5          fcb       $18,$5F,$BE,$66,$17,$8F,$49,$4B,$5E,$C8,$B5,$DB ;       THE STATUE IS FACING THE EAST DOOR. 
     5EC8B5DB
1C56 46AB985FBE2315F3 (      raakatu.asm):03161         L2201          fcb       $46,$AB,$98,$5F,$BE,$23,$15,$F3,$B9,$81,$5B,$1B ;       .
     B9815B1B
1C62 B5               (      raakatu.asm):03162         L220D          fcb       $B5                 ;       .
                      (      raakatu.asm):03163         ; Object_07 StatueWest
1C63 0D2A             (      raakatu.asm):03164         L220E          fcb       $0D,$2A             ;   Number=0D size=002A
1C65 000080           (      raakatu.asm):03165         L2210          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
1C68 02               (      raakatu.asm):03166         L2213          fcb       $02                 ;     02 SHORT NAME
1C69 04FBB967C0       (      raakatu.asm):03167         L2214          fcb       $04,$FB,$B9,$67,$C0 ;       STATUE
1C6E 0705             (      raakatu.asm):03168         L2219          fcb       $07,$05             ;     07 COMMAND HANDLING IF FIRST NOUN
1C70 0D03             (      raakatu.asm):03169         L221B          fcb       $0D,$03             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1C72 0A12             (      raakatu.asm):03170         L221D          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
1C74 8D               (      raakatu.asm):03171         L221F          fcb       $8D                 ;         CommonCommand_8D
1C75 03               (      raakatu.asm):03172         L2220          fcb       $03                 ;     03 DESCRIPTION
1C76 185FBE66178F494B (      raakatu.asm):03173         L2221          fcb       $18,$5F,$BE,$66,$17,$8F,$49,$4B,$5E,$C8,$B5,$DB ;       THE STATUE IS FACING THE WEST DOOR. 
     5EC8B5DB
1C82 46AB985FBEF717F3 (      raakatu.asm):03174         L222D          fcb       $46,$AB,$98,$5F,$BE,$F7,$17,$F3,$B9,$81,$5B,$1B ;       .
     B9815B1B
1C8E B5               (      raakatu.asm):03175         L2239          fcb       $B5                 ;       .
                      (      raakatu.asm):03176         ; Object_08 GoldRing
1C8F 1244             (      raakatu.asm):03177         L223A          fcb       $12,$44             ;   Number=12 size=0044
1C91 8C05A4           (      raakatu.asm):03178         L223C          fcb       $8C,$05,$A4         ;     room=8C scorePoints=05 bits=A4 u.C..X..
1C94 03               (      raakatu.asm):03179         L223F          fcb       $03                 ;     03 DESCRIPTION
1C95 145445917AB81653 (      raakatu.asm):03180         L2240          fcb       $14,$54,$45,$91,$7A,$B8,$16,$53,$15,$75,$98,$09 ;       A RING OF FINEST GOLD IS HERE.
     15759809
1CA1 BCBE9FD5159F157F (      raakatu.asm):03181         L224C          fcb       $BC,$BE,$9F,$D5,$15,$9F,$15,$7F,$B1 ;       .
     B1
1CAA 02               (      raakatu.asm):03182         L2255          fcb       $02                 ;     02 SHORT NAME
1CAB 063E6E1458917A   (      raakatu.asm):03183         L2256          fcb       $06,$3E,$6E,$14,$58,$91,$7A ;       GOLD RING
1CB2 0721             (      raakatu.asm):03184         L225D          fcb       $07,$21             ;     07 COMMAND HANDLING IF FIRST NOUN
1CB4 0D1F             (      raakatu.asm):03185         L225F          fcb       $0D,$1F             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=31
1CB6 0A08             (      raakatu.asm):03186         L2261          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
1CB8 04               (      raakatu.asm):03187         L2263          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1CB9 1B5FBED01564B7EE (      raakatu.asm):03188         L2264          fcb       $1B,$5F,$BE,$D0,$15,$64,$B7,$EE,$7A,$C0,$7A,$2F ;           THE INSCRIPTION READS, "RING OF MOTION."
     7AC07A2F
1CC5 170D47FCED10B2D1 (      raakatu.asm):03189         L2270          fcb       $17,$0D,$47,$FC,$ED,$10,$B2,$D1,$6A,$8F,$64,$03 ;           .
     6A8F6403
1CD1 A127A022         (      raakatu.asm):03190         L227C          fcb       $A1,$27,$A0,$22     ;           .
                      (      raakatu.asm):03191         ; Object_09 Sword
1CD5 0E42             (      raakatu.asm):03192         L2280          fcb       $0E,$42             ;   Number=0E size=0042
1CD7 A100E4           (      raakatu.asm):03193         L2282          fcb       $A1,$00,$E4         ;     room=A1 scorePoints=00 bits=E4 uvC..X..
1CDA 03               (      raakatu.asm):03194         L2285          fcb       $03                 ;     03 DESCRIPTION
1CDB 195FBE5BB14B7B4E (      raakatu.asm):03195         L2286          fcb       $19,$5F,$BE,$5B,$B1,$4B,$7B,$4E,$45,$31,$49,$55 ;       THERE IS A LARGE SWORD LAYING NEARBY.
     45314955
1CE7 5E44D20E584B4AAB (      raakatu.asm):03196         L2292          fcb       $5E,$44,$D2,$0E,$58,$4B,$4A,$AB,$98,$63,$98,$03 ;       .
     98639803
1CF3 B12E             (      raakatu.asm):03197         L229E          fcb       $B1,$2E             ;       .
1CF5 0718             (      raakatu.asm):03198         L22A0          fcb       $07,$18             ;     07 COMMAND HANDLING IF FIRST NOUN
1CF7 0D16             (      raakatu.asm):03199         L22A2          fcb       $0D,$16             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=22
1CF9 0A08             (      raakatu.asm):03200         L22A4          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
1CFB 04               (      raakatu.asm):03201         L22A6          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1CFC 122C1D5FA0D3B3B8 (      raakatu.asm):03202         L22A7          fcb       $12,$2C,$1D,$5F,$A0,$D3,$B3,$B8,$16,$43,$16,$57 ;           "PROPERTY OF LIEYUCHNEBST" 
     16431657
1D08 632854BD5F23BC   (      raakatu.asm):03203         L22B3          fcb       $63,$28,$54,$BD,$5F,$23,$BC ;           .
1D0F 02               (      raakatu.asm):03204         L22BA          fcb       $02                 ;     02 SHORT NAME
1D10 08548B9B6C81BA33 (      raakatu.asm):03205         L22BB          fcb       $08,$54,$8B,$9B,$6C,$81,$BA,$33,$B1 ;       LARGE SWORD 
     B1
                      (      raakatu.asm):03206         ; Object_0A StoneGargoyle
1D19 0F6B             (      raakatu.asm):03207         L22C4          fcb       $0F,$6B             ;   Number=0F size=006B
1D1B 8E0080           (      raakatu.asm):03208         L22C6          fcb       $8E,$00,$80         ;     room=8E scorePoints=00 bits=80 u.......
1D1E 03               (      raakatu.asm):03209         L22C9          fcb       $03                 ;     03 DESCRIPTION
1D1F 345FBE5BB14B7B4A (      raakatu.asm):03210         L22CA          fcb       $34,$5F,$BE,$5B,$B1,$4B,$7B,$4A,$45,$FF,$78,$35 ;       THERE IS A HIDEOUS STONE GARGOYLE PERCHED ON
     45FF7835
1D2B A166170FA07315C1 (      raakatu.asm):03211         L22D6          fcb       $A1,$66,$17,$0F,$A0,$73,$15,$C1,$B1,$3F,$DE,$DF ;       A LEDGE ABOVE THE NORTH PASSAGE. 
     B13FDEDF
1D37 161AB1F35F03A04E (      raakatu.asm):03212         L22E2          fcb       $16,$1A,$B1,$F3,$5F,$03,$A0,$4E,$45,$01,$60,$43 ;       .
     45016043
1D43 5E084F565EDB7204 (      raakatu.asm):03213         L22EE          fcb       $5E,$08,$4F,$56,$5E,$DB,$72,$04,$9A,$53,$BE,$55 ;       .
     9A53BE55
1D4F A409B7DB63       (      raakatu.asm):03214         L22FA          fcb       $A4,$09,$B7,$DB,$63 ;       .
1D54 0724             (      raakatu.asm):03215         L22FF          fcb       $07,$24             ;     07 COMMAND HANDLING IF FIRST NOUN
1D56 0D22             (      raakatu.asm):03216         L2301          fcb       $0D,$22             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=34
1D58 0A0B             (      raakatu.asm):03217         L2303          fcb       $0A,$0B             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=0B phrase="0B: LOOK AT     *          u......."
1D5A 04               (      raakatu.asm):03218         L2305          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1D5B 1E5FBE5BB1EA4894 (      raakatu.asm):03219         L2306          fcb       $1E,$5F,$BE,$5B,$B1,$EA,$48,$94,$5F,$D6,$B5,$C4 ;           THERE APPEARS TO BE DRIED BLOOD ON HIS
     5FD6B5C4
1D67 9C465E07B2045881 (      raakatu.asm):03220         L2312          fcb       $9C,$46,$5E,$07,$B2,$04,$58,$81,$8D,$11,$58,$8A ;           CLAWS!
     8D11588A
1D73 964B7BBB54C9D2   (      raakatu.asm):03221         L231E          fcb       $96,$4B,$7B,$BB,$54,$C9,$D2 ;           .
1D7A 02               (      raakatu.asm):03222         L2325          fcb       $02                 ;     02 SHORT NAME
1D7B 0A09BA5B98146C4B (      raakatu.asm):03223         L2326          fcb       $0A,$09,$BA,$5B,$98,$14,$6C,$4B,$6E,$DB,$8B ;       STONE GARGOYLE 
     6EDB8B
                      (      raakatu.asm):03224         ; Object_0B AlterA
1D86 2258             (      raakatu.asm):03225         L2331          fcb       $22,$58             ;   Number=22 size=0058
1D88 950080           (      raakatu.asm):03226         L2333          fcb       $95,$00,$80         ;     room=95 scorePoints=00 bits=80 u.......
1D8B 03               (      raakatu.asm):03227         L2336          fcb       $03                 ;     03 DESCRIPTION
1D8C 32684DAFA0511855 (      raakatu.asm):03228         L2337          fcb       $32,$68,$4D,$AF,$A0,$51,$18,$55,$C2,$50,$BD,$0B ;       BEFORE YOU STANDS AN ALTAR, STAINED WITH THE
     C250BD0B
1D98 5C83484E48464966 (      raakatu.asm):03229         L2343          fcb       $5C,$83,$48,$4E,$48,$46,$49,$66,$17,$D0,$47,$F3 ;       BLOOD OF COUNTLESS SACRIFICES.
     17D047F3
1DA4 5F56D11671DB7289 (      raakatu.asm):03230         L234F          fcb       $5F,$56,$D1,$16,$71,$DB,$72,$89,$4E,$73,$9E,$C3 ;       .
     4E739EC3
1DB0 9E4755C69A656253 (      raakatu.asm):03231         L235B          fcb       $9E,$47,$55,$C6,$9A,$65,$62,$53,$17,$B3,$55,$05 ;       .
     17B35505
1DBC 676F62           (      raakatu.asm):03232         L2367          fcb       $67,$6F,$62         ;       .
1DBF 0710             (      raakatu.asm):03233         L236A          fcb       $07,$10             ;     07 COMMAND HANDLING IF FIRST NOUN
1DC1 0B0E             (      raakatu.asm):03234         L236C          fcb       $0B,$0E             ;       Command_0B_SWITCH size=0E
1DC3 0A12             (      raakatu.asm):03235         L236E          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
1DC5 01               (      raakatu.asm):03236         L2370          fcb       $01                 ;         IF_NOT_JUMP address=2372
1DC6 8E               (      raakatu.asm):03237         L2371          fcb       $8E                 ;           CommonCommand_8E
1DC7 0C               (      raakatu.asm):03238         L2372          fcb       $0C                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=0C phrase="0C: LOOK UNDER  *          u......."
1DC8 01               (      raakatu.asm):03239         L2373          fcb       $01                 ;         IF_NOT_JUMP address=2375
1DC9 8E               (      raakatu.asm):03240         L2374          fcb       $8E                 ;           CommonCommand_8E
1DCA 38               (      raakatu.asm):03241         L2375          fcb       $38                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=38 phrase="38: CLIMB UNDER *          u......."
1DCB 05               (      raakatu.asm):03242         L2376          fcb       $05                 ;         IF_NOT_JUMP address=237C
1DCC 0D03             (      raakatu.asm):03243         L2377          fcb       $0D,$03             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=3
1DCE 00A5             (      raakatu.asm):03244         L2379          fcb       $00,$A5             ;             Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A5
1DD0 90               (      raakatu.asm):03245         L237B          fcb       $90                 ;             CommonCommand_90
1DD1 02               (      raakatu.asm):03246         L237C          fcb       $02                 ;     02 SHORT NAME
1DD2 0D894E739EFBB98F (      raakatu.asm):03247         L237D          fcb       $0D,$89,$4E,$73,$9E,$FB,$B9,$8F,$7A,$03,$58,$3B ;       BLOOD STAINED ALTAR
     7A03583B
1DDE 8E52             (      raakatu.asm):03248         L2389          fcb       $8E,$52             ;       .
                      (      raakatu.asm):03249         ; Object_0C Idol
1DE0 232F             (      raakatu.asm):03250         L238B          fcb       $23,$2F             ;   Number=23 size=002F
1DE2 9505A0           (      raakatu.asm):03251         L238D          fcb       $95,$05,$A0         ;     room=95 scorePoints=05 bits=A0 u.C.....
1DE5 03               (      raakatu.asm):03252         L2390          fcb       $03                 ;     03 DESCRIPTION
1DE6 204945BE9F836109 (      raakatu.asm):03253         L2391          fcb       $20,$49,$45,$BE,$9F,$83,$61,$09,$79,$15,$8A,$50 ;       A GOLDEN IDOL STANDS IN THE CENTER OF THE
     79158A50
1DF2 BD0B5C837A5FBED7 (      raakatu.asm):03254         L239D          fcb       $BD,$0B,$5C,$83,$7A,$5F,$BE,$D7,$14,$BF,$9A,$91 ;       ROOM. 
     14BF9A91
1DFE AF9664DB7201B3DB (      raakatu.asm):03255         L23A9          fcb       $AF,$96,$64,$DB,$72,$01,$B3,$DB,$95 ;       .
     95
1E07 02               (      raakatu.asm):03256         L23B2          fcb       $02                 ;     02 SHORT NAME
1E08 083E6EF059C615B3 (      raakatu.asm):03257         L23B3          fcb       $08,$3E,$6E,$F0,$59,$C6,$15,$B3,$9F ;       GOLDEN IDOL 
     9F
                      (      raakatu.asm):03258         ; Object_0D BronzeGates
1E11 27809A           (      raakatu.asm):03259         L23BC          fcb       $27,$80,$9A         ;   Number=27 size=009A
1E14 9C0080           (      raakatu.asm):03260         L23BF          fcb       $9C,$00,$80         ;     room=9C scorePoints=00 bits=80 u.......
1E17 03               (      raakatu.asm):03261         L23C2          fcb       $03                 ;     03 DESCRIPTION
1E18 34AF6E7349794FAF (      raakatu.asm):03262         L23C3          fcb       $34,$AF,$6E,$73,$49,$79,$4F,$AF,$9B,$73,$15,$F5 ;       GREAT BRONZE GATES ENGRAVED WITH IMAGES OF
     9B7315F5
1E24 BD3015AB6E66CAFB (      raakatu.asm):03263         L23CF          fcb       $BD,$30,$15,$AB,$6E,$66,$CA,$FB,$17,$53,$BE,$63 ;       SERPENTS STAND SILENTLY BEFORE YOU.
     1753BE63
1E30 7AB56CB81657171F (      raakatu.asm):03264         L23DB          fcb       $7A,$B5,$6C,$B8,$16,$57,$17,$1F,$B3,$CD,$9A,$66 ;       .
     B3CD9A66
1E3C 178E485B17F08B13 (      raakatu.asm):03265         L23E7          fcb       $17,$8E,$48,$5B,$17,$F0,$8B,$13,$BF,$AF,$14,$04 ;       .
     BFAF1404
1E48 685B5E3FA1       (      raakatu.asm):03266         L23F3          fcb       $68,$5B,$5E,$3F,$A1 ;       .
1E4D 0755             (      raakatu.asm):03267         L23F8          fcb       $07,$55             ;     07 COMMAND HANDLING IF FIRST NOUN
1E4F 0B53             (      raakatu.asm):03268         L23FA          fcb       $0B,$53             ;       Command_0B_SWITCH size=53
1E51 0A11             (      raakatu.asm):03269         L23FC          fcb       $0A,$11             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=11 phrase="11: OPEN *      u.......   *       "
1E53 20               (      raakatu.asm):03270         L23FE          fcb       $20                 ;         IF_NOT_JUMP address=241F
1E54 04               (      raakatu.asm):03271         L23FF          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1E55 1E5FBE7315F5BD94 (      raakatu.asm):03272         L2400          fcb       $1E,$5F,$BE,$73,$15,$F5,$BD,$94,$14,$4E,$5E,$5D ;             THE GATES ARE LOCKED, YOU CAN NOT OPEN THEM.
     144E5E5D
1E61 9E1660511845C283 (      raakatu.asm):03273         L240C          fcb       $9E,$16,$60,$51,$18,$45,$C2,$83,$48,$06,$9A,$C2 ;             
     48069AC2
1E6D 1683615FBEDB95   (      raakatu.asm):03274         L2418          fcb       $16,$83,$61,$5F,$BE,$DB,$95 ;             .
1E74 36               (      raakatu.asm):03275         L241F          fcb       $36                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
1E75 10               (      raakatu.asm):03276         L2420          fcb       $10                 ;         IF_NOT_JUMP address=2431
1E76 04               (      raakatu.asm):03277         L2421          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1E77 0E5FBE7315F5BD94 (      raakatu.asm):03278         L2422          fcb       $0E,$5F,$BE,$73,$15,$F5,$BD,$94,$14,$45,$5E,$85 ;             THE GATES ARE CLOSED.
     14455E85
1E83 8D1760           (      raakatu.asm):03279         L242E          fcb       $8D,$17,$60         ;             .
1E86 17               (      raakatu.asm):03280         L2431          fcb       $17                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
1E87 19               (      raakatu.asm):03281         L2432          fcb       $19                 ;         IF_NOT_JUMP address=244C
1E88 04               (      raakatu.asm):03282         L2433          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1E89 175FBE7315F5BD94 (      raakatu.asm):03283         L2434          fcb       $17,$5F,$BE,$73,$15,$F5,$BD,$94,$14,$56,$5E,$2B ;             THE GATES ARE TOO SMOOTH TO CLIMB.
     14565E2B
1E95 A0F1B802A18917DE (      raakatu.asm):03284         L2440          fcb       $A0,$F1,$B8,$02,$A1,$89,$17,$DE,$14,$64,$7A,$2E ;             .
     14647A2E
1EA1 34               (      raakatu.asm):03285         L244C          fcb       $34                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=34 phrase="34: JUMP OVER   *          u......."
1EA2 01               (      raakatu.asm):03286         L244D          fcb       $01                 ;         IF_NOT_JUMP address=244F
1EA3 89               (      raakatu.asm):03287         L244E          fcb       $89                 ;           CommonCommand_89
1EA4 02               (      raakatu.asm):03288         L244F          fcb       $02                 ;     02 SHORT NAME
1EA5 08794FAF9B7315F5 (      raakatu.asm):03289         L2450          fcb       $08,$79,$4F,$AF,$9B,$73,$15,$F5,$BD ;       BRONZE GATES
     BD
                      (      raakatu.asm):03290         ; Object_0E UnpulledLever
1EAE 1659             (      raakatu.asm):03291         L2459          fcb       $16,$59             ;   Number=16 size=0059
1EB0 9100A0           (      raakatu.asm):03292         L245B          fcb       $91,$00,$A0         ;     room=91 scorePoints=00 bits=A0 u.C.....
1EB3 02               (      raakatu.asm):03293         L245E          fcb       $02                 ;     02 SHORT NAME
1EB4 04F88B2362       (      raakatu.asm):03294         L245F          fcb       $04,$F8,$8B,$23,$62 ;       LEVER 
1EB9 03               (      raakatu.asm):03295         L2464          fcb       $03                 ;     03 DESCRIPTION
1EBA 164445EF60AED0F3 (      raakatu.asm):03296         L2465          fcb       $16,$44,$45,$EF,$60,$AE,$D0,$F3,$5F,$F8,$8B,$23 ;       A BEJEWELED LEVER IS ON ONE WALL.
     5FF88B23
1EC6 624B7B03A00FA0F3 (      raakatu.asm):03297         L2471          fcb       $62,$4B,$7B,$03,$A0,$0F,$A0,$F3,$17,$17,$8D ;       .
     17178D
1ED1 0736             (      raakatu.asm):03298         L247C          fcb       $07,$36             ;     07 COMMAND HANDLING IF FIRST NOUN
1ED3 0D34             (      raakatu.asm):03299         L247E          fcb       $0D,$34             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=52
1ED5 0A12             (      raakatu.asm):03300         L2480          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
1ED7 04               (      raakatu.asm):03301         L2482          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1ED8 2F5645D2B00915A3 (      raakatu.asm):03302         L2483          fcb       $2F,$56,$45,$D2,$B0,$09,$15,$A3,$A0,$5F,$A0,$8B ;           A TRAP DOOR OPENS ABOVE YOU.  GOLD DUST
     A05FA08B
1EE4 9AB9465BCAC7DE3B (      raakatu.asm):03303         L248F          fcb       $9A,$B9,$46,$5B,$CA,$C7,$DE,$3B,$F4,$3E,$6E,$06 ;           FILLS THE ROOM AND DROWNS YOU.
     F43E6E06
1EF0 5866C653150D8D82 (      raakatu.asm):03304         L249B          fcb       $58,$66,$C6,$53,$15,$0D,$8D,$82,$17,$54,$5E,$3F ;           .
     17545E3F
1EFC A09014065809B38B (      raakatu.asm):03305         L24A7          fcb       $A0,$90,$14,$06,$58,$09,$B3,$8B,$9A,$C7,$DE,$2E ;           .
     9AC7DE2E
1F08 81               (      raakatu.asm):03306         L24B3          fcb       $81                 ;         CommonCommand_81
                      (      raakatu.asm):03307         ; Object_0F PulledLever
1F09 1642             (      raakatu.asm):03308         L24B4          fcb       $16,$42             ;   Number=16 size=0042
1F0B 0005A0           (      raakatu.asm):03309         L24B6          fcb       $00,$05,$A0         ;     room=00 scorePoints=05 bits=A0 u.C.....
1F0E 03               (      raakatu.asm):03310         L24B9          fcb       $03                 ;     03 DESCRIPTION
1F0F 124445EF60AED0F3 (      raakatu.asm):03311         L24BA          fcb       $12,$44,$45,$EF,$60,$AE,$D0,$F3,$5F,$F8,$8B,$23 ;       A BEJEWELED LEVER IS HERE. 
     5FF88B23
1F1B 624B7BF472DB63   (      raakatu.asm):03312         L24C6          fcb       $62,$4B,$7B,$F4,$72,$DB,$63 ;       .
1F22 02               (      raakatu.asm):03313         L24CD          fcb       $02                 ;     02 SHORT NAME
1F23 0A6C4DF762E68B3F (      raakatu.asm):03314         L24CE          fcb       $0A,$6C,$4D,$F7,$62,$E6,$8B,$3F,$16,$74,$CA ;       BEJEWELED LEVER
     1674CA
1F2E 071D             (      raakatu.asm):03315         L24D9          fcb       $07,$1D             ;     07 COMMAND HANDLING IF FIRST NOUN
1F30 0D1B             (      raakatu.asm):03316         L24DB          fcb       $0D,$1B             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=27
1F32 0A12             (      raakatu.asm):03317         L24DD          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
1F34 04               (      raakatu.asm):03318         L24DF          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1F35 175FBE3F1674CAD3 (      raakatu.asm):03319         L24E0          fcb       $17,$5F,$BE,$3F,$16,$74,$CA,$D3,$14,$90,$96,$CE ;           THE LEVER CAN NO LONGER BE PULLED.
     149096CE
1F41 9C11A023625B4D6E (      raakatu.asm):03320         L24EC          fcb       $9C,$11,$A0,$23,$62,$5B,$4D,$6E,$A7,$E6,$8B,$2E ;           .
     A7E68B2E
                      (      raakatu.asm):03321         ; Object_10 LeverPlaque
1F4D 1880C5           (      raakatu.asm):03322         L24F8          fcb       $18,$80,$C5         ;   Number=18 size=00C5
1F50 910084           (      raakatu.asm):03323         L24FB          fcb       $91,$00,$84         ;     room=91 scorePoints=00 bits=84 u....X..
1F53 078098           (      raakatu.asm):03324         L24FE          fcb       $07,$80,$98         ;     07 COMMAND HANDLING IF FIRST NOUN
1F56 0D8095           (      raakatu.asm):03325         L2501          fcb       $0D,$80,$95         ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=149
1F59 0A08             (      raakatu.asm):03326         L2504          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
1F5B 04               (      raakatu.asm):03327         L2506          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
1F5C 80909EC5BE9F3317 (      raakatu.asm):03328         L2507          fcb       $80,$90,$9E,$C5,$BE,$9F,$33,$17,$1F,$54,$CE,$B5 ;           UNTOLD RICHES LIE WITHIN REACH, HERE- TO ANY
     1F54CEB5
1F68 1B7956D190732F17 (      raakatu.asm):03329         L2513          fcb       $1B,$79,$56,$D1,$90,$73,$2F,$17,$DA,$46,$0A,$EE ;           KNOWING, LIVING CREATURE. BE WARY THOUGH, NO
     DA460AEE
1F74 2F62D6E7C39C7B9B (      raakatu.asm):03330         L251F          fcb       $2F,$62,$D6,$E7,$C3,$9C,$7B,$9B,$19,$87,$50,$D1 ;           MATTER WHAT THY CREED, THAT THOU HARNESS AND
     198750D1
1F80 3370988C917AE414 (      raakatu.asm):03331         L252B          fcb       $33,$70,$98,$8C,$91,$7A,$E4,$14,$96,$5F,$2F,$C6 ;           LIMIT THY POWERFUL GREED.  PULL THE LEVER TO
     965F2FC6
1F8C 44F4595E43498217 (      raakatu.asm):03332         L2537          fcb       $44,$F4,$59,$5E,$43,$49,$82,$17,$29,$A1,$73,$76 ;           GAIN THY WEALTH, BE PREPARED TO ... 
     29A17376
1F98 EB999691F4BDFA17 (      raakatu.asm):03333         L2543          fcb       $EB,$99,$96,$91,$F4,$BD,$FA,$17,$73,$49,$73,$BE ;           .
     734973BE
1FA4 E414266016EE5672 (      raakatu.asm):03334         L254F          fcb       $E4,$14,$26,$60,$16,$EE,$56,$72,$82,$17,$1B,$A1 ;           .
     82171BA1
1FB0 54727598C3B53398 (      raakatu.asm):03335         L255B          fcb       $54,$72,$75,$98,$C3,$B5,$33,$98,$8F,$8C,$73,$7B ;           .
     8F8C737B
1FBC 73BEE916B4D0EE68 (      raakatu.asm):03336         L2567          fcb       $73,$BE,$E9,$16,$B4,$D0,$EE,$68,$84,$15,$26,$60 ;           .
     84152660
1FC8 3BF46EA7168ADB72 (      raakatu.asm):03337         L2573          fcb       $3B,$F4,$6E,$A7,$16,$8A,$DB,$72,$F8,$8B,$23,$62 ;           .
     F88B2362
1FD4 6BBF0B6C9696FB75 (      raakatu.asm):03338         L257F          fcb       $6B,$BF,$0B,$6C,$96,$96,$FB,$75,$A3,$D0,$42,$8E ;           .
     A3D0428E
1FE0 04EE525E72B12F49 (      raakatu.asm):03339         L258B          fcb       $04,$EE,$52,$5E,$72,$B1,$2F,$49,$16,$58,$DF,$9C ;           .
     1658DF9C
1FEC DBF9             (      raakatu.asm):03340         L2597          fcb       $DB,$F9             ;           .
1FEE 03               (      raakatu.asm):03341         L2599          fcb       $03                 ;     03 DESCRIPTION
1FEF 1F5FBE5BB14B7B52 (      raakatu.asm):03342         L259A          fcb       $1F,$5F,$BE,$5B,$B1,$4B,$7B,$52,$45,$53,$8B,$1B ;       THERE IS A PLAQUE ON THE WALL ABOVE THE
     45538B1B
1FFB C403A05FBEF317F3 (      raakatu.asm):03343         L25A6          fcb       $C4,$03,$A0,$5F,$BE,$F3,$17,$F3,$8C,$B9,$46,$5B ;       LEVER.
     8CB9465B
2007 CA5FBE3F1674CA2E (      raakatu.asm):03344         L25B2          fcb       $CA,$5F,$BE,$3F,$16,$74,$CA,$2E ;       .
200F 02               (      raakatu.asm):03345         L25BA          fcb       $02                 ;     02 SHORT NAME
2010 04FBA5A7AD       (      raakatu.asm):03346         L25BB          fcb       $04,$FB,$A5,$A7,$AD ;       PLAQUE
                      (      raakatu.asm):03347         ; Object_11 UnlitCandle
2015 196F             (      raakatu.asm):03348         L25C0          fcb       $19,$6F             ;   Number=19 size=006F
2017 9200A8           (      raakatu.asm):03349         L25C2          fcb       $92,$00,$A8         ;     room=92 scorePoints=00 bits=A8 u.C.A...
201A 03               (      raakatu.asm):03350         L25C5          fcb       $03                 ;     03 DESCRIPTION
201B 1045458E48DB8B4B (      raakatu.asm):03351         L25C6          fcb       $10,$45,$45,$8E,$48,$DB,$8B,$4B,$7B,$83,$7A,$5F ;       A CANDLE IS IN THE ROOM.
     7B837A5F
2027 BE3917FF9F       (      raakatu.asm):03352         L25D2          fcb       $BE,$39,$17,$FF,$9F ;       .
202C 02               (      raakatu.asm):03353         L25D7          fcb       $02                 ;     02 SHORT NAME
202D 041053FF5A       (      raakatu.asm):03354         L25D8          fcb       $04,$10,$53,$FF,$5A ;       CANDLE
2032 0752             (      raakatu.asm):03355         L25DD          fcb       $07,$52             ;     07 COMMAND HANDLING IF FIRST NOUN
2034 0B50             (      raakatu.asm):03356         L25DF          fcb       $0B,$50             ;       Command_0B_SWITCH size=50
2036 0A14             (      raakatu.asm):03357         L25E1          fcb       $0A,$14             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=14 phrase="14: LIGHT WITH  u...A...   u...A..."
2038 34               (      raakatu.asm):03358         L25E3          fcb       $34                 ;         IF_NOT_JUMP address=2618
2039 0E32             (      raakatu.asm):03359         L25E4          fcb       $0E,$32             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=50
203B 0D2F             (      raakatu.asm):03360         L25E6          fcb       $0D,$2F             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=47
203D 0914             (      raakatu.asm):03361         L25E8          fcb       $09,$14             ;               Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=14(LitLamp
203F 1E1112           (      raakatu.asm):03362         L25EA          fcb       $1E,$11,$12         ;               Command_1E_SWAP_OBJECTS objectA=11(UnlitCandle) objectB=12(LitCandle)
2042 04               (      raakatu.asm):03363         L25ED          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2043 285FBED31446984B (      raakatu.asm):03364         L25EE          fcb       $28,$5F,$BE,$D3,$14,$46,$98,$4B,$5E,$D0,$B5,$6B ;                 THE CANDLE IS NOW BURNING, A SWEET SCENT
     5ED0B56B
204F A1F44F1099337055 (      raakatu.asm):03365         L25FA          fcb       $A1,$F4,$4F,$10,$99,$33,$70,$55,$45,$A7,$D0,$15 ;                 PERMEATES THE ROOM.
     45A7D015
205B BCB05312BC376296 (      raakatu.asm):03366         L2606          fcb       $BC,$B0,$53,$12,$BC,$37,$62,$96,$5F,$4B,$62,$5F ;                 .
     5F4B625F
2067 BE3917FF9F       (      raakatu.asm):03367         L2612          fcb       $BE,$39,$17,$FF,$9F ;                 .
206C 88               (      raakatu.asm):03368         L2617          fcb       $88                 ;             CommonCommand_88
206D 15               (      raakatu.asm):03369         L2618          fcb       $15                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
206E 17               (      raakatu.asm):03370         L2619          fcb       $17                 ;         IF_NOT_JUMP address=2631
206F 0D15             (      raakatu.asm):03371         L261A          fcb       $0D,$15             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=21
2071 04               (      raakatu.asm):03372         L261C          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2072 1255BDF5BDF3171E (      raakatu.asm):03373         L261D          fcb       $12,$55,$BD,$F5,$BD,$F3,$17,$1E,$DA,$D6,$15,$D2 ;               TASTES WAXY, ITS POISONOUS!
     DAD615D2
207E B5559F19A049C6   (      raakatu.asm):03374         L2629          fcb       $B5,$55,$9F,$19,$A0,$49,$C6 ;               .
2085 81               (      raakatu.asm):03375         L2630          fcb       $81                 ;             CommonCommand_81
                      (      raakatu.asm):03376         ; Object_12 LitCandle
2086 1980C6           (      raakatu.asm):03377         L2631          fcb       $19,$80,$C6         ;   Number=19 size=00C6
2089 0000A8           (      raakatu.asm):03378         L2634          fcb       $00,$00,$A8         ;     room=00 scorePoints=00 bits=A8 u.C.A...
208C 03               (      raakatu.asm):03379         L2637          fcb       $03                 ;     03 DESCRIPTION
208D 1245458E48DB8B4B (      raakatu.asm):03380         L2638          fcb       $12,$45,$45,$8E,$48,$DB,$8B,$4B,$7B,$F4,$4F,$10 ;       A CANDLE IS BURNING DIMLY. 
     7BF44F10
2099 99C66A6E7ADBE0   (      raakatu.asm):03381         L2644          fcb       $99,$C6,$6A,$6E,$7A,$DB,$E0 ;       .
20A0 02               (      raakatu.asm):03382         L264B          fcb       $02                 ;     02 SHORT NAME
20A1 0AF44F1099C56A8E (      raakatu.asm):03383         L264C          fcb       $0A,$F4,$4F,$10,$99,$C5,$6A,$8E,$48,$DB,$8B ;       BURNING CANDLE 
     48DB8B
20AC 0759             (      raakatu.asm):03384         L2657          fcb       $07,$59             ;     07 COMMAND HANDLING IF FIRST NOUN
20AE 0E57             (      raakatu.asm):03385         L2659          fcb       $0E,$57             ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=87
20B0 0D1C             (      raakatu.asm):03386         L265B          fcb       $0D,$1C             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=28
20B2 0E04             (      raakatu.asm):03387         L265D          fcb       $0E,$04             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=4
20B4 0A13             (      raakatu.asm):03388         L265F          fcb       $0A,$13             ;             Command_0A_COMPARE_TO_PHRASE_FORM val=13 phrase="??"
20B6 0A14             (      raakatu.asm):03389         L2661          fcb       $0A,$14             ;             Command_0A_COMPARE_TO_PHRASE_FORM val=14 phrase="14: LIGHT WITH  u...A...   u...A..."
20B8 04               (      raakatu.asm):03390         L2663          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
20B9 145FBED31446984B (      raakatu.asm):03391         L2664          fcb       $14,$5F,$BE,$D3,$14,$46,$98,$4B,$5E,$C3,$B5,$EF ;             THE CANDLE IS ALREADY BURNING.
     5EC3B5EF
20C5 8D1347BF14D3B2CF (      raakatu.asm):03392         L2670          fcb       $8D,$13,$47,$BF,$14,$D3,$B2,$CF,$98 ;             .
     98
20CE 0D19             (      raakatu.asm):03393         L2679          fcb       $0D,$19             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=25
20D0 0A16             (      raakatu.asm):03394         L267B          fcb       $0A,$16             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=16 phrase="16: DROP OUT    *          u...A..."
20D2 1E1112           (      raakatu.asm):03395         L267D          fcb       $1E,$11,$12         ;           Command_1E_SWAP_OBJECTS objectA=11(UnlitCandle) objectB=12(LitCandle)
20D5 04               (      raakatu.asm):03396         L2680          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
20D6 125FBED31446984B (      raakatu.asm):03397         L2681          fcb       $12,$5F,$BE,$D3,$14,$46,$98,$4B,$5E,$C7,$B5,$43 ;             THE CANDLE IS EXTINGUISHED.
     5EC7B543
20E2 D9C7985A7B1760   (      raakatu.asm):03398         L268D          fcb       $D9,$C7,$98,$5A,$7B,$17,$60 ;             .
20E9 0D1C             (      raakatu.asm):03399         L2694          fcb       $0D,$1C             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=28
20EB 0A15             (      raakatu.asm):03400         L2696          fcb       $0A,$15             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
20ED 04               (      raakatu.asm):03401         L2698          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
20EE 18C7DE2F17464855 (      raakatu.asm):03402         L2699          fcb       $18,$C7,$DE,$2F,$17,$46,$48,$55,$DB,$87,$74,$B3 ;             YOU REALLY SHOULD PUT IT OUT FIRST. 
     DB8774B3
20FA 8B76A7D615C71608 (      raakatu.asm):03403         L26A5          fcb       $8B,$76,$A7,$D6,$15,$C7,$16,$08,$BC,$3D,$7B,$9B ;             .
     BC3D7B9B
2106 C1               (      raakatu.asm):03404         L26B1          fcb       $C1                 ;             .
2107 0846             (      raakatu.asm):03405         L26B2          fcb       $08,$46             ;     08 TURN SCRIPT
2109 0D44             (      raakatu.asm):03406         L26B4          fcb       $0D,$44             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=68
210B 1F               (      raakatu.asm):03407         L26B6          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
210C 245FBE43162E6D5C (      raakatu.asm):03408         L26B7          fcb       $24,$5F,$BE,$43,$16,$2E,$6D,$5C,$15,$DB,$9F,$5F ;           THE LIGHT FROM THE CANDLE SEEMS TO BE
     15DB9F5F
2118 BED3144698555E2F (      raakatu.asm):03409         L26C3          fcb       $BE,$D3,$14,$46,$98,$55,$5E,$2F,$60,$D6,$B5,$C4 ;           GROWING DIMMER. 
     60D6B5C4
2124 9C495E09B3917A03 (      raakatu.asm):03410         L26CF          fcb       $9C,$49,$5E,$09,$B3,$91,$7A,$03,$15,$67,$93,$1B ;           .
     1567931B
2130 B5               (      raakatu.asm):03411         L26DB          fcb       $B5                 ;           .
2131 0B1C             (      raakatu.asm):03412         L26DC          fcb       $0B,$1C             ;         Command_0B_SWITCH size=1C
2133 011D             (      raakatu.asm):03413         L26DE          fcb       $01,$1D             ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2135 07               (      raakatu.asm):03414         L26E0          fcb       $07                 ;           IF_NOT_JUMP address=26E8
2136 0D05             (      raakatu.asm):03415         L26E1          fcb       $0D,$05             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=5
2138 1C1D             (      raakatu.asm):03416         L26E3          fcb       $1C,$1D             ;               Command_1C_SET_VAR_OBJECT object=1D (USER)
213A 1D14             (      raakatu.asm):03417         L26E5          fcb       $1D,$14             ;               Command_1D_ATTACK_OBJECT damage=14
213C 0C               (      raakatu.asm):03418         L26E7          fcb       $0C                 ;               Command_0C_FAIL
213D 1E               (      raakatu.asm):03419         L26E8          fcb       $1E                 ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1E(LiveGargoyle)
213E 07               (      raakatu.asm):03420         L26E9          fcb       $07                 ;           IF_NOT_JUMP address=26F1
213F 0D05             (      raakatu.asm):03421         L26EA          fcb       $0D,$05             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=5
2141 1C1E             (      raakatu.asm):03422         L26EC          fcb       $1C,$1E             ;               Command_1C_SET_VAR_OBJECT object=1E (LiveGargoyle)
2143 1D32             (      raakatu.asm):03423         L26EE          fcb       $1D,$32             ;               Command_1D_ATTACK_OBJECT damage=32
2145 0C               (      raakatu.asm):03424         L26F0          fcb       $0C                 ;               Command_0C_FAIL
2146 15               (      raakatu.asm):03425         L26F1          fcb       $15                 ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=15(LiveSerpent)
2147 07               (      raakatu.asm):03426         L26F2          fcb       $07                 ;           IF_NOT_JUMP address=26FA
2148 0D05             (      raakatu.asm):03427         L26F3          fcb       $0D,$05             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=5
214A 1C15             (      raakatu.asm):03428         L26F5          fcb       $1C,$15             ;               Command_1C_SET_VAR_OBJECT object=15 (LiveSerpent)
214C 1D0F             (      raakatu.asm):03429         L26F7          fcb       $1D,$0F             ;               Command_1D_ATTACK_OBJECT damage=0F
214E 0C               (      raakatu.asm):03430         L26F9          fcb       $0C                 ;               Command_0C_FAIL
                      (      raakatu.asm):03431         ; Object_13 CrypticRunes
214F 188084           (      raakatu.asm):03432         L26FA          fcb       $18,$80,$84         ;   Number=18 size=0084
2152 920084           (      raakatu.asm):03433         L26FD          fcb       $92,$00,$84         ;     room=92 scorePoints=00 bits=84 u....X..
2155 075B             (      raakatu.asm):03434         L2700          fcb       $07,$5B             ;     07 COMMAND HANDLING IF FIRST NOUN
2157 0D59             (      raakatu.asm):03435         L2702          fcb       $0D,$59             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=89
2159 0A08             (      raakatu.asm):03436         L2704          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
215B 04               (      raakatu.asm):03437         L2706          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
215C 559E7AD69CDB7270 (      raakatu.asm):03438         L2707          fcb       $55,$9E,$7A,$D6,$9C,$DB,$72,$70,$C0,$6E,$98,$30 ;           INTO THE TUNNEL ENTERS THE SEEKER, BRAVELY
     C06E9830
2168 15F4BDD6B5DB72A7 (      raakatu.asm):03439         L2713          fcb       $15,$F4,$BD,$D6,$B5,$DB,$72,$A7,$B7,$B4,$85,$04 ;           AND WISELY HE GOES. FOR HE WILL RECOGNIZE
     B7B48504
2174 EED8B05361901419 (      raakatu.asm):03440         L271F          fcb       $EE,$D8,$B0,$53,$61,$90,$14,$19,$58,$57,$7B,$FB ;           THE REAPER, AS THE LIGHT BEFORE HIM GLOWS.
     58577BFB
2180 8EDB72376E5BBB04 (      raakatu.asm):03441         L272B          fcb       $8E,$DB,$72,$37,$6E,$5B,$BB,$04,$68,$9F,$15,$FB ;           .
     689F15FB
218C 17F38C65B1009F6F (      raakatu.asm):03442         L2737          fcb       $17,$F3,$8C,$65,$B1,$00,$9F,$6F,$7C,$82,$17,$54 ;           .
     7C821754
2198 5E925F4662951482 (      raakatu.asm):03443         L2743          fcb       $5E,$92,$5F,$46,$62,$95,$14,$82,$17,$4E,$5E,$7A ;           .
     174E5E7A
21A4 7904BC59605BB18F (      raakatu.asm):03444         L274F          fcb       $79,$04,$BC,$59,$60,$5B,$B1,$8F,$73,$7E,$15,$85 ;           .
     737E1585
21B0 A12E             (      raakatu.asm):03445         L275B          fcb       $A1,$2E             ;           .
21B2 03               (      raakatu.asm):03446         L275D          fcb       $03                 ;     03 DESCRIPTION
21B3 1C5FBE5BB12F49E4 (      raakatu.asm):03447         L275E          fcb       $1C,$5F,$BE,$5B,$B1,$2F,$49,$E4,$14,$EE,$DE,$CB ;       THERE ARE CRYPTIC RUNES ABOVE THE TUNNEL. 
     14EEDECB
21BF 78F0B34B62B9465B (      raakatu.asm):03448         L276A          fcb       $78,$F0,$B3,$4B,$62,$B9,$46,$5B,$CA,$5F,$BE,$8F ;       .
     CA5FBE8F
21CB 17CF999B8F       (      raakatu.asm):03449         L2776          fcb       $17,$CF,$99,$9B,$8F ;       .
21D0 02               (      raakatu.asm):03450         L277B          fcb       $02                 ;     02 SHORT NAME
21D1 04F0B34B62       (      raakatu.asm):03451         L277C          fcb       $04,$F0,$B3,$4B,$62 ;       RUNES 
                      (      raakatu.asm):03452         ; Object_14 LitLamp
21D6 1B80B5           (      raakatu.asm):03453         L2781          fcb       $1B,$80,$B5         ;   Number=1B size=00B5
21D9 A000AC           (      raakatu.asm):03454         L2784          fcb       $A0,$00,$AC         ;     room=A0 scorePoints=00 bits=AC u.C.AX..
21DC 03               (      raakatu.asm):03455         L2787          fcb       $03                 ;     03 DESCRIPTION
21DD 145FBE5BB14B7B44 (      raakatu.asm):03456         L2788          fcb       $14,$5F,$BE,$5B,$B1,$4B,$7B,$44,$45,$38,$C6,$91 ;       THERE IS A BURNING LAMP HERE. 
     4538C691
21E9 7A3B16D393F472DB (      raakatu.asm):03457         L2794          fcb       $7A,$3B,$16,$D3,$93,$F4,$72,$DB,$63 ;       .
     63
21F2 07808F           (      raakatu.asm):03458         L279D          fcb       $07,$80,$8F         ;     07 COMMAND HANDLING IF FIRST NOUN
21F5 0E808C           (      raakatu.asm):03459         L27A0          fcb       $0E,$80,$8C         ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=140
21F8 0D1B             (      raakatu.asm):03460         L27A3          fcb       $0D,$1B             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=27
21FA 0E04             (      raakatu.asm):03461         L27A5          fcb       $0E,$04             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=4
21FC 0A13             (      raakatu.asm):03462         L27A7          fcb       $0A,$13             ;             Command_0A_COMPARE_TO_PHRASE_FORM val=13 phrase="??"
21FE 0A14             (      raakatu.asm):03463         L27A9          fcb       $0A,$14             ;             Command_0A_COMPARE_TO_PHRASE_FORM val=14 phrase="14: LIGHT WITH  u...A...   u...A..."
2200 04               (      raakatu.asm):03464         L27AB          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2201 135FBE3B16D3934B (      raakatu.asm):03465         L27AC          fcb       $13,$5F,$BE,$3B,$16,$D3,$93,$4B,$7B,$4C,$48,$86 ;             THE LAMP IS ALREADY BURNING.
     7B4C4886
220D 5F44DB38C6917A2E (      raakatu.asm):03466         L27B8          fcb       $5F,$44,$DB,$38,$C6,$91,$7A,$2E ;             .
2215 0B6D             (      raakatu.asm):03467         L27C0          fcb       $0B,$6D             ;         Command_0B_SWITCH size=6D
2217 0A16             (      raakatu.asm):03468         L27C2          fcb       $0A,$16             ;           Command_0A_COMPARE_TO_PHRASE_FORM val=16 phrase="16: DROP OUT    *          u...A..."
2219 12               (      raakatu.asm):03469         L27C4          fcb       $12                 ;           IF_NOT_JUMP address=27D7
221A 0D10             (      raakatu.asm):03470         L27C5          fcb       $0D,$10             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=16
221C 1E2814           (      raakatu.asm):03471         L27C7          fcb       $1E,$28,$14         ;               Command_1E_SWAP_OBJECTS objectA=28(UnlitLamp) objectB=14(LitLamp)
221F 04               (      raakatu.asm):03472         L27CA          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2220 0B5FBE3B16D3934B (      raakatu.asm):03473         L27CB          fcb       $0B,$5F,$BE,$3B,$16,$D3,$93,$4B,$7B,$36,$A1,$2E ;                 THE LAMP IS OUT.
     7B36A12E
222C 18               (      raakatu.asm):03474         L27D7          fcb       $18                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=18 phrase="18: RUB *       u.......   *       "
222D 2D               (      raakatu.asm):03475         L27D8          fcb       $2D                 ;           IF_NOT_JUMP address=2806
222E 0D2B             (      raakatu.asm):03476         L27D9          fcb       $0D,$2B             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=43
2230 04               (      raakatu.asm):03477         L27DB          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2231 265FBE3B16D39337 (      raakatu.asm):03478         L27DC          fcb       $26,$5F,$BE,$3B,$16,$D3,$93,$37,$6E,$D1,$B5,$97 ;                 THE LAMP GOES OUT. YOU MUST HAVE RUBBED IT
     6ED1B597
223D C651184FC266C69B (      raakatu.asm):03479         L27E8          fcb       $C6,$51,$18,$4F,$C2,$66,$C6,$9B,$15,$5B,$CA,$E4 ;                 THE WRONG WAY!
     155BCAE4
2249 B3664DD615821759 (      raakatu.asm):03480         L27F4          fcb       $B3,$66,$4D,$D6,$15,$82,$17,$59,$5E,$00,$B3,$D9 ;                 .
     5E00B3D9
2255 6A394A           (      raakatu.asm):03481         L2800          fcb       $6A,$39,$4A         ;                 .
2258 1E2814           (      raakatu.asm):03482         L2803          fcb       $1E,$28,$14         ;               Command_1E_SWAP_OBJECTS objectA=28(UnlitLamp) objectB=14(LitLamp)
225B 08               (      raakatu.asm):03483         L2806          fcb       $08                 ;           Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
225C 27               (      raakatu.asm):03484         L2807          fcb       $27                 ;           IF_NOT_JUMP address=282F
225D 04               (      raakatu.asm):03485         L2808          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
225E 255FBE3B16D3934B (      raakatu.asm):03486         L2809          fcb       $25,$5F,$BE,$3B,$16,$D3,$93,$4B,$7B,$48,$55,$2F ;               THE LAMP IS COVERED WITH TARNISH AND YOU
     7B48552F
226A 621958827B7B17D3 (      raakatu.asm):03487         L2815          fcb       $62,$19,$58,$82,$7B,$7B,$17,$D3,$B2,$13,$B8,$8E ;               CAN'T READ IT.
     B213B88E
2276 48511845C2854814 (      raakatu.asm):03488         L2821          fcb       $48,$51,$18,$45,$C2,$85,$48,$14,$BC,$86,$5F,$D6 ;               .
     BC865FD6
2282 152E             (      raakatu.asm):03489         L282D          fcb       $15,$2E             ;               .
2284 02               (      raakatu.asm):03490         L282F          fcb       $02                 ;     02 SHORT NAME
2285 08F44F1099CE6A72 (      raakatu.asm):03491         L2830          fcb       $08,$F4,$4F,$10,$99,$CE,$6A,$72,$48 ;       BURNING LAMP
     48
                      (      raakatu.asm):03492         ; Object_15 LiveSerpent
228E 2481C0           (      raakatu.asm):03493         L2839          fcb       $24,$81,$C0         ;   Number=24 size=01C0
2291 000090           (      raakatu.asm):03494         L283C          fcb       $00,$00,$90         ;     room=00 scorePoints=00 bits=90 u..P....
2294 03               (      raakatu.asm):03495         L283F          fcb       $03                 ;     03 DESCRIPTION
2295 1C4E453149555E3A (      raakatu.asm):03496         L2840          fcb       $1C,$4E,$45,$31,$49,$55,$5E,$3A,$62,$9E,$61,$43 ;       A LARGE SERPENT LIES COILED ON THE FLOOR. 
     629E6143
22A1 164B623B55E68BC0 (      raakatu.asm):03497         L284C          fcb       $16,$4B,$62,$3B,$55,$E6,$8B,$C0,$16,$82,$17,$48 ;       .
     16821748
22AD 5E818D1BB5       (      raakatu.asm):03498         L2858          fcb       $5E,$81,$8D,$1B,$B5 ;       .
22B2 09023C3C         (      raakatu.asm):03499         L285D          fcb       $09,$02,$3C,$3C     ;     09 HIT POINTS maxHitPoints=3C currentHitPoints=3C
22B6 0780B3           (      raakatu.asm):03500         L2861          fcb       $07,$80,$B3         ;     07 COMMAND HANDLING IF FIRST NOUN
22B9 0B80B0           (      raakatu.asm):03501         L2864          fcb       $0B,$80,$B0         ;       Command_0B_SWITCH size=B0
22BC 0A09             (      raakatu.asm):03502         L2867          fcb       $0A,$09             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=09 phrase="09: ATTACK WITH ...P....   .v......"
22BE 809A             (      raakatu.asm):03503         L2869          fcb       $80,$9A             ;         IF_NOT_JUMP address=2905
22C0 0D8097           (      raakatu.asm):03504         L286B          fcb       $0D,$80,$97         ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=151
22C3 1A               (      raakatu.asm):03505         L286E          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
22C4 0909             (      raakatu.asm):03506         L286F          fcb       $09,$09             ;             Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=09(Sword
22C6 0B8091           (      raakatu.asm):03507         L2871          fcb       $0B,$80,$91         ;             Command_0B_SWITCH size=91
22C9 0599             (      raakatu.asm):03508         L2874          fcb       $05,$99             ;               Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=99
22CB 2B               (      raakatu.asm):03509         L2876          fcb       $2B                 ;               IF_NOT_JUMP address=28A2
22CC 0D29             (      raakatu.asm):03510         L2877          fcb       $0D,$29             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=41
22CE 04               (      raakatu.asm):03511         L2879          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
22CF 03C7DE52         (      raakatu.asm):03512         L287A          fcb       $03,$C7,$DE,$52     ;                     YOUR
22D3 12               (      raakatu.asm):03513         L287E          fcb       $12                 ;                   Command_12_PRINT_SECOND_NOUN_SHORT_NAME
22D4 04               (      raakatu.asm):03514         L287F          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
22D5 1F50B8CB876BBF5F (      raakatu.asm):03515         L2880          fcb       $1F,$50,$B8,$CB,$87,$6B,$BF,$5F,$BE,$A3,$15,$33 ;                     SINKS TO THE HILT IN THE SERPENT'S SCALY
     BEA31533
22E1 8E837A5FBE57171F (      raakatu.asm):03516         L288C          fcb       $8E,$83,$7A,$5F,$BE,$57,$17,$1F,$B3,$B5,$9A,$D5 ;                     BODY!
     B3B59AD5
22ED B50E5344DB939E21 (      raakatu.asm):03517         L2898          fcb       $B5,$0E,$53,$44,$DB,$93,$9E,$21 ;                     .
22F5 1D11             (      raakatu.asm):03518         L28A0          fcb       $1D,$11             ;                   Command_1D_ATTACK_OBJECT damage=11
22F7 CC               (      raakatu.asm):03519         L28A2          fcb       $CC                 ;               Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=CC
22F8 2E               (      raakatu.asm):03520         L28A3          fcb       $2E                 ;               IF_NOT_JUMP address=28D2
22F9 0D2C             (      raakatu.asm):03521         L28A4          fcb       $0D,$2C             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=44
22FB 04               (      raakatu.asm):03522         L28A6          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
22FC 03C7DE52         (      raakatu.asm):03523         L28A7          fcb       $03,$C7,$DE,$52     ;                     YOUR
2300 12               (      raakatu.asm):03524         L28AB          fcb       $12                 ;                   Command_12_PRINT_SECOND_NOUN_SHORT_NAME
2301 04               (      raakatu.asm):03525         L28AC          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2302 246CBE85A17B1429 (      raakatu.asm):03526         L28AD          fcb       $24,$6C,$BE,$85,$A1,$7B,$14,$29,$B8,$B4,$D0,$B8 ;                     THROWS A SHOWER OF SPARKS AS IT GLANCES OFF
     B8B4D0B8
230E 1662173549C3B5CB (      raakatu.asm):03527         L28B9          fcb       $16,$62,$17,$35,$49,$C3,$B5,$CB,$B5,$09,$BC,$50 ;                     THE WALL! 
     B509BC50
231A 8BB553B8169664DB (      raakatu.asm):03528         L28C5          fcb       $8B,$B5,$53,$B8,$16,$96,$64,$DB,$72,$0E,$D0,$AB ;                     .
     720ED0AB
2326 89               (      raakatu.asm):03529         L28D1          fcb       $89                 ;                     .
2327 FF               (      raakatu.asm):03530         L28D2          fcb       $FF                 ;               Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
2328 31               (      raakatu.asm):03531         L28D3          fcb       $31                 ;               IF_NOT_JUMP address=2905
2329 0D2F             (      raakatu.asm):03532         L28D4          fcb       $0D,$2F             ;                 Command_0D_EXECUTE_LIST_WHILE_PASS size=47
232B 04               (      raakatu.asm):03533         L28D6          fcb       $04                 ;                   Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
232C 2B5FBE57171FB3B5 (      raakatu.asm):03534         L28D7          fcb       $2B,$5F,$BE,$57,$17,$1F,$B3,$B5,$9A,$CA,$B5,$86 ;                     THE SERPENT'S HEAD IS SEVERED FROM HIS BODY!
     9ACAB586
2338 5FD515571774CAF3 (      raakatu.asm):03535         L28E3          fcb       $5F,$D5,$15,$57,$17,$74,$CA,$F3,$5F,$79,$68,$4A ;                     A MAGNIFICENT BLOW!
     5F79684A
2344 904B7BF64EEBDA4F (      raakatu.asm):03536         L28EF          fcb       $90,$4B,$7B,$F6,$4E,$EB,$DA,$4F,$45,$80,$47,$53 ;                     .
     45804753
2350 79B05304BC898D21 (      raakatu.asm):03537         L28FB          fcb       $79,$B0,$53,$04,$BC,$89,$8D,$21 ;                     .
2358 1DFF             (      raakatu.asm):03538         L2903          fcb       $1D,$FF             ;                   Command_1D_ATTACK_OBJECT damage=FF
235A 15               (      raakatu.asm):03539         L2905          fcb       $15                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
235B 10               (      raakatu.asm):03540         L2906          fcb       $10                 ;         IF_NOT_JUMP address=2917
235C 04               (      raakatu.asm):03541         L2907          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
235D 0E764DF4BD1B16F3 (      raakatu.asm):03542         L2908          fcb       $0E,$76,$4D,$F4,$BD,$1B,$16,$F3,$8C,$73,$7B,$14 ;             BETTER KILL IT FIRST!
     8C737B14
2369 67F1B9           (      raakatu.asm):03543         L2914          fcb       $67,$F1,$B9         ;             .
236C 0880C4           (      raakatu.asm):03544         L2917          fcb       $08,$80,$C4         ;     08 TURN SCRIPT
236F 0D80C1           (      raakatu.asm):03545         L291A          fcb       $0D,$80,$C1         ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=193
2372 0E3E             (      raakatu.asm):03546         L291D          fcb       $0E,$3E             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=62
2374 0D32             (      raakatu.asm):03547         L291F          fcb       $0D,$32             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=50
2376 14               (      raakatu.asm):03548         L2921          fcb       $14                 ;             Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2377 011D             (      raakatu.asm):03549         L2922          fcb       $01,$1D             ;               Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2379 0B19             (      raakatu.asm):03550         L2924          fcb       $0B,$19             ;             Command_0B_SWITCH size=19
237B 0A04             (      raakatu.asm):03551         L2926          fcb       $0A,$04             ;               Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
237D 04               (      raakatu.asm):03552         L2928          fcb       $04                 ;               IF_NOT_JUMP address=292D
237E 21040000         (      raakatu.asm):03553         L2929          fcb       $21,$04,$00,$00     ;                 Command_21_EXECUTE_PHRASE phrase="04: WEST *      *          *       " first=00(NONE)  second=00(NONE)
2382 03               (      raakatu.asm):03554         L292D          fcb       $03                 ;               Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
2383 04               (      raakatu.asm):03555         L292E          fcb       $04                 ;               IF_NOT_JUMP address=2933
2384 21030000         (      raakatu.asm):03556         L292F          fcb       $21,$03,$00,$00     ;                 Command_21_EXECUTE_PHRASE phrase="03: EAST *      *          *       " first=00(NONE)  second=00(NONE)
2388 01               (      raakatu.asm):03557         L2933          fcb       $01                 ;               Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
2389 04               (      raakatu.asm):03558         L2934          fcb       $04                 ;               IF_NOT_JUMP address=2939
238A 21010000         (      raakatu.asm):03559         L2935          fcb       $21,$01,$00,$00     ;                 Command_21_EXECUTE_PHRASE phrase="01: NORTH *     *          *       " first=00(NONE)  second=00(NONE)
238E 02               (      raakatu.asm):03560         L2939          fcb       $02                 ;               Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
238F 04               (      raakatu.asm):03561         L293A          fcb       $04                 ;               IF_NOT_JUMP address=293F
2390 21020000         (      raakatu.asm):03562         L293B          fcb       $21,$02,$00,$00     ;                 Command_21_EXECUTE_PHRASE phrase="02: SOUTH *     *          *       " first=00(NONE)  second=00(NONE)
2394 1F               (      raakatu.asm):03563         L293F          fcb       $1F                 ;             Command_1F_PRINT_MESSAGE
2395 125FBE57171FB3B3 (      raakatu.asm):03564         L2940          fcb       $12,$5F,$BE,$57,$17,$1F,$B3,$B3,$9A,$74,$A7,$27 ;               THE SERPENT PURSUES YOU AND
     9A74A727
23A1 BADBB51BA18E48   (      raakatu.asm):03565         L294C          fcb       $BA,$DB,$B5,$1B,$A1,$8E,$48 ;               .
23A8 1F               (      raakatu.asm):03566         L2953          fcb       $1F                 ;           Command_1F_PRINT_MESSAGE
23A9 085FBE57171FB3B3 (      raakatu.asm):03567         L2954          fcb       $08,$5F,$BE,$57,$17,$1F,$B3,$B3,$9A ;             THE SERPENT 
     9A
23B2 0D7F             (      raakatu.asm):03568         L295D          fcb       $0D,$7F             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=127
23B4 011D             (      raakatu.asm):03569         L295F          fcb       $01,$1D             ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
23B6 1C1D             (      raakatu.asm):03570         L2961          fcb       $1C,$1D             ;           Command_1C_SET_VAR_OBJECT object=1D (USER)
23B8 0B79             (      raakatu.asm):03571         L2963          fcb       $0B,$79             ;           Command_0B_SWITCH size=79
23BA 0533             (      raakatu.asm):03572         L2965          fcb       $05,$33             ;             Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=33
23BC 23               (      raakatu.asm):03573         L2967          fcb       $23                 ;             IF_NOT_JUMP address=298B
23BD 0D21             (      raakatu.asm):03574         L2968          fcb       $0D,$21             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=33
23BF 1F               (      raakatu.asm):03575         L296A          fcb       $1F                 ;                 Command_1F_PRINT_MESSAGE
23C0 1D0CBA177A33BB7B (      raakatu.asm):03576         L296B          fcb       $1D,$0C,$BA,$17,$7A,$33,$BB,$7B,$A6,$40,$B9,$E1 ;                   STRIKES, POISON COURSES THROUGH YOUR VEINS!
     A640B9E1
23CC 143DC64B626CBE29 (      raakatu.asm):03577         L2977          fcb       $14,$3D,$C6,$4B,$62,$6C,$BE,$29,$A1,$1B,$71,$34 ;                   .
     A11B7134
23D8 A1CF179D7A21     (      raakatu.asm):03578         L2983          fcb       $A1,$CF,$17,$9D,$7A,$21 ;                   .
23DE 1D14             (      raakatu.asm):03579         L2989          fcb       $1D,$14             ;                 Command_1D_ATTACK_OBJECT damage=14
23E0 99               (      raakatu.asm):03580         L298B          fcb       $99                 ;             Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=99
23E1 16               (      raakatu.asm):03581         L298C          fcb       $16                 ;             IF_NOT_JUMP address=29A3
23E2 1F               (      raakatu.asm):03582         L298D          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
23E3 140CBA177A33BBC7 (      raakatu.asm):03583         L298E          fcb       $14,$0C,$BA,$17,$7A,$33,$BB,$C7,$DE,$09,$15,$37 ;                 STRIKES, YOU DODGE HIS LUNGE! 
     DE091537
23EF 5AA315CEB591C5EB (      raakatu.asm):03584         L299A          fcb       $5A,$A3,$15,$CE,$B5,$91,$C5,$EB,$5D ;                 .
     5D
23F8 CC               (      raakatu.asm):03585         L29A3          fcb       $CC                 ;             Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=CC
23F9 21               (      raakatu.asm):03586         L29A4          fcb       $21                 ;             IF_NOT_JUMP address=29C6
23FA 0D1F             (      raakatu.asm):03587         L29A5          fcb       $0D,$1F             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=31
23FC 1F               (      raakatu.asm):03588         L29A7          fcb       $1F                 ;                 Command_1F_PRINT_MESSAGE
23FD 1B3B550B8ED2B006 (      raakatu.asm):03589         L29A8          fcb       $1B,$3B,$55,$0B,$8E,$D2,$B0,$06,$79,$43,$DB,$07 ;                   COILS RAPIDLY AROUND YOU AND CONSTRICTS!
     7943DB07
2409 B33398C7DE901405 (      raakatu.asm):03590         L29B4          fcb       $B3,$33,$98,$C7,$DE,$90,$14,$05,$58,$1D,$A0,$F3 ;                   .
     581DA0F3
2415 BF0D5621         (      raakatu.asm):03591         L29C0          fcb       $BF,$0D,$56,$21     ;                   .
2419 1D14             (      raakatu.asm):03592         L29C4          fcb       $1D,$14             ;                 Command_1D_ATTACK_OBJECT damage=14
241B FF               (      raakatu.asm):03593         L29C6          fcb       $FF                 ;             Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
241C 16               (      raakatu.asm):03594         L29C7          fcb       $16                 ;             IF_NOT_JUMP address=29DE
241D 1F               (      raakatu.asm):03595         L29C8          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
241E 14166CF472CBB517 (      raakatu.asm):03596         L29C9          fcb       $14,$16,$6C,$F4,$72,$CB,$B5,$17,$C0,$03,$8C,$04 ;                 GATHERS ITSELF FOR AN ATTACK. 
     C0038C04
242A 689014961445BD5B (      raakatu.asm):03597         L29D5          fcb       $68,$90,$14,$96,$14,$45,$BD,$5B,$89 ;                 .
     89
2433 0A15             (      raakatu.asm):03598         L29DE          fcb       $0A,$15             ;     0A UPON DEATH SCRIPT
2435 0D13             (      raakatu.asm):03599         L29E0          fcb       $0D,$13             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=19
2437 1F               (      raakatu.asm):03600         L29E2          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
2438 0E5FBE57171FB3B3 (      raakatu.asm):03601         L29E3          fcb       $0E,$5F,$BE,$57,$17,$1F,$B3,$B3,$9A,$4B,$7B,$E3 ;           THE SERPENT IS DEAD. 
     9A4B7BE3
2444 599B5D           (      raakatu.asm):03602         L29EF          fcb       $59,$9B,$5D         ;           .
2447 1E1516           (      raakatu.asm):03603         L29F2          fcb       $1E,$15,$16         ;         Command_1E_SWAP_OBJECTS objectA=15(LiveSerpent) objectB=16(DeadSerpent)
244A 02               (      raakatu.asm):03604         L29F5          fcb       $02                 ;     02 SHORT NAME
244B 05B4B7F0A454     (      raakatu.asm):03605         L29F6          fcb       $05,$B4,$B7,$F0,$A4,$54 ;       SERPENT
                      (      raakatu.asm):03606         ; Object_16 DeadSerpent
2451 2440             (      raakatu.asm):03607         L29FC          fcb       $24,$40             ;   Number=24 size=0040
2453 000080           (      raakatu.asm):03608         L29FE          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2456 03               (      raakatu.asm):03609         L2A01          fcb       $03                 ;     03 DESCRIPTION
2457 1A4E453149465E86 (      raakatu.asm):03610         L2A02          fcb       $1A,$4E,$45,$31,$49,$46,$5E,$86,$5F,$57,$17,$1F ;       A LARGE DEAD SERPENT LIES ON THE FLOOR.
     5F57171F
2463 B3B39A878CD1B596 (      raakatu.asm):03611         L2A0E          fcb       $B3,$B3,$9A,$87,$8C,$D1,$B5,$96,$96,$DB,$72,$89 ;       .
     96DB7289
246F 67C7A0           (      raakatu.asm):03612         L2A1A          fcb       $67,$C7,$A0         ;       .
2472 0715             (      raakatu.asm):03613         L2A1D          fcb       $07,$15             ;     07 COMMAND HANDLING IF FIRST NOUN
2474 0D13             (      raakatu.asm):03614         L2A1F          fcb       $0D,$13             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=19
2476 0A15             (      raakatu.asm):03615         L2A21          fcb       $0A,$15             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
2478 04               (      raakatu.asm):03616         L2A23          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2479 0FA8774E5EE6A07B (      raakatu.asm):03617         L2A24          fcb       $0F,$A8,$77,$4E,$5E,$E6,$A0,$7B,$16,$92,$14,$F6 ;           I'VE LOST MY APPETITE!
     169214F6
2485 A47F7B21         (      raakatu.asm):03618         L2A30          fcb       $A4,$7F,$7B,$21     ;           .
2489 02               (      raakatu.asm):03619         L2A34          fcb       $02                 ;     02 SHORT NAME
248A 08E35915583A629E (      raakatu.asm):03620         L2A35          fcb       $08,$E3,$59,$15,$58,$3A,$62,$9E,$61 ;       DEAD SERPENT
     61
                      (      raakatu.asm):03621         ; Object_17 Hands
2493 1F09             (      raakatu.asm):03622         L2A3E          fcb       $1F,$09             ;   Number=1F size=0009
2495 FF0080           (      raakatu.asm):03623         L2A40          fcb       $FF,$00,$80         ;     room=FF scorePoints=00 bits=80 u.......
2498 02               (      raakatu.asm):03624         L2A43          fcb       $02                 ;     02 SHORT NAME
2499 0450720B5C       (      raakatu.asm):03625         L2A44          fcb       $04,$50,$72,$0B,$5C ;       HANDS 
                      (      raakatu.asm):03626         ; Object_18 Coin
249E 2034             (      raakatu.asm):03627         L2A49          fcb       $20,$34             ;   Number=20 size=0034
24A0 9C05A4           (      raakatu.asm):03628         L2A4B          fcb       $9C,$05,$A4         ;     room=9C scorePoints=05 bits=A4 u.C..X..
24A3 03               (      raakatu.asm):03629         L2A4E          fcb       $03                 ;     03 DESCRIPTION
24A4 145FBE5BB14B7B45 (      raakatu.asm):03630         L2A4F          fcb       $14,$5F,$BE,$5B,$B1,$4B,$7B,$45,$45,$50,$9F,$C0 ;       THERE IS A COIN ON THE GROUND.
     45509FC0
24B0 168217495E07B357 (      raakatu.asm):03631         L2A5B          fcb       $16,$82,$17,$49,$5E,$07,$B3,$57,$98 ;       .
     98
24B9 0714             (      raakatu.asm):03632         L2A64          fcb       $07,$14             ;     07 COMMAND HANDLING IF FIRST NOUN
24BB 0D12             (      raakatu.asm):03633         L2A66          fcb       $0D,$12             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=18
24BD 0A08             (      raakatu.asm):03634         L2A68          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
24BF 04               (      raakatu.asm):03635         L2A6A          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
24C0 0E2C1DD547F35F5B (      raakatu.asm):03636         L2A6B          fcb       $0E,$2C,$1D,$D5,$47,$F3,$5F,$5B,$4D,$C3,$B0,$1D ;           "PRAISED BE RAAKA-TU"
     4DC3B01D
24CC 855CC0           (      raakatu.asm):03637         L2A77          fcb       $85,$5C,$C0         ;           .
24CF 02               (      raakatu.asm):03638         L2A7A          fcb       $02                 ;     02 SHORT NAME
24D0 033B554E         (      raakatu.asm):03639         L2A7B          fcb       $03,$3B,$55,$4E     ;       COIN
                      (      raakatu.asm):03640         ; Object_19 TinySlot
24D4 217F             (      raakatu.asm):03641         L2A7F          fcb       $21,$7F             ;   Number=21 size=007F
24D6 880080           (      raakatu.asm):03642         L2A81          fcb       $88,$00,$80         ;     room=88 scorePoints=00 bits=80 u.......
24D9 03               (      raakatu.asm):03643         L2A84          fcb       $03                 ;     03 DESCRIPTION
24DA 1D5FBE5BB14B7B56 (      raakatu.asm):03644         L2A85          fcb       $1D,$5F,$BE,$5B,$B1,$4B,$7B,$56,$45,$A3,$7A,$5E ;       THERE IS A TINY SLOT CUT IN THE NORTH WALL.
     45A37A5E
24E6 17F3A03656D01582 (      raakatu.asm):03645         L2A91          fcb       $17,$F3,$A0,$36,$56,$D0,$15,$82,$17,$50,$5E,$BE ;       .
     17505EBE
24F2 A0197146482E     (      raakatu.asm):03646         L2A9D          fcb       $A0,$19,$71,$46,$48,$2E ;       .
24F8 02               (      raakatu.asm):03647         L2AA3          fcb       $02                 ;     02 SHORT NAME
24F9 0690BE55DB868D   (      raakatu.asm):03648         L2AA4          fcb       $06,$90,$BE,$55,$DB,$86,$8D ;       TINY SLOT
2500 0653             (      raakatu.asm):03649         L2AAB          fcb       $06,$53             ;     06 COMMAND HANDLING IF SECOND NOUN
2502 0D51             (      raakatu.asm):03650         L2AAD          fcb       $0D,$51             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=81
2504 0A0F             (      raakatu.asm):03651         L2AAF          fcb       $0A,$0F             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=0F phrase="0F: DROP IN     u.......   u......."
2506 0E4D             (      raakatu.asm):03652         L2AB1          fcb       $0E,$4D             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=77
2508 0D24             (      raakatu.asm):03653         L2AB3          fcb       $0D,$24             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=36
250A 14               (      raakatu.asm):03654         L2AB5          fcb       $14                 ;             Command_14_EXECUTE_COMMAND_REVERSE_STATUS
250B 0818             (      raakatu.asm):03655         L2AB6          fcb       $08,$18             ;               Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=18(Coin
250D 04               (      raakatu.asm):03656         L2AB8          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
250E 025FBE           (      raakatu.asm):03657         L2AB9          fcb       $02,$5F,$BE         ;               THE
2511 11               (      raakatu.asm):03658         L2ABC          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2512 04               (      raakatu.asm):03659         L2ABD          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2513 1A4B7B81BFB314D6 (      raakatu.asm):03660         L2ABE          fcb       $1A,$4B,$7B,$81,$BF,$B3,$14,$D6,$6A,$C8,$9C,$73 ;               IS TOO BIG TO FIT IN SUCH A TINY SLOT. 
     6AC89C73
251F 7B837A25BA037183 (      raakatu.asm):03661         L2ACA          fcb       $7B,$83,$7A,$25,$BA,$03,$71,$83,$17,$7B,$9B,$C9 ;               .
     177B9BC9
252B B89BC1           (      raakatu.asm):03662         L2AD6          fcb       $B8,$9B,$C1         ;               .
252E 0D25             (      raakatu.asm):03663         L2AD9          fcb       $0D,$25             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=37
2530 170600           (      raakatu.asm):03664         L2ADB          fcb       $17,$06,$00         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=06(StatueEast) location=00
2533 170788           (      raakatu.asm):03665         L2ADE          fcb       $17,$07,$88         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=07(StatueWest) location=88
2536 171800           (      raakatu.asm):03666         L2AE1          fcb       $17,$18,$00         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=18(Coin) location=00
2539 04               (      raakatu.asm):03667         L2AE4          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
253A 1A5FBE66178F4956 (      raakatu.asm):03668         L2AE5          fcb       $1A,$5F,$BE,$66,$17,$8F,$49,$56,$5E,$38,$C6,$D6 ;               THE STATUE TURNS TO FACE THE WEST DOOR.
     5E38C6D6
2546 B5C89CD746821759 (      raakatu.asm):03669         L2AF1          fcb       $B5,$C8,$9C,$D7,$46,$82,$17,$59,$5E,$66,$62,$09 ;               .
     5E666209
2552 15C7A0           (      raakatu.asm):03670         L2AFD          fcb       $15,$C7,$A0         ;               .
                      (      raakatu.asm):03671         ; Object_1A MessageUnderSlot
2555 1853             (      raakatu.asm):03672         L2B00          fcb       $18,$53             ;   Number=18 size=0053
2557 880084           (      raakatu.asm):03673         L2B02          fcb       $88,$00,$84         ;     room=88 scorePoints=00 bits=84 u....X..
255A 03               (      raakatu.asm):03674         L2B05          fcb       $03                 ;     03 DESCRIPTION
255B 1C5FBE5BB14B7B4F (      raakatu.asm):03675         L2B06          fcb       $1C,$5F,$BE,$5B,$B1,$4B,$7B,$4F,$45,$65,$62,$77 ;       THERE IS A MESSAGE CARVED UNDER THE SLOT. 
     45656277
2567 47D3140FB417583F (      raakatu.asm):03676         L2B12          fcb       $47,$D3,$14,$0F,$B4,$17,$58,$3F,$98,$96,$AF,$DB ;       .
     9896AFDB
2573 72C9B89BC1       (      raakatu.asm):03677         L2B1E          fcb       $72,$C9,$B8,$9B,$C1 ;       .
2578 02               (      raakatu.asm):03678         L2B23          fcb       $02                 ;     02 SHORT NAME
2579 0A145366CA6716D3 (      raakatu.asm):03679         L2B24          fcb       $0A,$14,$53,$66,$CA,$67,$16,$D3,$B9,$9B,$6C ;       CARVED MESSAGE 
     B99B6C
2584 0724             (      raakatu.asm):03680         L2B2F          fcb       $07,$24             ;     07 COMMAND HANDLING IF FIRST NOUN
2586 0D22             (      raakatu.asm):03681         L2B31          fcb       $0D,$22             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=34
2588 0A08             (      raakatu.asm):03682         L2B33          fcb       $0A,$08             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
258A 04               (      raakatu.asm):03683         L2B35          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
258B 1E5FBE6716D3B99B (      raakatu.asm):03684         L2B36          fcb       $1E,$5F,$BE,$67,$16,$D3,$B9,$9B,$6C,$1B,$B7,$33 ;           THE MESSAGE SAYS, "SAFE PASSAGE FOR A
     6C1BB733
2597 BB931D5B6655A409 (      raakatu.asm):03685         L2B42          fcb       $BB,$93,$1D,$5B,$66,$55,$A4,$09,$B7,$48,$5E,$A3 ;           PRICE."
     B7485EA3
25A3 A0524505B2DC63   (      raakatu.asm):03686         L2B4E          fcb       $A0,$52,$45,$05,$B2,$DC,$63 ;           .
                      (      raakatu.asm):03687         ; Object_1B ClosedDoor
25AA 093B             (      raakatu.asm):03688         L2B55          fcb       $09,$3B             ;   Number=09 size=003B
25AC 900080           (      raakatu.asm):03689         L2B57          fcb       $90,$00,$80         ;     room=90 scorePoints=00 bits=80 u.......
25AF 03               (      raakatu.asm):03690         L2B5A          fcb       $03                 ;     03 DESCRIPTION
25B0 0D5FBE0915A3A04B (      raakatu.asm):03691         L2B5B          fcb       $0D,$5F,$BE,$09,$15,$A3,$A0,$4B,$7B,$C9,$54,$A6 ;       THE DOOR IS CLOSED.
     7BC954A6
25BC B72E             (      raakatu.asm):03692         L2B67          fcb       $B7,$2E             ;       .
25BE 02               (      raakatu.asm):03693         L2B69          fcb       $02                 ;     02 SHORT NAME
25BF 03815B52         (      raakatu.asm):03694         L2B6A          fcb       $03,$81,$5B,$52     ;       DOOR
25C3 0722             (      raakatu.asm):03695         L2B6E          fcb       $07,$22             ;     07 COMMAND HANDLING IF FIRST NOUN
25C5 0D20             (      raakatu.asm):03696         L2B70          fcb       $0D,$20             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=32
25C7 0A11             (      raakatu.asm):03697         L2B72          fcb       $0A,$11             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=11 phrase="11: OPEN *      u.......   *       "
25C9 171B00           (      raakatu.asm):03698         L2B74          fcb       $17,$1B,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1B(ClosedDoor) location=00
25CC 171C90           (      raakatu.asm):03699         L2B77          fcb       $17,$1C,$90         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1C(OpenDoor) location=90
25CF 04               (      raakatu.asm):03700         L2B7A          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
25D0 167CB36FB327602D (      raakatu.asm):03701         L2B7B          fcb       $16,$7C,$B3,$6F,$B3,$27,$60,$2D,$60,$8B,$18,$5F ;           RRRRREEEEEEK - THE DOOR IS OPEN. 
     608B185F
25DC BE0915A3A04B7B5F (      raakatu.asm):03702         L2B87          fcb       $BE,$09,$15,$A3,$A0,$4B,$7B,$5F,$A0,$1B,$9C ;           .
     A01B9C
                      (      raakatu.asm):03703         ; Object_1C OpenDoor
25E7 0930             (      raakatu.asm):03704         L2B92          fcb       $09,$30             ;   Number=09 size=0030
25E9 000080           (      raakatu.asm):03705         L2B94          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
25EC 03               (      raakatu.asm):03706         L2B97          fcb       $03                 ;     03 DESCRIPTION
25ED 125FBE0915A3A04B (      raakatu.asm):03707         L2B98          fcb       $12,$5F,$BE,$09,$15,$A3,$A0,$4B,$7B,$FB,$B9,$43 ;       THE DOOR IS STANDING OPEN. 
     7BFBB943
25F9 98AB985FA01B9C   (      raakatu.asm):03708         L2BA4          fcb       $98,$AB,$98,$5F,$A0,$1B,$9C ;       .
2600 02               (      raakatu.asm):03709         L2BAB          fcb       $02                 ;     02 SHORT NAME
2601 03815B52         (      raakatu.asm):03710         L2BAC          fcb       $03,$81,$5B,$52     ;       DOOR
2605 0712             (      raakatu.asm):03711         L2BB0          fcb       $07,$12             ;     07 COMMAND HANDLING IF FIRST NOUN
2607 0D10             (      raakatu.asm):03712         L2BB2          fcb       $0D,$10             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=16
2609 0A11             (      raakatu.asm):03713         L2BB4          fcb       $0A,$11             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=11 phrase="11: OPEN *      u.......   *       "
260B 04               (      raakatu.asm):03714         L2BB6          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
260C 0C8D7B8E1463B1FB (      raakatu.asm):03715         L2BB7          fcb       $0C,$8D,$7B,$8E,$14,$63,$B1,$FB,$5C,$5F,$A0,$1B ;           ITS ALREADY OPEN. 
     5C5FA01B
2618 9C               (      raakatu.asm):03716         L2BC3          fcb       $9C                 ;           .
                      (      raakatu.asm):03717         ; Object_1D USER
2619 FF8087           (      raakatu.asm):03718         L2BC4          fcb       $FF,$80,$87         ;   Number=FF size=0087
261C 960080           (      raakatu.asm):03719         L2BC7          fcb       $96,$00,$80         ;     room=96 scorePoints=00 bits=80 u.......
261F 0A76             (      raakatu.asm):03720         L2BCA          fcb       $0A,$76             ;     0A UPON DEATH SCRIPT
2621 0E74             (      raakatu.asm):03721         L2BCC          fcb       $0E,$74             ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=116
2623 0B07             (      raakatu.asm):03722         L2BCE          fcb       $0B,$07             ;         Command_0B_SWITCH size=07
2625 201D             (      raakatu.asm):03723         L2BD0          fcb       $20,$1D             ;           Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
2627 01               (      raakatu.asm):03724         L2BD2          fcb       $01                 ;           IF_NOT_JUMP address=2BD4
2628 81               (      raakatu.asm):03725         L2BD3          fcb       $81                 ;             CommonCommand_81
2629 23               (      raakatu.asm):03726         L2BD4          fcb       $23                 ;           Command_20_CHECK_ACTIVE_OBJECT object=23(Guards)
262A 01               (      raakatu.asm):03727         L2BD5          fcb       $01                 ;           IF_NOT_JUMP address=2BD7
262B 81               (      raakatu.asm):03728         L2BD6          fcb       $81                 ;             CommonCommand_81
262C 0D69             (      raakatu.asm):03729         L2BD7          fcb       $0D,$69             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=105
262E 1F               (      raakatu.asm):03730         L2BD9          fcb       $1F                 ;           Command_1F_PRINT_MESSAGE
262F 66C7DEDB16CBB936 (      raakatu.asm):03731         L2BDA          fcb       $66,$C7,$DE,$DB,$16,$CB,$B9,$36,$A1,$59,$F4,$F0 ;             YOU PASS OUT. WHEN YOU AWAKEN, YOU FIND
     A159F4F0
263B 72511843C20DD0A6 (      raakatu.asm):03732         L2BE6          fcb       $72,$51,$18,$43,$C2,$0D,$D0,$A6,$61,$51,$18,$48 ;             YOURSELF CHAINED TO A BLOOD STAINED ALTAR. A
     61511848
2647 C28E7A51183DC640 (      raakatu.asm):03733         L2BF2          fcb       $C2,$8E,$7A,$51,$18,$3D,$C6,$40,$61,$DA,$14,$D0 ;             PRIEST IS KNEELING OVER YOU WITH A KNIFE. IT
     61DA14D0
2653 47F35F6BBF444581 (      raakatu.asm):03734         L2BFE          fcb       $47,$F3,$5F,$6B,$BF,$44,$45,$81,$8D,$15,$58,$4B ;             LOOKS LIKE THIS IS IT. 
     8D15584B
265F BD66988E1454BD43 (      raakatu.asm):03735         L2C0A          fcb       $BD,$66,$98,$8E,$14,$54,$BD,$43,$F4,$EC,$16,$35 ;             .
     F4EC1635
266B 790BBCCDB5679890 (      raakatu.asm):03736         L2C16          fcb       $79,$0B,$BC,$CD,$B5,$67,$98,$90,$8C,$D1,$6A,$74 ;             .
     8CD16A74
2677 CA511859C2827B7B (      raakatu.asm):03737         L2C22          fcb       $CA,$51,$18,$59,$C2,$82,$7B,$7B,$14,$13,$87,$7F ;             .
     1413877F
2683 66D6154916A59F43 (      raakatu.asm):03738         L2C2E          fcb       $66,$D6,$15,$49,$16,$A5,$9F,$43,$16,$9B,$85,$63 ;             .
     169B8563
268F BECBB5CBB59BC1   (      raakatu.asm):03739         L2C3A          fcb       $BE,$CB,$B5,$CB,$B5,$9B,$C1 ;             .
2696 81               (      raakatu.asm):03740         L2C41          fcb       $81                 ;           CommonCommand_81
2697 0806             (      raakatu.asm):03741         L2C42          fcb       $08,$06             ;     08 TURN SCRIPT
2699 0D04             (      raakatu.asm):03742         L2C44          fcb       $0D,$04             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=4
269B 1C1D             (      raakatu.asm):03743         L2C46          fcb       $1C,$1D             ;         Command_1C_SET_VAR_OBJECT object=1D (USER)
269D 2305             (      raakatu.asm):03744         L2C48          fcb       $23,$05             ;         Command_23_HEAL_VAR_OBJECT value=05
269F 09024646         (      raakatu.asm):03745         L2C4A          fcb       $09,$02,$46,$46     ;     09 HIT POINTS maxHitPoints=46 currentHitPoints=46
                      (      raakatu.asm):03746         ; Object_1E LiveGargoyle
26A3 0F81B4           (      raakatu.asm):03747         L2C4E          fcb       $0F,$81,$B4         ;   Number=0F size=01B4
26A6 000090           (      raakatu.asm):03748         L2C51          fcb       $00,$00,$90         ;     room=00 scorePoints=00 bits=90 u..P....
26A9 03               (      raakatu.asm):03749         L2C54          fcb       $03                 ;     03 DESCRIPTION
26AA 255FBE5BB14B7B4A (      raakatu.asm):03750         L2C55          fcb       $25,$5F,$BE,$5B,$B1,$4B,$7B,$4A,$45,$FF,$78,$35 ;       THERE IS A HIDEOUS GARGOYLE BLOCKING THE
     45FF7835
26B6 A17315C1B13FDEB6 (      raakatu.asm):03751         L2C61          fcb       $A1,$73,$15,$C1,$B1,$3F,$DE,$B6,$14,$5D,$9E,$91 ;       NORTH PASSAGE.
     145D9E91
26C2 7A8217505EBEA012 (      raakatu.asm):03752         L2C6D          fcb       $7A,$82,$17,$50,$5E,$BE,$A0,$12,$71,$65,$49,$77 ;       .
     71654977
26CE 472E             (      raakatu.asm):03753         L2C79          fcb       $47,$2E             ;       .
26D0 02               (      raakatu.asm):03754         L2C7B          fcb       $02                 ;     02 SHORT NAME
26D1 06146C4B6EDB8B   (      raakatu.asm):03755         L2C7C          fcb       $06,$14,$6C,$4B,$6E,$DB,$8B ;       GARGOYLE 
26D8 0902FFFF         (      raakatu.asm):03756         L2C83          fcb       $09,$02,$FF,$FF     ;     09 HIT POINTS maxHitPoints=FF currentHitPoints=FF
26DC 0722             (      raakatu.asm):03757         L2C87          fcb       $07,$22             ;     07 COMMAND HANDLING IF FIRST NOUN
26DE 0D20             (      raakatu.asm):03758         L2C89          fcb       $0D,$20             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=32
26E0 0A15             (      raakatu.asm):03759         L2C8B          fcb       $0A,$15             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
26E2 04               (      raakatu.asm):03760         L2C8D          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
26E3 1CDD72F38C965F51 (      raakatu.asm):03761         L2C8E          fcb       $1C,$DD,$72,$F3,$8C,$96,$5F,$51,$18,$4E,$C2,$11 ;           HE'LL EAT YOU LONG BEFORE YOU'LL EAT HIM! 
     184EC211
26EF A0AF1404685B5E1D (      raakatu.asm):03762         L2C9A          fcb       $A0,$AF,$14,$04,$68,$5B,$5E,$1D,$A1,$F3,$8C,$96 ;           .
     A1F38C96
26FB 5FA315EB8F       (      raakatu.asm):03763         L2CA6          fcb       $5F,$A3,$15,$EB,$8F ;           .
2700 088129           (      raakatu.asm):03764         L2CAB          fcb       $08,$81,$29         ;     08 TURN SCRIPT
2703 0D8126           (      raakatu.asm):03765         L2CAE          fcb       $0D,$81,$26         ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=294
2706 011D             (      raakatu.asm):03766         L2CB1          fcb       $01,$1D             ;         Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2708 1C1D             (      raakatu.asm):03767         L2CB3          fcb       $1C,$1D             ;         Command_1C_SET_VAR_OBJECT object=1D (USER)
270A 14               (      raakatu.asm):03768         L2CB5          fcb       $14                 ;         Command_14_EXECUTE_COMMAND_REVERSE_STATUS
270B 0112             (      raakatu.asm):03769         L2CB6          fcb       $01,$12             ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=12(LitCandle)
270D 0B811C           (      raakatu.asm):03770         L2CB8          fcb       $0B,$81,$1C         ;         Command_0B_SWITCH size=11C
2710 0519             (      raakatu.asm):03771         L2CBB          fcb       $05,$19             ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=19
2712 2E               (      raakatu.asm):03772         L2CBD          fcb       $2E                 ;           IF_NOT_JUMP address=2CEC
2713 0D2C             (      raakatu.asm):03773         L2CBE          fcb       $0D,$2C             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=44
2715 1F               (      raakatu.asm):03774         L2CC0          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
2716 285FBE7315C1B13F (      raakatu.asm):03775         L2CC1          fcb       $28,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$81,$15,$75 ;                 THE GARGOYLE GORES YOU WITH HIS HORN AND
     DE811575
2722 B1511859C2827BA3 (      raakatu.asm):03776         L2CCD          fcb       $B1,$51,$18,$59,$C2,$82,$7B,$A3,$15,$CA,$B5,$B8 ;                 RIPS YOUR GUTS OUT!
     15CAB5B8
272E A090141458ED7A51 (      raakatu.asm):03777         L2CD9          fcb       $A0,$90,$14,$14,$58,$ED,$7A,$51,$18,$23,$C6,$36 ;                 .
     1823C636
273A 6FD1B571C6       (      raakatu.asm):03778         L2CE5          fcb       $6F,$D1,$B5,$71,$C6 ;                 .
273F 1DFF             (      raakatu.asm):03779         L2CEA          fcb       $1D,$FF             ;               Command_1D_ATTACK_OBJECT damage=FF
2741 3F               (      raakatu.asm):03780         L2CEC          fcb       $3F                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=3F
2742 21               (      raakatu.asm):03781         L2CED          fcb       $21                 ;           IF_NOT_JUMP address=2D0F
2743 0D1F             (      raakatu.asm):03782         L2CEE          fcb       $0D,$1F             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=31
2745 1F               (      raakatu.asm):03783         L2CF0          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
2746 1B5FBE7315C1B13F (      raakatu.asm):03784         L2CF1          fcb       $1B,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$DE,$14,$05 ;                 THE GARGOYLE CLAWS YOU ACROSS THE CHEST!
     DEDE1405
2752 4A511843C2B955CB (      raakatu.asm):03785         L2CFD          fcb       $4A,$51,$18,$43,$C2,$B9,$55,$CB,$B9,$5F,$BE,$DA ;                 .
     B95FBEDA
275E 14666221         (      raakatu.asm):03786         L2D09          fcb       $14,$66,$62,$21     ;                 .
2762 1D32             (      raakatu.asm):03787         L2D0D          fcb       $1D,$32             ;               Command_1D_ATTACK_OBJECT damage=32
2764 64               (      raakatu.asm):03788         L2D0F          fcb       $64                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=64
2765 2E               (      raakatu.asm):03789         L2D10          fcb       $2E                 ;           IF_NOT_JUMP address=2D3F
2766 0D2C             (      raakatu.asm):03790         L2D11          fcb       $0D,$2C             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=44
2768 1F               (      raakatu.asm):03791         L2D13          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
2769 28C7DE4F1533615F (      raakatu.asm):03792         L2D14          fcb       $28,$C7,$DE,$4F,$15,$33,$61,$5F,$BE,$80,$15,$5A ;                 YOU FEEL THE GNASHING OF THE GARGOYLE'S
     BE80155A
2775 49917AB816821749 (      raakatu.asm):03793         L2D20          fcb       $49,$91,$7A,$B8,$16,$82,$17,$49,$5E,$31,$49,$CE ;                 TEETH IN YOUR SIDE! 
     5E3149CE
2781 A1A55E7F178262D0 (      raakatu.asm):03794         L2D2C          fcb       $A1,$A5,$5E,$7F,$17,$82,$62,$D0,$15,$51,$18,$23 ;                 .
     15511823
278D C646B8EB5D       (      raakatu.asm):03795         L2D38          fcb       $C6,$46,$B8,$EB,$5D ;                 .
2792 1D32             (      raakatu.asm):03796         L2D3D          fcb       $1D,$32             ;               Command_1D_ATTACK_OBJECT damage=32
2794 A3               (      raakatu.asm):03797         L2D3F          fcb       $A3                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=A3
2795 3C               (      raakatu.asm):03798         L2D40          fcb       $3C                 ;           IF_NOT_JUMP address=2D7D
2796 0D3A             (      raakatu.asm):03799         L2D41          fcb       $0D,$3A             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=58
2798 1F               (      raakatu.asm):03800         L2D43          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
2799 365FBEDE14054AB8 (      raakatu.asm):03801         L2D44          fcb       $36,$5F,$BE,$DE,$14,$05,$4A,$B8,$16,$82,$17,$49 ;                 THE CLAWS OF THE GARGOYLE RIP THROUGH YOUR
     16821749
27A5 5E3149CEA1545ED3 (      raakatu.asm):03802         L2D50          fcb       $5E,$31,$49,$CE,$A1,$54,$5E,$D3,$7A,$6C,$BE,$29 ;                 ARM IN AN ATTEMPT TO REACH YOUR BODY! 
     7A6CBE29
27B1 A11B7134A194144B (      raakatu.asm):03803         L2D5C          fcb       $A1,$1B,$71,$34,$A1,$94,$14,$4B,$90,$83,$96,$83 ;                 .
     90839683
27BD 963FC0EE9389172F (      raakatu.asm):03804         L2D68          fcb       $96,$3F,$C0,$EE,$93,$89,$17,$2F,$17,$DA,$46,$51 ;                 .
     17DA4651
27C9 1823C6F64EEBDA   (      raakatu.asm):03805         L2D74          fcb       $18,$23,$C6,$F6,$4E,$EB,$DA ;                 .
27D0 1D19             (      raakatu.asm):03806         L2D7B          fcb       $1D,$19             ;               Command_1D_ATTACK_OBJECT damage=19
27D2 E1               (      raakatu.asm):03807         L2D7D          fcb       $E1                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=E1
27D3 3E               (      raakatu.asm):03808         L2D7E          fcb       $3E                 ;           IF_NOT_JUMP address=2DBD
27D4 0D3C             (      raakatu.asm):03809         L2D7F          fcb       $0D,$3C             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=60
27D6 1F               (      raakatu.asm):03810         L2D81          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
27D7 385FBE7315C1B13F (      raakatu.asm):03811         L2D82          fcb       $38,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$4F,$16,$B7 ;                 THE GARGOYLE LUNGES AT YOUR FACE BUT YOU
     DE4F16B7
27E3 98C3B51BBC34A14B (      raakatu.asm):03812         L2D8E          fcb       $98,$C3,$B5,$1B,$BC,$34,$A1,$4B,$15,$9B,$53,$F6 ;                 PULL BACK.  HE BITES YOUR SHOULDER INSTEAD!
     159B53F6
27EF 4F511852C246C5AB (      raakatu.asm):03813         L2D9A          fcb       $4F,$51,$18,$52,$C2,$46,$C5,$AB,$14,$AF,$54,$4A ;                 .
     14AF544A
27FB 13445E7F7BDBB534 (      raakatu.asm):03814         L2DA6          fcb       $13,$44,$5E,$7F,$7B,$DB,$B5,$34,$A1,$5A,$17,$2E ;                 .
     A15A172E
2807 A1F459D015FFB9F1 (      raakatu.asm):03815         L2DB2          fcb       $A1,$F4,$59,$D0,$15,$FF,$B9,$F1,$46 ;                 .
     46
2810 1D19             (      raakatu.asm):03816         L2DBB          fcb       $1D,$19             ;               Command_1D_ATTACK_OBJECT damage=19
2812 FF               (      raakatu.asm):03817         L2DBD          fcb       $FF                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
2813 18               (      raakatu.asm):03818         L2DBE          fcb       $18                 ;           IF_NOT_JUMP address=2DD7
2814 0D16             (      raakatu.asm):03819         L2DBF          fcb       $0D,$16             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=22
2816 1F               (      raakatu.asm):03820         L2DC1          fcb       $1F                 ;               Command_1F_PRINT_MESSAGE
2817 14C7DE0915375A82 (      raakatu.asm):03821         L2DC2          fcb       $14,$C7,$DE,$09,$15,$37,$5A,$82,$17,$49,$5E,$31 ;                 YOU DODGE THE GARGOYLE'S HORN.
     17495E31
2823 49CEA1A55EA915E7 (      raakatu.asm):03822         L2DCE          fcb       $49,$CE,$A1,$A5,$5E,$A9,$15,$E7,$B2 ;                 .
     B2
282C 0A2C             (      raakatu.asm):03823         L2DD7          fcb       $0A,$2C             ;     0A UPON DEATH SCRIPT
282E 0D2A             (      raakatu.asm):03824         L2DD9          fcb       $0D,$2A             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=42
2830 1F               (      raakatu.asm):03825         L2DDB          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
2831 225FBE7315C1B13F (      raakatu.asm):03826         L2DDC          fcb       $22,$5F,$BE,$73,$15,$C1,$B1,$3F,$DE,$7B,$17,$B5 ;           THE GARGOYLE TAKES A FINAL BREATH AND THEN
     DE7B17B5
283D 857B14106733486F (      raakatu.asm):03827         L2DE8          fcb       $85,$7B,$14,$10,$67,$33,$48,$6F,$4F,$82,$49,$90 ;           EXPIRES.
     4F824990
2849 141658F0723A1594 (      raakatu.asm):03828         L2DF4          fcb       $14,$16,$58,$F0,$72,$3A,$15,$94,$A5,$6F,$62 ;           .
     A56F62
2854 171E00           (      raakatu.asm):03829         L2DFF          fcb       $17,$1E,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1E(LiveGargoyle) location=00
2857 171F8E           (      raakatu.asm):03830         L2E02          fcb       $17,$1F,$8E         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1F(DeadGargoyle) location=8E
                      (      raakatu.asm):03831         ; Object_1F DeadGargoyle
285A 0F53             (      raakatu.asm):03832         L2E05          fcb       $0F,$53             ;   Number=0F size=0053
285C 000080           (      raakatu.asm):03833         L2E07          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
285F 03               (      raakatu.asm):03834         L2E0A          fcb       $03                 ;     03 DESCRIPTION
2860 245FBE5BB14B7B5F (      raakatu.asm):03835         L2E0B          fcb       $24,$5F,$BE,$5B,$B1,$4B,$7B,$5F,$BE,$FF,$14,$F3 ;       THERE IS THE DEAD CARCASS OF AN UGLY
     BEFF14F3
286C 4614531553D1B583 (      raakatu.asm):03836         L2E17          fcb       $46,$14,$53,$15,$53,$D1,$B5,$83,$64,$97,$96,$D3 ;       GARGOYLE NEARBY. 
     649796D3
2878 6D7315C1B13FDE8F (      raakatu.asm):03837         L2E23          fcb       $6D,$73,$15,$C1,$B1,$3F,$DE,$8F,$16,$2C,$49,$DB ;       .
     162C49DB
2884 E0               (      raakatu.asm):03838         L2E2F          fcb       $E0                 ;       .
2885 071D             (      raakatu.asm):03839         L2E30          fcb       $07,$1D             ;     07 COMMAND HANDLING IF FIRST NOUN
2887 0D1B             (      raakatu.asm):03840         L2E32          fcb       $0D,$1B             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=27
2889 0A15             (      raakatu.asm):03841         L2E34          fcb       $0A,$15             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
288B 04               (      raakatu.asm):03842         L2E36          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
288C 177AC4CB06821795 (      raakatu.asm):03843         L2E37          fcb       $17,$7A,$C4,$CB,$06,$82,$17,$95,$7A,$BD,$15,$49 ;           UGH! I THINK I'M GOING TO BE SICK!
     7ABD1549
2898 90509FD66AC49C55 (      raakatu.asm):03844         L2E43          fcb       $90,$50,$9F,$D6,$6A,$C4,$9C,$55,$5E,$DD,$78,$21 ;           .
     5EDD7821
28A4 02               (      raakatu.asm):03845         L2E4F          fcb       $02                 ;     02 SHORT NAME
28A5 09E35909583149CE (      raakatu.asm):03846         L2E50          fcb       $09,$E3,$59,$09,$58,$31,$49,$CE,$A1,$45 ;       DEAD GARGOYLE
     A145
                      (      raakatu.asm):03847         ; Object_20 Wall
28AF 2532             (      raakatu.asm):03848         L2E5A          fcb       $25,$32             ;   Number=25 size=0032
28B1 FF0080           (      raakatu.asm):03849         L2E5C          fcb       $FF,$00,$80         ;     room=FF scorePoints=00 bits=80 u.......
28B4 0728             (      raakatu.asm):03850         L2E5F          fcb       $07,$28             ;     07 COMMAND HANDLING IF FIRST NOUN
28B6 0B26             (      raakatu.asm):03851         L2E61          fcb       $0B,$26             ;       Command_0B_SWITCH size=26
28B8 0A17             (      raakatu.asm):03852         L2E63          fcb       $0A,$17             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
28BA 20               (      raakatu.asm):03853         L2E65          fcb       $20                 ;         IF_NOT_JUMP address=2E86
28BB 04               (      raakatu.asm):03854         L2E66          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
28BC 1EC7DED3149096F3 (      raakatu.asm):03855         L2E67          fcb       $1E,$C7,$DE,$D3,$14,$90,$96,$F3,$A0,$C3,$54,$A3 ;             YOU CAN NOT CLIMB THE WALL, IT IS TOO
     A0C354A3
28C8 915FBEF317168DD6 (      raakatu.asm):03856         L2E73          fcb       $91,$5F,$BE,$F3,$17,$16,$8D,$D6,$15,$D5,$15,$89 ;             SMOOTH.
     15D51589
28D4 17D59CC19377BE   (      raakatu.asm):03857         L2E7F          fcb       $17,$D5,$9C,$C1,$93,$77,$BE ;             .
28DB 34               (      raakatu.asm):03858         L2E86          fcb       $34                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=34 phrase="34: JUMP OVER   *          u......."
28DC 01               (      raakatu.asm):03859         L2E87          fcb       $01                 ;         IF_NOT_JUMP address=2E89
28DD 89               (      raakatu.asm):03860         L2E88          fcb       $89                 ;           CommonCommand_89
28DE 02               (      raakatu.asm):03861         L2E89          fcb       $02                 ;     02 SHORT NAME
28DF 030ED04C         (      raakatu.asm):03862         L2E8A          fcb       $03,$0E,$D0,$4C     ;       WALL
                      (      raakatu.asm):03863         ; Object_21 Vines
28E3 2629             (      raakatu.asm):03864         L2E8E          fcb       $26,$29             ;   Number=26 size=0029
28E5 9D0080           (      raakatu.asm):03865         L2E90          fcb       $9D,$00,$80         ;     room=9D scorePoints=00 bits=80 u.......
28E8 03               (      raakatu.asm):03866         L2E93          fcb       $03                 ;     03 DESCRIPTION
28E9 1E4E453149505E91 (      raakatu.asm):03867         L2E94          fcb       $1E,$4E,$45,$31,$49,$50,$5E,$91,$62,$B5,$A0,$B8 ;       A LARGE NETWORK OF VINES CLINGS TO THE WALL.
     62B5A0B8
28F5 16D3177598DE1491 (      raakatu.asm):03868         L2EA0          fcb       $16,$D3,$17,$75,$98,$DE,$14,$91,$7A,$D6,$B5,$D6 ;       
     7AD6B5D6
2901 9CDB720ED09B8F   (      raakatu.asm):03869         L2EAC          fcb       $9C,$DB,$72,$0E,$D0,$9B,$8F ;       .
2908 02               (      raakatu.asm):03870         L2EB3          fcb       $02                 ;     02 SHORT NAME
2909 0410CB4B62       (      raakatu.asm):03871         L2EB4          fcb       $04,$10,$CB,$4B,$62 ;       VINES 
                      (      raakatu.asm):03872         ; Object_22 GoldenChopstick
290E 1E28             (      raakatu.asm):03873         L2EB9          fcb       $1E,$28             ;   Number=1E size=0028
2910 8F05A0           (      raakatu.asm):03874         L2EBB          fcb       $8F,$05,$A0         ;     room=8F scorePoints=05 bits=A0 u.C.....
2913 03               (      raakatu.asm):03875         L2EBE          fcb       $03                 ;     03 DESCRIPTION
2914 165FBE5BB14B7B49 (      raakatu.asm):03876         L2EBF          fcb       $16,$5F,$BE,$5B,$B1,$4B,$7B,$49,$45,$BE,$9F,$83 ;       THERE IS A GOLDEN CHOPSTICK HERE.
     45BE9F83
2920 61295426A7DD789F (      raakatu.asm):03877         L2ECB          fcb       $61,$29,$54,$26,$A7,$DD,$78,$9F,$15,$7F,$B1 ;       .
     157FB1
292B 02               (      raakatu.asm):03878         L2ED6          fcb       $02                 ;     02 SHORT NAME
292C 0B3E6EF059DA146D (      raakatu.asm):03879         L2ED7          fcb       $0B,$3E,$6E,$F0,$59,$DA,$14,$6D,$A0,$85,$BE,$4B ;       GOLDEN CHOPSTICK
     A085BE4B
                      (      raakatu.asm):03880         ; Object_23 Guards
2938 2880CA           (      raakatu.asm):03881         L2EE3          fcb       $28,$80,$CA         ;   Number=28 size=00CA
293B 9C0090           (      raakatu.asm):03882         L2EE6          fcb       $9C,$00,$90         ;     room=9C scorePoints=00 bits=90 u..P....
293E 03               (      raakatu.asm):03883         L2EE9          fcb       $03                 ;     03 DESCRIPTION
293F 27B8B72B62098A94 (      raakatu.asm):03884         L2EEA          fcb       $27,$B8,$B7,$2B,$62,$09,$8A,$94,$C3,$0B,$5C,$14 ;       SEVERAL GUARDS CARRYING LETHAL CROSSBOWS
     C30B5C14
294B 538BB4AB98F68B4E (      raakatu.asm):03885         L2EF6          fcb       $53,$8B,$B4,$AB,$98,$F6,$8B,$4E,$72,$E4,$14,$E5 ;       TURN TO FACE YOU.
     72E414E5
2957 A0094FD6B538C689 (      raakatu.asm):03886         L2F02          fcb       $A0,$09,$4F,$D6,$B5,$38,$C6,$89,$17,$4B,$15,$9B ;       .
     174B159B
2963 53C7DE2E         (      raakatu.asm):03887         L2F0E          fcb       $53,$C7,$DE,$2E     ;       .
2967 088095           (      raakatu.asm):03888         L2F12          fcb       $08,$80,$95         ;     08 TURN SCRIPT
296A 0E8092           (      raakatu.asm):03889         L2F15          fcb       $0E,$80,$92         ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=146
296D 0D2F             (      raakatu.asm):03890         L2F18          fcb       $0D,$2F             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=47
296F 14               (      raakatu.asm):03891         L2F1A          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2970 011D             (      raakatu.asm):03892         L2F1B          fcb       $01,$1D             ;             Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2972 0B29             (      raakatu.asm):03893         L2F1D          fcb       $0B,$29             ;           Command_0B_SWITCH size=29
2974 039C23           (      raakatu.asm):03894         L2F1F          fcb       $03,$9C,$23         ;             Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9C
2977 07               (      raakatu.asm):03895         L2F22          fcb       $07                 ;             IF_NOT_JUMP address=2F2A
2978 0D05             (      raakatu.asm):03896         L2F23          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
297A 009D             (      raakatu.asm):03897         L2F25          fcb       $00,$9D             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9D
297C 011D             (      raakatu.asm):03898         L2F27          fcb       $01,$1D             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
297E 86               (      raakatu.asm):03899         L2F29          fcb       $86                 ;                 CommonCommand_86
297F 9F23             (      raakatu.asm):03900         L2F2A          fcb       $9F,$23             ;             Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9F
2981 07               (      raakatu.asm):03901         L2F2C          fcb       $07                 ;             IF_NOT_JUMP address=2F34
2982 0D05             (      raakatu.asm):03902         L2F2D          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
2984 009C             (      raakatu.asm):03903         L2F2F          fcb       $00,$9C             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9C
2986 011D             (      raakatu.asm):03904         L2F31          fcb       $01,$1D             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2988 86               (      raakatu.asm):03905         L2F33          fcb       $86                 ;                 CommonCommand_86
2989 9E23             (      raakatu.asm):03906         L2F34          fcb       $9E,$23             ;             Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9E
298B 07               (      raakatu.asm):03907         L2F36          fcb       $07                 ;             IF_NOT_JUMP address=2F3E
298C 0D05             (      raakatu.asm):03908         L2F37          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
298E 009F             (      raakatu.asm):03909         L2F39          fcb       $00,$9F             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9F
2990 011D             (      raakatu.asm):03910         L2F3B          fcb       $01,$1D             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
2992 86               (      raakatu.asm):03911         L2F3D          fcb       $86                 ;                 CommonCommand_86
2993 9D23             (      raakatu.asm):03912         L2F3E          fcb       $9D,$23             ;             Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9D
2995 07               (      raakatu.asm):03913         L2F40          fcb       $07                 ;             IF_NOT_JUMP address=2F48
2996 0D05             (      raakatu.asm):03914         L2F41          fcb       $0D,$05             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=5
2998 009E             (      raakatu.asm):03915         L2F43          fcb       $00,$9E             ;                 Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9E
299A 011D             (      raakatu.asm):03916         L2F45          fcb       $01,$1D             ;                 Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
299C 86               (      raakatu.asm):03917         L2F47          fcb       $86                 ;                 CommonCommand_86
299D 0C               (      raakatu.asm):03918         L2F48          fcb       $0C                 ;           Command_0C_FAIL
299E 0D5F             (      raakatu.asm):03919         L2F49          fcb       $0D,$5F             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=95
29A0 011D             (      raakatu.asm):03920         L2F4B          fcb       $01,$1D             ;           Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=1D(USER)
29A2 1C1D             (      raakatu.asm):03921         L2F4D          fcb       $1C,$1D             ;           Command_1C_SET_VAR_OBJECT object=1D (USER)
29A4 1F               (      raakatu.asm):03922         L2F4F          fcb       $1F                 ;           Command_1F_PRINT_MESSAGE
29A5 58A61D51A0D01506 (      raakatu.asm):03923         L2F50          fcb       $58,$A6,$1D,$51,$A0,$D0,$15,$06,$67,$33,$61,$79 ;             "STOP! INFIDEL DOG!", THE GUARDS LEVEL THEIR
     67336179
29B1 5B06078217495E94 (      raakatu.asm):03924         L2F5C          fcb       $5B,$06,$07,$82,$17,$49,$5E,$94,$C3,$0B,$5C,$F8 ;             CROSSBOWS AND LOOSE THEIR BOLTS! YOUR BODY
     C30B5CF8
29BD 8B33615FBE237BB9 (      raakatu.asm):03925         L2F68          fcb       $8B,$33,$61,$5F,$BE,$23,$7B,$B9,$55,$D4,$B9,$85 ;             FALLS TO THE GROUND RIDDLED WITH THE SHAFTS!
     55D4B985
29C9 A190140E5845A056 (      raakatu.asm):03926         L2F74          fcb       $A1,$90,$14,$0E,$58,$45,$A0,$56,$5E,$EB,$72,$84 ;             .
     5EEB7284
29D5 AFCE9F6BB5C7DE84 (      raakatu.asm):03927         L2F80          fcb       $AF,$CE,$9F,$6B,$B5,$C7,$DE,$84,$AF,$93,$9E,$4B ;             .
     AF939E4B
29E1 150D8D8917821749 (      raakatu.asm):03928         L2F8C          fcb       $15,$0D,$8D,$89,$17,$82,$17,$49,$5E,$07,$B3,$33 ;             .
     5E07B333
29ED 9806B2FF5A195882 (      raakatu.asm):03929         L2F98          fcb       $98,$06,$B2,$FF,$5A,$19,$58,$82,$7B,$82,$17,$55 ;             .
     7B821755
29F9 5E487209C0       (      raakatu.asm):03930         L2FA4          fcb       $5E,$48,$72,$09,$C0 ;             .
29FE 81               (      raakatu.asm):03931         L2FA9          fcb       $81                 ;           CommonCommand_81
29FF 02               (      raakatu.asm):03932         L2FAA          fcb       $02                 ;     02 SHORT NAME
2A00 04236F4DB1       (      raakatu.asm):03933         L2FAB          fcb       $04,$23,$6F,$4D,$B1 ;       GUARDS
                      (      raakatu.asm):03934         ; Object_24 Object24
2A05 294C             (      raakatu.asm):03935         L2FB0          fcb       $29,$4C             ;   Number=29 size=004C
2A07 1D0000           (      raakatu.asm):03936         L2FB2          fcb       $1D,$00,$00         ;     room=1D scorePoints=00 bits=00 *       
2A0A 0847             (      raakatu.asm):03937         L2FB5          fcb       $08,$47             ;     08 TURN SCRIPT
2A0C 0B45             (      raakatu.asm):03938         L2FB7          fcb       $0B,$45             ;       Command_0B_SWITCH size=45
2A0E 039C23           (      raakatu.asm):03939         L2FB9          fcb       $03,$9C,$23         ;         Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9C
2A11 0E               (      raakatu.asm):03940         L2FBC          fcb       $0E                 ;         IF_NOT_JUMP address=2FCB
2A12 0E0C             (      raakatu.asm):03941         L2FBD          fcb       $0E,$0C             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=12
2A14 0D04             (      raakatu.asm):03942         L2FBF          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A16 039A1D           (      raakatu.asm):03943         L2FC1          fcb       $03,$9A,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=9A
2A19 85               (      raakatu.asm):03944         L2FC4          fcb       $85                 ;               CommonCommand_85
2A1A 0D04             (      raakatu.asm):03945         L2FC5          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A1C 03991D           (      raakatu.asm):03946         L2FC7          fcb       $03,$99,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=99
2A1F 87               (      raakatu.asm):03947         L2FCA          fcb       $87                 ;               CommonCommand_87
2A20 9F23             (      raakatu.asm):03948         L2FCB          fcb       $9F,$23             ;         Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9F
2A22 0E               (      raakatu.asm):03949         L2FCD          fcb       $0E                 ;         IF_NOT_JUMP address=2FDC
2A23 0E0C             (      raakatu.asm):03950         L2FCE          fcb       $0E,$0C             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=12
2A25 0D04             (      raakatu.asm):03951         L2FD0          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A27 03991D           (      raakatu.asm):03952         L2FD2          fcb       $03,$99,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=99
2A2A 85               (      raakatu.asm):03953         L2FD5          fcb       $85                 ;               CommonCommand_85
2A2B 0D04             (      raakatu.asm):03954         L2FD6          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A2D 03981D           (      raakatu.asm):03955         L2FD8          fcb       $03,$98,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=98
2A30 87               (      raakatu.asm):03956         L2FDB          fcb       $87                 ;               CommonCommand_87
2A31 9E23             (      raakatu.asm):03957         L2FDC          fcb       $9E,$23             ;         Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9E
2A33 0E               (      raakatu.asm):03958         L2FDE          fcb       $0E                 ;         IF_NOT_JUMP address=2FED
2A34 0E0C             (      raakatu.asm):03959         L2FDF          fcb       $0E,$0C             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=12
2A36 0D04             (      raakatu.asm):03960         L2FE1          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A38 03981D           (      raakatu.asm):03961         L2FE3          fcb       $03,$98,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=98
2A3B 85               (      raakatu.asm):03962         L2FE6          fcb       $85                 ;               CommonCommand_85
2A3C 0D04             (      raakatu.asm):03963         L2FE7          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A3E 039B1D           (      raakatu.asm):03964         L2FE9          fcb       $03,$9B,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=9B
2A41 87               (      raakatu.asm):03965         L2FEC          fcb       $87                 ;               CommonCommand_87
2A42 9D23             (      raakatu.asm):03966         L2FED          fcb       $9D,$23             ;         Command_03_IS_OBJECT_AT_LOCATION object=23(Guards) location=9D
2A44 0E               (      raakatu.asm):03967         L2FEF          fcb       $0E                 ;         IF_NOT_JUMP address=2FFE
2A45 0E0C             (      raakatu.asm):03968         L2FF0          fcb       $0E,$0C             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=12
2A47 0D04             (      raakatu.asm):03969         L2FF2          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A49 039B1D           (      raakatu.asm):03970         L2FF4          fcb       $03,$9B,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=9B
2A4C 85               (      raakatu.asm):03971         L2FF7          fcb       $85                 ;               CommonCommand_85
2A4D 0D04             (      raakatu.asm):03972         L2FF8          fcb       $0D,$04             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=4
2A4F 039A1D           (      raakatu.asm):03973         L2FFA          fcb       $03,$9A,$1D         ;               Command_03_IS_OBJECT_AT_LOCATION object=1D(USER) location=9A
2A52 87               (      raakatu.asm):03974         L2FFD          fcb       $87                 ;               CommonCommand_87
                      (      raakatu.asm):03975         ; Object_25 GemA
2A53 1330             (      raakatu.asm):03976         L2FFE          fcb       $13,$30             ;   Number=13 size=0030
2A55 9C00A0           (      raakatu.asm):03977         L3000          fcb       $9C,$00,$A0         ;     room=9C scorePoints=00 bits=A0 u.C.....
2A58 02               (      raakatu.asm):03978         L3003          fcb       $02                 ;     02 SHORT NAME
2A59 08EFA651544BC6AF (      raakatu.asm):03979         L3004          fcb       $08,$EF,$A6,$51,$54,$4B,$C6,$AF,$6C ;       PRECIOUS GEM
     6C
2A62 0821             (      raakatu.asm):03980         L300D          fcb       $08,$21             ;     08 TURN SCRIPT
2A64 0D1F             (      raakatu.asm):03981         L300F          fcb       $0D,$1F             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=31
2A66 039C25           (      raakatu.asm):03982         L3011          fcb       $03,$9C,$25         ;         Command_03_IS_OBJECT_AT_LOCATION object=25(GemA) location=9C
2A69 0B1A             (      raakatu.asm):03983         L3014          fcb       $0B,$1A             ;         Command_0B_SWITCH size=1A
2A6B 0533             (      raakatu.asm):03984         L3016          fcb       $05,$33             ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=33
2A6D 03               (      raakatu.asm):03985         L3018          fcb       $03                 ;           IF_NOT_JUMP address=301C
2A6E 172589           (      raakatu.asm):03986         L3019          fcb       $17,$25,$89         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=89
2A71 66               (      raakatu.asm):03987         L301C          fcb       $66                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=66
2A72 03               (      raakatu.asm):03988         L301D          fcb       $03                 ;           IF_NOT_JUMP address=3021
2A73 172594           (      raakatu.asm):03989         L301E          fcb       $17,$25,$94         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=94
2A76 99               (      raakatu.asm):03990         L3021          fcb       $99                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=99
2A77 03               (      raakatu.asm):03991         L3022          fcb       $03                 ;           IF_NOT_JUMP address=3026
2A78 172586           (      raakatu.asm):03992         L3023          fcb       $17,$25,$86         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=86
2A7B CC               (      raakatu.asm):03993         L3026          fcb       $CC                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=CC
2A7C 03               (      raakatu.asm):03994         L3027          fcb       $03                 ;           IF_NOT_JUMP address=302B
2A7D 17258E           (      raakatu.asm):03995         L3028          fcb       $17,$25,$8E         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=8E
2A80 FF               (      raakatu.asm):03996         L302B          fcb       $FF                 ;           Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
2A81 03               (      raakatu.asm):03997         L302C          fcb       $03                 ;           IF_NOT_JUMP address=3030
2A82 172583           (      raakatu.asm):03998         L302D          fcb       $17,$25,$83         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=83
                      (      raakatu.asm):03999         ; Object_26 GemB
2A85 1323             (      raakatu.asm):04000         L3030          fcb       $13,$23             ;   Number=13 size=0023
2A87 0005A0           (      raakatu.asm):04001         L3032          fcb       $00,$05,$A0         ;     room=00 scorePoints=05 bits=A0 u.C.....
2A8A 02               (      raakatu.asm):04002         L3035          fcb       $02                 ;     02 SHORT NAME
2A8B 08EFA651544BC6AF (      raakatu.asm):04003         L3036          fcb       $08,$EF,$A6,$51,$54,$4B,$C6,$AF,$6C ;       PRECIOUS GEM
     6C
2A94 03               (      raakatu.asm):04004         L303F          fcb       $03                 ;     03 DESCRIPTION
2A95 145FBE5BB14B7B52 (      raakatu.asm):04005         L3040          fcb       $14,$5F,$BE,$5B,$B1,$4B,$7B,$52,$45,$65,$B1,$C7 ;       THERE IS A PRECIOUS GEM HERE. 
     4565B1C7
2AA1 7AC9B55B61F472DB (      raakatu.asm):04006         L304C          fcb       $7A,$C9,$B5,$5B,$61,$F4,$72,$DB,$63 ;       .
     63
                      (      raakatu.asm):04007         ; Object_27 HiddenGem
2AAA 2A32             (      raakatu.asm):04008         L3055          fcb       $2A,$32             ;   Number=2A size=0032
2AAC FF0000           (      raakatu.asm):04009         L3057          fcb       $FF,$00,$00         ;     room=FF scorePoints=00 bits=00 *       
2AAF 02               (      raakatu.asm):04010         L305A          fcb       $02                 ;     02 SHORT NAME
2AB0 0301B34D         (      raakatu.asm):04011         L305B          fcb       $03,$01,$B3,$4D     ;       ROOM
2AB4 0728             (      raakatu.asm):04012         L305F          fcb       $07,$28             ;     07 COMMAND HANDLING IF FIRST NOUN
2AB6 0D26             (      raakatu.asm):04013         L3061          fcb       $0D,$26             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=38
2AB8 0A0B             (      raakatu.asm):04014         L3063          fcb       $0A,$0B             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=0B phrase="0B: LOOK AT     *          u......."
2ABA 0125             (      raakatu.asm):04015         L3065          fcb       $01,$25             ;         Command_01_IS_OBJECT_IN_PACK_OR_ROOM object=25(GemA)
2ABC 04               (      raakatu.asm):04016         L3067          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2ABD 20C7DE031561B774 (      raakatu.asm):04017         L3068          fcb       $20,$C7,$DE,$03,$15,$61,$B7,$74,$CA,$7B,$14,$EF ;           YOU DISCOVER A PRECIOUS GEM HIDDEN IN A
     CA7B14EF
2AC9 A651544BC6AF6CA3 (      raakatu.asm):04018         L3074          fcb       $A6,$51,$54,$4B,$C6,$AF,$6C,$A3,$15,$BF,$59,$8B ;           CREVICE.
     15BF598B
2AD5 968396E414D362BF (      raakatu.asm):04019         L3080          fcb       $96,$83,$96,$E4,$14,$D3,$62,$BF,$53 ;           .
     53
                      (      raakatu.asm):04020         ; Object_28 UnlitLamp
2ADE 1B62             (      raakatu.asm):04021         L3089          fcb       $1B,$62             ;   Number=1B size=0062
2AE0 0000AC           (      raakatu.asm):04022         L308B          fcb       $00,$00,$AC         ;     room=00 scorePoints=00 bits=AC u.C.AX..
2AE3 02               (      raakatu.asm):04023         L308E          fcb       $02                 ;     02 SHORT NAME
2AE4 034F8B50         (      raakatu.asm):04024         L308F          fcb       $03,$4F,$8B,$50     ;       LAMP
2AE8 03               (      raakatu.asm):04025         L3093          fcb       $03                 ;     03 DESCRIPTION
2AE9 0E5FBE5BB14B7B4E (      raakatu.asm):04026         L3094          fcb       $0E,$5F,$BE,$5B,$B1,$4B,$7B,$4E,$45,$72,$48,$9F ;       THERE IS A LAMP HERE.
     4572489F
2AF5 157FB1           (      raakatu.asm):04027         L30A0          fcb       $15,$7F,$B1         ;       .
2AF8 0748             (      raakatu.asm):04028         L30A3          fcb       $07,$48             ;     07 COMMAND HANDLING IF FIRST NOUN
2AFA 0B46             (      raakatu.asm):04029         L30A5          fcb       $0B,$46             ;       Command_0B_SWITCH size=46
2AFC 0A14             (      raakatu.asm):04030         L30A7          fcb       $0A,$14             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=14 phrase="14: LIGHT WITH  u...A...   u...A..."
2AFE 1C               (      raakatu.asm):04031         L30A9          fcb       $1C                 ;         IF_NOT_JUMP address=30C6
2AFF 0E1A             (      raakatu.asm):04032         L30AA          fcb       $0E,$1A             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=26
2B01 0D17             (      raakatu.asm):04033         L30AC          fcb       $0D,$17             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=23
2B03 0912             (      raakatu.asm):04034         L30AE          fcb       $09,$12             ;               Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=12(LitCandle
2B05 1E2814           (      raakatu.asm):04035         L30B0          fcb       $1E,$28,$14         ;               Command_1E_SWAP_OBJECTS objectA=28(UnlitLamp) objectB=14(LitLamp)
2B08 04               (      raakatu.asm):04036         L30B3          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2B09 105FBE3B16D3934B (      raakatu.asm):04037         L30B4          fcb       $10,$5F,$BE,$3B,$16,$D3,$93,$4B,$7B,$09,$9A,$BF ;                 THE LAMP IS NOW BURNING.
     7B099ABF
2B15 14D3B2CF98       (      raakatu.asm):04038         L30C0          fcb       $14,$D3,$B2,$CF,$98 ;                 .
2B1A 88               (      raakatu.asm):04039         L30C5          fcb       $88                 ;             CommonCommand_88
2B1B 18               (      raakatu.asm):04040         L30C6          fcb       $18                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=18 phrase="18: RUB *       u.......   *       "
2B1C 19               (      raakatu.asm):04041         L30C7          fcb       $19                 ;         IF_NOT_JUMP address=30E1
2B1D 04               (      raakatu.asm):04042         L30C8          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2B1E 1729D10915511856 (      raakatu.asm):04043         L30C9          fcb       $17,$29,$D1,$09,$15,$51,$18,$56,$C2,$90,$73,$DB ;             WHO DO YOU THINK YOU ARE, ALADDIN?
     C29073DB
2B2A 831BA12F4903EE46 (      raakatu.asm):04044         L30D5          fcb       $83,$1B,$A1,$2F,$49,$03,$EE,$46,$8B,$90,$5A,$3F ;             .
     8B905A3F
2B36 08               (      raakatu.asm):04045         L30E1          fcb       $08                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
2B37 0A               (      raakatu.asm):04046         L30E2          fcb       $0A                 ;         IF_NOT_JUMP address=30ED
2B38 04               (      raakatu.asm):04047         L30E3          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2B39 08491B991614BCA4 (      raakatu.asm):04048         L30E4          fcb       $08,$49,$1B,$99,$16,$14,$BC,$A4,$C3 ;             "DO NOT RUB"
     C3
                      (      raakatu.asm):04049         ; Object_29 Floor
2B42 2B09             (      raakatu.asm):04050         L30ED          fcb       $2B,$09             ;   Number=2B size=0009
2B44 000080           (      raakatu.asm):04051         L30EF          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B47 02               (      raakatu.asm):04052         L30F2          fcb       $02                 ;     02 SHORT NAME
2B48 048967A3A0       (      raakatu.asm):04053         L30F3          fcb       $04,$89,$67,$A3,$A0 ;       FLOOR 
                      (      raakatu.asm):04054         ; Object_2A Exit
2B4D 2C0B             (      raakatu.asm):04055         L30F8          fcb       $2C,$0B             ;   Number=2C size=000B
2B4F 000080           (      raakatu.asm):04056         L30FA          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B52 0701             (      raakatu.asm):04057         L30FD          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2B54 93               (      raakatu.asm):04058         L30FF          fcb       $93                 ;       CommonCommand_93
2B55 02               (      raakatu.asm):04059         L3100          fcb       $02                 ;     02 SHORT NAME
2B56 03236354         (      raakatu.asm):04060         L3101          fcb       $03,$23,$63,$54     ;       EXIT
                      (      raakatu.asm):04061         ; Object_2B Passage
2B5A 2D0D             (      raakatu.asm):04062         L3105          fcb       $2D,$0D             ;   Number=2D size=000D
2B5C 000080           (      raakatu.asm):04063         L3107          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B5F 0701             (      raakatu.asm):04064         L310A          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2B61 93               (      raakatu.asm):04065         L310C          fcb       $93                 ;       CommonCommand_93
2B62 02               (      raakatu.asm):04066         L310D          fcb       $02                 ;     02 SHORT NAME
2B63 0555A409B745     (      raakatu.asm):04067         L310E          fcb       $05,$55,$A4,$09,$B7,$45 ;       PASSAGE
                      (      raakatu.asm):04068         ; Object_2C Hole
2B69 2E0B             (      raakatu.asm):04069         L3114          fcb       $2E,$0B             ;   Number=2E size=000B
2B6B 000080           (      raakatu.asm):04070         L3116          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B6E 0701             (      raakatu.asm):04071         L3119          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2B70 93               (      raakatu.asm):04072         L311B          fcb       $93                 ;       CommonCommand_93
2B71 02               (      raakatu.asm):04073         L311C          fcb       $02                 ;     02 SHORT NAME
2B72 037E7445         (      raakatu.asm):04074         L311D          fcb       $03,$7E,$74,$45     ;       HOLE
                      (      raakatu.asm):04075         ; Object_2D Corridor
2B76 2F0E             (      raakatu.asm):04076         L3121          fcb       $2F,$0E             ;   Number=2F size=000E
2B78 000080           (      raakatu.asm):04077         L3123          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B7B 0701             (      raakatu.asm):04078         L3126          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2B7D 93               (      raakatu.asm):04079         L3128          fcb       $93                 ;       CommonCommand_93
2B7E 02               (      raakatu.asm):04080         L3129          fcb       $02                 ;     02 SHORT NAME
2B7F 06445506B2A3A0   (      raakatu.asm):04081         L312A          fcb       $06,$44,$55,$06,$B2,$A3,$A0 ;       CORRIDOR 
                      (      raakatu.asm):04082         ; Object_2E Corner
2B86 3009             (      raakatu.asm):04083         L3131          fcb       $30,$09             ;   Number=30 size=0009
2B88 000080           (      raakatu.asm):04084         L3133          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2B8B 02               (      raakatu.asm):04085         L3136          fcb       $02                 ;     02 SHORT NAME
2B8C 0444557498       (      raakatu.asm):04086         L3137          fcb       $04,$44,$55,$74,$98 ;       CORNER
                      (      raakatu.asm):04087         ; Object_2F Bow
2B91 3107             (      raakatu.asm):04088         L313C          fcb       $31,$07             ;   Number=31 size=0007
2B93 880080           (      raakatu.asm):04089         L313E          fcb       $88,$00,$80         ;     room=88 scorePoints=00 bits=80 u.......
2B96 02               (      raakatu.asm):04090         L3141          fcb       $02                 ;     02 SHORT NAME
2B97 02094F           (      raakatu.asm):04091         L3142          fcb       $02,$09,$4F         ;       BOW
                      (      raakatu.asm):04092         ; Object_30 Arrow
2B9A 3209             (      raakatu.asm):04093         L3145          fcb       $32,$09             ;   Number=32 size=0009
2B9C 880080           (      raakatu.asm):04094         L3147          fcb       $88,$00,$80         ;     room=88 scorePoints=00 bits=80 u.......
2B9F 02               (      raakatu.asm):04095         L314A          fcb       $02                 ;     02 SHORT NAME
2BA0 043C496BA1       (      raakatu.asm):04096         L314B          fcb       $04,$3C,$49,$6B,$A1 ;       ARROW 
                      (      raakatu.asm):04097         ; Object_31 Hallway
2BA5 330D             (      raakatu.asm):04098         L3150          fcb       $33,$0D             ;   Number=33 size=000D
2BA7 000080           (      raakatu.asm):04099         L3152          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2BAA 0701             (      raakatu.asm):04100         L3155          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2BAC 93               (      raakatu.asm):04101         L3157          fcb       $93                 ;       CommonCommand_93
2BAD 02               (      raakatu.asm):04102         L3158          fcb       $02                 ;     02 SHORT NAME
2BAE 054E72B38E59     (      raakatu.asm):04103         L3159          fcb       $05,$4E,$72,$B3,$8E,$59 ;       HALLWAY
                      (      raakatu.asm):04104         ; Object_32 Chamber
2BB4 340A             (      raakatu.asm):04105         L315F          fcb       $34,$0A             ;   Number=34 size=000A
2BB6 8D0080           (      raakatu.asm):04106         L3161          fcb       $8D,$00,$80         ;     room=8D scorePoints=00 bits=80 u.......
2BB9 02               (      raakatu.asm):04107         L3164          fcb       $02                 ;     02 SHORT NAME
2BBA 051B54AF9152     (      raakatu.asm):04108         L3165          fcb       $05,$1B,$54,$AF,$91,$52 ;       CHAMBER
                      (      raakatu.asm):04109         ; Object_33 Vault
2BC0 3509             (      raakatu.asm):04110         L316B          fcb       $35,$09             ;   Number=35 size=0009
2BC2 910080           (      raakatu.asm):04111         L316D          fcb       $91,$00,$80         ;     room=91 scorePoints=00 bits=80 u.......
2BC5 02               (      raakatu.asm):04112         L3170          fcb       $02                 ;     02 SHORT NAME
2BC6 04D7C9338E       (      raakatu.asm):04113         L3171          fcb       $04,$D7,$C9,$33,$8E ;       VAULT 
                      (      raakatu.asm):04114         ; Object_34 Entrance
2BCB 360E             (      raakatu.asm):04115         L3176          fcb       $36,$0E             ;   Number=36 size=000E
2BCD 000080           (      raakatu.asm):04116         L3178          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2BD0 0701             (      raakatu.asm):04117         L317B          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2BD2 93               (      raakatu.asm):04118         L317D          fcb       $93                 ;       CommonCommand_93
2BD3 02               (      raakatu.asm):04119         L317E          fcb       $02                 ;     02 SHORT NAME
2BD4 069E61D0B09B53   (      raakatu.asm):04120         L317F          fcb       $06,$9E,$61,$D0,$B0,$9B,$53 ;       ENTRANCE 
                      (      raakatu.asm):04121         ; Object_35 Tunnel
2BDB 370C             (      raakatu.asm):04122         L3186          fcb       $37,$0C             ;   Number=37 size=000C
2BDD 000080           (      raakatu.asm):04123         L3188          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2BE0 0701             (      raakatu.asm):04124         L318B          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2BE2 93               (      raakatu.asm):04125         L318D          fcb       $93                 ;       CommonCommand_93
2BE3 02               (      raakatu.asm):04126         L318E          fcb       $02                 ;     02 SHORT NAME
2BE4 0470C06E98       (      raakatu.asm):04127         L318F          fcb       $04,$70,$C0,$6E,$98 ;       TUNNEL
                      (      raakatu.asm):04128         ; Object_36 Jungle
2BE9 380C             (      raakatu.asm):04129         L3194          fcb       $38,$0C             ;   Number=38 size=000C
2BEB FF0080           (      raakatu.asm):04130         L3196          fcb       $FF,$00,$80         ;     room=FF scorePoints=00 bits=80 u.......
2BEE 0701             (      raakatu.asm):04131         L3199          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2BF0 93               (      raakatu.asm):04132         L319B          fcb       $93                 ;       CommonCommand_93
2BF1 02               (      raakatu.asm):04133         L319C          fcb       $02                 ;     02 SHORT NAME
2BF2 04F081BF6D       (      raakatu.asm):04134         L319D          fcb       $04,$F0,$81,$BF,$6D ;       JUNGLE
                      (      raakatu.asm):04135         ; Object_37 Temple
2BF7 390C             (      raakatu.asm):04136         L31A2          fcb       $39,$0C             ;   Number=39 size=000C
2BF9 FF0080           (      raakatu.asm):04137         L31A4          fcb       $FF,$00,$80         ;     room=FF scorePoints=00 bits=80 u.......
2BFC 0701             (      raakatu.asm):04138         L31A7          fcb       $07,$01             ;     07 COMMAND HANDLING IF FIRST NOUN
2BFE 93               (      raakatu.asm):04139         L31A9          fcb       $93                 ;       CommonCommand_93
2BFF 02               (      raakatu.asm):04140         L31AA          fcb       $02                 ;     02 SHORT NAME
2C00 04EFBDFFA5       (      raakatu.asm):04141         L31AB          fcb       $04,$EF,$BD,$FF,$A5 ;       TEMPLE
                      (      raakatu.asm):04142         ; Object_38 Serpents
2C05 240B             (      raakatu.asm):04143         L31B0          fcb       $24,$0B             ;   Number=24 size=000B
2C07 9C0080           (      raakatu.asm):04144         L31B2          fcb       $9C,$00,$80         ;     room=9C scorePoints=00 bits=80 u.......
2C0A 02               (      raakatu.asm):04145         L31B5          fcb       $02                 ;     02 SHORT NAME
2C0B 06B4B7F0A40BC0   (      raakatu.asm):04146         L31B6          fcb       $06,$B4,$B7,$F0,$A4,$0B,$C0 ;       SERPENTS 
                      (      raakatu.asm):04147         ; Object_39 Pit
2C12 3A31             (      raakatu.asm):04148         L31BD          fcb       $3A,$31             ;   Number=3A size=0031
2C14 820080           (      raakatu.asm):04149         L31BF          fcb       $82,$00,$80         ;     room=82 scorePoints=00 bits=80 u.......
2C17 0728             (      raakatu.asm):04150         L31C2          fcb       $07,$28             ;     07 COMMAND HANDLING IF FIRST NOUN
2C19 0B26             (      raakatu.asm):04151         L31C4          fcb       $0B,$26             ;       Command_0B_SWITCH size=26
2C1B 0A36             (      raakatu.asm):04152         L31C6          fcb       $0A,$36             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
2C1D 01               (      raakatu.asm):04153         L31C8          fcb       $01                 ;         IF_NOT_JUMP address=31CA
2C1E 8A               (      raakatu.asm):04154         L31C9          fcb       $8A                 ;           CommonCommand_8A
2C1F 33               (      raakatu.asm):04155         L31CA          fcb       $33                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=33 phrase="??"
2C20 01               (      raakatu.asm):04156         L31CB          fcb       $01                 ;         IF_NOT_JUMP address=31CD
2C21 8A               (      raakatu.asm):04157         L31CC          fcb       $8A                 ;           CommonCommand_8A
2C22 34               (      raakatu.asm):04158         L31CD          fcb       $34                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=34 phrase="34: JUMP OVER   *          u......."
2C23 01               (      raakatu.asm):04159         L31CE          fcb       $01                 ;         IF_NOT_JUMP address=31D0
2C24 8A               (      raakatu.asm):04160         L31CF          fcb       $8A                 ;           CommonCommand_8A
2C25 26               (      raakatu.asm):04161         L31D0          fcb       $26                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=26 phrase="26: GO AROUND   *          u......."
2C26 17               (      raakatu.asm):04162         L31D1          fcb       $17                 ;         IF_NOT_JUMP address=31E9
2C27 04               (      raakatu.asm):04163         L31D2          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2C28 155FBE5BB14B7BEB (      raakatu.asm):04164         L31D3          fcb       $15,$5F,$BE,$5B,$B1,$4B,$7B,$EB,$99,$1B,$D0,$94 ;             THERE IS NO WAY AROUND THE PIT.
     991BD094
2C34 1430A11658DB7296 (      raakatu.asm):04165         L31DF          fcb       $14,$30,$A1,$16,$58,$DB,$72,$96,$A5,$2E ;             .
     A52E
2C3E 17               (      raakatu.asm):04166         L31E9          fcb       $17                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
2C3F 01               (      raakatu.asm):04167         L31EA          fcb       $01                 ;         IF_NOT_JUMP address=31EC
2C40 8A               (      raakatu.asm):04168         L31EB          fcb       $8A                 ;           CommonCommand_8A
2C41 02               (      raakatu.asm):04169         L31EC          fcb       $02                 ;     02 SHORT NAME
2C42 0296A5           (      raakatu.asm):04170         L31ED          fcb       $02,$96,$A5         ;       PIT
                      (      raakatu.asm):04171         ; Object_3A Ceiling
2C45 3B0A             (      raakatu.asm):04172         L31F0          fcb       $3B,$0A             ;   Number=3B size=000A
2C47 000080           (      raakatu.asm):04173         L31F2          fcb       $00,$00,$80         ;     room=00 scorePoints=00 bits=80 u.......
2C4A 02               (      raakatu.asm):04174         L31F5          fcb       $02                 ;     02 SHORT NAME
2C4B 05AB53908C47     (      raakatu.asm):04175         L31F6          fcb       $05,$AB,$53,$90,$8C,$47 ;       CEILING
                      (      raakatu.asm):04176         ; Object_3B AlterB
2C51 2239             (      raakatu.asm):04177         L31FC          fcb       $22,$39             ;   Number=22 size=0039
2C53 A50080           (      raakatu.asm):04178         L31FE          fcb       $A5,$00,$80         ;     room=A5 scorePoints=00 bits=80 u.......
2C56 02               (      raakatu.asm):04179         L3201          fcb       $02                 ;     02 SHORT NAME
2C57 044E482362       (      raakatu.asm):04180         L3202          fcb       $04,$4E,$48,$23,$62 ;       ALTER 
2C5C 072E             (      raakatu.asm):04181         L3207          fcb       $07,$2E             ;     07 COMMAND HANDLING IF FIRST NOUN
2C5E 0D2C             (      raakatu.asm):04182         L3209          fcb       $0D,$2C             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=44
2C60 0A12             (      raakatu.asm):04183         L320B          fcb       $0A,$12             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
2C62 04               (      raakatu.asm):04184         L320D          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2C63 28C7DED3149096F3 (      raakatu.asm):04185         L320E          fcb       $28,$C7,$DE,$D3,$14,$90,$96,$F3,$A0,$C8,$93,$56 ;           YOU CAN NOT MOVE THE ALTER FROM BENEATH IT,
     A0C89356
2C6F 5EDB724E48236279 (      raakatu.asm):04186         L321A          fcb       $5E,$DB,$72,$4E,$48,$23,$62,$79,$68,$44,$90,$8F ;           IT IS TOO HEAVY.
     6844908F
2C7B 618249D6150BEE0B (      raakatu.asm):04187         L3226          fcb       $61,$82,$49,$D6,$15,$0B,$EE,$0B,$BC,$D6,$B5,$2B ;           .
     BCD6B52B
2C87 A0E3729FCD       (      raakatu.asm):04188         L3232          fcb       $A0,$E3,$72,$9F,$CD ;           .
                      (      raakatu.asm):04189         ; Object_3C Object3C
2C8C 3C03             (      raakatu.asm):04190         L3237          fcb       $3C,$03             ;   Number=3C size=0003
2C8E 1D0080           (      raakatu.asm):04191         L3239          fcb       $1D,$00,$80         ;     room=1D scorePoints=00 bits=80 u.......
                      (      raakatu.asm):04192         ; ENDOF 20FF
                      (      raakatu.asm):04193         
                      (      raakatu.asm):04194         
                      (      raakatu.asm):04195         ;##GeneralCommands
2C91 0085BB0E85B8     (      raakatu.asm):04196         L323C          fcb       $00,$85,$BB,$0E,$85,$B8 ;   Command_0E_EXECUTE_LIST_WHILE_FAIL size=1464
2C97 0D2C             (      raakatu.asm):04197         L3242          fcb       $0D,$2C             ;     Command_0D_EXECUTE_LIST_WHILE_PASS size=44
2C99 0E08             (      raakatu.asm):04198         L3244          fcb       $0E,$08             ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=8
2C9B 0A01             (      raakatu.asm):04199         L3246          fcb       $0A,$01             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=01 phrase="01: NORTH *     *          *       "
2C9D 0A02             (      raakatu.asm):04200         L3248          fcb       $0A,$02             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=02 phrase="02: SOUTH *     *          *       "
2C9F 0A03             (      raakatu.asm):04201         L324A          fcb       $0A,$03             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=03 phrase="03: EAST *      *          *       "
2CA1 0A04             (      raakatu.asm):04202         L324C          fcb       $0A,$04             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=04 phrase="04: WEST *      *          *       "
2CA3 0E20             (      raakatu.asm):04203         L324E          fcb       $0E,$20             ;       Command_0E_EXECUTE_LIST_WHILE_FAIL size=32
2CA5 13               (      raakatu.asm):04204         L3250          fcb       $13                 ;         Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2CA6 0D1D             (      raakatu.asm):04205         L3251          fcb       $0D,$1D             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=29
2CA8 04               (      raakatu.asm):04206         L3253          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2CA9 195FBE5BB14B7BEB (      raakatu.asm):04207         L3254          fcb       $19,$5F,$BE,$5B,$B1,$4B,$7B,$EB,$99,$1B,$D0,$89 ;             THERE IS NO WAY TO GO THAT DIRECTION.
     991BD089
2CB5 1781158217734994 (      raakatu.asm):04208         L3260          fcb       $17,$81,$15,$82,$17,$73,$49,$94,$5A,$E6,$5F,$C0 ;             .
     5AE65FC0
2CC1 7A2E             (      raakatu.asm):04209         L326C          fcb       $7A,$2E             ;             .
2CC3 201D             (      raakatu.asm):04210         L326E          fcb       $20,$1D             ;           Command_20_CHECK_ACTIVE_OBJECT object=1D(USER)
2CC5 0B8583           (      raakatu.asm):04211         L3270          fcb       $0B,$85,$83         ;     Command_0B_SWITCH size=583
2CC8 0A05             (      raakatu.asm):04212         L3273          fcb       $0A,$05             ;       Command_0A_COMPARE_TO_PHRASE_FORM val=05 phrase="05: GET *       ..C.....   *       "
2CCA 21               (      raakatu.asm):04213         L3275          fcb       $21                 ;       IF_NOT_JUMP address=3297
2CCB 0E1F             (      raakatu.asm):04214         L3276          fcb       $0E,$1F             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=31
2CCD 0D19             (      raakatu.asm):04215         L3278          fcb       $0D,$19             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=25
2CCF 1A               (      raakatu.asm):04216         L327A          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2CD0 18               (      raakatu.asm):04217         L327B          fcb       $18                 ;             Command_18_CHECK_VAR_OBJECT_OWNED_BY_ACTIVE_OBJECT
2CD1 04               (      raakatu.asm):04218         L327C          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2CD2 13C7DE9414435EEF (      raakatu.asm):04219         L327D          fcb       $13,$C7,$DE,$94,$14,$43,$5E,$EF,$8D,$13,$47,$D3 ;               YOU ARE ALREADY CARRYING THE
     8D1347D3
2CDE 1483B3917A821745 (      raakatu.asm):04220         L3289          fcb       $14,$83,$B3,$91,$7A,$82,$17,$45 ;               .
2CE6 16               (      raakatu.asm):04221         L3291          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
2CE7 84               (      raakatu.asm):04222         L3292          fcb       $84                 ;             CommonCommand_84
2CE8 13               (      raakatu.asm):04223         L3293          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2CE9 83               (      raakatu.asm):04224         L3294          fcb       $83                 ;           CommonCommand_83
2CEA 14               (      raakatu.asm):04225         L3295          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2CEB 0C               (      raakatu.asm):04226         L3296          fcb       $0C                 ;             Command_0C_FAIL
2CEC 06               (      raakatu.asm):04227         L3297          fcb       $06                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=06 phrase="06: DROP *      ..C.....   *       "
2CED 0C               (      raakatu.asm):04228         L3298          fcb       $0C                 ;       IF_NOT_JUMP address=32A5
2CEE 0D0A             (      raakatu.asm):04229         L3299          fcb       $0D,$0A             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=10
2CF0 1A               (      raakatu.asm):04230         L329B          fcb       $1A                 ;           Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2CF1 10               (      raakatu.asm):04231         L329C          fcb       $10                 ;           Command_10_DROP_OBJECT
2CF2 04               (      raakatu.asm):04232         L329D          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2CF3 06F95B9FA69B5D   (      raakatu.asm):04233         L329E          fcb       $06,$F9,$5B,$9F,$A6,$9B,$5D ;             DROPPED. 
2CFA 08               (      raakatu.asm):04234         L32A5          fcb       $08                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=08 phrase="08: READ *      .....X..   *       "
2CFB 17               (      raakatu.asm):04235         L32A6          fcb       $17                 ;       IF_NOT_JUMP address=32BE
2CFC 0E15             (      raakatu.asm):04236         L32A7          fcb       $0E,$15             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=21
2CFE 13               (      raakatu.asm):04237         L32A9          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2CFF 0D12             (      raakatu.asm):04238         L32AA          fcb       $0D,$12             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=18
2D01 04               (      raakatu.asm):04239         L32AC          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D02 0E8974D3149B961B (      raakatu.asm):04240         L32AD          fcb       $0E,$89,$74,$D3,$14,$9B,$96,$1B,$A1,$63,$B1,$16 ;               HOW CAN YOU READ THE 
     A163B116
2D0E 58DB72           (      raakatu.asm):04241         L32B9          fcb       $58,$DB,$72         ;               .
2D11 11               (      raakatu.asm):04242         L32BC          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2D12 84               (      raakatu.asm):04243         L32BD          fcb       $84                 ;             CommonCommand_84
2D13 11               (      raakatu.asm):04244         L32BE          fcb       $11                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=11 phrase="11: OPEN *      u.......   *       "
2D14 16               (      raakatu.asm):04245         L32BF          fcb       $16                 ;       IF_NOT_JUMP address=32D6
2D15 0E14             (      raakatu.asm):04246         L32C0          fcb       $0E,$14             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=20
2D17 13               (      raakatu.asm):04247         L32C2          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2D18 0D11             (      raakatu.asm):04248         L32C3          fcb       $0D,$11             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=17
2D1A 04               (      raakatu.asm):04249         L32C5          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D1B 0DEB990FA0D31491 (      raakatu.asm):04250         L32C6          fcb       $0D,$EB,$99,$0F,$A0,$D3,$14,$91,$96,$F0,$A4,$82 ;               NO ONE CAN OPEN THE
     96F0A482
2D27 1745             (      raakatu.asm):04251         L32D2          fcb       $17,$45             ;               .
2D29 11               (      raakatu.asm):04252         L32D4          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2D2A 84               (      raakatu.asm):04253         L32D5          fcb       $84                 ;             CommonCommand_84
2D2B 12               (      raakatu.asm):04254         L32D6          fcb       $12                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=12 phrase="12: PULL *      u.......   *       "
2D2C 21               (      raakatu.asm):04255         L32D7          fcb       $21                 ;       IF_NOT_JUMP address=32F9
2D2D 0E1F             (      raakatu.asm):04256         L32D8          fcb       $0E,$1F             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=31
2D2F 13               (      raakatu.asm):04257         L32DA          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2D30 0D1C             (      raakatu.asm):04258         L32DB          fcb       $0D,$1C             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=28
2D32 04               (      raakatu.asm):04259         L32DD          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D33 1333D10915E69651 (      raakatu.asm):04260         L32DE          fcb       $13,$33,$D1,$09,$15,$E6,$96,$51,$18,$4E,$C2,$98 ;               WHY DON'T YOU LEAVE THE POOR
     184EC298
2D3F 5F565EDB7281A652 (      raakatu.asm):04261         L32EA          fcb       $5F,$56,$5E,$DB,$72,$81,$A6,$52 ;               .
2D47 11               (      raakatu.asm):04262         L32F2          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2D48 04               (      raakatu.asm):04263         L32F3          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D49 0449487F98       (      raakatu.asm):04264         L32F4          fcb       $04,$49,$48,$7F,$98 ;               ALONE.
2D4E 09               (      raakatu.asm):04265         L32F9          fcb       $09                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=09 phrase="09: ATTACK WITH ...P....   .v......"
2D4F 8137             (      raakatu.asm):04266         L32FA          fcb       $81,$37             ;       IF_NOT_JUMP address=3433
2D51 0E8134           (      raakatu.asm):04267         L32FC          fcb       $0E,$81,$34         ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=308
2D54 14               (      raakatu.asm):04268         L32FF          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2D55 1B               (      raakatu.asm):04269         L3300          fcb       $1B                 ;             Command_1B_SET_VAR_OBJECT_TO_SECOND_NOUN
2D56 14               (      raakatu.asm):04270         L3301          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2D57 0E03             (      raakatu.asm):04271         L3302          fcb       $0E,$03             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=3
2D59 0917             (      raakatu.asm):04272         L3304          fcb       $09,$17             ;               Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=17(Hands
2D5B 83               (      raakatu.asm):04273         L3306          fcb       $83                 ;               CommonCommand_83
2D5C 0E8129           (      raakatu.asm):04274         L3307          fcb       $0E,$81,$29         ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=297
2D5F 0D1F             (      raakatu.asm):04275         L330A          fcb       $0D,$1F             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=31
2D61 14               (      raakatu.asm):04276         L330C          fcb       $14                 ;               Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2D62 1540             (      raakatu.asm):04277         L330D          fcb       $15,$40             ;                 Command_15_CHECK_OBJECT_BITS bits=40 .v......
2D64 14               (      raakatu.asm):04278         L330F          fcb       $14                 ;               Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2D65 0917             (      raakatu.asm):04279         L3310          fcb       $09,$17             ;                 Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=17(Hands
2D67 04               (      raakatu.asm):04280         L3312          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D68 0CC7DED314E696AF (      raakatu.asm):04281         L3313          fcb       $0C,$C7,$DE,$D3,$14,$E6,$96,$AF,$15,$B3,$B3,$5F ;                 YOU CAN'T HURT THE
     15B3B35F
2D74 BE               (      raakatu.asm):04282         L331F          fcb       $BE                 ;                 .
2D75 11               (      raakatu.asm):04283         L3320          fcb       $11                 ;               Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2D76 04               (      raakatu.asm):04284         L3321          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D77 0656D11671DB72   (      raakatu.asm):04285         L3322          fcb       $06,$56,$D1,$16,$71,$DB,$72 ;                 WITH THE 
2D7E 12               (      raakatu.asm):04286         L3329          fcb       $12                 ;               Command_12_PRINT_SECOND_NOUN_SHORT_NAME
2D7F 84               (      raakatu.asm):04287         L332A          fcb       $84                 ;               CommonCommand_84
2D80 13               (      raakatu.asm):04288         L332B          fcb       $13                 ;             Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2D81 0D1A             (      raakatu.asm):04289         L332C          fcb       $0D,$1A             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=26
2D83 1A               (      raakatu.asm):04290         L332E          fcb       $1A                 ;               Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2D84 14               (      raakatu.asm):04291         L332F          fcb       $14                 ;               Command_14_EXECUTE_COMMAND_REVERSE_STATUS
2D85 1510             (      raakatu.asm):04292         L3330          fcb       $15,$10             ;                 Command_15_CHECK_OBJECT_BITS bits=10 ...P....
2D87 04               (      raakatu.asm):04293         L3332          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2D88 12737B775BD0B5C9 (      raakatu.asm):04294         L3333          fcb       $12,$73,$7B,$77,$5B,$D0,$B5,$C9,$9C,$36,$A0,$89 ;                 IT DOES NO GOOD TO ATTACK A
     9C36A089
2D94 17961445BDC383   (      raakatu.asm):04295         L333F          fcb       $17,$96,$14,$45,$BD,$C3,$83 ;                 .
2D9B 11               (      raakatu.asm):04296         L3346          fcb       $11                 ;               Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2D9C 84               (      raakatu.asm):04297         L3347          fcb       $84                 ;               CommonCommand_84
2D9D 0D80D7           (      raakatu.asm):04298         L3348          fcb       $0D,$80,$D7         ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=215
2DA0 1A               (      raakatu.asm):04299         L334B          fcb       $1A                 ;               Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2DA1 0B80D3           (      raakatu.asm):04300         L334C          fcb       $0B,$80,$D3         ;               Command_0B_SWITCH size=D3
2DA4 0909             (      raakatu.asm):04301         L334F          fcb       $09,$09             ;                 Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=09(Sword
2DA6 8099             (      raakatu.asm):04302         L3351          fcb       $80,$99             ;                 IF_NOT_JUMP address=33EC
2DA8 0B8096           (      raakatu.asm):04303         L3353          fcb       $0B,$80,$96         ;                   Command_0B_SWITCH size=96
2DAB 0552             (      raakatu.asm):04304         L3356          fcb       $05,$52             ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=52
2DAD 28               (      raakatu.asm):04305         L3358          fcb       $28                 ;                     IF_NOT_JUMP address=3381
2DAE 0D26             (      raakatu.asm):04306         L3359          fcb       $0D,$26             ;                       Command_0D_EXECUTE_LIST_WHILE_PASS size=38
2DB0 04               (      raakatu.asm):04307         L335B          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2DB1 174F457A79FBC06C (      raakatu.asm):04308         L335C          fcb       $17,$4F,$45,$7A,$79,$FB,$C0,$6C,$BE,$66,$C6,$04 ;                           A MIGHTY THRUST, BUT IT MISSES THE
     BE66C604
2DBD EE73C6737BD592B5 (      raakatu.asm):04309         L3368          fcb       $EE,$73,$C6,$73,$7B,$D5,$92,$B5,$B7,$82,$17,$45 ;                           .
     B7821745
2DC9 16               (      raakatu.asm):04310         L3374          fcb       $16                 ;                         Command_16_PRINT_VAR_NOUN_SHORT_NAME
2DCA 04               (      raakatu.asm):04311         L3375          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2DCB 0A7B504D45497A36 (      raakatu.asm):04312         L3376          fcb       $0A,$7B,$50,$4D,$45,$49,$7A,$36,$92,$21,$62 ;                           BY A KILOMETER!
     922162
2DD6 A4               (      raakatu.asm):04313         L3381          fcb       $A4                 ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=A4
2DD7 2D               (      raakatu.asm):04314         L3382          fcb       $2D                 ;                     IF_NOT_JUMP address=33B0
2DD8 0D2B             (      raakatu.asm):04315         L3383          fcb       $0D,$2B             ;                       Command_0D_EXECUTE_LIST_WHILE_PASS size=43
2DDA 04               (      raakatu.asm):04316         L3385          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2DDB 1C894E739EF5B3F5 (      raakatu.asm):04317         L3386          fcb       $1C,$89,$4E,$73,$9E,$F5,$B3,$F5,$72,$59,$15,$C2 ;                           BLOOD RUSHES FORTH AS YOU HAVE SLASHED THE
     725915C2
2DE7 B3951451184AC2CF (      raakatu.asm):04318         L3392          fcb       $B3,$95,$14,$51,$18,$4A,$C2,$CF,$49,$5E,$17,$5A ;                           .
     495E175A
2DF3 49F35F5FBE       (      raakatu.asm):04319         L339E          fcb       $49,$F3,$5F,$5F,$BE ;                           .
2DF8 16               (      raakatu.asm):04320         L33A3          fcb       $16                 ;                         Command_16_PRINT_VAR_NOUN_SHORT_NAME
2DF9 04               (      raakatu.asm):04321         L33A4          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2DFA 08837A5FBE9414EB (      raakatu.asm):04322         L33A5          fcb       $08,$83,$7A,$5F,$BE,$94,$14,$EB,$8F ;                           IN THE ARM! 
     8F
2E03 1D0A             (      raakatu.asm):04323         L33AE          fcb       $1D,$0A             ;                         Command_1D_ATTACK_OBJECT damage=0A
2E05 FD               (      raakatu.asm):04324         L33B0          fcb       $FD                 ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FD
2E06 20               (      raakatu.asm):04325         L33B1          fcb       $20                 ;                     IF_NOT_JUMP address=33D2
2E07 0D1E             (      raakatu.asm):04326         L33B2          fcb       $0D,$1E             ;                       Command_0D_EXECUTE_LIST_WHILE_PASS size=30
2E09 04               (      raakatu.asm):04327         L33B4          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E0A 1AC7DE6316C99743 (      raakatu.asm):04328         L33B5          fcb       $1A,$C7,$DE,$63,$16,$C9,$97,$43,$5E,$84,$15,$73 ;                           YOU MANAGE A GRAZING BLOW TO THE CHEST!
     5E841573
2E16 4AAB98894ED6CED6 (      raakatu.asm):04329         L33C1          fcb       $4A,$AB,$98,$89,$4E,$D6,$CE,$D6,$9C,$DB,$72,$1F ;                           .
     9CDB721F
2E22 54F1B9           (      raakatu.asm):04330         L33CD          fcb       $54,$F1,$B9         ;                           .
2E25 1D14             (      raakatu.asm):04331         L33D0          fcb       $1D,$14             ;                         Command_1D_ATTACK_OBJECT damage=14
2E27 FF               (      raakatu.asm):04332         L33D2          fcb       $FF                 ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
2E28 18               (      raakatu.asm):04333         L33D3          fcb       $18                 ;                     IF_NOT_JUMP address=33EC
2E29 0D16             (      raakatu.asm):04334         L33D4          fcb       $0D,$16             ;                       Command_0D_EXECUTE_LIST_WHILE_PASS size=22
2E2B 04               (      raakatu.asm):04335         L33D6          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E2C 124E45DDC344DB89 (      raakatu.asm):04336         L33D7          fcb       $12,$4E,$45,$DD,$C3,$44,$DB,$89,$8D,$89,$17,$82 ;                           A LUCKY BLOW TO THE HEART! 
     8D891782
2E38 174A5E945FABBB   (      raakatu.asm):04337         L33E3          fcb       $17,$4A,$5E,$94,$5F,$AB,$BB ;                           .
2E3F 1DFF             (      raakatu.asm):04338         L33EA          fcb       $1D,$FF             ;                         Command_1D_ATTACK_OBJECT damage=FF
2E41 17               (      raakatu.asm):04339         L33EC          fcb       $17                 ;                 Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=17(Hands
2E42 34               (      raakatu.asm):04340         L33ED          fcb       $34                 ;                 IF_NOT_JUMP address=3422
2E43 0B32             (      raakatu.asm):04341         L33EE          fcb       $0B,$32             ;                   Command_0B_SWITCH size=32
2E45 05AF             (      raakatu.asm):04342         L33F0          fcb       $05,$AF             ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=AF
2E47 14               (      raakatu.asm):04343         L33F2          fcb       $14                 ;                     IF_NOT_JUMP address=3407
2E48 04               (      raakatu.asm):04344         L33F3          fcb       $04                 ;                       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E49 1259453E7AEF161A (      raakatu.asm):04345         L33F4          fcb       $12,$59,$45,$3E,$7A,$EF,$16,$1A,$98,$90,$14,$1B ;                         A WILD PUNCH AND YOU MISS. 
     9890141B
2E55 581BA1D5925BBB   (      raakatu.asm):04346         L3400          fcb       $58,$1B,$A1,$D5,$92,$5B,$BB ;                         .
2E5C FF               (      raakatu.asm):04347         L3407          fcb       $FF                 ;                     Command_05_IS_LAST_RANDOM_LESS_THAN_OR_EQUAL value=FF
2E5D 19               (      raakatu.asm):04348         L3408          fcb       $19                 ;                     IF_NOT_JUMP address=3422
2E5E 0D17             (      raakatu.asm):04349         L3409          fcb       $0D,$17             ;                       Command_0D_EXECUTE_LIST_WHILE_PASS size=23
2E60 04               (      raakatu.asm):04350         L340B          fcb       $04                 ;                         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E61 13C7DEEF161A98F3 (      raakatu.asm):04351         L340C          fcb       $13,$C7,$DE,$EF,$16,$1A,$98,$F3,$5F,$8F,$73,$D0 ;                           YOU PUNCHED HIM IN THE HEAD!
     5F8F73D0
2E6D 1582174A5E865F21 (      raakatu.asm):04352         L3418          fcb       $15,$82,$17,$4A,$5E,$86,$5F,$21 ;                           .
2E75 1D03             (      raakatu.asm):04353         L3420          fcb       $1D,$03             ;                         Command_1D_ATTACK_OBJECT damage=03
2E77 0D0F             (      raakatu.asm):04354         L3422          fcb       $0D,$0F             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=15
2E79 04               (      raakatu.asm):04355         L3424          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E7A 025FBE           (      raakatu.asm):04356         L3425          fcb       $02,$5F,$BE         ;                 THE
2E7D 11               (      raakatu.asm):04357         L3428          fcb       $11                 ;               Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2E7E 04               (      raakatu.asm):04358         L3429          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E7F 084B7B92C5374917 (      raakatu.asm):04359         L342A          fcb       $08,$4B,$7B,$92,$C5,$37,$49,$17,$60 ;                 IS UNHARMED.
     60
2E88 0A               (      raakatu.asm):04360         L3433          fcb       $0A                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0A phrase="0A: LOOK *      *          *       "
2E89 01               (      raakatu.asm):04361         L3434          fcb       $01                 ;       IF_NOT_JUMP address=3436
2E8A 07               (      raakatu.asm):04362         L3435          fcb       $07                 ;         Command_07_PRINT_ROOM_DESCRIPTION
2E8B 15               (      raakatu.asm):04363         L3436          fcb       $15                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=15 phrase="15: EAT *       u.......   *       "
2E8C 29               (      raakatu.asm):04364         L3437          fcb       $29                 ;       IF_NOT_JUMP address=3461
2E8D 0E27             (      raakatu.asm):04365         L3438          fcb       $0E,$27             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=39
2E8F 13               (      raakatu.asm):04366         L343A          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2E90 0D24             (      raakatu.asm):04367         L343B          fcb       $0D,$24             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=36
2E92 04               (      raakatu.asm):04368         L343D          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2E93 0D805BF3235B4D4E (      raakatu.asm):04369         L343E          fcb       $0D,$80,$5B,$F3,$23,$5B,$4D,$4E,$B8,$F9,$8E,$82 ;               DON'T BE SILLY! THE
     B8F98E82
2E9F 1745             (      raakatu.asm):04370         L344A          fcb       $17,$45             ;               .
2EA1 11               (      raakatu.asm):04371         L344C          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2EA2 04               (      raakatu.asm):04372         L344D          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2EA3 1247D2C88BF32355 (      raakatu.asm):04373         L344E          fcb       $12,$47,$D2,$C8,$8B,$F3,$23,$55,$BD,$DB,$BD,$41 ;               WOULDN'T TASTE GOOD ANYWAY.
     BDDBBD41
2EAF 6E0358999B5F4A   (      raakatu.asm):04374         L345A          fcb       $6E,$03,$58,$99,$9B,$5F,$4A ;               .
2EB6 17               (      raakatu.asm):04375         L3461          fcb       $17                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=17 phrase="17: CLIMB *     u.......   *       "
2EB7 51               (      raakatu.asm):04376         L3462          fcb       $51                 ;       IF_NOT_JUMP address=34B4
2EB8 0E4F             (      raakatu.asm):04377         L3463          fcb       $0E,$4F             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=79
2EBA 13               (      raakatu.asm):04378         L3465          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2EBB 0D25             (      raakatu.asm):04379         L3466          fcb       $0D,$25             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=37
2EBD 1A               (      raakatu.asm):04380         L3468          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2EBE 1510             (      raakatu.asm):04381         L3469          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
2EC0 04               (      raakatu.asm):04382         L346B          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2EC1 0C467705A016BC90 (      raakatu.asm):04383         L346C          fcb       $0C,$46,$77,$05,$A0,$16,$BC,$90,$73,$D6,$83,$DB ;               I DON'T THINK THE 
     73D683DB
2ECD 72               (      raakatu.asm):04384         L3478          fcb       $72                 ;               .
2ECE 11               (      raakatu.asm):04385         L3479          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2ECF 04               (      raakatu.asm):04386         L347A          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2ED0 114ED1158A50BD15 (      raakatu.asm):04387         L347B          fcb       $11,$4E,$D1,$15,$8A,$50,$BD,$15,$58,$8E,$BE,$08 ;               WILL STAND STILL FORTHAT.
     588EBE08
2EDC 8ABEA056722E     (      raakatu.asm):04388         L3487          fcb       $8A,$BE,$A0,$56,$72,$2E ;               .
2EE2 0D25             (      raakatu.asm):04389         L348D          fcb       $0D,$25             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=37
2EE4 04               (      raakatu.asm):04390         L348F          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2EE5 12CF628B969B641B (      raakatu.asm):04391         L3490          fcb       $12,$CF,$62,$8B,$96,$9B,$64,$1B,$A1,$47,$55,$B3 ;               EVEN IF YOU COULD CLIMB THE
     A14755B3
2EF1 8BC354A3915FBE   (      raakatu.asm):04392         L349C          fcb       $8B,$C3,$54,$A3,$91,$5F,$BE ;               .
2EF8 11               (      raakatu.asm):04393         L34A3          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2EF9 04               (      raakatu.asm):04394         L34A4          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2EFA 0E737B47D2C88BF3 (      raakatu.asm):04395         L34A5          fcb       $0E,$73,$7B,$47,$D2,$C8,$8B,$F3,$23,$EE,$72,$1B ;               IT WOULDN'T HELP YOU.
     23EE721B
2F06 A33FA1           (      raakatu.asm):04396         L34B1          fcb       $A3,$3F,$A1         ;               .
2F09 16               (      raakatu.asm):04397         L34B4          fcb       $16                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=16 phrase="16: DROP OUT    *          u...A..."
2F0A 16               (      raakatu.asm):04398         L34B5          fcb       $16                 ;       IF_NOT_JUMP address=34CC
2F0B 0E14             (      raakatu.asm):04399         L34B6          fcb       $0E,$14             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=20
2F0D 13               (      raakatu.asm):04400         L34B8          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2F0E 0D11             (      raakatu.asm):04401         L34B9          fcb       $0D,$11             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=17
2F10 04               (      raakatu.asm):04402         L34BB          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F11 025FBE           (      raakatu.asm):04403         L34BC          fcb       $02,$5F,$BE         ;               THE
2F14 11               (      raakatu.asm):04404         L34BF          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2F15 04               (      raakatu.asm):04405         L34C0          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F16 0A4B7B069ABF14D3 (      raakatu.asm):04406         L34C1          fcb       $0A,$4B,$7B,$06,$9A,$BF,$14,$D3,$B2,$CF,$98 ;               IS NOT BURNING.
     B2CF98
2F21 18               (      raakatu.asm):04407         L34CC          fcb       $18                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=18 phrase="18: RUB *       u.......   *       "
2F22 35               (      raakatu.asm):04408         L34CD          fcb       $35                 ;       IF_NOT_JUMP address=3503
2F23 0E33             (      raakatu.asm):04409         L34CE          fcb       $0E,$33             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=51
2F25 13               (      raakatu.asm):04410         L34D0          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2F26 0D18             (      raakatu.asm):04411         L34D1          fcb       $0D,$18             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=24
2F28 1A               (      raakatu.asm):04412         L34D3          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2F29 1510             (      raakatu.asm):04413         L34D4          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
2F2B 04               (      raakatu.asm):04414         L34D6          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F2C 115BBE65BC9916F3 (      raakatu.asm):04415         L34D7          fcb       $11,$5B,$BE,$65,$BC,$99,$16,$F3,$17,$56,$DB,$CA ;               THAT'S NO WAY TO HURT THE
     1756DBCA
2F38 9C3EC6821745     (      raakatu.asm):04416         L34E3          fcb       $9C,$3E,$C6,$82,$17,$45 ;               .
2F3E 16               (      raakatu.asm):04417         L34E9          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
2F3F 84               (      raakatu.asm):04418         L34EA          fcb       $84                 ;             CommonCommand_84
2F40 0D16             (      raakatu.asm):04419         L34EB          fcb       $0D,$16             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=22
2F42 04               (      raakatu.asm):04420         L34ED          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F43 025FBE           (      raakatu.asm):04421         L34EE          fcb       $02,$5F,$BE         ;               THE
2F46 11               (      raakatu.asm):04422         L34F1          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2F47 04               (      raakatu.asm):04423         L34F2          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F48 0F818DCB87A59404 (      raakatu.asm):04424         L34F3          fcb       $0F,$81,$8D,$CB,$87,$A5,$94,$04,$71,$8E,$62,$23 ;               LOOKS MUCH BETTER NOW.
     718E6223
2F54 62099A2E         (      raakatu.asm):04425         L34FF          fcb       $62,$09,$9A,$2E     ;               .
2F58 0B               (      raakatu.asm):04426         L3503          fcb       $0B                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0B phrase="0B: LOOK AT     *          u......."
2F59 3A               (      raakatu.asm):04427         L3504          fcb       $3A                 ;       IF_NOT_JUMP address=353F
2F5A 0E38             (      raakatu.asm):04428         L3505          fcb       $0E,$38             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=56
2F5C 13               (      raakatu.asm):04429         L3507          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2F5D 0D19             (      raakatu.asm):04430         L3508          fcb       $0D,$19             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=25
2F5F 1A               (      raakatu.asm):04431         L350A          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
2F60 1504             (      raakatu.asm):04432         L350B          fcb       $15,$04             ;             Command_15_CHECK_OBJECT_BITS bits=04 .....X..
2F62 04               (      raakatu.asm):04433         L350D          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F63 123FB98262917AD5 (      raakatu.asm):04434         L350E          fcb       $12,$3F,$B9,$82,$62,$91,$7A,$D5,$15,$04,$18,$8E ;               SOMETHING IS WRITTEN ON THE
     1504188E
2F6F 7B836103A05FBE   (      raakatu.asm):04435         L351A          fcb       $7B,$83,$61,$03,$A0,$5F,$BE ;               .
2F76 16               (      raakatu.asm):04436         L3521          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
2F77 84               (      raakatu.asm):04437         L3522          fcb       $84                 ;             CommonCommand_84
2F78 0D1A             (      raakatu.asm):04438         L3523          fcb       $0D,$1A             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=26
2F7A 04               (      raakatu.asm):04439         L3525          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F7B 165FBE5DB1D0B502 (      raakatu.asm):04440         L3526          fcb       $16,$5F,$BE,$5D,$B1,$D0,$B5,$02,$A1,$91,$7A,$62 ;               THERE'S NOTHING SPECIAL ABOUT THE
     A1917A62
2F87 17DB5F3348B94673 (      raakatu.asm):04441         L3532          fcb       $17,$DB,$5F,$33,$48,$B9,$46,$73,$C6,$5F,$BE ;               .
     C65FBE
2F92 11               (      raakatu.asm):04442         L353D          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2F93 84               (      raakatu.asm):04443         L353E          fcb       $84                 ;             CommonCommand_84
2F94 0C               (      raakatu.asm):04444         L353F          fcb       $0C                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0C phrase="0C: LOOK UNDER  *          u......."
2F95 1A               (      raakatu.asm):04445         L3540          fcb       $1A                 ;       IF_NOT_JUMP address=355B
2F96 0E18             (      raakatu.asm):04446         L3541          fcb       $0E,$18             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=24
2F98 13               (      raakatu.asm):04447         L3543          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2F99 0D15             (      raakatu.asm):04448         L3544          fcb       $0D,$15             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=21
2F9B 04               (      raakatu.asm):04449         L3546          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2F9C 115FBE5DB1D0B502 (      raakatu.asm):04450         L3547          fcb       $11,$5F,$BE,$5D,$B1,$D0,$B5,$02,$A1,$91,$7A,$B0 ;               THERE'S NOTHING UNDER THE
     A1917AB0
2FA8 17F459821745     (      raakatu.asm):04451         L3553          fcb       $17,$F4,$59,$82,$17,$45 ;               .
2FAE 11               (      raakatu.asm):04452         L3559          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2FAF 84               (      raakatu.asm):04453         L355A          fcb       $84                 ;             CommonCommand_84
2FB0 10               (      raakatu.asm):04454         L355B          fcb       $10                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=10 phrase="10: LOOK IN     *          u......."
2FB1 18               (      raakatu.asm):04455         L355C          fcb       $18                 ;       IF_NOT_JUMP address=3575
2FB2 0E16             (      raakatu.asm):04456         L355D          fcb       $0E,$16             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=22
2FB4 13               (      raakatu.asm):04457         L355F          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2FB5 0D13             (      raakatu.asm):04458         L3560          fcb       $0D,$13             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=19
2FB7 04               (      raakatu.asm):04459         L3562          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2FB8 0F5FBE5DB1D0B502 (      raakatu.asm):04460         L3563          fcb       $0F,$5F,$BE,$5D,$B1,$D0,$B5,$02,$A1,$91,$7A,$D0 ;               THERE'S NOTHING IN THE
     A1917AD0
2FC4 15821745         (      raakatu.asm):04461         L356F          fcb       $15,$82,$17,$45     ;               .
2FC8 11               (      raakatu.asm):04462         L3573          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2FC9 84               (      raakatu.asm):04463         L3574          fcb       $84                 ;             CommonCommand_84
2FCA 1B               (      raakatu.asm):04464         L3575          fcb       $1B                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=1B phrase="1B: LOOK AROUND *          u......."
2FCB 20               (      raakatu.asm):04465         L3576          fcb       $20                 ;       IF_NOT_JUMP address=3597
2FCC 0E1E             (      raakatu.asm):04466         L3577          fcb       $0E,$1E             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=30
2FCE 13               (      raakatu.asm):04467         L3579          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2FCF 0D03             (      raakatu.asm):04468         L357A          fcb       $0D,$03             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=3
2FD1 0800             (      raakatu.asm):04469         L357C          fcb       $08,$00             ;             Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=00(NONE
2FD3 07               (      raakatu.asm):04470         L357E          fcb       $07                 ;             Command_07_PRINT_ROOM_DESCRIPTION
2FD4 0D16             (      raakatu.asm):04471         L357F          fcb       $0D,$16             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=22
2FD6 04               (      raakatu.asm):04472         L3581          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2FD7 125FBE5BB14B7B06 (      raakatu.asm):04473         L3582          fcb       $12,$5F,$BE,$5B,$B1,$4B,$7B,$06,$9A,$90,$73,$C3 ;               THERE IS NOTHING AROUND THE
     9A9073C3
2FE3 6A07B333985FBE   (      raakatu.asm):04474         L358E          fcb       $6A,$07,$B3,$33,$98,$5F,$BE ;               .
2FEA 11               (      raakatu.asm):04475         L3595          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
2FEB 84               (      raakatu.asm):04476         L3596          fcb       $84                 ;             CommonCommand_84
2FEC 1C               (      raakatu.asm):04477         L3597          fcb       $1C                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=1C phrase="1C: LOOK BEHIND *          u......."
2FED 34               (      raakatu.asm):04478         L3598          fcb       $34                 ;       IF_NOT_JUMP address=35CD
2FEE 0E32             (      raakatu.asm):04479         L3599          fcb       $0E,$32             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=50
2FF0 13               (      raakatu.asm):04480         L359B          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
2FF1 0D17             (      raakatu.asm):04481         L359C          fcb       $0D,$17             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=23
2FF3 0800             (      raakatu.asm):04482         L359E          fcb       $08,$00             ;             Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=00(NONE
2FF5 04               (      raakatu.asm):04483         L35A0          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
2FF6 135FBE5BB14B7B06 (      raakatu.asm):04484         L35A1          fcb       $13,$5F,$BE,$5B,$B1,$4B,$7B,$06,$9A,$90,$73,$C4 ;               THERE IS NOTHING BEHIND YOU.
     9A9073C4
3002 6AA3603398C7DE2E (      raakatu.asm):04485         L35AD          fcb       $6A,$A3,$60,$33,$98,$C7,$DE,$2E ;               .
300A 0D16             (      raakatu.asm):04486         L35B5          fcb       $0D,$16             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=22
300C 04               (      raakatu.asm):04487         L35B7          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
300D 125FBE5BB14B7B06 (      raakatu.asm):04488         L35B8          fcb       $12,$5F,$BE,$5B,$B1,$4B,$7B,$06,$9A,$90,$73,$C4 ;               THERE IS NOTHING BEHIND THE
     9A9073C4
3019 6AA36033985FBE   (      raakatu.asm):04489         L35C4          fcb       $6A,$A3,$60,$33,$98,$5F,$BE ;               .
3020 11               (      raakatu.asm):04490         L35CB          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3021 84               (      raakatu.asm):04491         L35CC          fcb       $84                 ;             CommonCommand_84
3022 21               (      raakatu.asm):04492         L35CD          fcb       $21                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=21 phrase="21: PLUGH *     *          *       "
3023 0A               (      raakatu.asm):04493         L35CE          fcb       $0A                 ;       IF_NOT_JUMP address=35D9
3024 04               (      raakatu.asm):04494         L35CF          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3025 08B56C8EC5EB72AB (      raakatu.asm):04495         L35D0          fcb       $08,$B5,$6C,$8E,$C5,$EB,$72,$AB,$BB ;           GESUNDHEIT! 
     BB
302E 22               (      raakatu.asm):04496         L35D9          fcb       $22                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=22 phrase="22: SCREAM *    *          *       "
302F 12               (      raakatu.asm):04497         L35DA          fcb       $12                 ;       IF_NOT_JUMP address=35ED
3030 04               (      raakatu.asm):04498         L35DB          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3031 105BE02760316041 (      raakatu.asm):04499         L35DC          fcb       $10,$5B,$E0,$27,$60,$31,$60,$41,$A0,$49,$A0,$89 ;           YYYEEEEEOOOOOOWWWWWWWW!!
     A049A089
303D D389D369CE       (      raakatu.asm):04500         L35E8          fcb       $D3,$89,$D3,$69,$CE ;           .
3042 23               (      raakatu.asm):04501         L35ED          fcb       $23                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=23 phrase="23: QUIT *      *          *       "
3043 05               (      raakatu.asm):04502         L35EE          fcb       $05                 ;       IF_NOT_JUMP address=35F4
3044 0D03             (      raakatu.asm):04503         L35EF          fcb       $0D,$03             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=3
3046 92               (      raakatu.asm):04504         L35F1          fcb       $92                 ;           CommonCommand_92
3047 26               (      raakatu.asm):04505         L35F2          fcb       $26                 ;           Command_26_PRINT_SCORE
3048 24               (      raakatu.asm):04506         L35F3          fcb       $24                 ;           Command_24_ENDLESS_LOOP
3049 2C               (      raakatu.asm):04507         L35F4          fcb       $2C                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=2C phrase="2C: SCORE *     *          *       "
304A 04               (      raakatu.asm):04508         L35F5          fcb       $04                 ;       IF_NOT_JUMP address=35FA
304B 0D02             (      raakatu.asm):04509         L35F6          fcb       $0D,$02             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=2
304D 92               (      raakatu.asm):04510         L35F8          fcb       $92                 ;           CommonCommand_92
304E 26               (      raakatu.asm):04511         L35F9          fcb       $26                 ;           Command_26_PRINT_SCORE
304F 3E               (      raakatu.asm):04512         L35FA          fcb       $3E                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=3E phrase="??"
3050 01               (      raakatu.asm):04513         L35FB          fcb       $01                 ;       IF_NOT_JUMP address=35FD
3051 27               (      raakatu.asm):04514         L35FC          fcb       $27                 ;         Command_27_??_UNKNOWN_COMMAND_??
3052 3F               (      raakatu.asm):04515         L35FD          fcb       $3F                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=3F phrase="??"
3053 01               (      raakatu.asm):04516         L35FE          fcb       $01                 ;       IF_NOT_JUMP address=3600
3054 28               (      raakatu.asm):04517         L35FF          fcb       $28                 ;         Command_28_??_UNKNOWN_COMMAND_??
3055 25               (      raakatu.asm):04518         L3600          fcb       $25                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=25 phrase="25: LEAVE *     *          *       "
3056 0D               (      raakatu.asm):04519         L3601          fcb       $0D                 ;       IF_NOT_JUMP address=360F
3057 04               (      raakatu.asm):04520         L3602          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3058 0B03C07B14945AE6 (      raakatu.asm):04521         L3603          fcb       $0B,$03,$C0,$7B,$14,$94,$5A,$E6,$5F,$C0,$7A,$2E ;           TRY A DIRECTION.
     5FC07A2E
3064 26               (      raakatu.asm):04522         L360F          fcb       $26                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=26 phrase="26: GO AROUND   *          u......."
3065 24               (      raakatu.asm):04523         L3610          fcb       $24                 ;       IF_NOT_JUMP address=3635
3066 0E22             (      raakatu.asm):04524         L3611          fcb       $0E,$22             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=34
3068 13               (      raakatu.asm):04525         L3613          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
3069 0D17             (      raakatu.asm):04526         L3614          fcb       $0D,$17             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=23
306B 1A               (      raakatu.asm):04527         L3616          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
306C 1510             (      raakatu.asm):04528         L3617          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
306E 04               (      raakatu.asm):04529         L3619          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
306F 025FBE           (      raakatu.asm):04530         L361A          fcb       $02,$5F,$BE         ;               THE
3072 11               (      raakatu.asm):04531         L361D          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3073 04               (      raakatu.asm):04532         L361E          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3074 0D40D2F323F68B51 (      raakatu.asm):04533         L361F          fcb       $0D,$40,$D2,$F3,$23,$F6,$8B,$51,$18,$52,$C2,$65 ;               WON'T LET YOU PASS!
     1852C265
3080 4921             (      raakatu.asm):04534         L362B          fcb       $49,$21             ;               .
3082 04               (      raakatu.asm):04535         L362D          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3083 06099AFA177049   (      raakatu.asm):04536         L362E          fcb       $06,$09,$9A,$FA,$17,$70,$49 ;             NOW WHAT?
308A 3D               (      raakatu.asm):04537         L3635          fcb       $3D                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=3D phrase="3D: GO TO       *          u......."
308B 01               (      raakatu.asm):04538         L3636          fcb       $01                 ;       IF_NOT_JUMP address=3638
308C 94               (      raakatu.asm):04539         L3637          fcb       $94                 ;         CommonCommand_94
308D 27               (      raakatu.asm):04540         L3638          fcb       $27                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=27 phrase="27: KICK *      u.......   *       "
308E 0E               (      raakatu.asm):04541         L3639          fcb       $0E                 ;       IF_NOT_JUMP address=3648
308F 0E0C             (      raakatu.asm):04542         L363A          fcb       $0E,$0C             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=12
3091 13               (      raakatu.asm):04543         L363C          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
3092 04               (      raakatu.asm):04544         L363D          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3093 0925A1AB703B9577 (      raakatu.asm):04545         L363E          fcb       $09,$25,$A1,$AB,$70,$3B,$95,$77,$BF,$21 ;             OUCH! MY TOE!
     BF21
309D 28               (      raakatu.asm):04546         L3648          fcb       $28                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=28 phrase="28: FEED WITH   ...P....   u......."
309E 0A               (      raakatu.asm):04547         L3649          fcb       $0A                 ;       IF_NOT_JUMP address=3654
309F 0E08             (      raakatu.asm):04548         L364A          fcb       $0E,$08             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=8
30A1 13               (      raakatu.asm):04549         L364C          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30A2 0D04             (      raakatu.asm):04550         L364D          fcb       $0D,$04             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=4
30A4 1A               (      raakatu.asm):04551         L364F          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
30A5 1510             (      raakatu.asm):04552         L3650          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
30A7 96               (      raakatu.asm):04553         L3652          fcb       $96                 ;             CommonCommand_96
30A8 97               (      raakatu.asm):04554         L3653          fcb       $97                 ;           CommonCommand_97
30A9 29               (      raakatu.asm):04555         L3654          fcb       $29                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=29 phrase="29: FEED TO     u.......   ...P...."
30AA 0A               (      raakatu.asm):04556         L3655          fcb       $0A                 ;       IF_NOT_JUMP address=3660
30AB 0E08             (      raakatu.asm):04557         L3656          fcb       $0E,$08             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=8
30AD 13               (      raakatu.asm):04558         L3658          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30AE 0D04             (      raakatu.asm):04559         L3659          fcb       $0D,$04             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=4
30B0 1B               (      raakatu.asm):04560         L365B          fcb       $1B                 ;             Command_1B_SET_VAR_OBJECT_TO_SECOND_NOUN
30B1 1510             (      raakatu.asm):04561         L365C          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
30B3 96               (      raakatu.asm):04562         L365E          fcb       $96                 ;             CommonCommand_96
30B4 97               (      raakatu.asm):04563         L365F          fcb       $97                 ;           CommonCommand_97
30B5 2F               (      raakatu.asm):04564         L3660          fcb       $2F                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=2F phrase="2F: WAIT *      *          *       "
30B6 07               (      raakatu.asm):04565         L3661          fcb       $07                 ;       IF_NOT_JUMP address=3669
30B7 04               (      raakatu.asm):04566         L3662          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
30B8 059B2957C63E     (      raakatu.asm):04567         L3663          fcb       $05,$9B,$29,$57,$C6,$3E ;           <PAUSE>
30BE 2D               (      raakatu.asm):04568         L3669          fcb       $2D                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=2D phrase="2D: PULL UP     *          u......."
30BF 09               (      raakatu.asm):04569         L366A          fcb       $09                 ;       IF_NOT_JUMP address=3674
30C0 0E07             (      raakatu.asm):04570         L366B          fcb       $0E,$07             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=7
30C2 13               (      raakatu.asm):04571         L366D          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30C3 0D02             (      raakatu.asm):04572         L366E          fcb       $0D,$02             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=2
30C5 1A               (      raakatu.asm):04573         L3670          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
30C6 83               (      raakatu.asm):04574         L3671          fcb       $83                 ;             CommonCommand_83
30C7 14               (      raakatu.asm):04575         L3672          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
30C8 0C               (      raakatu.asm):04576         L3673          fcb       $0C                 ;             Command_0C_FAIL
30C9 33               (      raakatu.asm):04577         L3674          fcb       $33                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=33 phrase="??"
30CA 04               (      raakatu.asm):04578         L3675          fcb       $04                 ;       IF_NOT_JUMP address=367A
30CB 0E02             (      raakatu.asm):04579         L3676          fcb       $0E,$02             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=2
30CD 13               (      raakatu.asm):04580         L3678          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30CE 98               (      raakatu.asm):04581         L3679          fcb       $98                 ;           CommonCommand_98
30CF 34               (      raakatu.asm):04582         L367A          fcb       $34                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=34 phrase="34: JUMP OVER   *          u......."
30D0 04               (      raakatu.asm):04583         L367B          fcb       $04                 ;       IF_NOT_JUMP address=3680
30D1 0E02             (      raakatu.asm):04584         L367C          fcb       $0E,$02             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=2
30D3 13               (      raakatu.asm):04585         L367E          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30D4 98               (      raakatu.asm):04586         L367F          fcb       $98                 ;           CommonCommand_98
30D5 36               (      raakatu.asm):04587         L3680          fcb       $36                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
30D6 17               (      raakatu.asm):04588         L3681          fcb       $17                 ;       IF_NOT_JUMP address=3699
30D7 0E15             (      raakatu.asm):04589         L3682          fcb       $0E,$15             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=21
30D9 13               (      raakatu.asm):04590         L3684          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30DA 0D12             (      raakatu.asm):04591         L3685          fcb       $0D,$12             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=18
30DC 04               (      raakatu.asm):04592         L3687          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
30DD 0EC7DED314E69677 (      raakatu.asm):04593         L3688          fcb       $0E,$C7,$DE,$D3,$14,$E6,$96,$77,$15,$0B,$BC,$96 ;               YOU CAN'T GET IN THE 
     150BBC96
30E9 96DB72           (      raakatu.asm):04594         L3694          fcb       $96,$DB,$72         ;               .
30EC 11               (      raakatu.asm):04595         L3697          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
30ED 84               (      raakatu.asm):04596         L3698          fcb       $84                 ;             CommonCommand_84
30EE 37               (      raakatu.asm):04597         L3699          fcb       $37                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=37 phrase="37: CLIMB OUT   *          *       "
30EF 15               (      raakatu.asm):04598         L369A          fcb       $15                 ;       IF_NOT_JUMP address=36B0
30F0 0E13             (      raakatu.asm):04599         L369B          fcb       $0E,$13             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=19
30F2 13               (      raakatu.asm):04600         L369D          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
30F3 0D10             (      raakatu.asm):04601         L369E          fcb       $0D,$10             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=16
30F5 04               (      raakatu.asm):04602         L36A0          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
30F6 0CC7DE941485610B (      raakatu.asm):04603         L36A1          fcb       $0C,$C7,$DE,$94,$14,$85,$61,$0B,$BC,$96,$96,$DB ;               YOU AREN'T IN THE 
     BC9696DB
3102 72               (      raakatu.asm):04604         L36AD          fcb       $72                 ;               .
3103 11               (      raakatu.asm):04605         L36AE          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3104 84               (      raakatu.asm):04606         L36AF          fcb       $84                 ;             CommonCommand_84
3105 38               (      raakatu.asm):04607         L36B0          fcb       $38                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=38 phrase="38: CLIMB UNDER *          u......."
3106 20               (      raakatu.asm):04608         L36B1          fcb       $20                 ;       IF_NOT_JUMP address=36D2
3107 0E1E             (      raakatu.asm):04609         L36B2          fcb       $0E,$1E             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=30
3109 13               (      raakatu.asm):04610         L36B4          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
310A 0D1B             (      raakatu.asm):04611         L36B5          fcb       $0D,$1B             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=27
310C 04               (      raakatu.asm):04612         L36B7          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
310D 175FBE5BB14B7B06 (      raakatu.asm):04613         L36B8          fcb       $17,$5F,$BE,$5B,$B1,$4B,$7B,$06,$9A,$30,$15,$29 ;               THERE IS NOT ENOUGH ROOM UNDER THE
     9A301529
3119 A114713FA0B017F4 (      raakatu.asm):04614         L36C4          fcb       $A1,$14,$71,$3F,$A0,$B0,$17,$F4,$59,$82,$17,$45 ;               .
     59821745
3125 11               (      raakatu.asm):04615         L36D0          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3126 84               (      raakatu.asm):04616         L36D1          fcb       $84                 ;             CommonCommand_84
3127 39               (      raakatu.asm):04617         L36D2          fcb       $39                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=39 phrase="39: THROW IN    u.......   u......."
3128 1D               (      raakatu.asm):04618         L36D3          fcb       $1D                 ;       IF_NOT_JUMP address=36F1
3129 0E1B             (      raakatu.asm):04619         L36D4          fcb       $0E,$1B             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=27
312B 13               (      raakatu.asm):04620         L36D6          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
312C 0D18             (      raakatu.asm):04621         L36D7          fcb       $0D,$18             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=24
312E 04               (      raakatu.asm):04622         L36D9          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
312F 16C7DEFB17F38C58 (      raakatu.asm):04623         L36DA          fcb       $16,$C7,$DE,$FB,$17,$F3,$8C,$58,$72,$56,$5E,$D2 ;               YOU WILL HAVE TO PUT IT IN THERE.
     72565ED2
313B 9C73C6737B837A5F (      raakatu.asm):04624         L36E6          fcb       $9C,$73,$C6,$73,$7B,$83,$7A,$5F,$BE,$7F,$B1 ;               .
     BE7FB1
3146 3A               (      raakatu.asm):04625         L36F1          fcb       $3A                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=3A phrase="3A: OPEN WITH   u.......   u......."
3147 1E               (      raakatu.asm):04626         L36F2          fcb       $1E                 ;       IF_NOT_JUMP address=3711
3148 0E1C             (      raakatu.asm):04627         L36F3          fcb       $0E,$1C             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=28
314A 13               (      raakatu.asm):04628         L36F5          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
314B 0D19             (      raakatu.asm):04629         L36F6          fcb       $0D,$19             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=25
314D 04               (      raakatu.asm):04630         L36F8          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
314E 0CC7DED314E696C2 (      raakatu.asm):04631         L36F9          fcb       $0C,$C7,$DE,$D3,$14,$E6,$96,$C2,$16,$83,$61,$5F ;               YOU CAN'T OPEN THE
     1683615F
315A BE               (      raakatu.asm):04632         L3705          fcb       $BE                 ;               .
315B 11               (      raakatu.asm):04633         L3706          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
315C 04               (      raakatu.asm):04634         L3707          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
315D 0656D11671DB72   (      raakatu.asm):04635         L3708          fcb       $06,$56,$D1,$16,$71,$DB,$72 ;               WITH THE 
3164 12               (      raakatu.asm):04636         L370F          fcb       $12                 ;             Command_12_PRINT_SECOND_NOUN_SHORT_NAME
3165 84               (      raakatu.asm):04637         L3710          fcb       $84                 ;             CommonCommand_84
3166 0D               (      raakatu.asm):04638         L3711          fcb       $0D                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0D phrase="0D: THROW AT    .v......   ...P...."
3167 34               (      raakatu.asm):04639         L3712          fcb       $34                 ;       IF_NOT_JUMP address=3747
3168 0E32             (      raakatu.asm):04640         L3713          fcb       $0E,$32             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=50
316A 0D2E             (      raakatu.asm):04641         L3715          fcb       $0D,$2E             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=46
316C 1A               (      raakatu.asm):04642         L3717          fcb       $1A                 ;             Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
316D 83               (      raakatu.asm):04643         L3718          fcb       $83                 ;             CommonCommand_83
316E 0E2A             (      raakatu.asm):04644         L3719          fcb       $0E,$2A             ;             Command_0E_EXECUTE_LIST_WHILE_FAIL size=42
3170 0D27             (      raakatu.asm):04645         L371B          fcb       $0D,$27             ;               Command_0D_EXECUTE_LIST_WHILE_PASS size=39
3172 0E07             (      raakatu.asm):04646         L371D          fcb       $0E,$07             ;                 Command_0E_EXECUTE_LIST_WHILE_FAIL size=7
3174 14               (      raakatu.asm):04647         L371F          fcb       $14                 ;                   Command_14_EXECUTE_COMMAND_REVERSE_STATUS
3175 1510             (      raakatu.asm):04648         L3720          fcb       $15,$10             ;                     Command_15_CHECK_OBJECT_BITS bits=10 ...P....
3177 1B               (      raakatu.asm):04649         L3722          fcb       $1B                 ;                   Command_1B_SET_VAR_OBJECT_TO_SECOND_NOUN
3178 14               (      raakatu.asm):04650         L3723          fcb       $14                 ;                   Command_14_EXECUTE_COMMAND_REVERSE_STATUS
3179 1540             (      raakatu.asm):04651         L3724          fcb       $15,$40             ;                     Command_15_CHECK_OBJECT_BITS bits=40 .v......
317B 04               (      raakatu.asm):04652         L3726          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
317C 025FBE           (      raakatu.asm):04653         L3727          fcb       $02,$5F,$BE         ;                   THE
317F 11               (      raakatu.asm):04654         L372A          fcb       $11                 ;                 Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3180 04               (      raakatu.asm):04655         L372B          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3181 14074F1798CAB537 (      raakatu.asm):04656         L372C          fcb       $14,$07,$4F,$17,$98,$CA,$B5,$37,$49,$F5,$8B,$D3 ;                   BOUNCES HARMLESSLY OFF OF THE 
     49F58BD3
318D B8B81691649664DB (      raakatu.asm):04657         L3738          fcb       $B8,$B8,$16,$91,$64,$96,$64,$DB,$72 ;                   .
     72
3196 12               (      raakatu.asm):04658         L3741          fcb       $12                 ;                 Command_12_PRINT_SECOND_NOUN_SHORT_NAME
3197 84               (      raakatu.asm):04659         L3742          fcb       $84                 ;                 CommonCommand_84
3198 10               (      raakatu.asm):04660         L3743          fcb       $10                 ;                 Command_10_DROP_OBJECT
3199 13               (      raakatu.asm):04661         L3744          fcb       $13                 ;               Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
319A 14               (      raakatu.asm):04662         L3745          fcb       $14                 ;           Command_14_EXECUTE_COMMAND_REVERSE_STATUS
319B 0C               (      raakatu.asm):04663         L3746          fcb       $0C                 ;             Command_0C_FAIL
319C 0E               (      raakatu.asm):04664         L3747          fcb       $0E                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0E phrase="0E: THROW TO    u.......   ...P...."
319D 39               (      raakatu.asm):04665         L3748          fcb       $39                 ;       IF_NOT_JUMP address=3782
319E 0E37             (      raakatu.asm):04666         L3749          fcb       $0E,$37             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=55
31A0 0D1B             (      raakatu.asm):04667         L374B          fcb       $0D,$1B             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=27
31A2 1B               (      raakatu.asm):04668         L374D          fcb       $1B                 ;             Command_1B_SET_VAR_OBJECT_TO_SECOND_NOUN
31A3 14               (      raakatu.asm):04669         L374E          fcb       $14                 ;             Command_14_EXECUTE_COMMAND_REVERSE_STATUS
31A4 1510             (      raakatu.asm):04670         L374F          fcb       $15,$10             ;               Command_15_CHECK_OBJECT_BITS bits=10 ...P....
31A6 04               (      raakatu.asm):04671         L3751          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31A7 025FBE           (      raakatu.asm):04672         L3752          fcb       $02,$5F,$BE         ;               THE
31AA 12               (      raakatu.asm):04673         L3755          fcb       $12                 ;             Command_12_PRINT_SECOND_NOUN_SHORT_NAME
31AB 04               (      raakatu.asm):04674         L3756          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31AC 104B7B069A8514B2 (      raakatu.asm):04675         L3757          fcb       $10,$4B,$7B,$06,$9A,$85,$14,$B2,$53,$90,$BE,$C9 ;               IS NOT ACCEPTING GIFTS. 
     5390BEC9
31B8 6A5E795BBB       (      raakatu.asm):04676         L3763          fcb       $6A,$5E,$79,$5B,$BB ;               .
31BD 13               (      raakatu.asm):04677         L3768          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
31BE 0D17             (      raakatu.asm):04678         L3769          fcb       $0D,$17             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=23
31C0 04               (      raakatu.asm):04679         L376B          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31C1 025FBE           (      raakatu.asm):04680         L376C          fcb       $02,$5F,$BE         ;               THE
31C4 12               (      raakatu.asm):04681         L376F          fcb       $12                 ;             Command_12_PRINT_SECOND_NOUN_SHORT_NAME
31C5 04               (      raakatu.asm):04682         L3770          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31C6 10607BF323D546EE (      raakatu.asm):04683         L3771          fcb       $10,$60,$7B,$F3,$23,$D5,$46,$EE,$61,$91,$7A,$BC ;               ISN'T ACCEPTING BRIBES. 
     61917ABC
31D2 14AF785BBB       (      raakatu.asm):04684         L377D          fcb       $14,$AF,$78,$5B,$BB ;               .
31D7 0F               (      raakatu.asm):04685         L3782          fcb       $0F                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=0F phrase="0F: DROP IN     u.......   u......."
31D8 19               (      raakatu.asm):04686         L3783          fcb       $19                 ;       IF_NOT_JUMP address=379D
31D9 0E17             (      raakatu.asm):04687         L3784          fcb       $0E,$17             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=23
31DB 13               (      raakatu.asm):04688         L3786          fcb       $13                 ;           Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
31DC 0D14             (      raakatu.asm):04689         L3787          fcb       $0D,$14             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=20
31DE 04               (      raakatu.asm):04690         L3789          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31DF 025FBE           (      raakatu.asm):04691         L378A          fcb       $02,$5F,$BE         ;               THE
31E2 11               (      raakatu.asm):04692         L378D          fcb       $11                 ;             Command_11_PRINT_FIRST_NOUN_SHORT_NAME
31E3 04               (      raakatu.asm):04693         L378E          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
31E4 0B40D2F3231667D0 (      raakatu.asm):04694         L378F          fcb       $0B,$40,$D2,$F3,$23,$16,$67,$D0,$15,$82,$17,$45 ;               WON'T FIT IN THE
     15821745
31F0 12               (      raakatu.asm):04695         L379B          fcb       $12                 ;             Command_12_PRINT_SECOND_NOUN_SHORT_NAME
31F1 84               (      raakatu.asm):04696         L379C          fcb       $84                 ;             CommonCommand_84
31F2 14               (      raakatu.asm):04697         L379D          fcb       $14                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=14 phrase="14: LIGHT WITH  u...A...   u...A..."
31F3 3B               (      raakatu.asm):04698         L379E          fcb       $3B                 ;       IF_NOT_JUMP address=37DA
31F4 0D39             (      raakatu.asm):04699         L379F          fcb       $0D,$39             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=57
31F6 1B               (      raakatu.asm):04700         L37A1          fcb       $1B                 ;           Command_1B_SET_VAR_OBJECT_TO_SECOND_NOUN
31F7 83               (      raakatu.asm):04701         L37A2          fcb       $83                 ;           CommonCommand_83
31F8 0E35             (      raakatu.asm):04702         L37A3          fcb       $0E,$35             ;           Command_0E_EXECUTE_LIST_WHILE_FAIL size=53
31FA 0D18             (      raakatu.asm):04703         L37A5          fcb       $0D,$18             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=24
31FC 1A               (      raakatu.asm):04704         L37A7          fcb       $1A                 ;               Command_1A_SET_VAR_OBJECT_TO_FIRST_NOUN
31FD 1508             (      raakatu.asm):04705         L37A8          fcb       $15,$08             ;               Command_15_CHECK_OBJECT_BITS bits=08 ....A...
31FF 0E04             (      raakatu.asm):04706         L37AA          fcb       $0E,$04             ;               Command_0E_EXECUTE_LIST_WHILE_FAIL size=4
3201 0912             (      raakatu.asm):04707         L37AC          fcb       $09,$12             ;                 Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=12(LitCandle
3203 0914             (      raakatu.asm):04708         L37AE          fcb       $09,$14             ;                 Command_09_COMPARE_OBJECT_TO_SECOND_NOUN object=14(LitLamp
3205 0E0D             (      raakatu.asm):04709         L37B0          fcb       $0E,$0D             ;               Command_0E_EXECUTE_LIST_WHILE_FAIL size=13
3207 13               (      raakatu.asm):04710         L37B2          fcb       $13                 ;                 Command_13_PROCESS_PHRASE_BY_ROOM_OR_FIRST_OR_SECOND
3208 04               (      raakatu.asm):04711         L37B3          fcb       $04                 ;                 Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3209 0A737B40D2F323F4 (      raakatu.asm):04712         L37B4          fcb       $0A,$73,$7B,$40,$D2,$F3,$23,$F4,$4F,$1B,$9C ;                   IT WON'T BURN. 
     4F1B9C
3214 0D19             (      raakatu.asm):04713         L37BF          fcb       $0D,$19             ;             Command_0D_EXECUTE_LIST_WHILE_PASS size=25
3216 04               (      raakatu.asm):04714         L37C1          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3217 0CC7DED314E696BF (      raakatu.asm):04715         L37C2          fcb       $0C,$C7,$DE,$D3,$14,$E6,$96,$BF,$14,$C3,$B2,$5F ;                 YOU CAN'T BURN THE
     14C3B25F
3223 BE               (      raakatu.asm):04716         L37CE          fcb       $BE                 ;                 .
3224 11               (      raakatu.asm):04717         L37CF          fcb       $11                 ;               Command_11_PRINT_FIRST_NOUN_SHORT_NAME
3225 04               (      raakatu.asm):04718         L37D0          fcb       $04                 ;               Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3226 0656D11671DB72   (      raakatu.asm):04719         L37D1          fcb       $06,$56,$D1,$16,$71,$DB,$72 ;                 WITH THE 
322D 12               (      raakatu.asm):04720         L37D8          fcb       $12                 ;               Command_12_PRINT_SECOND_NOUN_SHORT_NAME
322E 84               (      raakatu.asm):04721         L37D9          fcb       $84                 ;               CommonCommand_84
322F 07               (      raakatu.asm):04722         L37DA          fcb       $07                 ;       Command_0A_COMPARE_TO_PHRASE_FORM val=07 phrase="07: INVENT *    *          *       "
3230 1A               (      raakatu.asm):04723         L37DB          fcb       $1A                 ;       IF_NOT_JUMP address=37F6
3231 0D18             (      raakatu.asm):04724         L37DC          fcb       $0D,$18             ;         Command_0D_EXECUTE_LIST_WHILE_PASS size=24
3233 04               (      raakatu.asm):04725         L37DE          fcb       $04                 ;           Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3234 15C7DE9414455E3C (      raakatu.asm):04726         L37DF          fcb       $15,$C7,$DE,$94,$14,$45,$5E,$3C,$49,$D0,$DD,$D6 ;             YOU ARE CARRYING THE FOLLOWING:
     49D0DDD6
3240 6ADB72FE67898D91 (      raakatu.asm):04727         L37EB          fcb       $6A,$DB,$72,$FE,$67,$89,$8D,$91,$7A,$3A ;             .
     7A3A
324A 06               (      raakatu.asm):04728         L37F5          fcb       $06                 ;           Command_06_PRINT_INVENTORY
324B 04               (      raakatu.asm):04729         L37F6          fcb       $04                 ;     Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
324C 020000           (      raakatu.asm):04730         L37F7          fcb       $02,$00,$00         ;       ???
                      (      raakatu.asm):04731         ; ENDOF 323C
                      (      raakatu.asm):04732         
                      (      raakatu.asm):04733         ;##HelperCommands
324F 00842C           (      raakatu.asm):04734         L37FA          fcb       $00,$84,$2C         ; Script list size=042C
3252 8163             (      raakatu.asm):04735         L37FD          fcb       $81,$63             ;   Script number=81 size=042C
3254 0D61             (      raakatu.asm):04736         L37FF          fcb       $0D,$61             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=97
3256 1F               (      raakatu.asm):04737         L3801          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
3257 10C7DEAF23FF1417 (      raakatu.asm):04738         L3802          fcb       $10,$C7,$DE,$AF,$23,$FF,$14,$17,$47,$8C,$17,$43 ;           YOU'RE DEAD. TRY AGAIN. 
     478C1743
3263 DB0B6C1B9C       (      raakatu.asm):04739         L380E          fcb       $DB,$0B,$6C,$1B,$9C ;           .
3268 95               (      raakatu.asm):04740         L3813          fcb       $95                 ;         CommonCommand_95
3269 170181           (      raakatu.asm):04741         L3814          fcb       $17,$01,$81         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=01(Object1) location=81
326C 170584           (      raakatu.asm):04742         L3817          fcb       $17,$05,$84         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=05(Food) location=84
326F 170688           (      raakatu.asm):04743         L381A          fcb       $17,$06,$88         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=06(StatueEast) location=88
3272 170700           (      raakatu.asm):04744         L381D          fcb       $17,$07,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=07(StatueWest) location=00
3275 17088C           (      raakatu.asm):04745         L3820          fcb       $17,$08,$8C         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=08(GoldRing) location=8C
3278 1709A1           (      raakatu.asm):04746         L3823          fcb       $17,$09,$A1         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=09(Sword) location=A1
327B 170A8E           (      raakatu.asm):04747         L3826          fcb       $17,$0A,$8E         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=0A(StoneGargoyle) location=8E
327E 170C95           (      raakatu.asm):04748         L3829          fcb       $17,$0C,$95         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=0C(Idol) location=95
3281 170E91           (      raakatu.asm):04749         L382C          fcb       $17,$0E,$91         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=0E(UnpulledLever) location=91
3284 170F00           (      raakatu.asm):04750         L382F          fcb       $17,$0F,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=0F(PulledLever) location=00
3287 171192           (      raakatu.asm):04751         L3832          fcb       $17,$11,$92         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=11(UnlitCandle) location=92
328A 171200           (      raakatu.asm):04752         L3835          fcb       $17,$12,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=12(LitCandle) location=00
328D 1714A0           (      raakatu.asm):04753         L3838          fcb       $17,$14,$A0         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=14(LitLamp) location=A0
3290 171500           (      raakatu.asm):04754         L383B          fcb       $17,$15,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=15(LiveSerpent) location=00
3293 171600           (      raakatu.asm):04755         L383E          fcb       $17,$16,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=16(DeadSerpent) location=00
3296 17189C           (      raakatu.asm):04756         L3841          fcb       $17,$18,$9C         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=18(Coin) location=9C
3299 171E00           (      raakatu.asm):04757         L3844          fcb       $17,$1E,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1E(LiveGargoyle) location=00
329C 171F00           (      raakatu.asm):04758         L3847          fcb       $17,$1F,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1F(DeadGargoyle) location=00
329F 17228F           (      raakatu.asm):04759         L384A          fcb       $17,$22,$8F         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=22(GoldenChopstick) location=8F
32A2 17259C           (      raakatu.asm):04760         L384D          fcb       $17,$25,$9C         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=9C
32A5 172600           (      raakatu.asm):04761         L3850          fcb       $17,$26,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=26(GemB) location=00
32A8 172800           (      raakatu.asm):04762         L3853          fcb       $17,$28,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=28(UnlitLamp) location=00
32AB 1C15             (      raakatu.asm):04763         L3856          fcb       $1C,$15             ;         Command_1C_SET_VAR_OBJECT object=15 (LiveSerpent)
32AD 233C             (      raakatu.asm):04764         L3858          fcb       $23,$3C             ;         Command_23_HEAL_VAR_OBJECT value=3C
32AF 1C1D             (      raakatu.asm):04765         L385A          fcb       $1C,$1D             ;         Command_1C_SET_VAR_OBJECT object=1D (USER)
32B1 2346             (      raakatu.asm):04766         L385C          fcb       $23,$46             ;         Command_23_HEAL_VAR_OBJECT value=46
32B3 171D96           (      raakatu.asm):04767         L385E          fcb       $17,$1D,$96         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=1D(USER) location=96
32B6 25               (      raakatu.asm):04768         L3861          fcb       $25                 ;         Command_25_RESTART_GAME
32B7 822C             (      raakatu.asm):04769         L3862          fcb       $82,$2C             ;   Script number=82 size=042C
32B9 0D2A             (      raakatu.asm):04770         L3864          fcb       $0D,$2A             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=42
32BB 1F               (      raakatu.asm):04771         L3866          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
32BC 275FBE66178F4954 (      raakatu.asm):04772         L3867          fcb       $27,$5F,$BE,$66,$17,$8F,$49,$54,$5E,$3F,$61,$57 ;           THE STATUE RELEASES THE ARROW WHICH
     5E3F6157
32C8 49D6B5DB723C496B (      raakatu.asm):04773         L3873          fcb       $49,$D6,$B5,$DB,$72,$3C,$49,$6B,$A1,$23,$D1,$13 ;           PENETRATES YOUR HEART.
     A123D113
32D4 54F0A48C627F49DB (      raakatu.asm):04774         L387F          fcb       $54,$F0,$A4,$8C,$62,$7F,$49,$DB,$B5,$34,$A1,$9F ;           .
     B534A19F
32E0 153E492E         (      raakatu.asm):04775         L388B          fcb       $15,$3E,$49,$2E     ;           .
32E4 81               (      raakatu.asm):04776         L388F          fcb       $81                 ;         CommonCommand_81
32E5 8366             (      raakatu.asm):04777         L3890          fcb       $83,$66             ;   Script number=83 size=042C
32E7 0D64             (      raakatu.asm):04778         L3892          fcb       $0D,$64             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=100
32E9 0E61             (      raakatu.asm):04779         L3894          fcb       $0E,$61             ;         Command_0E_EXECUTE_LIST_WHILE_FAIL size=97
32EB 0D08             (      raakatu.asm):04780         L3896          fcb       $0D,$08             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=8
32ED 080E             (      raakatu.asm):04781         L3898          fcb       $08,$0E             ;             Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=0E(UnpulledLever
32EF 170E00           (      raakatu.asm):04782         L389A          fcb       $17,$0E,$00         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=0E(UnpulledLever) location=00
32F2 1C0F             (      raakatu.asm):04783         L389D          fcb       $1C,$0F             ;             Command_1C_SET_VAR_OBJECT object=0F (PulledLever)
32F4 0C               (      raakatu.asm):04784         L389F          fcb       $0C                 ;             Command_0C_FAIL
32F5 0D08             (      raakatu.asm):04785         L38A0          fcb       $0D,$08             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=8
32F7 0825             (      raakatu.asm):04786         L38A2          fcb       $08,$25             ;             Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=25(GemA
32F9 172500           (      raakatu.asm):04787         L38A4          fcb       $17,$25,$00         ;             Command_17_MOVE_OBJECT_TO_LOCATION object=25(GemA) location=00
32FC 1C26             (      raakatu.asm):04788         L38A7          fcb       $1C,$26             ;             Command_1C_SET_VAR_OBJECT object=26 (GemB)
32FE 0C               (      raakatu.asm):04789         L38A9          fcb       $0C                 ;             Command_0C_FAIL
32FF 0D1D             (      raakatu.asm):04790         L38AA          fcb       $0D,$1D             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=29
3301 1510             (      raakatu.asm):04791         L38AC          fcb       $15,$10             ;             Command_15_CHECK_OBJECT_BITS bits=10 ...P....
3303 04               (      raakatu.asm):04792         L38AE          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3304 0C467705A016BC90 (      raakatu.asm):04793         L38AF          fcb       $0C,$46,$77,$05,$A0,$16,$BC,$90,$73,$D6,$83,$DB ;               I DON'T THINK THE 
     73D683DB
3310 72               (      raakatu.asm):04794         L38BB          fcb       $72                 ;               .
3311 16               (      raakatu.asm):04795         L38BC          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
3312 04               (      raakatu.asm):04796         L38BD          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3313 0A4ED1058A42A02B (      raakatu.asm):04797         L38BE          fcb       $0A,$4E,$D1,$05,$8A,$42,$A0,$2B,$62,$FF,$BD ;               WILL COOPERATE.
     62FFBD
331E 0D21             (      raakatu.asm):04798         L38C9          fcb       $0D,$21             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=33
3320 14               (      raakatu.asm):04799         L38CB          fcb       $14                 ;             Command_14_EXECUTE_COMMAND_REVERSE_STATUS
3321 1520             (      raakatu.asm):04800         L38CC          fcb       $15,$20             ;               Command_15_CHECK_OBJECT_BITS bits=20 ..C.....
3323 04               (      raakatu.asm):04801         L38CE          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3324 1AC7DE9414535ED6 (      raakatu.asm):04802         L38CF          fcb       $1A,$C7,$DE,$94,$14,$53,$5E,$D6,$C4,$4B,$5E,$13 ;               YOU ARE QUITE INCAPABLE OF REMOVING THE
     C44B5E13
3330 9844A4DB8BC39E6F (      raakatu.asm):04803         L38DB          fcb       $98,$44,$A4,$DB,$8B,$C3,$9E,$6F,$B1,$53,$A1,$AB ;               .
     B153A1AB
333C 985FBE           (      raakatu.asm):04804         L38E7          fcb       $98,$5F,$BE         ;               .
333F 16               (      raakatu.asm):04805         L38EA          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
3340 84               (      raakatu.asm):04806         L38EB          fcb       $84                 ;             CommonCommand_84
3341 18               (      raakatu.asm):04807         L38EC          fcb       $18                 ;           Command_18_CHECK_VAR_OBJECT_OWNED_BY_ACTIVE_OBJECT
3342 0D08             (      raakatu.asm):04808         L38ED          fcb       $0D,$08             ;           Command_0D_EXECUTE_LIST_WHILE_PASS size=8
3344 0F               (      raakatu.asm):04809         L38EF          fcb       $0F                 ;             Command_0F_PICK_UP_OBJECT
3345 16               (      raakatu.asm):04810         L38F0          fcb       $16                 ;             Command_16_PRINT_VAR_NOUN_SHORT_NAME
3346 04               (      raakatu.asm):04811         L38F1          fcb       $04                 ;             Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3347 044DBDA761       (      raakatu.asm):04812         L38F2          fcb       $04,$4D,$BD,$A7,$61 ;               TAKEN.
334C 18               (      raakatu.asm):04813         L38F7          fcb       $18                 ;         Command_18_CHECK_VAR_OBJECT_OWNED_BY_ACTIVE_OBJECT
334D 8404             (      raakatu.asm):04814         L38F8          fcb       $84,$04             ;   Script number=84 size=042C
334F 04               (      raakatu.asm):04815         L38FA          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3350 023BF4           (      raakatu.asm):04816         L38FB          fcb       $02,$3B,$F4         ;         .  
3353 8529             (      raakatu.asm):04817         L38FE          fcb       $85,$29             ;   Script number=85 size=042C
3355 1F               (      raakatu.asm):04818         L3900          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
3356 27494507B311A389 (      raakatu.asm):04819         L3901          fcb       $27,$49,$45,$07,$B3,$11,$A3,$89,$64,$94,$C3,$0B ;         A GROUP OF GUARDS MARCHES AROUND THE CORNER
     6494C30B
3362 5C94911F54C3B507 (      raakatu.asm):04820         L390D          fcb       $5C,$94,$91,$1F,$54,$C3,$B5,$07,$B3,$33,$98,$5F ;         TO YOUR RIGHT.
     B333985F
336E BEE114CFB296AFDB (      raakatu.asm):04821         L3919          fcb       $BE,$E1,$14,$CF,$B2,$96,$AF,$DB,$9C,$34,$A1,$33 ;         .
     9C34A133
337A 172E6D2E         (      raakatu.asm):04822         L3925          fcb       $17,$2E,$6D,$2E     ;         .
337E 872A             (      raakatu.asm):04823         L3929          fcb       $87,$2A             ;   Script number=87 size=042C
3380 1F               (      raakatu.asm):04824         L392B          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
3381 28494507B311A389 (      raakatu.asm):04825         L392C          fcb       $28,$49,$45,$07,$B3,$11,$A3,$89,$64,$94,$C3,$0B ;         A GROUP OF GUARDS DISAPPEARS AROUND THE
     6494C30B
338D 5C955AEA48945FC3 (      raakatu.asm):04826         L3938          fcb       $5C,$95,$5A,$EA,$48,$94,$5F,$C3,$B5,$07,$B3,$33 ;         CORNER TO YOUR LEFT.
     B507B333
3399 985FBEE114CFB296 (      raakatu.asm):04827         L3944          fcb       $98,$5F,$BE,$E1,$14,$CF,$B2,$96,$AF,$DB,$9C,$34 ;         .
     AFDB9C34
33A5 A13F16D768       (      raakatu.asm):04828         L3950          fcb       $A1,$3F,$16,$D7,$68 ;         .
33AA 861E             (      raakatu.asm):04829         L3955          fcb       $86,$1E             ;   Script number=86 size=042C
33AC 1F               (      raakatu.asm):04830         L3957          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
33AD 1C494507B311A389 (      raakatu.asm):04831         L3958          fcb       $1C,$49,$45,$07,$B3,$11,$A3,$89,$64,$94,$C3,$0B ;         A GROUP OF GUARDS COMES AROUND THE CORNER.
     6494C30B
33B9 5C3F554B6239498E (      raakatu.asm):04832         L3964          fcb       $5C,$3F,$55,$4B,$62,$39,$49,$8E,$C5,$82,$17,$45 ;         .
     C5821745
33C5 5EB8A04762       (      raakatu.asm):04833         L3970          fcb       $5E,$B8,$A0,$47,$62 ;         .
33CA 8813             (      raakatu.asm):04834         L3975          fcb       $88,$13             ;   Script number=88 size=042C
33CC 0D11             (      raakatu.asm):04835         L3977          fcb       $0D,$11             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=17
33CE 04               (      raakatu.asm):04836         L3979          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
33CF 025FBE           (      raakatu.asm):04837         L397A          fcb       $02,$5F,$BE         ;           THE
33D2 12               (      raakatu.asm):04838         L397D          fcb       $12                 ;         Command_12_PRINT_SECOND_NOUN_SHORT_NAME
33D3 04               (      raakatu.asm):04839         L397E          fcb       $04                 ;         Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
33D4 0A4B7B069ABF1410 (      raakatu.asm):04840         L397F          fcb       $0A,$4B,$7B,$06,$9A,$BF,$14,$10,$B2,$5B,$70 ;           IS NOT BURING. 
     B25B70
33DF 921C             (      raakatu.asm):04841         L398A          fcb       $92,$1C             ;   Script number=92 size=042C
33E1 1F               (      raakatu.asm):04842         L398C          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
33E2 1A36A1B8167B1485 (      raakatu.asm):04843         L398D          fcb       $1A,$36,$A1,$B8,$16,$7B,$14,$85,$A6,$44,$B8,$DB ;         OUT OF A POSSIBLE FIFTY, YOUR SCORE IS 
     A644B8DB
33EE 8B08671EC1511823 (      raakatu.asm):04844         L3999          fcb       $8B,$08,$67,$1E,$C1,$51,$18,$23,$C6,$61,$B7,$5B ;         .
     C661B75B
33FA B14B7B           (      raakatu.asm):04845         L39A5          fcb       $B1,$4B,$7B         ;         .
33FD 8912             (      raakatu.asm):04846         L39A8          fcb       $89,$12             ;   Script number=89 size=042C
33FF 1F               (      raakatu.asm):04847         L39AA          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
3400 10C7DED314E696FF (      raakatu.asm):04848         L39AB          fcb       $10,$C7,$DE,$D3,$14,$E6,$96,$FF,$15,$D3,$93,$5B ;         YOU CAN'T JUMP THAT FAR!
     15D3935B
340C BE08BC2149       (      raakatu.asm):04849         L39B7          fcb       $BE,$08,$BC,$21,$49 ;         .
3411 8A32             (      raakatu.asm):04850         L39BC          fcb       $8A,$32             ;   Script number=8A size=042C
3413 0D30             (      raakatu.asm):04851         L39BE          fcb       $0D,$30             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=48
3415 1F               (      raakatu.asm):04852         L39C0          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
3416 2DC7DE3B16339803 (      raakatu.asm):04853         L39C1          fcb       $2D,$C7,$DE,$3B,$16,$33,$98,$03,$A0,$55,$45,$8D ;           YOU LAND ON A SPIKE AT THE BOTTOM OF THE PIT
     A055458D
3422 A5435E16BCDB7206 (      raakatu.asm):04854         L39CD          fcb       $A5,$43,$5E,$16,$BC,$DB,$72,$06,$4F,$7F,$BF,$B8 ;           WHICH THE RUG COVERED.
     4F7FBFB8
342E 168217525E737B23 (      raakatu.asm):04855         L39D9          fcb       $16,$82,$17,$52,$5E,$73,$7B,$23,$D1,$13,$54,$5F ;           .
     D113545F
343A BE3F17C56A4FA166 (      raakatu.asm):04856         L39E5          fcb       $BE,$3F,$17,$C5,$6A,$4F,$A1,$66,$B1,$2E ;           .
     B12E
3444 81               (      raakatu.asm):04857         L39EF          fcb       $81                 ;         CommonCommand_81
3445 8B79             (      raakatu.asm):04858         L39F0          fcb       $8B,$79             ;   Script number=8B size=042C
3447 0D77             (      raakatu.asm):04859         L39F2          fcb       $0D,$77             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=119
3449 1F               (      raakatu.asm):04860         L39F4          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
344A 74C7DE2F1743485B (      raakatu.asm):04861         L39F5          fcb       $74,$C7,$DE,$2F,$17,$43,$48,$5B,$E3,$23,$D1,$DB ;           YOU REALIZE WHILE YOU'RE FALLING THAT THE
     E323D1DB
3456 8BC7DEAF234B1503 (      raakatu.asm):04862         L3A01          fcb       $8B,$C7,$DE,$AF,$23,$4B,$15,$03,$8D,$AB,$98,$5B ;           RUG COVERED A PIT. THE BOTTOM OF THE PIT IS
     8DAB985B
3462 BE16BCDB72E9B3E1 (      raakatu.asm):04863         L3A0D          fcb       $BE,$16,$BC,$DB,$72,$E9,$B3,$E1,$14,$74,$CA,$F3 ;           COVERED WITH SPIKES ABOUT FOUR FEET TALL -
     1474CAF3
346E 5F5245977B821744 (      raakatu.asm):04864         L3A19          fcb       $5F,$52,$45,$97,$7B,$82,$17,$44,$5E,$0E,$A1,$DB ;           YOU DON'T HAVE TIME TO MEASURE THEM EXACTLY.
     5E0EA1DB
347A 9FC39E5FBEE3160B (      raakatu.asm):04865         L3A25          fcb       $9F,$C3,$9E,$5F,$BE,$E3,$16,$0B,$BC,$C5,$B5,$4F ;           
     BCC5B54F
3486 A166B1FB1753BE63 (      raakatu.asm):04866         L3A31          fcb       $A1,$66,$B1,$FB,$17,$53,$BE,$63,$B9,$B5,$85,$84 ;           .
     B9B58584
3492 1436A1591523C667 (      raakatu.asm):04867         L3A3D          fcb       $14,$36,$A1,$59,$15,$23,$C6,$67,$66,$16,$BC,$46 ;           .
     6616BC46
349E 488B18C7DE0915E6 (      raakatu.asm):04868         L3A49          fcb       $48,$8B,$18,$C7,$DE,$09,$15,$E6,$96,$9B,$15,$5B ;           .
     969B155B
34AA CA8FBE565ECF9C95 (      raakatu.asm):04869         L3A55          fcb       $CA,$8F,$BE,$56,$5E,$CF,$9C,$95,$5F,$2F,$C6,$82 ;           .
     5F2FC682
34B6 175B611B630656DB (      raakatu.asm):04870         L3A61          fcb       $17,$5B,$61,$1B,$63,$06,$56,$DB,$E0 ;           .
     E0
34BF 81               (      raakatu.asm):04871         L3A6A          fcb       $81                 ;         CommonCommand_81
34C0 8C49             (      raakatu.asm):04872         L3A6B          fcb       $8C,$49             ;   Script number=8C size=042C
34C2 1F               (      raakatu.asm):04873         L3A6D          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
34C3 47C7DE031561B774 (      raakatu.asm):04874         L3A6E          fcb       $47,$C7,$DE,$03,$15,$61,$B7,$74,$CA,$7B,$14,$E7 ;         YOU DISCOVER A DEEP DARK PIT WHICH EXTENDS
     CA7B14E7
34CF 5906A33549E31619 (      raakatu.asm):04875         L3A7A          fcb       $59,$06,$A3,$35,$49,$E3,$16,$19,$BC,$85,$73,$07 ;         FROM THE NORTH TO THE SOUTH WALL. THE PIT IS
     BC857307
34DB 713FD94D985C15DB (      raakatu.asm):04876         L3A86          fcb       $71,$3F,$D9,$4D,$98,$5C,$15,$DB,$9F,$5F,$BE,$99 ;         TOO BROAD TO JUMP.
     9F5FBE99
34E7 16C2B38917821755 (      raakatu.asm):04877         L3A92          fcb       $16,$C2,$B3,$89,$17,$82,$17,$55,$5E,$36,$A1,$19 ;         .
     5E36A119
34F3 71464856F4DB7296 (      raakatu.asm):04878         L3A9E          fcb       $71,$46,$48,$56,$F4,$DB,$72,$96,$A5,$D5,$15,$89 ;         .
     A5D51589
34FF 17C49CF3B21658CC (      raakatu.asm):04879         L3AAA          fcb       $17,$C4,$9C,$F3,$B2,$16,$58,$CC,$9C,$72,$C5,$2E ;         .
     9C72C52E
350B 8D20             (      raakatu.asm):04880         L3AB6          fcb       $8D,$20             ;   Script number=8D size=042C
350D 04               (      raakatu.asm):04881         L3AB8          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
350E 1E5FBE66178F494B (      raakatu.asm):04882         L3AB9          fcb       $1E,$5F,$BE,$66,$17,$8F,$49,$4B,$5E,$CF,$B5,$DA ;         THE STATUE IS MUCH TOO HEAVY FOR YOU TO
     5ECFB5DA
351A C38917CA9C985F48 (      raakatu.asm):04883         L3AC5          fcb       $C3,$89,$17,$CA,$9C,$98,$5F,$48,$DB,$A3,$A0,$C7 ;         MOVE.
     DBA3A0C7
3526 DE891771167FCA   (      raakatu.asm):04884         L3AD1          fcb       $DE,$89,$17,$71,$16,$7F,$CA ;         .
352D 8E3E             (      raakatu.asm):04885         L3AD8          fcb       $8E,$3E             ;   Script number=8E size=042C
352F 04               (      raakatu.asm):04886         L3ADA          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3530 3C7AC4D906827B84 (      raakatu.asm):04887         L3ADB          fcb       $3C,$7A,$C4,$D9,$06,$82,$7B,$84,$15,$96,$5F,$03 ;         UGH! WITH GREAT DIFFICULTY YOU MANAGE TO
     15965F03
353C 1593662E56FBC0C7 (      raakatu.asm):04888         L3AE7          fcb       $15,$93,$66,$2E,$56,$FB,$C0,$C7,$DE,$63,$16,$C9 ;         MOVE THE ALTAR AND YOU DISCOVER A SECRET
     DE6316C9
3548 97565ECF9C4FA182 (      raakatu.asm):04889         L3AF3          fcb       $97,$56,$5E,$CF,$9C,$4F,$A1,$82,$17,$43,$5E,$3B ;         PASSAGE.
     17435E3B
3554 8E83AF3398C7DE03 (      raakatu.asm):04890         L3AFF          fcb       $8E,$83,$AF,$33,$98,$C7,$DE,$03,$15,$61,$B7,$74 ;         .
     1561B774
3560 CA7B14A5B776B1DB (      raakatu.asm):04891         L3B0B          fcb       $CA,$7B,$14,$A5,$B7,$76,$B1,$DB,$16,$D3,$B9,$BF ;         .
     16D3B9BF
356C 6C               (      raakatu.asm):04892         L3B17          fcb       $6C                 ;         .
356D 8F07             (      raakatu.asm):04893         L3B18          fcb       $8F,$07             ;   Script number=8F size=042C
356F 0D05             (      raakatu.asm):04894         L3B1A          fcb       $0D,$05             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=5
3571 082B             (      raakatu.asm):04895         L3B1C          fcb       $08,$2B             ;         Command_08_COMPARE_OBJECT_TO_FIRST_NOUN object=2B(Passage
3573 00A5             (      raakatu.asm):04896         L3B1E          fcb       $00,$A5             ;         Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=A5
3575 90               (      raakatu.asm):04897         L3B20          fcb       $90                 ;         CommonCommand_90
3576 9022             (      raakatu.asm):04898         L3B21          fcb       $90,$22             ;   Script number=90 size=042C
3578 1F               (      raakatu.asm):04899         L3B23          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
3579 205FBE8E1454BD71 (      raakatu.asm):04900         L3B24          fcb       $20,$5F,$BE,$8E,$14,$54,$BD,$71,$16,$75,$CA,$AB ;         THE ALTAR MOVES BACK TO SEAL THE HOLE ABOVE
     1675CAAB
3585 148B546BBFA3B716 (      raakatu.asm):04901         L3B30          fcb       $14,$8B,$54,$6B,$BF,$A3,$B7,$16,$8A,$DB,$72,$7E ;         YOU.
     8ADB727E
3591 74435E084F5B5E3F (      raakatu.asm):04902         L3B3C          fcb       $74,$43,$5E,$08,$4F,$5B,$5E,$3F,$A1 ;         .
     A1
359A 9137             (      raakatu.asm):04903         L3B45          fcb       $91,$37             ;   Script number=91 size=042C
359C 0D35             (      raakatu.asm):04904         L3B47          fcb       $0D,$35             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=53
359E 1F               (      raakatu.asm):04905         L3B49          fcb       $1F                 ;         Command_1F_PRINT_MESSAGE
359F 304B49C7DEDE1464 (      raakatu.asm):04906         L3B4A          fcb       $30,$4B,$49,$C7,$DE,$DE,$14,$64,$7A,$C7,$16,$11 ;           AS YOU CLIMB OUT OF THE HOLE, IT SEEMS TO
     7AC71611
35AB BC9664DB727E74B3 (      raakatu.asm):04907         L3B56          fcb       $BC,$96,$64,$DB,$72,$7E,$74,$B3,$63,$73,$7B,$A7 ;           MAGICALLY SEAL UP BEHIND YOU. 
     63737BA7
35B7 B74B946BBF8991D3 (      raakatu.asm):04908         L3B62          fcb       $B7,$4B,$94,$6B,$BF,$89,$91,$D3,$78,$13,$8D,$57 ;           .
     78138D57
35C3 173348D3C56A4D8E (      raakatu.asm):04909         L3B6E          fcb       $17,$33,$48,$D3,$C5,$6A,$4D,$8E,$7A,$51,$18,$DB ;           .
     7A5118DB
35CF C7               (      raakatu.asm):04910         L3B7A          fcb       $C7                 ;           .
35D0 009F             (      raakatu.asm):04911         L3B7B          fcb       $00,$9F             ;         Command_00_MOVE_ACTIVE_OBJECT_TO_ROOM_AND_LOOK room=9F
35D2 95               (      raakatu.asm):04912         L3B7D          fcb       $95                 ;         CommonCommand_95
35D3 9309             (      raakatu.asm):04913         L3B7E          fcb       $93,$09             ;   Script number=93 size=042C
35D5 0B07             (      raakatu.asm):04914         L3B80          fcb       $0B,$07             ;       Command_0B_SWITCH size=07
35D7 0A36             (      raakatu.asm):04915         L3B82          fcb       $0A,$36             ;         Command_0A_COMPARE_TO_PHRASE_FORM val=36 phrase="36: CLIMB IN    *          *       "
35D9 01               (      raakatu.asm):04916         L3B84          fcb       $01                 ;         IF_NOT_JUMP address=3B86
35DA 94               (      raakatu.asm):04917         L3B85          fcb       $94                 ;           CommonCommand_94
35DB 37               (      raakatu.asm):04918         L3B86          fcb       $37                 ;         Command_0A_COMPARE_TO_PHRASE_FORM val=37 phrase="37: CLIMB OUT   *          *       "
35DC 01               (      raakatu.asm):04919         L3B87          fcb       $01                 ;         IF_NOT_JUMP address=3B89
35DD 94               (      raakatu.asm):04920         L3B88          fcb       $94                 ;           CommonCommand_94
35DE 9419             (      raakatu.asm):04921         L3B89          fcb       $94,$19             ;   Script number=94 size=042C
35E0 1F               (      raakatu.asm):04922         L3B8B          fcb       $1F                 ;       Command_1F_PRINT_MESSAGE
35E1 17FFA55749B51746 (      raakatu.asm):04923         L3B8C          fcb       $17,$FF,$A5,$57,$49,$B5,$17,$46,$5E,$2F,$7B,$03 ;         PLEASE USE DIRECTIONS N,S,E, OR W.
     5E2F7B03
35ED 561DA0A6163FBB11 (      raakatu.asm):04924         L3B98          fcb       $56,$1D,$A0,$A6,$16,$3F,$BB,$11,$EE,$99,$AF,$2E ;         .
     EE99AF2E
35F9 9526             (      raakatu.asm):04925         L3BA4          fcb       $95,$26             ;   Script number=95 size=042C
35FB 0D24             (      raakatu.asm):04926         L3BA6          fcb       $0D,$24             ;       Command_0D_EXECUTE_LIST_WHILE_PASS size=36
35FD 1736FF           (      raakatu.asm):04927         L3BA8          fcb       $17,$36,$FF         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=36(Jungle) location=FF
3600 172900           (      raakatu.asm):04928         L3BAB          fcb       $17,$29,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=29(Floor) location=00
3603 172A00           (      raakatu.asm):04929         L3BAE          fcb       $17,$2A,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=2A(Exit) location=00
3606 172B00           (      raakatu.asm):04930         L3BB1          fcb       $17,$2B,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=2B(Passage) location=00
3609 172C00           (      raakatu.asm):04931         L3BB4          fcb       $17,$2C,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=2C(Hole) location=00
360C 172D00           (      raakatu.asm):04932         L3BB7          fcb       $17,$2D,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=2D(Corridor) location=00
360F 172E00           (      raakatu.asm):04933         L3BBA          fcb       $17,$2E,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=2E(Corner) location=00
3612 173100           (      raakatu.asm):04934         L3BBD          fcb       $17,$31,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=31(Hallway) location=00
3615 173400           (      raakatu.asm):04935         L3BC0          fcb       $17,$34,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=34(Entrance) location=00
3618 173500           (      raakatu.asm):04936         L3BC3          fcb       $17,$35,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=35(Tunnel) location=00
361B 173A00           (      raakatu.asm):04937         L3BC6          fcb       $17,$3A,$00         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=3A(Ceiling) location=00
361E 173C1D           (      raakatu.asm):04938         L3BC9          fcb       $17,$3C,$1D         ;         Command_17_MOVE_OBJECT_TO_LOCATION object=3C(Object3C) location=1D
3621 961A             (      raakatu.asm):04939         L3BCC          fcb       $96,$1A             ;   Script number=96 size=042C
3623 04               (      raakatu.asm):04940         L3BCE          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3624 185BBE65BC7B1441 (      raakatu.asm):04941         L3BCF          fcb       $18,$5B,$BE,$65,$BC,$7B,$14,$41,$6E,$19,$58,$3B ;         THAT'S A GOOD WAY TO LOSE YOUR HAND!
     6E19583B
3630 4A6BBF858D5B5E34 (      raakatu.asm):04942         L3BDB          fcb       $4A,$6B,$BF,$85,$8D,$5B,$5E,$34,$A1,$9B,$15,$31 ;         .
     A19B1531
363C 98               (      raakatu.asm):04943         L3BE7          fcb       $98                 ;         .
363D 9719             (      raakatu.asm):04944         L3BE8          fcb       $97,$19             ;   Script number=97 size=042C
363F 04               (      raakatu.asm):04945         L3BEA          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
3640 174379C7DED31488 (      raakatu.asm):04946         L3BEB          fcb       $17,$43,$79,$C7,$DE,$D3,$14,$88,$96,$8E,$7A,$7B ;         IF YOU CAN FIND A MOUTH, I'M GAME!
     968E7A7B
364C 14C79376BEBD1549 (      raakatu.asm):04947         L3BF7          fcb       $14,$C7,$93,$76,$BE,$BD,$15,$49,$90,$67,$48,$21 ;         .
     90674821
3658 9824             (      raakatu.asm):04948         L3C03          fcb       $98,$24             ;   Script number=98 size=042C
365A 04               (      raakatu.asm):04949         L3C05          fcb       $04                 ;       Command_04_PRINT_SYSTEM_OR_PLAYER_MESSAGE
365B 220FA05F17464866 (      raakatu.asm):04950         L3C06          fcb       $22,$0F,$A0,$5F,$17,$46,$48,$66,$17,$D3,$61,$04 ;         ONE SMALL STEP FOR MANKIND, ONE GIANT LEAP
     17D36104
3667 6863165B995698C0 (      raakatu.asm):04951         L3C12          fcb       $68,$63,$16,$5B,$99,$56,$98,$C0,$16,$49,$5E,$90 ;         FOR YOU!
     16495E90
3673 780EBC925F59159B (      raakatu.asm):04952         L3C1E          fcb       $78,$0E,$BC,$92,$5F,$59,$15,$9B,$AF,$19,$A1 ;         .
     AF19A1
                      (      raakatu.asm):04953         ; ENDOF 37FA
                      (      raakatu.asm):04954         
                      (      raakatu.asm):04955         ;##InputWordTables
                      (      raakatu.asm):04956         
                      (      raakatu.asm):04957         ; --- IGNORES --- Maybe for curse words. No words in this list and thus never used.
367E 00               (      raakatu.asm):04958         L3C29          fcb       $00
                      (      raakatu.asm):04959         ;  
                      (      raakatu.asm):04960         ; --- VERBS ---   
367F 045245414401     (      raakatu.asm):04961         L3C2A          fcb       $04,$52,$45,$41,$44,$01 ; READ     1
3685 0347455409       (      raakatu.asm):04962         L3C30          fcb       $03,$47,$45,$54,$09 ; GET      9
368A 055448524F5703   (      raakatu.asm):04963         L3C35          fcb       $05,$54,$48,$52,$4F,$57,$03 ; THROW    3
3691 0641545441434B04 (      raakatu.asm):04964         L3C3C          fcb       $06,$41,$54,$54,$41,$43,$4B,$04 ; ATTACK   4
3699 044B494C4C04     (      raakatu.asm):04965         L3C44          fcb       $04,$4B,$49,$4C,$4C,$04 ; KILL     4
369F 0348495404       (      raakatu.asm):04966         L3C4A          fcb       $03,$48,$49,$54,$04 ; HIT      4
36A4 054E4F52544805   (      raakatu.asm):04967         L3C4F          fcb       $05,$4E,$4F,$52,$54,$48,$05 ; NORTH    5
36AB 014E05           (      raakatu.asm):04968         L3C56          fcb       $01,$4E,$05         ; N        5
36AE 05534F55544806   (      raakatu.asm):04969         L3C59          fcb       $05,$53,$4F,$55,$54,$48,$06 ; SOUTH    6
36B5 015306           (      raakatu.asm):04970         L3C60          fcb       $01,$53,$06         ; S        6
36B8 044541535407     (      raakatu.asm):04971         L3C63          fcb       $04,$45,$41,$53,$54,$07 ; EAST     7
36BE 014507           (      raakatu.asm):04972         L3C69          fcb       $01,$45,$07         ; E        7
36C1 045745535408     (      raakatu.asm):04973         L3C6C          fcb       $04,$57,$45,$53,$54,$08 ; WEST     8
36C7 015708           (      raakatu.asm):04974         L3C72          fcb       $01,$57,$08         ; W        8
36CA 0454414B4509     (      raakatu.asm):04975         L3C75          fcb       $04,$54,$41,$4B,$45,$09 ; TAKE     9
36D0 0444524F500A     (      raakatu.asm):04976         L3C7B          fcb       $04,$44,$52,$4F,$50,$0A ; DROP     10
36D6 035055540A       (      raakatu.asm):04977         L3C81          fcb       $03,$50,$55,$54,$0A ; PUT      10
36DB 06494E56454E540B (      raakatu.asm):04978         L3C86          fcb       $06,$49,$4E,$56,$45,$4E,$54,$0B ; INVENT   11
36E3 044C4F4F4B0C     (      raakatu.asm):04979         L3C8E          fcb       $04,$4C,$4F,$4F,$4B,$0C ; LOOK     12
36E9 04474956450D     (      raakatu.asm):04980         L3C94          fcb       $04,$47,$49,$56,$45,$0D ; GIVE     13
36EF 054F464645520D   (      raakatu.asm):04981         L3C9A          fcb       $05,$4F,$46,$46,$45,$52,$0D ; OFFER    13
36F6 064558414D494E0E (      raakatu.asm):04982         L3CA1          fcb       $06,$45,$58,$41,$4D,$49,$4E,$0E ; EXAMIN   14
36FE 065345415243480E (      raakatu.asm):04983         L3CA9          fcb       $06,$53,$45,$41,$52,$43,$48,$0E ; SEARCH   14
3706 044F50454E0F     (      raakatu.asm):04984         L3CB1          fcb       $04,$4F,$50,$45,$4E,$0F ; OPEN     15
370C 0450554C4C10     (      raakatu.asm):04985         L3CB7          fcb       $04,$50,$55,$4C,$4C,$10 ; PULL     16
3712 054C4947485411   (      raakatu.asm):04986         L3CBD          fcb       $05,$4C,$49,$47,$48,$54,$11 ; LIGHT    17
3719 044255524E11     (      raakatu.asm):04987         L3CC4          fcb       $04,$42,$55,$52,$4E,$11 ; BURN     17
371F 0345415412       (      raakatu.asm):04988         L3CCA          fcb       $03,$45,$41,$54,$12 ; EAT      18
3724 05544153544512   (      raakatu.asm):04989         L3CCF          fcb       $05,$54,$41,$53,$54,$45,$12 ; TASTE    18
372B 04424C4F5713     (      raakatu.asm):04990         L3CD6          fcb       $04,$42,$4C,$4F,$57,$13 ; BLOW     19
3731 06455854494E4714 (      raakatu.asm):04991         L3CDC          fcb       $06,$45,$58,$54,$49,$4E,$47,$14 ; EXTING   20
3739 05434C494D4215   (      raakatu.asm):04992         L3CE4          fcb       $05,$43,$4C,$49,$4D,$42,$15 ; CLIMB    21
3740 0352554216       (      raakatu.asm):04993         L3CEB          fcb       $03,$52,$55,$42,$16 ; RUB      22
3745 045749504516     (      raakatu.asm):04994         L3CF0          fcb       $04,$57,$49,$50,$45,$16 ; WIPE     22
374B 06504F4C49534816 (      raakatu.asm):04995         L3CF6          fcb       $06,$50,$4F,$4C,$49,$53,$48,$16 ; POLISH   22
3753 044C4946541C     (      raakatu.asm):04996         L3CFE          fcb       $04,$4C,$49,$46,$54,$1C ; LIFT     28
3759 04574149541F     (      raakatu.asm):04997         L3D04          fcb       $04,$57,$41,$49,$54,$1F ; WAIT     31
375F 04535441591F     (      raakatu.asm):04998         L3D0A          fcb       $04,$53,$54,$41,$59,$1F ; STAY     31
3765 044A554D5020     (      raakatu.asm):04999         L3D10          fcb       $04,$4A,$55,$4D,$50,$20 ; JUMP     32
376B 02474F21         (      raakatu.asm):05000         L3D16          fcb       $02,$47,$4F,$21     ; GO       33
376F 0352554E21       (      raakatu.asm):05001         L3D1A          fcb       $03,$52,$55,$4E,$21 ; RUN      33
3774 05454E54455221   (      raakatu.asm):05002         L3D1F          fcb       $05,$45,$4E,$54,$45,$52,$21 ; ENTER    33
377B 045055534810     (      raakatu.asm):05003         L3D26          fcb       $04,$50,$55,$53,$48,$10 ; PUSH     16
3781 044D4F564510     (      raakatu.asm):05004         L3D2C          fcb       $04,$4D,$4F,$56,$45,$10 ; MOVE     16
3787 044B49434B23     (      raakatu.asm):05005         L3D32          fcb       $04,$4B,$49,$43,$4B,$23 ; KICK     35
378D 044645454424     (      raakatu.asm):05006         L3D38          fcb       $04,$46,$45,$45,$44,$24 ; FEED     36
3793 0553434F524528   (      raakatu.asm):05007         L3D3E          fcb       $05,$53,$43,$4F,$52,$45,$28 ; SCORE    40
379A 0653435245414D2B (      raakatu.asm):05008         L3D45          fcb       $06,$53,$43,$52,$45,$41,$4D,$2B ; SCREAM   43
37A2 0459454C4C2B     (      raakatu.asm):05009         L3D4D          fcb       $04,$59,$45,$4C,$4C,$2B ; YELL     43
37A8 04515549542D     (      raakatu.asm):05010         L3D53          fcb       $04,$51,$55,$49,$54,$2D ; QUIT     45
37AE 0453544F502D     (      raakatu.asm):05011         L3D59          fcb       $04,$53,$54,$4F,$50,$2D ; STOP     45
37B4 05504C55474832   (      raakatu.asm):05012         L3D5F          fcb       $05,$50,$4C,$55,$47,$48,$32 ; PLUGH    50
37BB 054C454156452C   (      raakatu.asm):05013         L3D66          fcb       $05,$4C,$45,$41,$56,$45,$2C ; LEAVE    44
37C2 045049434B34     (      raakatu.asm):05014         L3D6D          fcb       $04,$50,$49,$43,$4B,$34 ; PICK     52
37C8 00               (      raakatu.asm):05015         L3D73          fcb       $00
                      (      raakatu.asm):05016         ;
                      (      raakatu.asm):05017         ; --- NOUNS ---
37C9 06504F54494F4E03 (      raakatu.asm):05018         L3D74          fcb       $06,$50,$4F,$54,$49,$4F,$4E,$03 ; POTION   3
37D1 0352554706       (      raakatu.asm):05019         L3D7C          fcb       $03,$52,$55,$47,$06 ; RUG      6
37D6 04444F4F5209     (      raakatu.asm):05020         L3D81          fcb       $04,$44,$4F,$4F,$52,$09 ; DOOR     9
37DC 04464F4F440C     (      raakatu.asm):05021         L3D87          fcb       $04,$46,$4F,$4F,$44,$0C ; FOOD     12
37E2 065354415455450D (      raakatu.asm):05022         L3D8D          fcb       $06,$53,$54,$41,$54,$55,$45,$0D ; STATUE   13
37EA 0553574F52440E   (      raakatu.asm):05023         L3D95          fcb       $05,$53,$57,$4F,$52,$44,$0E ; SWORD    14
37F1 06474152474F590F (      raakatu.asm):05024         L3D9C          fcb       $06,$47,$41,$52,$47,$4F,$59,$0F ; GARGOY   15
37F9 0452494E4712     (      raakatu.asm):05025         L3DA4          fcb       $04,$52,$49,$4E,$47,$12 ; RING     18
37FF 0347454D13       (      raakatu.asm):05026         L3DAA          fcb       $03,$47,$45,$4D,$13 ; GEM      19
3804 054C4556455216   (      raakatu.asm):05027         L3DAF          fcb       $05,$4C,$45,$56,$45,$52,$16 ; LEVER    22
380B 06504C4151554518 (      raakatu.asm):05028         L3DB6          fcb       $06,$50,$4C,$41,$51,$55,$45,$18 ; PLAQUE   24
3813 0552554E455318   (      raakatu.asm):05029         L3DBE          fcb       $05,$52,$55,$4E,$45,$53,$18 ; RUNES    24
381A 045349474E18     (      raakatu.asm):05030         L3DC5          fcb       $04,$53,$49,$47,$4E,$18 ; SIGN     24
3820 064D455353414718 (      raakatu.asm):05031         L3DCB          fcb       $06,$4D,$45,$53,$53,$41,$47,$18 ; MESSAG   24
3828 0643414E444C4519 (      raakatu.asm):05032         L3DD3          fcb       $06,$43,$41,$4E,$44,$4C,$45,$19 ; CANDLE   25
3830 044C414D501B     (      raakatu.asm):05033         L3DDB          fcb       $04,$4C,$41,$4D,$50,$1B ; LAMP     27
3836 0643484F5053541E (      raakatu.asm):05034         L3DE1          fcb       $06,$43,$48,$4F,$50,$53,$54,$1E ; CHOPST   30
383E 0448414E441F     (      raakatu.asm):05035         L3DE9          fcb       $04,$48,$41,$4E,$44,$1F ; HAND     31
3844 0548414E44531F   (      raakatu.asm):05036         L3DEF          fcb       $05,$48,$41,$4E,$44,$53,$1F ; HANDS    31
384B 04434F494E20     (      raakatu.asm):05037         L3DF6          fcb       $04,$43,$4F,$49,$4E,$20 ; COIN     32
3851 04534C4F5421     (      raakatu.asm):05038         L3DFC          fcb       $04,$53,$4C,$4F,$54,$21 ; SLOT     33
3857 05414C54415222   (      raakatu.asm):05039         L3E02          fcb       $05,$41,$4C,$54,$41,$52,$22 ; ALTAR    34
385E 0449444F4C23     (      raakatu.asm):05040         L3E09          fcb       $04,$49,$44,$4F,$4C,$23 ; IDOL     35
3864 0653455250454E24 (      raakatu.asm):05041         L3E0F          fcb       $06,$53,$45,$52,$50,$45,$4E,$24 ; SERPEN   36
386C 05534E414B4524   (      raakatu.asm):05042         L3E17          fcb       $05,$53,$4E,$41,$4B,$45,$24 ; SNAKE    36
3873 0457414C4C25     (      raakatu.asm):05043         L3E1E          fcb       $04,$57,$41,$4C,$4C,$25 ; WALL     37
3879 0557414C4C5325   (      raakatu.asm):05044         L3E24          fcb       $05,$57,$41,$4C,$4C,$53,$25 ; WALLS    37
3880 0456494E4526     (      raakatu.asm):05045         L3E2B          fcb       $04,$56,$49,$4E,$45,$26 ; VINE     38
3886 0556494E455326   (      raakatu.asm):05046         L3E31          fcb       $05,$56,$49,$4E,$45,$53,$26 ; VINES    38
388D 044741544527     (      raakatu.asm):05047         L3E38          fcb       $04,$47,$41,$54,$45,$27 ; GATE     39
3893 05474154455327   (      raakatu.asm):05048         L3E3E          fcb       $05,$47,$41,$54,$45,$53,$27 ; GATES    39
389A 05475541524428   (      raakatu.asm):05049         L3E45          fcb       $05,$47,$55,$41,$52,$44,$28 ; GUARD    40
38A1 0647554152445328 (      raakatu.asm):05050         L3E4C          fcb       $06,$47,$55,$41,$52,$44,$53,$28 ; GUARDS   40
38A9 04524F4F4D2A     (      raakatu.asm):05051         L3E54          fcb       $04,$52,$4F,$4F,$4D,$2A ; ROOM     42
38AF 05464C4F4F522B   (      raakatu.asm):05052         L3E5A          fcb       $05,$46,$4C,$4F,$4F,$52,$2B ; FLOOR    43
38B6 04455849542C     (      raakatu.asm):05053         L3E61          fcb       $04,$45,$58,$49,$54,$2C ; EXIT     44
38BC 065041535341472D (      raakatu.asm):05054         L3E67          fcb       $06,$50,$41,$53,$53,$41,$47,$2D ; PASSAG   45
38C4 04484F4C452E     (      raakatu.asm):05055         L3E6F          fcb       $04,$48,$4F,$4C,$45,$2E ; HOLE     46
38CA 06434F525249442F (      raakatu.asm):05056         L3E75          fcb       $06,$43,$4F,$52,$52,$49,$44,$2F ; CORRID   47
38D2 03424F5731       (      raakatu.asm):05057         L3E7D          fcb       $03,$42,$4F,$57,$31 ; BOW      49
38D7 054152524F5732   (      raakatu.asm):05058         L3E82          fcb       $05,$41,$52,$52,$4F,$57,$32 ; ARROW    50
38DE 0648414C4C574133 (      raakatu.asm):05059         L3E89          fcb       $06,$48,$41,$4C,$4C,$57,$41,$33 ; HALLWA   51
38E6 064348414D424534 (      raakatu.asm):05060         L3E91          fcb       $06,$43,$48,$41,$4D,$42,$45,$34 ; CHAMBE   52
38EE 055641554C5435   (      raakatu.asm):05061         L3E99          fcb       $05,$56,$41,$55,$4C,$54,$35 ; VAULT    53
38F5 06454E5452414E36 (      raakatu.asm):05062         L3EA0          fcb       $06,$45,$4E,$54,$52,$41,$4E,$36 ; ENTRAN   54
38FD 0654554E4E454C37 (      raakatu.asm):05063         L3EA8          fcb       $06,$54,$55,$4E,$4E,$45,$4C,$37 ; TUNNEL   55
3905 064A554E474C4538 (      raakatu.asm):05064         L3EB0          fcb       $06,$4A,$55,$4E,$47,$4C,$45,$38 ; JUNGLE   56
390D 0654454D504C4539 (      raakatu.asm):05065         L3EB8          fcb       $06,$54,$45,$4D,$50,$4C,$45,$39 ; TEMPLE   57
3915 035049543A       (      raakatu.asm):05066         L3EC0          fcb       $03,$50,$49,$54,$3A ; PIT      58
391A 064345494C494E3B (      raakatu.asm):05067         L3EC5          fcb       $06,$43,$45,$49,$4C,$49,$4E,$3B ; CEILIN   59
3922 00               (      raakatu.asm):05068         L3ECD          fcb       $00
                      (      raakatu.asm):05069         ;
                      (      raakatu.asm):05070         ; --- ADJECTIVES ---
3923 00               (      raakatu.asm):05071         L3ECE          fcb       $00
                      (      raakatu.asm):05072         ;
                      (      raakatu.asm):05073         ; --- PREPOSITIONS ---
3924 02544F01         (      raakatu.asm):05074         L3ECF          fcb       $02,$54,$4F,$01     ; TO       1
3928 045749544802     (      raakatu.asm):05075         L3ED3          fcb       $04,$57,$49,$54,$48,$02 ; WITH     2
392E 02415403         (      raakatu.asm):05076         L3ED9          fcb       $02,$41,$54,$03     ; AT       3
3932 05554E44455204   (      raakatu.asm):05077         L3EDD          fcb       $05,$55,$4E,$44,$45,$52,$04 ; UNDER    4
3939 02494E05         (      raakatu.asm):05078         L3EE4          fcb       $02,$49,$4E,$05     ; IN       5
393D 04494E544F05     (      raakatu.asm):05079         L3EE8          fcb       $04,$49,$4E,$54,$4F,$05 ; INTO     5
3943 034F555406       (      raakatu.asm):05080         L3EEE          fcb       $03,$4F,$55,$54,$06 ; OUT      6
3948 02555007         (      raakatu.asm):05081         L3EF3          fcb       $02,$55,$50,$07     ; UP       7
394C 04444F574E08     (      raakatu.asm):05082         L3EF7          fcb       $04,$44,$4F,$57,$4E,$08 ; DOWN     8
3952 044F56455209     (      raakatu.asm):05083         L3EFD          fcb       $04,$4F,$56,$45,$52,$09 ; OVER     9
3958 06424548494E440A (      raakatu.asm):05084         L3F03          fcb       $06,$42,$45,$48,$49,$4E,$44,$0A ; BEHIND   10
3960 0641524F554E440B (      raakatu.asm):05085         L3F0B          fcb       $06,$41,$52,$4F,$55,$4E,$44,$0B ; AROUND   11
3968 024F4E0C         (      raakatu.asm):05086         L3F13          fcb       $02,$4F,$4E,$0C     ; ON       12
396C 00               (      raakatu.asm):05087         L3F17          fcb       $00
                      (      raakatu.asm):05088         
                      (      raakatu.asm):05089         
396D 3436             (      raakatu.asm):05090         os9read  pshs  y,x,d
396F 4F               (      raakatu.asm):05091                  clra
3970 30E4             (      raakatu.asm):05092                  leax  ,s
3972 108E0001         (      raakatu.asm):05093                  ldy   #$0001
3976 103F89           (      raakatu.asm):05094                  os9   I$Read
3979 35B6             (      raakatu.asm):05095         ok       puls  d,x,y,pc
                      (      raakatu.asm):05096                  
397B 3436             (      raakatu.asm):05097         os9write pshs  y,x,d
397D 810D             (      raakatu.asm):05098                  cmpa  #$0D
397F 270D             (      raakatu.asm):05099                  beq   WriteCR
3981 8601             (      raakatu.asm):05100                  lda   #$01
3983 30E4             (      raakatu.asm):05101                  leax  ,s
3985 108E0001         (      raakatu.asm):05102                  ldy   #$0001
3989 103F8A           (      raakatu.asm):05103                  os9   I$Write
398C 200B             (      raakatu.asm):05104                  bra   DoCHROUT
398E                  (      raakatu.asm):05105         WriteCR
398E 8601             (      raakatu.asm):05106                  lda   #$01
3990 30E4             (      raakatu.asm):05107                  leax  ,s
3992 108E0001         (      raakatu.asm):05108                  ldy   #$0001
3996 103F8C           (      raakatu.asm):05109                  os9   I$WritLn
3999                  (      raakatu.asm):05110         DoCHROUT
3999 3536             (      raakatu.asm):05111                  puls  d,x,y
399B 39               (      raakatu.asm):05112          rts
399C 3416             (      raakatu.asm):05113                  pshs  x,b,a
399E 9E88             (      raakatu.asm):05114                  ldx   $88                      get cursor position
39A0 8108             (      raakatu.asm):05115                  cmpa  #$08                     backspace character?
39A2 260B             (      raakatu.asm):05116                  bne   LA31D            branch if not...
39A4 8C0400           (      raakatu.asm):05117                  cmpx  #$400            else is current screen pointer at top?
39A7 274C             (      raakatu.asm):05118                  beq   LA35D            branch if so...
39A9 8660             (      raakatu.asm):05119                  lda   #$60                     else put SPACE to erase character and move X back
39AB A782             (      raakatu.asm):05120                  sta   ,-x
39AD 2027             (      raakatu.asm):05121                  bra   LA344
39AF 810D             (      raakatu.asm):05122         LA31D    cmpa  #$0D
39B1 260E             (      raakatu.asm):05123                  bne   LA32F
39B3 9E88             (      raakatu.asm):05124                  ldx   $88
39B5 8660             (      raakatu.asm):05125         LA323    lda   #$60
39B7 A780             (      raakatu.asm):05126                  sta   ,x+
39B9 1F10             (      raakatu.asm):05127                  tfr   x,d
39BB C51F             (      raakatu.asm):05128                  bitb  #$1F
39BD 26F6             (      raakatu.asm):05129                  bne   LA323
39BF 2015             (      raakatu.asm):05130                  bra   LA344
39C1 8120             (      raakatu.asm):05131         LA32F    cmpa  #$20
39C3 2530             (      raakatu.asm):05132                  bcs   LA35D
39C5 4D               (      raakatu.asm):05133                  tsta
39C6 2B0C             (      raakatu.asm):05134                  bmi   LA342
39C8 8140             (      raakatu.asm):05135                  cmpa  #$40
39CA 2506             (      raakatu.asm):05136                  bcs   LA340
39CC 8160             (      raakatu.asm):05137                  CMPA  #$60
39CE 2504             (      raakatu.asm):05138                  bcs   LA342
39D0 84DF             (      raakatu.asm):05139                  anda  #$DF
39D2 8840             (      raakatu.asm):05140         LA340    eora  #$40
39D4 A780             (      raakatu.asm):05141         LA342    sta   ,x+
39D6 9F88             (      raakatu.asm):05142         LA344    stx   $88
39D8 8C05FF           (      raakatu.asm):05143                  cmpx  #$400+511
39DB 2318             (      raakatu.asm):05144                  bls   LA35D
39DD 8E0400           (      raakatu.asm):05145                  ldx   #$400
                      (      raakatu.asm):05146         
                      (      raakatu.asm):05147         * SCROLL SCREEN
39E0 EC8820           (      raakatu.asm):05148         LA34E    ldd   32,x
39E3 ED81             (      raakatu.asm):05149                  std   ,x++
39E5 8C05E0           (      raakatu.asm):05150                  cmpx  #$400+$1E0
39E8 25F6             (      raakatu.asm):05151                  bcs   LA34E
39EA C660             (      raakatu.asm):05152                  ldb   #$60
39EC 9F88             (      raakatu.asm):05153         LA92D    stx   $88
39EE E780             (      raakatu.asm):05154         LA92F    stb   ,x+
39F0 8C05FF           (      raakatu.asm):05155                  cmpx  #$400+511
39F3 23F9             (      raakatu.asm):05156                  bls   LA92F
39F5 3596             (      raakatu.asm):05157         LA35D    puls  d,x,pc
                      (      raakatu.asm):05158         
39F7 103F06           (      raakatu.asm):05159         os9exit  os9   F$Exit
                      (      raakatu.asm):05160         
39FA 127E09           (      raakatu.asm):05161                        emod
     39FD             (      raakatu.asm):05162         eom            equ       *
                      (      raakatu.asm):05163                                    end
