                      (../cmds/BBS.reply):00001                    nam    BBS.reply
                      (../cmds/BBS.reply):00002                    ttl    program module
                      (../cmds/BBS.reply):00003         
                      (../cmds/BBS.reply):00004                    ifp1
                      (../cmds/BBS.reply):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/BBS.reply):00006                    endc
                      (../cmds/BBS.reply):00007         
     0011             (../cmds/BBS.reply):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/BBS.reply):00009         atrv       set    ReEnt+rev
     0001             (../cmds/BBS.reply):00010         rev        set    $01
                      (../cmds/BBS.reply):00011         
0000 87CD0883000D1181 (../cmds/BBS.reply):00012                    mod    eom,name,tylg,atrv,start,size
     A301D022CB
                      (../cmds/BBS.reply):00013         
0000.                 (../cmds/BBS.reply):00014         U0000      rmb    1
0001.                 (../cmds/BBS.reply):00015         U0001      rmb    1
0002.                 (../cmds/BBS.reply):00016         U0002      rmb    1
0003.                 (../cmds/BBS.reply):00017         U0003      rmb    1
0004.                 (../cmds/BBS.reply):00018         U0004      rmb    1
0005.                 (../cmds/BBS.reply):00019         U0005      rmb    1
0006.                 (../cmds/BBS.reply):00020         U0006      rmb    1
0007.                 (../cmds/BBS.reply):00021         U0007      rmb    1
0008.                 (../cmds/BBS.reply):00022         U0008      rmb    2
000A.                 (../cmds/BBS.reply):00023         U000A      rmb    2
000C.                 (../cmds/BBS.reply):00024         U000C      rmb    1
000D.                 (../cmds/BBS.reply):00025         U000D      rmb    1
000E.                 (../cmds/BBS.reply):00026         U000E      rmb    1
000F.                 (../cmds/BBS.reply):00027         U000F      rmb    1
0010.                 (../cmds/BBS.reply):00028         U0010      rmb    2
0012.                 (../cmds/BBS.reply):00029         U0012      rmb    2
0014.                 (../cmds/BBS.reply):00030         U0014      rmb    2
0016.                 (../cmds/BBS.reply):00031         U0016      rmb    1
0017.                 (../cmds/BBS.reply):00032         U0017      rmb    1
0018.                 (../cmds/BBS.reply):00033         U0018      rmb    2
001A.                 (../cmds/BBS.reply):00034         U001A      rmb    2
001C.                 (../cmds/BBS.reply):00035         U001C      rmb    200
00E4.                 (../cmds/BBS.reply):00036         U00E4      rmb    1
00E5.                 (../cmds/BBS.reply):00037         U00E5      rmb    5
00EA.                 (../cmds/BBS.reply):00038         U00EA      rmb    1
00EB.                 (../cmds/BBS.reply):00039         U00EB      rmb    2
00ED.                 (../cmds/BBS.reply):00040         U00ED      rmb    2
00EF.                 (../cmds/BBS.reply):00041         U00EF      rmb    60
012B.                 (../cmds/BBS.reply):00042         U012B      rmb    2
012D.                 (../cmds/BBS.reply):00043         U012D      rmb    2
012F.                 (../cmds/BBS.reply):00044         U012F      rmb    20
0143.                 (../cmds/BBS.reply):00045         U0143      rmb    30
0161.                 (../cmds/BBS.reply):00046         U0161      rmb    6
0167.                 (../cmds/BBS.reply):00047         U0167      rmb    2
0169.                 (../cmds/BBS.reply):00048         U0169      rmb    2
016B.                 (../cmds/BBS.reply):00049         U016B      rmb    2
016D.                 (../cmds/BBS.reply):00050         U016D      rmb    2
016F.                 (../cmds/BBS.reply):00051         U016F      rmb    6
0175.                 (../cmds/BBS.reply):00052         U0175      rmb    2
0177.                 (../cmds/BBS.reply):00053         U0177      rmb    2
0179.                 (../cmds/BBS.reply):00054         U0179      rmb    2
017B.                 (../cmds/BBS.reply):00055         U017B      rmb    16
018B.                 (../cmds/BBS.reply):00056         U018B      rmb    8000
20CB.                 (../cmds/BBS.reply):00057         U20CB      rmb    80
211B.                 (../cmds/BBS.reply):00058         U211B      rmb    32
213B.                 (../cmds/BBS.reply):00059         U213B      rmb    1
213C.                 (../cmds/BBS.reply):00060         U213C      rmb    399
     22CB             (../cmds/BBS.reply):00061         size       equ    .
                      (../cmds/BBS.reply):00062         
000D 4242532E7265706C (../cmds/BBS.reply):00063         name       fcs    /BBS.reply/                                            * 000D 42 42 53 2E 72 65 70 6C F9 BBS.reply
     F9
0016 436F707972696768 (../cmds/BBS.reply):00064                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0016 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
0073 EC               (../cmds/BBS.reply):00065                    fcb    $EC                                                   * 0073 EC             l
0074 E6               (../cmds/BBS.reply):00066                    fcb    $E6                                                   * 0074 E6             f
0075 EA               (../cmds/BBS.reply):00067                    fcb    $EA                                                   * 0075 EA             j
0076 F5               (../cmds/BBS.reply):00068                    fcb    $F5                                                   * 0076 F5             u
0077 E9               (../cmds/BBS.reply):00069                    fcb    $E9                                                   * 0077 E9             i
0078 A0               (../cmds/BBS.reply):00070                    fcb    $A0                                                   * 0078 A0
0079 E2               (../cmds/BBS.reply):00071                    fcb    $E2                                                   * 0079 E2             b
007A ED               (../cmds/BBS.reply):00072                    fcb    $ED                                                   * 007A ED             m
007B F1               (../cmds/BBS.reply):00073                    fcb    $F1                                                   * 007B F1             q
007C E9               (../cmds/BBS.reply):00074                    fcb    $E9                                                   * 007C E9             i
007D F0               (../cmds/BBS.reply):00075                    fcb    $F0                                                   * 007D F0             p
007E EF               (../cmds/BBS.reply):00076                    fcb    $EF                                                   * 007E EF             o
007F F4               (../cmds/BBS.reply):00077                    fcb    $F4                                                   * 007F F4             t
0080 F0               (../cmds/BBS.reply):00078                    fcb    $F0                                                   * 0080 F0             p
0081 4242532E6D73672E (../cmds/BBS.reply):00079         L0081      fcc    "BBS.msg.inx"                                         * 0081 42 42 53 2E 6D 73 67 2E 69 6E 78 BBS.msg.inx
     696E78
008C 0D               (../cmds/BBS.reply):00080                    fcb    $0D                                                   * 008C 0D             .
008D 4242532E6D7367   (../cmds/BBS.reply):00081         L008D      fcc    "BBS.msg"                                             * 008D 42 42 53 2E 6D 73 67 BBS.msg
0094 0D               (../cmds/BBS.reply):00082                    fcb    $0D                                                   * 0094 0D             .
0095 0A               (../cmds/BBS.reply):00083                    fcb    $0A                                                   * 0095 0A             .
0096 456E746572207375 (../cmds/BBS.reply):00084                    fcc    "Enter subject of message"                            * 0096 45 6E 74 65 72 20 73 75 62 6A 65 63 74 20 6F 66 20 6D 65 73 73 61 67 65 Enter subject of message
     626A656374206F66
     206D657373616765
00AE 0D               (../cmds/BBS.reply):00085                    fcb    $0D                                                   * 00AE 0D             .
00AF 0A               (../cmds/BBS.reply):00086                    fcb    $0A                                                   * 00AF 0A             .
00B0 3E               (../cmds/BBS.reply):00087                    fcb    $3E                                                   * 00B0 3E             >
00B1 00               (../cmds/BBS.reply):00088                    fcb    $00                                                   * 00B1 00             .
00B2 1C               (../cmds/BBS.reply):00089                    fcb    $1C                                                   * 00B2 1C             .
00B3 0A               (../cmds/BBS.reply):00090         L00B3      fcb    $0A                                                   * 00B3 0A             .
00B4 0A               (../cmds/BBS.reply):00091                    fcb    $0A                                                   * 00B4 0A             .
00B5 20202020506C6561 (../cmds/BBS.reply):00092                    fcc    "    Please enter message now            (Blank line ends)" * 00B5 20 20 20 20 50 6C 65 61 73 65 20 65 6E 74 65 72 20 6D 65 73 73 61 67 65 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29     Please enter message now            (Blank line ends)
     736520656E746572
     206D657373616765
     206E6F7720202020
     2020202020202020
     28426C616E6B206C
     696E6520656E6473
     29
00EE 0D               (../cmds/BBS.reply):00093                    fcb    $0D                                                   * 00EE 0D             .
00EF 2D2D2D2D2D2D2D2D (../cmds/BBS.reply):00094         L00EF      fcc    "----------------------------------------------------------------" * 00EF 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
012F 0D               (../cmds/BBS.reply):00095                    fcb    $0D                                                   * 012F 0D             .
0130 2F64642F6262732F (../cmds/BBS.reply):00096         L0130      fcc    "/dd/bbs/BBS.alias"                                   * 0130 2F 64 64 2F 62 62 73 2F 42 42 53 2E 61 6C 69 61 73 /dd/bbs/BBS.alias
     4242532E616C6961
     73
0141 0D               (../cmds/BBS.reply):00097                    fcb    $0D                                                   * 0141 0D             .
0142 0A               (../cmds/BBS.reply):00098         L0142      fcb    $0A                                                   * 0142 0A             .
0143 5B415D626F727420 (../cmds/BBS.reply):00099                    fcc    "[A]bort [D]one [E]dit [C]ontinue or [L]ist"          * 0143 5B 41 5D 62 6F 72 74 20 5B 44 5D 6F 6E 65 20 5B 45 5D 64 69 74 20 5B 43 5D 6F 6E 74 69 6E 75 65 20 6F 72 20 5B 4C 5D 69 73 74 [A]bort [D]one [E]dit [C]ontinue or [L]ist
     5B445D6F6E65205B
     455D646974205B43
     5D6F6E74696E7565
     206F72205B4C5D69
     7374
016D 0D               (../cmds/BBS.reply):00100                    fcb    $0D                                                   * 016D 0D             .
016E 456E746572206C69 (../cmds/BBS.reply):00101         L016E      fcc    "Enter line #"                                        * 016E 45 6E 74 65 72 20 6C 69 6E 65 20 23 Enter line #
     6E652023
017A 0D               (../cmds/BBS.reply):00102                    fcb    $0D                                                   * 017A 0D             .
017B 3E               (../cmds/BBS.reply):00103         L017B      fcb    $3E                                                   * 017B 3E             >
017C 0A               (../cmds/BBS.reply):00104         L017C      fcb    $0A                                                   * 017C 0A             .
017D 0D               (../cmds/BBS.reply):00105                    fcb    $0D                                                   * 017D 0D             .
017E 08               (../cmds/BBS.reply):00106         L017E      fcb    $08                                                   * 017E 08             .
017F 20               (../cmds/BBS.reply):00107                    fcb    $20                                                   * 017F 20
0180 08               (../cmds/BBS.reply):00108                    fcb    $08                                                   * 0180 08             .
0181 2F64642F6262732F (../cmds/BBS.reply):00109         L0181      fcc    "/dd/bbs/BBS.userstats"                               * 0181 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
0196 0D               (../cmds/BBS.reply):00110                    fcb    $0D                                                   * 0196 0D             .
0197 55736572206E616D (../cmds/BBS.reply):00111         L0197      fcc    "User name not found!"                                * 0197 55 73 65 72 20 6E 61 6D 65 20 6E 6F 74 20 66 6F 75 6E 64 21 User name not found!
     65206E6F7420666F
     756E6421
01AB 0D               (../cmds/BBS.reply):00112                    fcb    $0D                                                   * 01AB 0D             .
01AC 4164647265737320 (../cmds/BBS.reply):00113         L01AC      fcc    "Address message to (BLANK for ALL)"                  * 01AC 41 64 64 72 65 73 73 20 6D 65 73 73 61 67 65 20 74 6F 20 28 42 4C 41 4E 4B 20 66 6F 72 20 41 4C 4C 29 Address message to (BLANK for ALL)
     6D65737361676520
     746F2028424C414E
     4B20666F7220414C
     4C29
01CE 0D               (../cmds/BBS.reply):00114                    fcb    $0D                                                   * 01CE 0D             .
01CF 0A               (../cmds/BBS.reply):00115                    fcb    $0A                                                   * 01CF 0A             .
01D0 AF48             (../cmds/BBS.reply):00116         start      stx    U0008,U                                               * 01D0 AF 48          /H
01D2 6FC900EA         (../cmds/BBS.reply):00117                    clr    >U00EA,U                                              * 01D2 6F C9 00 EA    oI.j
01D6 6FC900E4         (../cmds/BBS.reply):00118                    clr    >U00E4,U                                              * 01D6 6F C9 00 E4    oI.d
01DA 6F46             (../cmds/BBS.reply):00119                    clr    U0006,U                                               * 01DA 6F 46          oF
01DC 103F0C           (../cmds/BBS.reply):00120                    os9    F$ID                                                  * 01DC 10 3F 0C       .?.
01DF 10250458         (../cmds/BBS.reply):00121                    lbcs   L063B                                                 * 01DF 10 25 04 58    .%.X
01E3 10AF4A           (../cmds/BBS.reply):00122                    sty    U000A,U                                               * 01E3 10 AF 4A       ./J
01E6 108E0000         (../cmds/BBS.reply):00123                    ldy    #0                                                    * 01E6 10 8E 00 00    ....
01EA 103F1C           (../cmds/BBS.reply):00124                    os9    F$SUser                                               * 01EA 10 3F 1C       .?.
01ED 1025044A         (../cmds/BBS.reply):00125                    lbcs   L063B                                                 * 01ED 10 25 04 4A    .%.J
01F1 308DFE8C         (../cmds/BBS.reply):00126                    leax   >L0081,PC                                             * 01F1 30 8D FE 8C    0.~.
01F5 8603             (../cmds/BBS.reply):00127                    lda    #3                                                    * 01F5 86 03          ..
01F7 103F84           (../cmds/BBS.reply):00128                    os9    I$Open                                                * 01F7 10 3F 84       .?.
01FA 1025043D         (../cmds/BBS.reply):00129                    lbcs   L063B                                                 * 01FA 10 25 04 3D    .%.=
01FE A7C4             (../cmds/BBS.reply):00130                    sta    U0000,U                                               * 01FE A7 C4          'D
0200 30C900EB         (../cmds/BBS.reply):00131                    leax   >U00EB,U                                              * 0200 30 C9 00 EB    0I.k
0204 108E0040         (../cmds/BBS.reply):00132                    ldy    #64                                                   * 0204 10 8E 00 40    ...@
0208 A6C4             (../cmds/BBS.reply):00133                    lda    U0000,U                                               * 0208 A6 C4          &D
020A 103F89           (../cmds/BBS.reply):00134                    os9    I$Read                                                * 020A 10 3F 89       .?.
020D 1025042A         (../cmds/BBS.reply):00135                    lbcs   L063B                                                 * 020D 10 25 04 2A    .%.*
0211 8606             (../cmds/BBS.reply):00136                    lda    #6                                                    * 0211 86 06          ..
0213 A743             (../cmds/BBS.reply):00137                    sta    U0003,U                                               * 0213 A7 43          'C
0215 ECC900EB         (../cmds/BBS.reply):00138                    ldd    >U00EB,U                                              * 0215 EC C9 00 EB    lI.k
0219 C30001           (../cmds/BBS.reply):00139                    addd   #1                                                    * 0219 C3 00 01       C..
021C EDC900EB         (../cmds/BBS.reply):00140                    std    >U00EB,U                                              * 021C ED C9 00 EB    mI.k
0220 6F4E             (../cmds/BBS.reply):00141                    clr    U000E,U                                               * 0220 6F 4E          oN
0222 6F4F             (../cmds/BBS.reply):00142                    clr    U000F,U                                               * 0222 6F 4F          oO
0224 58               (../cmds/BBS.reply):00143         L0224      aslb                                                         * 0224 58             X
0225 49               (../cmds/BBS.reply):00144                    rola                                                         * 0225 49             I
0226 694F             (../cmds/BBS.reply):00145                    rol    U000F,U                                               * 0226 69 4F          iO
0228 6A43             (../cmds/BBS.reply):00146                    dec    U0003,U                                               * 0228 6A 43          jC
022A 26F8             (../cmds/BBS.reply):00147                    bne    L0224                                                 * 022A 26 F8          &x
022C EDC810           (../cmds/BBS.reply):00148                    std    <U0010,U                                              * 022C ED C8 10       mH.
022F A6C4             (../cmds/BBS.reply):00149                    lda    U0000,U                                               * 022F A6 C4          &D
0231 AE4E             (../cmds/BBS.reply):00150                    ldx    U000E,U                                               * 0231 AE 4E          .N
0233 3440             (../cmds/BBS.reply):00151                    pshs   U                                                     * 0233 34 40          4@
0235 EEC810           (../cmds/BBS.reply):00152                    ldu    <U0010,U                                              * 0235 EE C8 10       nH.
0238 103F88           (../cmds/BBS.reply):00153                    os9    I$Seek                                                * 0238 10 3F 88       .?.
023B 102503FC         (../cmds/BBS.reply):00154                    lbcs   L063B                                                 * 023B 10 25 03 FC    .%.|
023F 3540             (../cmds/BBS.reply):00155                    puls   U                                                     * 023F 35 40          5@
0241 30C90161         (../cmds/BBS.reply):00156                    leax   >U0161,U                                              * 0241 30 C9 01 61    0I.a
0245 103F15           (../cmds/BBS.reply):00157                    os9    F$Time                                                * 0245 10 3F 15       .?.
0248 AE48             (../cmds/BBS.reply):00158                    ldx    U0008,U                                               * 0248 AE 48          .H
024A 31C90143         (../cmds/BBS.reply):00159                    leay   >U0143,U                                              * 024A 31 C9 01 43    1I.C
024E C61E             (../cmds/BBS.reply):00160                    ldb    #30                                                   * 024E C6 1E          F.
0250 A680             (../cmds/BBS.reply):00161         L0250      lda    ,X+                                                   * 0250 A6 80          &.
0252 A7A0             (../cmds/BBS.reply):00162                    sta    ,Y+                                                   * 0252 A7 A0          '
0254 810D             (../cmds/BBS.reply):00163                    cmpa   #13                                                   * 0254 81 0D          ..
0256 2703             (../cmds/BBS.reply):00164                    beq    L025B                                                 * 0256 27 03          '.
0258 5A               (../cmds/BBS.reply):00165                    decb                                                         * 0258 5A             Z
0259 26F5             (../cmds/BBS.reply):00166                    bne    L0250                                                 * 0259 26 F5          &u
025B 308DFED1         (../cmds/BBS.reply):00167         L025B      leax   >L0130,PC                                             * 025B 30 8D FE D1    0.~Q
025F 8601             (../cmds/BBS.reply):00168                    lda    #1                                                    * 025F 86 01          ..
0261 103F84           (../cmds/BBS.reply):00169                    os9    I$Open                                                * 0261 10 3F 84       .?.
0264 102503D3         (../cmds/BBS.reply):00170                    lbcs   L063B                                                 * 0264 10 25 03 D3    .%.S
0268 A742             (../cmds/BBS.reply):00171                    sta    U0002,U                                               * 0268 A7 42          'B
026A 308DFF3E         (../cmds/BBS.reply):00172         L026A      leax   >L01AC,PC                                             * 026A 30 8D FF 3E    0..>
026E 108E0024         (../cmds/BBS.reply):00173                    ldy    #36                                                   * 026E 10 8E 00 24    ...$
0272 8601             (../cmds/BBS.reply):00174                    lda    #1                                                    * 0272 86 01          ..
0274 103F8A           (../cmds/BBS.reply):00175                    os9    I$Write                                               * 0274 10 3F 8A       .?.
0277 30C9213B         (../cmds/BBS.reply):00176                    leax   >U213B,U                                              * 0277 30 C9 21 3B    0I!;
027B 108E00C8         (../cmds/BBS.reply):00177                    ldy    #200                                                  * 027B 10 8E 00 C8    ...H
027F 4F               (../cmds/BBS.reply):00178                    clra                                                         * 027F 4F             O
0280 103F8B           (../cmds/BBS.reply):00179                    os9    I$ReadLn                                              * 0280 10 3F 8B       .?.
0283 108C0001         (../cmds/BBS.reply):00180                    cmpy   #1                                                    * 0283 10 8C 00 01    ....
0287 2F68             (../cmds/BBS.reply):00181                    ble    L02F1                                                 * 0287 2F 68          /h
0289 A680             (../cmds/BBS.reply):00182         L0289      lda    ,X+                                                   * 0289 A6 80          &.
028B 84DF             (../cmds/BBS.reply):00183                    anda   #223                                                  * 028B 84 DF          ._
028D A71F             (../cmds/BBS.reply):00184                    sta    -$01,X                                                * 028D A7 1F          '.
028F 810D             (../cmds/BBS.reply):00185                    cmpa   #13                                                   * 028F 81 0D          ..
0291 26F6             (../cmds/BBS.reply):00186                    bne    L0289                                                 * 0291 26 F6          &v
0293 30C81C           (../cmds/BBS.reply):00187         L0293      leax   <U001C,U                                              * 0293 30 C8 1C       0H.
0296 108E00C8         (../cmds/BBS.reply):00188                    ldy    #200                                                  * 0296 10 8E 00 C8    ...H
029A A642             (../cmds/BBS.reply):00189                    lda    U0002,U                                               * 029A A6 42          &B
029C 103F8B           (../cmds/BBS.reply):00190                    os9    I$ReadLn                                              * 029C 10 3F 8B       .?.
029F 2533             (../cmds/BBS.reply):00191                    bcs    L02D4                                                 * 029F 25 33          %3
02A1 31C9213B         (../cmds/BBS.reply):00192                    leay   >U213B,U                                              * 02A1 31 C9 21 3B    1I!;
02A5 30C81C           (../cmds/BBS.reply):00193                    leax   <U001C,U                                              * 02A5 30 C8 1C       0H.
02A8 A680             (../cmds/BBS.reply):00194         L02A8      lda    ,X+                                                   * 02A8 A6 80          &.
02AA 812C             (../cmds/BBS.reply):00195                    cmpa   #44                                                   * 02AA 81 2C          .,
02AC 2708             (../cmds/BBS.reply):00196                    beq    L02B6                                                 * 02AC 27 08          '.
02AE 84DF             (../cmds/BBS.reply):00197                    anda   #223                                                  * 02AE 84 DF          ._
02B0 A1A0             (../cmds/BBS.reply):00198                    cmpa   ,Y+                                                   * 02B0 A1 A0          !
02B2 26DF             (../cmds/BBS.reply):00199                    bne    L0293                                                 * 02B2 26 DF          &_
02B4 20F2             (../cmds/BBS.reply):00200                    bra    L02A8                                                 * 02B4 20 F2           r
02B6 A6A0             (../cmds/BBS.reply):00201         L02B6      lda    ,Y+                                                   * 02B6 A6 A0          &
02B8 810D             (../cmds/BBS.reply):00202                    cmpa   #13                                                   * 02B8 81 0D          ..
02BA 26D7             (../cmds/BBS.reply):00203                    bne    L0293                                                 * 02BA 26 D7          &W
02BC 170513           (../cmds/BBS.reply):00204                    lbsr   L07D2                                                 * 02BC 17 05 13       ...
02BF EDC90169         (../cmds/BBS.reply):00205                    std    >U0169,U                                              * 02BF ED C9 01 69    mI.i
02C3 A642             (../cmds/BBS.reply):00206                    lda    U0002,U                                               * 02C3 A6 42          &B
02C5 3440             (../cmds/BBS.reply):00207                    pshs   U                                                     * 02C5 34 40          4@
02C7 CE0000           (../cmds/BBS.reply):00208                    ldu    #0                                                    * 02C7 CE 00 00       N..
02CA 8E0000           (../cmds/BBS.reply):00209                    ldx    #0                                                    * 02CA 8E 00 00       ...
02CD 103F88           (../cmds/BBS.reply):00210                    os9    I$Seek                                                * 02CD 10 3F 88       .?.
02D0 3540             (../cmds/BBS.reply):00211                    puls   U                                                     * 02D0 35 40          5@
02D2 2024             (../cmds/BBS.reply):00212                    bra    L02F8                                                 * 02D2 20 24           $
02D4 308DFEBF         (../cmds/BBS.reply):00213         L02D4      leax   >L0197,PC                                             * 02D4 30 8D FE BF    0.~?
02D8 108E00C8         (../cmds/BBS.reply):00214                    ldy    #200                                                  * 02D8 10 8E 00 C8    ...H
02DC 8601             (../cmds/BBS.reply):00215                    lda    #1                                                    * 02DC 86 01          ..
02DE 103F8C           (../cmds/BBS.reply):00216                    os9    I$WritLn                                              * 02DE 10 3F 8C       .?.
02E1 A642             (../cmds/BBS.reply):00217                    lda    U0002,U                                               * 02E1 A6 42          &B
02E3 3440             (../cmds/BBS.reply):00218                    pshs   U                                                     * 02E3 34 40          4@
02E5 CE0000           (../cmds/BBS.reply):00219                    ldu    #0                                                    * 02E5 CE 00 00       N..
02E8 8E0000           (../cmds/BBS.reply):00220                    ldx    #0                                                    * 02E8 8E 00 00       ...
02EB 103F88           (../cmds/BBS.reply):00221                    os9    I$Seek                                                * 02EB 10 3F 88       .?.
02EE 16FF79           (../cmds/BBS.reply):00222                    lbra   L026A                                                 * 02EE 16 FF 79       ..y
02F1 CCFFFF           (../cmds/BBS.reply):00223         L02F1      ldd    #-1                                                   * 02F1 CC FF FF       L..
02F4 EDC90169         (../cmds/BBS.reply):00224                    std    >U0169,U                                              * 02F4 ED C9 01 69    mI.i
02F8 308DFDB7         (../cmds/BBS.reply):00225         L02F8      leax   >L00B3,PC                                             * 02F8 30 8D FD B7    0.}7
02FC 108E00C8         (../cmds/BBS.reply):00226                    ldy    #200                                                  * 02FC 10 8E 00 C8    ...H
0300 8601             (../cmds/BBS.reply):00227                    lda    #1                                                    * 0300 86 01          ..
0302 103F8C           (../cmds/BBS.reply):00228                    os9    I$WritLn                                              * 0302 10 3F 8C       .?.
0305 10250332         (../cmds/BBS.reply):00229                    lbcs   L063B                                                 * 0305 10 25 03 32    .%.2
0309 308DFDE2         (../cmds/BBS.reply):00230                    leax   >L00EF,PC                                             * 0309 30 8D FD E2    0.}b
030D 108E0050         (../cmds/BBS.reply):00231                    ldy    #80                                                   * 030D 10 8E 00 50    ...P
0311 103F8C           (../cmds/BBS.reply):00232                    os9    I$WritLn                                              * 0311 10 3F 8C       .?.
0314 10250323         (../cmds/BBS.reply):00233                    lbcs   L063B                                                 * 0314 10 25 03 23    .%.#
0318 CC0000           (../cmds/BBS.reply):00234                    ldd    #0                                                    * 0318 CC 00 00       L..
031B ED4C             (../cmds/BBS.reply):00235                    std    U000C,U                                               * 031B ED 4C          mL
031D EC4C             (../cmds/BBS.reply):00236         L031D      ldd    U000C,U                                               * 031D EC 4C          lL
031F C30001           (../cmds/BBS.reply):00237                    addd   #1                                                    * 031F C3 00 01       C..
0322 ED4C             (../cmds/BBS.reply):00238                    std    U000C,U                                               * 0322 ED 4C          mL
0324 10830063         (../cmds/BBS.reply):00239                    cmpd   #99                                                   * 0324 10 83 00 63    ...c
0328 2C0B             (../cmds/BBS.reply):00240                    bge    L0335                                                 * 0328 2C 0B          ,.
032A 170105           (../cmds/BBS.reply):00241                    lbsr   L0432                                                 * 032A 17 01 05       ...
032D 108C0001         (../cmds/BBS.reply):00242                    cmpy   #1                                                    * 032D 10 8C 00 01    ....
0331 2302             (../cmds/BBS.reply):00243                    bls    L0335                                                 * 0331 23 02          #.
0333 20E8             (../cmds/BBS.reply):00244                    bra    L031D                                                 * 0333 20 E8           h
0335 308DFE09         (../cmds/BBS.reply):00245         L0335      leax   >L0142,PC                                             * 0335 30 8D FE 09    0.~.
0339 108E00C8         (../cmds/BBS.reply):00246                    ldy    #200                                                  * 0339 10 8E 00 C8    ...H
033D 8601             (../cmds/BBS.reply):00247                    lda    #1                                                    * 033D 86 01          ..
033F 103F8C           (../cmds/BBS.reply):00248                    os9    I$WritLn                                              * 033F 10 3F 8C       .?.
0342 308DFE35         (../cmds/BBS.reply):00249                    leax   >L017B,PC                                             * 0342 30 8D FE 35    0.~5
0346 108E0001         (../cmds/BBS.reply):00250                    ldy    #1                                                    * 0346 10 8E 00 01    ....
034A 103F8A           (../cmds/BBS.reply):00251                    os9    I$Write                                               * 034A 10 3F 8A       .?.
034D 3045             (../cmds/BBS.reply):00252                    leax   U0005,U                                               * 034D 30 45          0E
034F 4F               (../cmds/BBS.reply):00253                    clra                                                         * 034F 4F             O
0350 108E0001         (../cmds/BBS.reply):00254                    ldy    #1                                                    * 0350 10 8E 00 01    ....
0354 103F89           (../cmds/BBS.reply):00255                    os9    I$Read                                                * 0354 10 3F 89       .?.
0357 308DFE21         (../cmds/BBS.reply):00256                    leax   >L017C,PC                                             * 0357 30 8D FE 21    0.~!
035B 108E0001         (../cmds/BBS.reply):00257                    ldy    #1                                                    * 035B 10 8E 00 01    ....
035F 8601             (../cmds/BBS.reply):00258                    lda    #1                                                    * 035F 86 01          ..
0361 103F8C           (../cmds/BBS.reply):00259                    os9    I$WritLn                                              * 0361 10 3F 8C       .?.
0364 A645             (../cmds/BBS.reply):00260                    lda    U0005,U                                               * 0364 A6 45          &E
0366 84DF             (../cmds/BBS.reply):00261                    anda   #223                                                  * 0366 84 DF          ._
0368 8141             (../cmds/BBS.reply):00262                    cmpa   #65                                                   * 0368 81 41          .A
036A 102702D0         (../cmds/BBS.reply):00263                    lbeq   L063E                                                 * 036A 10 27 02 D0    .'.P
036E 8144             (../cmds/BBS.reply):00264                    cmpa   #68                                                   * 036E 81 44          .D
0370 10270113         (../cmds/BBS.reply):00265                    lbeq   L0487                                                 * 0370 10 27 01 13    .'..
0374 8145             (../cmds/BBS.reply):00266                    cmpa   #69                                                   * 0374 81 45          .E
0376 2713             (../cmds/BBS.reply):00267                    beq    L038B                                                 * 0376 27 13          '.
0378 8143             (../cmds/BBS.reply):00268                    cmpa   #67                                                   * 0378 81 43          .C
037A 2706             (../cmds/BBS.reply):00269                    beq    L0382                                                 * 037A 27 06          '.
037C 814C             (../cmds/BBS.reply):00270                    cmpa   #76                                                   * 037C 81 4C          .L
037E 2771             (../cmds/BBS.reply):00271                    beq    L03F1                                                 * 037E 27 71          'q
0380 20B3             (../cmds/BBS.reply):00272                    bra    L0335                                                 * 0380 20 B3           3
0382 EC4C             (../cmds/BBS.reply):00273         L0382      ldd    U000C,U                                               * 0382 EC 4C          lL
0384 830001           (../cmds/BBS.reply):00274                    subd   #1                                                    * 0384 83 00 01       ...
0387 ED4C             (../cmds/BBS.reply):00275                    std    U000C,U                                               * 0387 ED 4C          mL
0389 2092             (../cmds/BBS.reply):00276                    bra    L031D                                                 * 0389 20 92           .
038B 308DFDDF         (../cmds/BBS.reply):00277         L038B      leax   >L016E,PC                                             * 038B 30 8D FD DF    0.}_
038F 108E00C8         (../cmds/BBS.reply):00278                    ldy    #200                                                  * 038F 10 8E 00 C8    ...H
0393 8601             (../cmds/BBS.reply):00279                    lda    #1                                                    * 0393 86 01          ..
0395 103F8C           (../cmds/BBS.reply):00280                    os9    I$WritLn                                              * 0395 10 3F 8C       .?.
0398 308DFDDF         (../cmds/BBS.reply):00281                    leax   >L017B,PC                                             * 0398 30 8D FD DF    0.}_
039C 108E0001         (../cmds/BBS.reply):00282                    ldy    #1                                                    * 039C 10 8E 00 01    ....
03A0 103F8A           (../cmds/BBS.reply):00283                    os9    I$Write                                               * 03A0 10 3F 8A       .?.
03A3 4F               (../cmds/BBS.reply):00284                    clra                                                         * 03A3 4F             O
03A4 30C900E5         (../cmds/BBS.reply):00285                    leax   >U00E5,U                                              * 03A4 30 C9 00 E5    0I.e
03A8 108E0003         (../cmds/BBS.reply):00286                    ldy    #3                                                    * 03A8 10 8E 00 03    ....
03AC 103F8B           (../cmds/BBS.reply):00287                    os9    I$ReadLn                                              * 03AC 10 3F 8B       .?.
03AF 170420           (../cmds/BBS.reply):00288                    lbsr   L07D2                                                 * 03AF 17 04 20       ..
03B2 10A34C           (../cmds/BBS.reply):00289                    cmpd   U000C,U                                               * 03B2 10 A3 4C       .#L
03B5 1024FF7C         (../cmds/BBS.reply):00290                    lbcc   L0335                                                 * 03B5 10 24 FF 7C    .$.|
03B9 EDC81A           (../cmds/BBS.reply):00291                    std    <U001A,U                                              * 03B9 ED C8 1A       mH.
03BC 30C900E5         (../cmds/BBS.reply):00292                    leax   >U00E5,U                                              * 03BC 30 C9 00 E5    0I.e
03C0 17047F           (../cmds/BBS.reply):00293                    lbsr   L0842                                                 * 03C0 17 04 7F       ...
03C3 30C900E5         (../cmds/BBS.reply):00294                    leax   >U00E5,U                                              * 03C3 30 C9 00 E5    0I.e
03C7 863A             (../cmds/BBS.reply):00295                    lda    #58                                                   * 03C7 86 3A          .:
03C9 A702             (../cmds/BBS.reply):00296                    sta    $02,X                                                 * 03C9 A7 02          '.
03CB 108E0003         (../cmds/BBS.reply):00297                    ldy    #3                                                    * 03CB 10 8E 00 03    ....
03CF 8601             (../cmds/BBS.reply):00298                    lda    #1                                                    * 03CF 86 01          ..
03D1 103F8A           (../cmds/BBS.reply):00299                    os9    I$Write                                               * 03D1 10 3F 8A       .?.
03D4 ECC81A           (../cmds/BBS.reply):00300                    ldd    <U001A,U                                              * 03D4 EC C8 1A       lH.
03D7 30C9018B         (../cmds/BBS.reply):00301                    leax   >U018B,U                                              * 03D7 30 C9 01 8B    0I..
03DB 8650             (../cmds/BBS.reply):00302                    lda    #80                                                   * 03DB 86 50          .P
03DD 3D               (../cmds/BBS.reply):00303                    mul                                                          * 03DD 3D             =
03DE 308B             (../cmds/BBS.reply):00304                    leax   D,X                                                   * 03DE 30 8B          0.
03E0 108E0050         (../cmds/BBS.reply):00305                    ldy    #80                                                   * 03E0 10 8E 00 50    ...P
03E4 8601             (../cmds/BBS.reply):00306                    lda    #1                                                    * 03E4 86 01          ..
03E6 103F8C           (../cmds/BBS.reply):00307                    os9    I$WritLn                                              * 03E6 10 3F 8C       .?.
03E9 ECC81A           (../cmds/BBS.reply):00308                    ldd    <U001A,U                                              * 03E9 EC C8 1A       lH.
03EC 8D44             (../cmds/BBS.reply):00309                    bsr    L0432                                                 * 03EC 8D 44          .D
03EE 16FF44           (../cmds/BBS.reply):00310                    lbra   L0335                                                 * 03EE 16 FF 44       ..D
03F1 CC0000           (../cmds/BBS.reply):00311         L03F1      ldd    #0                                                    * 03F1 CC 00 00       L..
03F4 ED4C             (../cmds/BBS.reply):00312                    std    U000C,U                                               * 03F4 ED 4C          mL
03F6 EC4C             (../cmds/BBS.reply):00313         L03F6      ldd    U000C,U                                               * 03F6 EC 4C          lL
03F8 C30001           (../cmds/BBS.reply):00314                    addd   #1                                                    * 03F8 C3 00 01       C..
03FB ED4C             (../cmds/BBS.reply):00315                    std    U000C,U                                               * 03FB ED 4C          mL
03FD 30C900E5         (../cmds/BBS.reply):00316                    leax   >U00E5,U                                              * 03FD 30 C9 00 E5    0I.e
0401 17043E           (../cmds/BBS.reply):00317                    lbsr   L0842                                                 * 0401 17 04 3E       ..>
0404 30C900E5         (../cmds/BBS.reply):00318                    leax   >U00E5,U                                              * 0404 30 C9 00 E5    0I.e
0408 863A             (../cmds/BBS.reply):00319                    lda    #58                                                   * 0408 86 3A          .:
040A A702             (../cmds/BBS.reply):00320                    sta    $02,X                                                 * 040A A7 02          '.
040C 8601             (../cmds/BBS.reply):00321                    lda    #1                                                    * 040C 86 01          ..
040E 108E0003         (../cmds/BBS.reply):00322                    ldy    #3                                                    * 040E 10 8E 00 03    ....
0412 103F8A           (../cmds/BBS.reply):00323                    os9    I$Write                                               * 0412 10 3F 8A       .?.
0415 30C9018B         (../cmds/BBS.reply):00324                    leax   >U018B,U                                              * 0415 30 C9 01 8B    0I..
0419 EC4C             (../cmds/BBS.reply):00325                    ldd    U000C,U                                               * 0419 EC 4C          lL
041B 8650             (../cmds/BBS.reply):00326                    lda    #80                                                   * 041B 86 50          .P
041D 3D               (../cmds/BBS.reply):00327                    mul                                                          * 041D 3D             =
041E 308B             (../cmds/BBS.reply):00328                    leax   D,X                                                   * 041E 30 8B          0.
0420 108E0050         (../cmds/BBS.reply):00329                    ldy    #80                                                   * 0420 10 8E 00 50    ...P
0424 8601             (../cmds/BBS.reply):00330                    lda    #1                                                    * 0424 86 01          ..
0426 103F8C           (../cmds/BBS.reply):00331                    os9    I$WritLn                                              * 0426 10 3F 8C       .?.
0429 108C0001         (../cmds/BBS.reply):00332                    cmpy   #1                                                    * 0429 10 8C 00 01    ....
042D 22C7             (../cmds/BBS.reply):00333                    bhi    L03F6                                                 * 042D 22 C7          "G
042F 16FF03           (../cmds/BBS.reply):00334                    lbra   L0335                                                 * 042F 16 FF 03       ...
0432 30C900E5         (../cmds/BBS.reply):00335         L0432      leax   >U00E5,U                                              * 0432 30 C9 00 E5    0I.e
0436 3406             (../cmds/BBS.reply):00336                    pshs   D                                                     * 0436 34 06          4.
0438 170407           (../cmds/BBS.reply):00337                    lbsr   L0842                                                 * 0438 17 04 07       ...
043B 30C900E5         (../cmds/BBS.reply):00338                    leax   >U00E5,U                                              * 043B 30 C9 00 E5    0I.e
043F 863A             (../cmds/BBS.reply):00339                    lda    #58                                                   * 043F 86 3A          .:
0441 A702             (../cmds/BBS.reply):00340                    sta    $02,X                                                 * 0441 A7 02          '.
0443 8601             (../cmds/BBS.reply):00341                    lda    #1                                                    * 0443 86 01          ..
0445 108E0003         (../cmds/BBS.reply):00342                    ldy    #3                                                    * 0445 10 8E 00 03    ....
0449 103F8A           (../cmds/BBS.reply):00343                    os9    I$Write                                               * 0449 10 3F 8A       .?.
044C 102501EB         (../cmds/BBS.reply):00344                    lbcs   L063B                                                 * 044C 10 25 01 EB    .%.k
0450 30C920CB         (../cmds/BBS.reply):00345                    leax   >U20CB,U                                              * 0450 30 C9 20 CB    0I K
0454 E646             (../cmds/BBS.reply):00346                    ldb    U0006,U                                               * 0454 E6 46          fF
0456 4F               (../cmds/BBS.reply):00347                    clra                                                         * 0456 4F             O
0457 1F02             (../cmds/BBS.reply):00348                    tfr    D,Y                                                   * 0457 1F 02          ..
0459 8601             (../cmds/BBS.reply):00349                    lda    #1                                                    * 0459 86 01          ..
045B 103F8A           (../cmds/BBS.reply):00350                    os9    I$Write                                               * 045B 10 3F 8A       .?.
045E 3506             (../cmds/BBS.reply):00351                    puls   D                                                     * 045E 35 06          5.
0460 8650             (../cmds/BBS.reply):00352                    lda    #80                                                   * 0460 86 50          .P
0462 3D               (../cmds/BBS.reply):00353                    mul                                                          * 0462 3D             =
0463 30C9018B         (../cmds/BBS.reply):00354                    leax   >U018B,U                                              * 0463 30 C9 01 8B    0I..
0467 308B             (../cmds/BBS.reply):00355                    leax   D,X                                                   * 0467 30 8B          0.
0469 31C920CB         (../cmds/BBS.reply):00356                    leay   >U20CB,U                                              * 0469 31 C9 20 CB    1I K
046D C650             (../cmds/BBS.reply):00357                    ldb    #80                                                   * 046D C6 50          FP
046F A646             (../cmds/BBS.reply):00358                    lda    U0006,U                                               * 046F A6 46          &F
0471 270D             (../cmds/BBS.reply):00359                    beq    L0480                                                 * 0471 27 0D          '.
0473 A7C816           (../cmds/BBS.reply):00360                    sta    <U0016,U                                              * 0473 A7 C8 16       'H.
0476 A6A0             (../cmds/BBS.reply):00361         L0476      lda    ,Y+                                                   * 0476 A6 A0          &
0478 A780             (../cmds/BBS.reply):00362                    sta    ,X+                                                   * 0478 A7 80          '.
047A 5A               (../cmds/BBS.reply):00363                    decb                                                         * 047A 5A             Z
047B 6AC816           (../cmds/BBS.reply):00364                    dec    <U0016,U                                              * 047B 6A C8 16       jH.
047E 26F6             (../cmds/BBS.reply):00365                    bne    L0476                                                 * 047E 26 F6          &v
0480 4F               (../cmds/BBS.reply):00366         L0480      clra                                                         * 0480 4F             O
0481 1F02             (../cmds/BBS.reply):00367                    tfr    D,Y                                                   * 0481 1F 02          ..
0483 1701BC           (../cmds/BBS.reply):00368                    lbsr   L0642                                                 * 0483 17 01 BC       ..<
0486 39               (../cmds/BBS.reply):00369                    rts                                                          * 0486 39             9
0487 30C81C           (../cmds/BBS.reply):00370         L0487      leax   <U001C,U                                              * 0487 30 C8 1C       0H.
048A 108E00C8         (../cmds/BBS.reply):00371                    ldy    #200                                                  * 048A 10 8E 00 C8    ...H
048E A642             (../cmds/BBS.reply):00372                    lda    U0002,U                                               * 048E A6 42          &B
0490 103F8B           (../cmds/BBS.reply):00373                    os9    I$ReadLn                                              * 0490 10 3F 8B       .?.
0493 102501A4         (../cmds/BBS.reply):00374                    lbcs   L063B                                                 * 0493 10 25 01 A4    .%.$
0497 A680             (../cmds/BBS.reply):00375         L0497      lda    ,X+                                                   * 0497 A6 80          &.
0499 812C             (../cmds/BBS.reply):00376                    cmpa   #44                                                   * 0499 81 2C          .,
049B 26FA             (../cmds/BBS.reply):00377                    bne    L0497                                                 * 049B 26 FA          &z
049D 170332           (../cmds/BBS.reply):00378                    lbsr   L07D2                                                 * 049D 17 03 32       ..2
04A0 10A34A           (../cmds/BBS.reply):00379                    cmpd   U000A,U                                               * 04A0 10 A3 4A       .#J
04A3 26E2             (../cmds/BBS.reply):00380                    bne    L0487                                                 * 04A3 26 E2          &b
04A5 30C81C           (../cmds/BBS.reply):00381                    leax   <U001C,U                                              * 04A5 30 C8 1C       0H.
04A8 31C9012F         (../cmds/BBS.reply):00382                    leay   >U012F,U                                              * 04A8 31 C9 01 2F    1I./
04AC A680             (../cmds/BBS.reply):00383         L04AC      lda    ,X+                                                   * 04AC A6 80          &.
04AE 812C             (../cmds/BBS.reply):00384                    cmpa   #44                                                   * 04AE 81 2C          .,
04B0 2704             (../cmds/BBS.reply):00385                    beq    L04B6                                                 * 04B0 27 04          '.
04B2 A7A0             (../cmds/BBS.reply):00386                    sta    ,Y+                                                   * 04B2 A7 A0          '
04B4 20F6             (../cmds/BBS.reply):00387                    bra    L04AC                                                 * 04B4 20 F6           v
04B6 860D             (../cmds/BBS.reply):00388         L04B6      lda    #13                                                   * 04B6 86 0D          ..
04B8 A7A4             (../cmds/BBS.reply):00389                    sta    0,Y                                                   * 04B8 A7 A4          '$
04BA ECC900ED         (../cmds/BBS.reply):00390                    ldd    >U00ED,U                                              * 04BA EC C9 00 ED    lI.m
04BE EDC9012B         (../cmds/BBS.reply):00391                    std    >U012B,U                                              * 04BE ED C9 01 2B    mI.+
04C2 ECC900EF         (../cmds/BBS.reply):00392                    ldd    >U00EF,U                                              * 04C2 EC C9 00 EF    lI.o
04C6 EDC9012D         (../cmds/BBS.reply):00393                    std    >U012D,U                                              * 04C6 ED C9 01 2D    mI.-
04CA EC4A             (../cmds/BBS.reply):00394                    ldd    U000A,U                                               * 04CA EC 4A          lJ
04CC EDC90167         (../cmds/BBS.reply):00395                    std    >U0167,U                                              * 04CC ED C9 01 67    mI.g
04D0 30C9012B         (../cmds/BBS.reply):00396                    leax   >U012B,U                                              * 04D0 30 C9 01 2B    0I.+
04D4 A6C4             (../cmds/BBS.reply):00397                    lda    U0000,U                                               * 04D4 A6 C4          &D
04D6 108E0040         (../cmds/BBS.reply):00398                    ldy    #64                                                   * 04D6 10 8E 00 40    ...@
04DA 103F8A           (../cmds/BBS.reply):00399                    os9    I$Write                                               * 04DA 10 3F 8A       .?.
04DD 1025015A         (../cmds/BBS.reply):00400                    lbcs   L063B                                                 * 04DD 10 25 01 5A    .%.Z
04E1 308DFBA8         (../cmds/BBS.reply):00401                    leax   >L008D,PC                                             * 04E1 30 8D FB A8    0.{(
04E5 8603             (../cmds/BBS.reply):00402                    lda    #3                                                    * 04E5 86 03          ..
04E7 103F84           (../cmds/BBS.reply):00403                    os9    I$Open                                                * 04E7 10 3F 84       .?.
04EA 1025014D         (../cmds/BBS.reply):00404                    lbcs   L063B                                                 * 04EA 10 25 01 4D    .%.M
04EE A741             (../cmds/BBS.reply):00405                    sta    U0001,U                                               * 04EE A7 41          'A
04F0 3440             (../cmds/BBS.reply):00406                    pshs   U                                                     * 04F0 34 40          4@
04F2 AEC900ED         (../cmds/BBS.reply):00407                    ldx    >U00ED,U                                              * 04F2 AE C9 00 ED    .I.m
04F6 A641             (../cmds/BBS.reply):00408                    lda    U0001,U                                               * 04F6 A6 41          &A
04F8 EEC900EF         (../cmds/BBS.reply):00409                    ldu    >U00EF,U                                              * 04F8 EE C9 00 EF    nI.o
04FC 103F88           (../cmds/BBS.reply):00410                    os9    I$Seek                                                * 04FC 10 3F 88       .?.
04FF 10250138         (../cmds/BBS.reply):00411                    lbcs   L063B                                                 * 04FF 10 25 01 38    .%.8
0503 3540             (../cmds/BBS.reply):00412                    puls   U                                                     * 0503 35 40          5@
0505 8600             (../cmds/BBS.reply):00413                    lda    #0                                                    * 0505 86 00          ..
0507 A7C812           (../cmds/BBS.reply):00414                    sta    <U0012,U                                              * 0507 A7 C8 12       'H.
050A CC0001           (../cmds/BBS.reply):00415                    ldd    #1                                                    * 050A CC 00 01       L..
050D EDC814           (../cmds/BBS.reply):00416                    std    <U0014,U                                              * 050D ED C8 14       mH.
0510 A6C812           (../cmds/BBS.reply):00417         L0510      lda    <U0012,U                                              * 0510 A6 C8 12       &H.
0513 4C               (../cmds/BBS.reply):00418                    inca                                                         * 0513 4C             L
0514 A7C812           (../cmds/BBS.reply):00419                    sta    <U0012,U                                              * 0514 A7 C8 12       'H.
0517 A14D             (../cmds/BBS.reply):00420                    cmpa   U000D,U                                               * 0517 A1 4D          !M
0519 2226             (../cmds/BBS.reply):00421                    bhi    L0541                                                 * 0519 22 26          "&
051B C650             (../cmds/BBS.reply):00422                    ldb    #80                                                   * 051B C6 50          FP
051D 3D               (../cmds/BBS.reply):00423                    mul                                                          * 051D 3D             =
051E 30C9018B         (../cmds/BBS.reply):00424                    leax   >U018B,U                                              * 051E 30 C9 01 8B    0I..
0522 308B             (../cmds/BBS.reply):00425                    leax   D,X                                                   * 0522 30 8B          0.
0524 108E0050         (../cmds/BBS.reply):00426                    ldy    #80                                                   * 0524 10 8E 00 50    ...P
0528 A641             (../cmds/BBS.reply):00427                    lda    U0001,U                                               * 0528 A6 41          &A
052A 103F8C           (../cmds/BBS.reply):00428                    os9    I$WritLn                                              * 052A 10 3F 8C       .?.
052D 1025010A         (../cmds/BBS.reply):00429                    lbcs   L063B                                                 * 052D 10 25 01 0A    .%..
0531 108C0001         (../cmds/BBS.reply):00430                    cmpy   #1                                                    * 0531 10 8C 00 01    ....
0535 230A             (../cmds/BBS.reply):00431                    bls    L0541                                                 * 0535 23 0A          #.
0537 1F20             (../cmds/BBS.reply):00432                    tfr    Y,D                                                   * 0537 1F 20          .
0539 E3C814           (../cmds/BBS.reply):00433                    addd   <U0014,U                                              * 0539 E3 C8 14       cH.
053C EDC814           (../cmds/BBS.reply):00434                    std    <U0014,U                                              * 053C ED C8 14       mH.
053F 20CF             (../cmds/BBS.reply):00435                    bra    L0510                                                 * 053F 20 CF           O
0541 ECC900EF         (../cmds/BBS.reply):00436         L0541      ldd    >U00EF,U                                              * 0541 EC C9 00 EF    lI.o
0545 E3C814           (../cmds/BBS.reply):00437                    addd   <U0014,U                                              * 0545 E3 C8 14       cH.
0548 EDC900EF         (../cmds/BBS.reply):00438                    std    >U00EF,U                                              * 0548 ED C9 00 EF    mI.o
054C 240B             (../cmds/BBS.reply):00439                    bcc    L0559                                                 * 054C 24 0B          $.
054E ECC900ED         (../cmds/BBS.reply):00440                    ldd    >U00ED,U                                              * 054E EC C9 00 ED    lI.m
0552 C30001           (../cmds/BBS.reply):00441                    addd   #1                                                    * 0552 C3 00 01       C..
0555 EDC900ED         (../cmds/BBS.reply):00442                    std    >U00ED,U                                              * 0555 ED C9 00 ED    mI.m
0559 3440             (../cmds/BBS.reply):00443         L0559      pshs   U                                                     * 0559 34 40          4@
055B A6C4             (../cmds/BBS.reply):00444                    lda    U0000,U                                               * 055B A6 C4          &D
055D 8E0000           (../cmds/BBS.reply):00445                    ldx    #0                                                    * 055D 8E 00 00       ...
0560 CE0000           (../cmds/BBS.reply):00446                    ldu    #0                                                    * 0560 CE 00 00       N..
0563 103F88           (../cmds/BBS.reply):00447                    os9    I$Seek                                                * 0563 10 3F 88       .?.
0566 102500D1         (../cmds/BBS.reply):00448                    lbcs   L063B                                                 * 0566 10 25 00 D1    .%.Q
056A 3540             (../cmds/BBS.reply):00449                    puls   U                                                     * 056A 35 40          5@
056C 30C900EB         (../cmds/BBS.reply):00450                    leax   >U00EB,U                                              * 056C 30 C9 00 EB    0I.k
0570 108E0040         (../cmds/BBS.reply):00451                    ldy    #64                                                   * 0570 10 8E 00 40    ...@
0574 A6C4             (../cmds/BBS.reply):00452                    lda    U0000,U                                               * 0574 A6 C4          &D
0576 103F8A           (../cmds/BBS.reply):00453                    os9    I$Write                                               * 0576 10 3F 8A       .?.
0579 102500BE         (../cmds/BBS.reply):00454                    lbcs   L063B                                                 * 0579 10 25 00 BE    .%.>
057D 308DFC00         (../cmds/BBS.reply):00455                    leax   >L0181,PC                                             * 057D 30 8D FC 00    0.|.
0581 8603             (../cmds/BBS.reply):00456                    lda    #3                                                    * 0581 86 03          ..
0583 103F84           (../cmds/BBS.reply):00457                    os9    I$Open                                                * 0583 10 3F 84       .?.
0586 2409             (../cmds/BBS.reply):00458                    bcc    L0591                                                 * 0586 24 09          $.
0588 C61B             (../cmds/BBS.reply):00459                    ldb    #27                                                   * 0588 C6 1B          F.
058A 103F83           (../cmds/BBS.reply):00460                    os9    I$Create                                              * 058A 10 3F 83       .?.
058D 102500AA         (../cmds/BBS.reply):00461                    lbcs   L063B                                                 * 058D 10 25 00 AA    .%.*
0591 A747             (../cmds/BBS.reply):00462         L0591      sta    U0007,U                                               * 0591 A7 47          'G
0593 30C9016B         (../cmds/BBS.reply):00463         L0593      leax   >U016B,U                                              * 0593 30 C9 01 6B    0I.k
0597 108E0020         (../cmds/BBS.reply):00464                    ldy    #32                                                   * 0597 10 8E 00 20    ...
059B A647             (../cmds/BBS.reply):00465                    lda    U0007,U                                               * 059B A6 47          &G
059D 103F89           (../cmds/BBS.reply):00466                    os9    I$Read                                                * 059D 10 3F 89       .?.
05A0 250B             (../cmds/BBS.reply):00467                    bcs    L05AD                                                 * 05A0 25 0B          %.
05A2 ECC9016B         (../cmds/BBS.reply):00468                    ldd    >U016B,U                                              * 05A2 EC C9 01 6B    lI.k
05A6 10A34A           (../cmds/BBS.reply):00469                    cmpd   U000A,U                                               * 05A6 10 A3 4A       .#J
05A9 26E8             (../cmds/BBS.reply):00470                    bne    L0593                                                 * 05A9 26 E8          &h
05AB 2009             (../cmds/BBS.reply):00471                    bra    L05B6                                                 * 05AB 20 09           .
05AD C1D3             (../cmds/BBS.reply):00472         L05AD      cmpb   #211                                                  * 05AD C1 D3          AS
05AF 10260088         (../cmds/BBS.reply):00473                    lbne   L063B                                                 * 05AF 10 26 00 88    .&..
05B3 16003E           (../cmds/BBS.reply):00474                    lbra   L05F4                                                 * 05B3 16 00 3E       ..>
05B6 ECC90175         (../cmds/BBS.reply):00475         L05B6      ldd    >U0175,U                                              * 05B6 EC C9 01 75    lI.u
05BA C30001           (../cmds/BBS.reply):00476                    addd   #1                                                    * 05BA C3 00 01       C..
05BD EDC90175         (../cmds/BBS.reply):00477                    std    >U0175,U                                              * 05BD ED C9 01 75    mI.u
05C1 A647             (../cmds/BBS.reply):00478                    lda    U0007,U                                               * 05C1 A6 47          &G
05C3 C605             (../cmds/BBS.reply):00479                    ldb    #5                                                    * 05C3 C6 05          F.
05C5 3440             (../cmds/BBS.reply):00480                    pshs   U                                                     * 05C5 34 40          4@
05C7 103F8D           (../cmds/BBS.reply):00481                    os9    I$GetStt                                              * 05C7 10 3F 8D       .?.
05CA 1F30             (../cmds/BBS.reply):00482                    tfr    U,D                                                   * 05CA 1F 30          .0
05CC 830020           (../cmds/BBS.reply):00483                    subd   #32                                                   * 05CC 83 00 20       ..
05CF 2C02             (../cmds/BBS.reply):00484                    bge    L05D3                                                 * 05CF 2C 02          ,.
05D1 301F             (../cmds/BBS.reply):00485                    leax   -$01,X                                                * 05D1 30 1F          0.
05D3 EEE4             (../cmds/BBS.reply):00486         L05D3      ldu    0,S                                                   * 05D3 EE E4          nd
05D5 1F02             (../cmds/BBS.reply):00487                    tfr    D,Y                                                   * 05D5 1F 02          ..
05D7 A647             (../cmds/BBS.reply):00488                    lda    U0007,U                                               * 05D7 A6 47          &G
05D9 1F23             (../cmds/BBS.reply):00489                    tfr    Y,U                                                   * 05D9 1F 23          .#
05DB 103F88           (../cmds/BBS.reply):00490                    os9    I$Seek                                                * 05DB 10 3F 88       .?.
05DE 10250059         (../cmds/BBS.reply):00491                    lbcs   L063B                                                 * 05DE 10 25 00 59    .%.Y
05E2 3540             (../cmds/BBS.reply):00492                    puls   U                                                     * 05E2 35 40          5@
05E4 30C9016B         (../cmds/BBS.reply):00493                    leax   >U016B,U                                              * 05E4 30 C9 01 6B    0I.k
05E8 108E0020         (../cmds/BBS.reply):00494                    ldy    #32                                                   * 05E8 10 8E 00 20    ...
05EC A647             (../cmds/BBS.reply):00495                    lda    U0007,U                                               * 05EC A6 47          &G
05EE 103F8A           (../cmds/BBS.reply):00496                    os9    I$Write                                               * 05EE 10 3F 8A       .?.
05F1 160040           (../cmds/BBS.reply):00497                    lbra   L0634                                                 * 05F1 16 00 40       ..@
05F4 30C9016B         (../cmds/BBS.reply):00498         L05F4      leax   >U016B,U                                              * 05F4 30 C9 01 6B    0I.k
05F8 CC0001           (../cmds/BBS.reply):00499                    ldd    #1                                                    * 05F8 CC 00 01       L..
05FB EDC9016D         (../cmds/BBS.reply):00500                    std    >U016D,U                                              * 05FB ED C9 01 6D    mI.m
05FF CC0000           (../cmds/BBS.reply):00501                    ldd    #0                                                    * 05FF CC 00 00       L..
0602 EDC90175         (../cmds/BBS.reply):00502                    std    >U0175,U                                              * 0602 ED C9 01 75    mI.u
0606 EDC90177         (../cmds/BBS.reply):00503                    std    >U0177,U                                              * 0606 ED C9 01 77    mI.w
060A EDC9017B         (../cmds/BBS.reply):00504                    std    >U017B,U                                              * 060A ED C9 01 7B    mI.{
060E EDC90179         (../cmds/BBS.reply):00505                    std    >U0179,U                                              * 060E ED C9 01 79    mI.y
0612 EC4A             (../cmds/BBS.reply):00506                    ldd    U000A,U                                               * 0612 EC 4A          lJ
0614 EDC9016B         (../cmds/BBS.reply):00507                    std    >U016B,U                                              * 0614 ED C9 01 6B    mI.k
0618 30C9016F         (../cmds/BBS.reply):00508                    leax   >U016F,U                                              * 0618 30 C9 01 6F    0I.o
061C 103F15           (../cmds/BBS.reply):00509                    os9    F$Time                                                * 061C 10 3F 15       .?.
061F 10250018         (../cmds/BBS.reply):00510                    lbcs   L063B                                                 * 061F 10 25 00 18    .%..
0623 30C9016B         (../cmds/BBS.reply):00511                    leax   >U016B,U                                              * 0623 30 C9 01 6B    0I.k
0627 108E0020         (../cmds/BBS.reply):00512                    ldy    #32                                                   * 0627 10 8E 00 20    ...
062B A647             (../cmds/BBS.reply):00513                    lda    U0007,U                                               * 062B A6 47          &G
062D 103F8A           (../cmds/BBS.reply):00514                    os9    I$Write                                               * 062D 10 3F 8A       .?.
0630 10250007         (../cmds/BBS.reply):00515                    lbcs   L063B                                                 * 0630 10 25 00 07    .%..
0634 5F               (../cmds/BBS.reply):00516         L0634      clrb                                                         * 0634 5F             _
0635 10AE4A           (../cmds/BBS.reply):00517                    ldy    U000A,U                                               * 0635 10 AE 4A       ..J
0638 103F1C           (../cmds/BBS.reply):00518                    os9    F$SUser                                               * 0638 10 3F 1C       .?.
063B 103F06           (../cmds/BBS.reply):00519         L063B      os9    F$Exit                                                * 063B 10 3F 06       .?.
063E C601             (../cmds/BBS.reply):00520         L063E      ldb    #1                                                    * 063E C6 01          F.
0640 20F9             (../cmds/BBS.reply):00521                    bra    L063B                                                 * 0640 20 F9           y
0642 170156           (../cmds/BBS.reply):00522         L0642      lbsr   L079B                                                 * 0642 17 01 56       ..V
0645 E646             (../cmds/BBS.reply):00523                    ldb    U0006,U                                               * 0645 E6 46          fF
0647 31A5             (../cmds/BBS.reply):00524                    leay   B,Y                                                   * 0647 31 A5          1%
0649 3420             (../cmds/BBS.reply):00525                    pshs   Y                                                     * 0649 34 20          4
064B 50               (../cmds/BBS.reply):00526                    negb                                                         * 064B 50             P
064C 1D               (../cmds/BBS.reply):00527                    sex                                                          * 064C 1D             .
064D 31AB             (../cmds/BBS.reply):00528                    leay   D,Y                                                   * 064D 31 AB          1+
064F 6F46             (../cmds/BBS.reply):00529                    clr    U0006,U                                               * 064F 6F 46          oF
0651 108C0000         (../cmds/BBS.reply):00530                    cmpy   #0                                                    * 0651 10 8C 00 00    ....
0655 102700B8         (../cmds/BBS.reply):00531                    lbeq   L0711                                                 * 0655 10 27 00 B8    .'.8
0659 3430             (../cmds/BBS.reply):00532                    pshs   Y,X                                                   * 0659 34 30          40
065B 860D             (../cmds/BBS.reply):00533                    lda    #13                                                   * 065B 86 0D          ..
065D A780             (../cmds/BBS.reply):00534         L065D      sta    ,X+                                                   * 065D A7 80          '.
065F 313F             (../cmds/BBS.reply):00535                    leay   -$01,Y                                                * 065F 31 3F          1?
0661 26FA             (../cmds/BBS.reply):00536                    bne    L065D                                                 * 0661 26 FA          &z
0663 3530             (../cmds/BBS.reply):00537                    puls   Y,X                                                   * 0663 35 30          50
0665 3430             (../cmds/BBS.reply):00538         L0665      pshs   Y,X                                                   * 0665 34 30          40
0667 3045             (../cmds/BBS.reply):00539                    leax   U0005,U                                               * 0667 30 45          0E
0669 108E0001         (../cmds/BBS.reply):00540                    ldy    #1                                                    * 0669 10 8E 00 01    ....
066D 4F               (../cmds/BBS.reply):00541                    clra                                                         * 066D 4F             O
066E 103F89           (../cmds/BBS.reply):00542                    os9    I$Read                                                * 066E 10 3F 89       .?.
0671 252B             (../cmds/BBS.reply):00543                    bcs    L069E                                                 * 0671 25 2B          %+
0673 A645             (../cmds/BBS.reply):00544                    lda    U0005,U                                               * 0673 A6 45          &E
0675 8101             (../cmds/BBS.reply):00545                    cmpa   #1                                                    * 0675 81 01          ..
0677 2729             (../cmds/BBS.reply):00546                    beq    L06A2                                                 * 0677 27 29          ')
0679 8108             (../cmds/BBS.reply):00547                    cmpa   #8                                                    * 0679 81 08          ..
067B 2747             (../cmds/BBS.reply):00548                    beq    L06C4                                                 * 067B 27 47          'G
067D 8118             (../cmds/BBS.reply):00549                    cmpa   #24                                                   * 067D 81 18          ..
067F 2767             (../cmds/BBS.reply):00550                    beq    L06E8                                                 * 067F 27 67          'g
0681 810D             (../cmds/BBS.reply):00551                    cmpa   #13                                                   * 0681 81 0D          ..
0683 10270088         (../cmds/BBS.reply):00552                    lbeq   L070F                                                 * 0683 10 27 00 88    .'..
0687 8120             (../cmds/BBS.reply):00553                    cmpa   #32                                                   * 0687 81 20          .
0689 2513             (../cmds/BBS.reply):00554                    bcs    L069E                                                 * 0689 25 13          %.
068B 8601             (../cmds/BBS.reply):00555                    lda    #1                                                    * 068B 86 01          ..
068D 103F8A           (../cmds/BBS.reply):00556                    os9    I$Write                                               * 068D 10 3F 8A       .?.
0690 3530             (../cmds/BBS.reply):00557                    puls   Y,X                                                   * 0690 35 30          50
0692 A645             (../cmds/BBS.reply):00558                    lda    U0005,U                                               * 0692 A6 45          &E
0694 A780             (../cmds/BBS.reply):00559                    sta    ,X+                                                   * 0694 A7 80          '.
0696 313F             (../cmds/BBS.reply):00560                    leay   -$01,Y                                                * 0696 31 3F          1?
0698 1027009C         (../cmds/BBS.reply):00561                    lbeq   L0738                                                 * 0698 10 27 00 9C    .'..
069C 20C7             (../cmds/BBS.reply):00562                    bra    L0665                                                 * 069C 20 C7           G
069E 3530             (../cmds/BBS.reply):00563         L069E      puls   Y,X                                                   * 069E 35 30          50
06A0 20C3             (../cmds/BBS.reply):00564                    bra    L0665                                                 * 06A0 20 C3           C
06A2 3530             (../cmds/BBS.reply):00565         L06A2      puls   Y,X                                                   * 06A2 35 30          50
06A4 313F             (../cmds/BBS.reply):00566                    leay   -$01,Y                                                * 06A4 31 3F          1?
06A6 2717             (../cmds/BBS.reply):00567                    beq    L06BF                                                 * 06A6 27 17          '.
06A8 A680             (../cmds/BBS.reply):00568                    lda    ,X+                                                   * 06A8 A6 80          &.
06AA 810D             (../cmds/BBS.reply):00569                    cmpa   #13                                                   * 06AA 81 0D          ..
06AC 270F             (../cmds/BBS.reply):00570                    beq    L06BD                                                 * 06AC 27 0F          '.
06AE 3430             (../cmds/BBS.reply):00571                    pshs   Y,X                                                   * 06AE 34 30          40
06B0 301F             (../cmds/BBS.reply):00572                    leax   -$01,X                                                * 06B0 30 1F          0.
06B2 108E0001         (../cmds/BBS.reply):00573                    ldy    #1                                                    * 06B2 10 8E 00 01    ....
06B6 8601             (../cmds/BBS.reply):00574                    lda    #1                                                    * 06B6 86 01          ..
06B8 103F8A           (../cmds/BBS.reply):00575                    os9    I$Write                                               * 06B8 10 3F 8A       .?.
06BB 20E5             (../cmds/BBS.reply):00576                    bra    L06A2                                                 * 06BB 20 E5           e
06BD 301F             (../cmds/BBS.reply):00577         L06BD      leax   -$01,X                                                * 06BD 30 1F          0.
06BF 3121             (../cmds/BBS.reply):00578         L06BF      leay   $01,Y                                                 * 06BF 31 21          1!
06C1 16FFA1           (../cmds/BBS.reply):00579                    lbra   L0665                                                 * 06C1 16 FF A1       ..!
06C4 3530             (../cmds/BBS.reply):00580         L06C4      puls   Y,X                                                   * 06C4 35 30          50
06C6 3121             (../cmds/BBS.reply):00581                    leay   $01,Y                                                 * 06C6 31 21          1!
06C8 10ACE4           (../cmds/BBS.reply):00582                    cmpy   0,S                                                   * 06C8 10 AC E4       .,d
06CB 2216             (../cmds/BBS.reply):00583                    bhi    L06E3                                                 * 06CB 22 16          ".
06CD 3430             (../cmds/BBS.reply):00584                    pshs   Y,X                                                   * 06CD 34 30          40
06CF 308DFAAB         (../cmds/BBS.reply):00585                    leax   >L017E,PC                                             * 06CF 30 8D FA AB    0.z+
06D3 108E0003         (../cmds/BBS.reply):00586                    ldy    #3                                                    * 06D3 10 8E 00 03    ....
06D7 8601             (../cmds/BBS.reply):00587                    lda    #1                                                    * 06D7 86 01          ..
06D9 103F8A           (../cmds/BBS.reply):00588                    os9    I$Write                                               * 06D9 10 3F 8A       .?.
06DC 3530             (../cmds/BBS.reply):00589                    puls   Y,X                                                   * 06DC 35 30          50
06DE 301F             (../cmds/BBS.reply):00590                    leax   -$01,X                                                * 06DE 30 1F          0.
06E0 16FF82           (../cmds/BBS.reply):00591                    lbra   L0665                                                 * 06E0 16 FF 82       ...
06E3 313F             (../cmds/BBS.reply):00592         L06E3      leay   -$01,Y                                                * 06E3 31 3F          1?
06E5 16FF7D           (../cmds/BBS.reply):00593                    lbra   L0665                                                 * 06E5 16 FF 7D       ..}
06E8 3530             (../cmds/BBS.reply):00594         L06E8      puls   Y,X                                                   * 06E8 35 30          50
06EA 3121             (../cmds/BBS.reply):00595                    leay   $01,Y                                                 * 06EA 31 21          1!
06EC 10ACE4           (../cmds/BBS.reply):00596                    cmpy   0,S                                                   * 06EC 10 AC E4       .,d
06EF 22F2             (../cmds/BBS.reply):00597                    bhi    L06E3                                                 * 06EF 22 F2          "r
06F1 3430             (../cmds/BBS.reply):00598                    pshs   Y,X                                                   * 06F1 34 30          40
06F3 308DFA87         (../cmds/BBS.reply):00599                    leax   >L017E,PC                                             * 06F3 30 8D FA 87    0.z.
06F7 108E0003         (../cmds/BBS.reply):00600                    ldy    #3                                                    * 06F7 10 8E 00 03    ....
06FB 8601             (../cmds/BBS.reply):00601                    lda    #1                                                    * 06FB 86 01          ..
06FD 103F8A           (../cmds/BBS.reply):00602                    os9    I$Write                                               * 06FD 10 3F 8A       .?.
0700 3530             (../cmds/BBS.reply):00603                    puls   Y,X                                                   * 0700 35 30          50
0702 301F             (../cmds/BBS.reply):00604                    leax   -$01,X                                                * 0702 30 1F          0.
0704 10ACE4           (../cmds/BBS.reply):00605                    cmpy   0,S                                                   * 0704 10 AC E4       .,d
0707 1022FF5A         (../cmds/BBS.reply):00606                    lbhi   L0665                                                 * 0707 10 22 FF 5A    .".Z
070B 3430             (../cmds/BBS.reply):00607                    pshs   Y,X                                                   * 070B 34 30          40
070D 20D9             (../cmds/BBS.reply):00608                    bra    L06E8                                                 * 070D 20 D9           Y
070F 3530             (../cmds/BBS.reply):00609         L070F      puls   Y,X                                                   * 070F 35 30          50
0711 860D             (../cmds/BBS.reply):00610         L0711      lda    #13                                                   * 0711 86 0D          ..
0713 A780             (../cmds/BBS.reply):00611                    sta    ,X+                                                   * 0713 A7 80          '.
0715 3430             (../cmds/BBS.reply):00612                    pshs   Y,X                                                   * 0715 34 30          40
0717 308DFA61         (../cmds/BBS.reply):00613                    leax   >L017C,PC                                             * 0717 30 8D FA 61    0.za
071B 108E0001         (../cmds/BBS.reply):00614                    ldy    #1                                                    * 071B 10 8E 00 01    ....
071F 8601             (../cmds/BBS.reply):00615                    lda    #1                                                    * 071F 86 01          ..
0721 103F8C           (../cmds/BBS.reply):00616                    os9    I$WritLn                                              * 0721 10 3F 8C       .?.
0724 3530             (../cmds/BBS.reply):00617                    puls   Y,X                                                   * 0724 35 30          50
0726 3506             (../cmds/BBS.reply):00618                    puls   D                                                     * 0726 35 06          5.
0728 3420             (../cmds/BBS.reply):00619                    pshs   Y                                                     * 0728 34 20          4
072A A3E4             (../cmds/BBS.reply):00620                    subd   0,S                                                   * 072A A3 E4          #d
072C 3262             (../cmds/BBS.reply):00621                    leas   $02,S                                                 * 072C 32 62          2b
072E 1F02             (../cmds/BBS.reply):00622                    tfr    D,Y                                                   * 072E 1F 02          ..
0730 3121             (../cmds/BBS.reply):00623                    leay   $01,Y                                                 * 0730 31 21          1!
0732 170080           (../cmds/BBS.reply):00624                    lbsr   L07B5                                                 * 0732 17 00 80       ...
0735 39               (../cmds/BBS.reply):00625                    rts                                                          * 0735 39             9
0736 3530             (../cmds/BBS.reply):00626                    fcc    "50"                                                  * 0736 35 30          50
0738 3506             (../cmds/BBS.reply):00627         L0738      puls   D                                                     * 0738 35 06          5.
073A 3420             (../cmds/BBS.reply):00628                    pshs   Y                                                     * 073A 34 20          4
073C A3E4             (../cmds/BBS.reply):00629                    subd   0,S                                                   * 073C A3 E4          #d
073E 3262             (../cmds/BBS.reply):00630                    leas   $02,S                                                 * 073E 32 62          2b
0740 C30001           (../cmds/BBS.reply):00631                    addd   #1                                                    * 0740 C3 00 01       C..
0743 1F02             (../cmds/BBS.reply):00632                    tfr    D,Y                                                   * 0743 1F 02          ..
0745 5F               (../cmds/BBS.reply):00633                    clrb                                                         * 0745 5F             _
0746 313F             (../cmds/BBS.reply):00634         L0746      leay   -$01,Y                                                * 0746 31 3F          1?
0748 271A             (../cmds/BBS.reply):00635                    beq    L0764                                                 * 0748 27 1A          '.
074A A682             (../cmds/BBS.reply):00636                    lda    ,-X                                                   * 074A A6 82          &.
074C 8120             (../cmds/BBS.reply):00637                    cmpa   #32                                                   * 074C 81 20          .
074E 2725             (../cmds/BBS.reply):00638                    beq    L0775                                                 * 074E 27 25          '%
0750 3430             (../cmds/BBS.reply):00639                    pshs   Y,X                                                   * 0750 34 30          40
0752 308DFA28         (../cmds/BBS.reply):00640                    leax   >L017E,PC                                             * 0752 30 8D FA 28    0.z(
0756 108E0003         (../cmds/BBS.reply):00641                    ldy    #3                                                    * 0756 10 8E 00 03    ....
075A 8601             (../cmds/BBS.reply):00642                    lda    #1                                                    * 075A 86 01          ..
075C 103F8A           (../cmds/BBS.reply):00643                    os9    I$Write                                               * 075C 10 3F 8A       .?.
075F 5C               (../cmds/BBS.reply):00644                    incb                                                         * 075F 5C             \
0760 3530             (../cmds/BBS.reply):00645                    puls   Y,X                                                   * 0760 35 30          50
0762 20E2             (../cmds/BBS.reply):00646                    bra    L0746                                                 * 0762 20 E2           b
0764 860D             (../cmds/BBS.reply):00647         L0764      lda    #13                                                   * 0764 86 0D          ..
0766 A7884F           (../cmds/BBS.reply):00648                    sta    <$004F,X                                              * 0766 A7 88 4F       '.O
0769 108E00C8         (../cmds/BBS.reply):00649                    ldy    #200                                                  * 0769 10 8E 00 C8    ...H
076D 8601             (../cmds/BBS.reply):00650                    lda    #1                                                    * 076D 86 01          ..
076F 103F8C           (../cmds/BBS.reply):00651                    os9    I$WritLn                                              * 076F 10 3F 8C       .?.
0772 3520             (../cmds/BBS.reply):00652                    puls   Y                                                     * 0772 35 20          5
0774 39               (../cmds/BBS.reply):00653                    rts                                                          * 0774 39             9
0775 860D             (../cmds/BBS.reply):00654         L0775      lda    #13                                                   * 0775 86 0D          ..
0777 A780             (../cmds/BBS.reply):00655                    sta    ,X+                                                   * 0777 A7 80          '.
0779 3430             (../cmds/BBS.reply):00656                    pshs   Y,X                                                   * 0779 34 30          40
077B E746             (../cmds/BBS.reply):00657                    stb    U0006,U                                               * 077B E7 46          gF
077D 31C920CB         (../cmds/BBS.reply):00658                    leay   >U20CB,U                                              * 077D 31 C9 20 CB    1I K
0781 A680             (../cmds/BBS.reply):00659         L0781      lda    ,X+                                                   * 0781 A6 80          &.
0783 A7A0             (../cmds/BBS.reply):00660                    sta    ,Y+                                                   * 0783 A7 A0          '
0785 5A               (../cmds/BBS.reply):00661                    decb                                                         * 0785 5A             Z
0786 26F9             (../cmds/BBS.reply):00662                    bne    L0781                                                 * 0786 26 F9          &y
0788 308DF9F0         (../cmds/BBS.reply):00663                    leax   >L017C,PC                                             * 0788 30 8D F9 F0    0.yp
078C 108E0001         (../cmds/BBS.reply):00664                    ldy    #1                                                    * 078C 10 8E 00 01    ....
0790 8601             (../cmds/BBS.reply):00665                    lda    #1                                                    * 0790 86 01          ..
0792 103F8C           (../cmds/BBS.reply):00666                    os9    I$WritLn                                              * 0792 10 3F 8C       .?.
0795 3530             (../cmds/BBS.reply):00667                    puls   Y,X                                                   * 0795 35 30          50
0797 17001B           (../cmds/BBS.reply):00668                    lbsr   L07B5                                                 * 0797 17 00 1B       ...
079A 39               (../cmds/BBS.reply):00669                    rts                                                          * 079A 39             9
079B 3436             (../cmds/BBS.reply):00670         L079B      pshs   Y,X,D                                                 * 079B 34 36          46
079D 30C9211B         (../cmds/BBS.reply):00671                    leax   >U211B,U                                              * 079D 30 C9 21 1B    0I!.
07A1 4F               (../cmds/BBS.reply):00672                    clra                                                         * 07A1 4F             O
07A2 C600             (../cmds/BBS.reply):00673                    ldb    #0                                                    * 07A2 C6 00          F.
07A4 103F8D           (../cmds/BBS.reply):00674                    os9    I$GetStt                                              * 07A4 10 3F 8D       .?.
07A7 3088E0           (../cmds/BBS.reply):00675                    leax   -$20,X                                                * 07A7 30 88 E0       0.`
07AA 6F8824           (../cmds/BBS.reply):00676                    clr    <$0024,X                                              * 07AA 6F 88 24       o.$
07AD 308820           (../cmds/BBS.reply):00677                    leax   <$0020,X                                              * 07AD 30 88 20       0.
07B0 103F8E           (../cmds/BBS.reply):00678                    os9    I$SetStt                                              * 07B0 10 3F 8E       .?.
07B3 35B6             (../cmds/BBS.reply):00679                    puls   PC,Y,X,D                                              * 07B3 35 B6          56
07B5 3436             (../cmds/BBS.reply):00680         L07B5      pshs   Y,X,D                                                 * 07B5 34 36          46
07B7 30C9211B         (../cmds/BBS.reply):00681                    leax   >U211B,U                                              * 07B7 30 C9 21 1B    0I!.
07BB 4F               (../cmds/BBS.reply):00682                    clra                                                         * 07BB 4F             O
07BC C600             (../cmds/BBS.reply):00683                    ldb    #0                                                    * 07BC C6 00          F.
07BE 103F8D           (../cmds/BBS.reply):00684                    os9    I$GetStt                                              * 07BE 10 3F 8D       .?.
07C1 3088E0           (../cmds/BBS.reply):00685                    leax   -$20,X                                                * 07C1 30 88 E0       0.`
07C4 8601             (../cmds/BBS.reply):00686                    lda    #1                                                    * 07C4 86 01          ..
07C6 A78824           (../cmds/BBS.reply):00687                    sta    <$0024,X                                              * 07C6 A7 88 24       '.$
07C9 308820           (../cmds/BBS.reply):00688                    leax   <$0020,X                                              * 07C9 30 88 20       0.
07CC 4F               (../cmds/BBS.reply):00689                    clra                                                         * 07CC 4F             O
07CD 103F8E           (../cmds/BBS.reply):00690                    os9    I$SetStt                                              * 07CD 10 3F 8E       .?.
07D0 35B6             (../cmds/BBS.reply):00691                    puls   PC,Y,X,D                                              * 07D0 35 B6          56
07D2 3420             (../cmds/BBS.reply):00692         L07D2      pshs   Y                                                     * 07D2 34 20          4
07D4 A680             (../cmds/BBS.reply):00693         L07D4      lda    ,X+                                                   * 07D4 A6 80          &.
07D6 810D             (../cmds/BBS.reply):00694                    cmpa   #13                                                   * 07D6 81 0D          ..
07D8 1027009F         (../cmds/BBS.reply):00695                    lbeq   L087B                                                 * 07D8 10 27 00 9F    .'..
07DC 8130             (../cmds/BBS.reply):00696                    cmpa   #48                                                   * 07DC 81 30          .0
07DE 25F4             (../cmds/BBS.reply):00697                    bcs    L07D4                                                 * 07DE 25 F4          %t
07E0 8139             (../cmds/BBS.reply):00698                    cmpa   #57                                                   * 07E0 81 39          .9
07E2 22F0             (../cmds/BBS.reply):00699                    bhi    L07D4                                                 * 07E2 22 F0          "p
07E4 301F             (../cmds/BBS.reply):00700                    leax   -$01,X                                                * 07E4 30 1F          0.
07E6 A680             (../cmds/BBS.reply):00701         L07E6      lda    ,X+                                                   * 07E6 A6 80          &.
07E8 8130             (../cmds/BBS.reply):00702                    cmpa   #48                                                   * 07E8 81 30          .0
07EA 2506             (../cmds/BBS.reply):00703                    bcs    L07F2                                                 * 07EA 25 06          %.
07EC 8139             (../cmds/BBS.reply):00704                    cmpa   #57                                                   * 07EC 81 39          .9
07EE 2202             (../cmds/BBS.reply):00705                    bhi    L07F2                                                 * 07EE 22 02          ".
07F0 20F4             (../cmds/BBS.reply):00706                    bra    L07E6                                                 * 07F0 20 F4           t
07F2 3410             (../cmds/BBS.reply):00707         L07F2      pshs   X                                                     * 07F2 34 10          4.
07F4 301F             (../cmds/BBS.reply):00708                    leax   -$01,X                                                * 07F4 30 1F          0.
07F6 6FC816           (../cmds/BBS.reply):00709                    clr    <U0016,U                                              * 07F6 6F C8 16       oH.
07F9 6FC817           (../cmds/BBS.reply):00710                    clr    <U0017,U                                              * 07F9 6F C8 17       oH.
07FC CC0001           (../cmds/BBS.reply):00711                    ldd    #1                                                    * 07FC CC 00 01       L..
07FF EDC818           (../cmds/BBS.reply):00712                    std    <U0018,U                                              * 07FF ED C8 18       mH.
0802 A682             (../cmds/BBS.reply):00713         L0802      lda    ,-X                                                   * 0802 A6 82          &.
0804 8130             (../cmds/BBS.reply):00714                    cmpa   #48                                                   * 0804 81 30          .0
0806 2533             (../cmds/BBS.reply):00715                    bcs    L083B                                                 * 0806 25 33          %3
0808 8139             (../cmds/BBS.reply):00716                    cmpa   #57                                                   * 0808 81 39          .9
080A 222F             (../cmds/BBS.reply):00717                    bhi    L083B                                                 * 080A 22 2F          "/
080C 8030             (../cmds/BBS.reply):00718                    suba   #48                                                   * 080C 80 30          .0
080E A744             (../cmds/BBS.reply):00719                    sta    U0004,U                                               * 080E A7 44          'D
0810 CC0000           (../cmds/BBS.reply):00720                    ldd    #0                                                    * 0810 CC 00 00       L..
0813 6D44             (../cmds/BBS.reply):00721         L0813      tst    U0004,U                                               * 0813 6D 44          mD
0815 2707             (../cmds/BBS.reply):00722                    beq    L081E                                                 * 0815 27 07          '.
0817 E3C818           (../cmds/BBS.reply):00723                    addd   <U0018,U                                              * 0817 E3 C8 18       cH.
081A 6A44             (../cmds/BBS.reply):00724                    dec    U0004,U                                               * 081A 6A 44          jD
081C 20F5             (../cmds/BBS.reply):00725                    bra    L0813                                                 * 081C 20 F5           u
081E E3C816           (../cmds/BBS.reply):00726         L081E      addd   <U0016,U                                              * 081E E3 C8 16       cH.
0821 EDC816           (../cmds/BBS.reply):00727                    std    <U0016,U                                              * 0821 ED C8 16       mH.
0824 860A             (../cmds/BBS.reply):00728                    lda    #10                                                   * 0824 86 0A          ..
0826 A744             (../cmds/BBS.reply):00729                    sta    U0004,U                                               * 0826 A7 44          'D
0828 CC0000           (../cmds/BBS.reply):00730                    ldd    #0                                                    * 0828 CC 00 00       L..
082B 6D44             (../cmds/BBS.reply):00731         L082B      tst    U0004,U                                               * 082B 6D 44          mD
082D 2707             (../cmds/BBS.reply):00732                    beq    L0836                                                 * 082D 27 07          '.
082F E3C818           (../cmds/BBS.reply):00733                    addd   <U0018,U                                              * 082F E3 C8 18       cH.
0832 6A44             (../cmds/BBS.reply):00734                    dec    U0004,U                                               * 0832 6A 44          jD
0834 20F5             (../cmds/BBS.reply):00735                    bra    L082B                                                 * 0834 20 F5           u
0836 EDC818           (../cmds/BBS.reply):00736         L0836      std    <U0018,U                                              * 0836 ED C8 18       mH.
0839 20C7             (../cmds/BBS.reply):00737                    bra    L0802                                                 * 0839 20 C7           G
083B ECC816           (../cmds/BBS.reply):00738         L083B      ldd    <U0016,U                                              * 083B EC C8 16       lH.
083E 3510             (../cmds/BBS.reply):00739                    puls   X                                                     * 083E 35 10          5.
0840 35A0             (../cmds/BBS.reply):00740                    puls   PC,Y                                                  * 0840 35 A0          5
0842 3420             (../cmds/BBS.reply):00741         L0842      pshs   Y                                                     * 0842 34 20          4
0844 EDC816           (../cmds/BBS.reply):00742                    std    <U0016,U                                              * 0844 ED C8 16       mH.
0847 8630             (../cmds/BBS.reply):00743                    lda    #48                                                   * 0847 86 30          .0
0849 A784             (../cmds/BBS.reply):00744                    sta    0,X                                                   * 0849 A7 84          '.
084B A701             (../cmds/BBS.reply):00745                    sta    $01,X                                                 * 084B A7 01          '.
084D CC000A           (../cmds/BBS.reply):00746                    ldd    #10                                                   * 084D CC 00 0A       L..
0850 EDC818           (../cmds/BBS.reply):00747                    std    <U0018,U                                              * 0850 ED C8 18       mH.
0853 ECC816           (../cmds/BBS.reply):00748                    ldd    <U0016,U                                              * 0853 EC C8 16       lH.
0856 8D11             (../cmds/BBS.reply):00749                    bsr    L0869                                                 * 0856 8D 11          ..
0858 CC0001           (../cmds/BBS.reply):00750                    ldd    #1                                                    * 0858 CC 00 01       L..
085B EDC818           (../cmds/BBS.reply):00751                    std    <U0018,U                                              * 085B ED C8 18       mH.
085E ECC816           (../cmds/BBS.reply):00752                    ldd    <U0016,U                                              * 085E EC C8 16       lH.
0861 8D06             (../cmds/BBS.reply):00753                    bsr    L0869                                                 * 0861 8D 06          ..
0863 860D             (../cmds/BBS.reply):00754                    lda    #13                                                   * 0863 86 0D          ..
0865 A784             (../cmds/BBS.reply):00755                    sta    0,X                                                   * 0865 A7 84          '.
0867 35A0             (../cmds/BBS.reply):00756                    puls   PC,Y                                                  * 0867 35 A0          5
0869 A3C818           (../cmds/BBS.reply):00757         L0869      subd   <U0018,U                                              * 0869 A3 C8 18       #H.
086C 2504             (../cmds/BBS.reply):00758                    bcs    L0872                                                 * 086C 25 04          %.
086E 6C84             (../cmds/BBS.reply):00759                    inc    0,X                                                   * 086E 6C 84          l.
0870 20F7             (../cmds/BBS.reply):00760                    bra    L0869                                                 * 0870 20 F7           w
0872 E3C818           (../cmds/BBS.reply):00761         L0872      addd   <U0018,U                                              * 0872 E3 C8 18       cH.
0875 EDC816           (../cmds/BBS.reply):00762                    std    <U0016,U                                              * 0875 ED C8 16       mH.
0878 3001             (../cmds/BBS.reply):00763                    leax   $01,X                                                 * 0878 30 01          0.
087A 39               (../cmds/BBS.reply):00764                    rts                                                          * 087A 39             9
087B CCFFFF           (../cmds/BBS.reply):00765         L087B      ldd    #-1                                                   * 087B CC FF FF       L..
087E 35A0             (../cmds/BBS.reply):00766                    puls   PC,Y                                                  * 087E 35 A0          5
                      (../cmds/BBS.reply):00767         
0880 3F23D6           (../cmds/BBS.reply):00768                    emod
     0883             (../cmds/BBS.reply):00769         eom        equ    *
                      (../cmds/BBS.reply):00770                    end
