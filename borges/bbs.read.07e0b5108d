                      (../cmds/BBS.read.):00001                    nam    BBS.read
                      (../cmds/BBS.read.):00002                    ttl    program module
                      (../cmds/BBS.read.):00003         
                      (../cmds/BBS.read.):00004                    ifp1
                      (../cmds/BBS.read.):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/BBS.read.):00006                    endc
                      (../cmds/BBS.read.):00007         
     0011             (../cmds/BBS.read.):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/BBS.read.):00009         atrv       set    ReEnt+rev
     0001             (../cmds/BBS.read.):00010         rev        set    $01
                      (../cmds/BBS.read.):00011         
0000 87CD07E0000D1181 (../cmds/BBS.read.):00012                    mod    eom,name,tylg,atrv,start,size
     CF01D602FD
                      (../cmds/BBS.read.):00013         
0000.                 (../cmds/BBS.read.):00014         U0000      rmb    1
0001.                 (../cmds/BBS.read.):00015         U0001      rmb    1
0002.                 (../cmds/BBS.read.):00016         U0002      rmb    1
0003.                 (../cmds/BBS.read.):00017         U0003      rmb    1
0004.                 (../cmds/BBS.read.):00018         U0004      rmb    1
0005.                 (../cmds/BBS.read.):00019         U0005      rmb    1
0006.                 (../cmds/BBS.read.):00020         U0006      rmb    3
0009.                 (../cmds/BBS.read.):00021         U0009      rmb    1
000A.                 (../cmds/BBS.read.):00022         U000A      rmb    1
000B.                 (../cmds/BBS.read.):00023         U000B      rmb    2
000D.                 (../cmds/BBS.read.):00024         U000D      rmb    2
000F.                 (../cmds/BBS.read.):00025         U000F      rmb    2
0011.                 (../cmds/BBS.read.):00026         U0011      rmb    2
0013.                 (../cmds/BBS.read.):00027         U0013      rmb    2
0015.                 (../cmds/BBS.read.):00028         U0015      rmb    2
0017.                 (../cmds/BBS.read.):00029         U0017      rmb    6
001D.                 (../cmds/BBS.read.):00030         U001D      rmb    3
0020.                 (../cmds/BBS.read.):00031         U0020      rmb    1
0021.                 (../cmds/BBS.read.):00032         U0021      rmb    2
0023.                 (../cmds/BBS.read.):00033         U0023      rmb    1
0024.                 (../cmds/BBS.read.):00034         U0024      rmb    6
002A.                 (../cmds/BBS.read.):00035         U002A      rmb    1
002B.                 (../cmds/BBS.read.):00036         U002B      rmb    1
002C.                 (../cmds/BBS.read.):00037         U002C      rmb    2
002E.                 (../cmds/BBS.read.):00038         U002E      rmb    1
002F.                 (../cmds/BBS.read.):00039         U002F      rmb    1
0030.                 (../cmds/BBS.read.):00040         U0030      rmb    1
0031.                 (../cmds/BBS.read.):00041         U0031      rmb    1
0032.                 (../cmds/BBS.read.):00042         U0032      rmb    1
0033.                 (../cmds/BBS.read.):00043         U0033      rmb    1
0034.                 (../cmds/BBS.read.):00044         U0034      rmb    1
0035.                 (../cmds/BBS.read.):00045         U0035      rmb    1
0036.                 (../cmds/BBS.read.):00046         U0036      rmb    1
0037.                 (../cmds/BBS.read.):00047         U0037      rmb    1
0038.                 (../cmds/BBS.read.):00048         U0038      rmb    1
0039.                 (../cmds/BBS.read.):00049         U0039      rmb    1
003A.                 (../cmds/BBS.read.):00050         U003A      rmb    1
003B.                 (../cmds/BBS.read.):00051         U003B      rmb    1
003C.                 (../cmds/BBS.read.):00052         U003C      rmb    1
003D.                 (../cmds/BBS.read.):00053         U003D      rmb    64
007D.                 (../cmds/BBS.read.):00054         U007D      rmb    2
007F.                 (../cmds/BBS.read.):00055         U007F      rmb    2
0081.                 (../cmds/BBS.read.):00056         U0081      rmb    6
0087.                 (../cmds/BBS.read.):00057         U0087      rmb    2
0089.                 (../cmds/BBS.read.):00058         U0089      rmb    2
008B.                 (../cmds/BBS.read.):00059         U008B      rmb    2
008D.                 (../cmds/BBS.read.):00060         U008D      rmb    16
009D.                 (../cmds/BBS.read.):00061         U009D      rmb    80
00ED.                 (../cmds/BBS.read.):00062         U00ED      rmb    2
00EF.                 (../cmds/BBS.read.):00063         U00EF      rmb    2
00F1.                 (../cmds/BBS.read.):00064         U00F1      rmb    20
0105.                 (../cmds/BBS.read.):00065         U0105      rmb    30
0123.                 (../cmds/BBS.read.):00066         U0123      rmb    1
0124.                 (../cmds/BBS.read.):00067         U0124      rmb    1
0125.                 (../cmds/BBS.read.):00068         U0125      rmb    1
0126.                 (../cmds/BBS.read.):00069         U0126      rmb    1
0127.                 (../cmds/BBS.read.):00070         U0127      rmb    4
012B.                 (../cmds/BBS.read.):00071         U012B      rmb    2
012D.                 (../cmds/BBS.read.):00072         U012D      rmb    24
0145.                 (../cmds/BBS.read.):00073         U0145      rmb    40
016D.                 (../cmds/BBS.read.):00074         U016D      rmb    1
016E.                 (../cmds/BBS.read.):00075         U016E      rmb    399
     02FD             (../cmds/BBS.read.):00076         size       equ    .
                      (../cmds/BBS.read.):00077         
000D 4242532E726561E4 (../cmds/BBS.read.):00078         name       fcs    /BBS.read/                                            * 000D 42 42 53 2E 72 65 61 E4 BBS.read
0015 436F707972696768 (../cmds/BBS.read.):00079                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0015 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
0072 EC               (../cmds/BBS.read.):00080                    fcb    $EC                                                   * 0072 EC             l
0073 E6               (../cmds/BBS.read.):00081                    fcb    $E6                                                   * 0073 E6             f
0074 EA               (../cmds/BBS.read.):00082                    fcb    $EA                                                   * 0074 EA             j
0075 F5               (../cmds/BBS.read.):00083                    fcb    $F5                                                   * 0075 F5             u
0076 E9               (../cmds/BBS.read.):00084                    fcb    $E9                                                   * 0076 E9             i
0077 A0               (../cmds/BBS.read.):00085                    fcb    $A0                                                   * 0077 A0
0078 E2               (../cmds/BBS.read.):00086                    fcb    $E2                                                   * 0078 E2             b
0079 ED               (../cmds/BBS.read.):00087                    fcb    $ED                                                   * 0079 ED             m
007A F1               (../cmds/BBS.read.):00088                    fcb    $F1                                                   * 007A F1             q
007B E9               (../cmds/BBS.read.):00089                    fcb    $E9                                                   * 007B E9             i
007C F0               (../cmds/BBS.read.):00090                    fcb    $F0                                                   * 007C F0             p
007D EF               (../cmds/BBS.read.):00091                    fcb    $EF                                                   * 007D EF             o
007E F4               (../cmds/BBS.read.):00092                    fcb    $F4                                                   * 007E F4             t
007F F0               (../cmds/BBS.read.):00093                    fcb    $F0                                                   * 007F F0             p
0080 0A               (../cmds/BBS.read.):00094         L0080      fcb    $0A                                                   * 0080 0A             .
0081 4869676820202020 (../cmds/BBS.read.):00095                    fcc    "High    message is #"                                * 0081 48 69 67 68 20 20 20 20 6D 65 73 73 61 67 65 20 69 73 20 23 High    message is #
     6D65737361676520
     69732023
0095 43757272656E7420 (../cmds/BBS.read.):00096         L0095      fcc    "Current message is #"                                * 0095 43 75 72 72 65 6E 74 20 6D 65 73 73 61 67 65 20 69 73 20 23 Current message is #
     6D65737361676520
     69732023
00A9 5B4E5D6578742C20 (../cmds/BBS.read.):00097         L00A9      fcc    "[N]ext, [P]revious, [T]hread, [R]eply, [Q]uit or Msg #" * 00A9 5B 4E 5D 65 78 74 2C 20 5B 50 5D 72 65 76 69 6F 75 73 2C 20 5B 54 5D 68 72 65 61 64 2C 20 5B 52 5D 65 70 6C 79 2C 20 5B 51 5D 75 69 74 20 6F 72 20 4D 73 67 20 23 [N]ext, [P]revious, [T]hread, [R]eply, [Q]uit or Msg #
     5B505D726576696F
     75732C205B545D68
     726561642C205B52
     5D65706C792C205B
     515D756974206F72
     204D73672023
00DF 0D               (../cmds/BBS.read.):00098                    fcb    $0D                                                   * 00DF 0D             .
00E0 3E               (../cmds/BBS.read.):00099         L00E0      fcc    ">"                                                   * 00E0 3E             >
00E1 4242532E6D73672E (../cmds/BBS.read.):00100         L00E1      fcc    "BBS.msg.inx"                                         * 00E1 42 42 53 2E 6D 73 67 2E 69 6E 78 BBS.msg.inx
     696E78
00EC 0D               (../cmds/BBS.read.):00101                    fcb    $0D                                                   * 00EC 0D             .
00ED 4242532E6D7367   (../cmds/BBS.read.):00102         L00ED      fcc    "BBS.msg"                                             * 00ED 42 42 53 2E 6D 73 67 BBS.msg
00F4 0D               (../cmds/BBS.read.):00103                    fcb    $0D                                                   * 00F4 0D             .
00F5 2A2A2A2A2A2A2020 (../cmds/BBS.read.):00104         L00F5      fcc    "******   DELETED   ******"                           * 00F5 2A 2A 2A 2A 2A 2A 20 20 20 44 45 4C 45 54 45 44 20 20 20 2A 2A 2A 2A 2A 2A ******   DELETED   ******
     2044454C45544544
     2020202A2A2A2A2A
     2A
010E 0D               (../cmds/BBS.read.):00105                    fcb    $0D                                                   * 010E 0D             .
010F 4D65737361676520 (../cmds/BBS.read.):00106         L010F      fcc    "Message :"                                           * 010F 4D 65 73 73 61 67 65 20 3A Message :
     3A
0118 46726F6D20202020 (../cmds/BBS.read.):00107         L0118      fcc    "From    :"                                           * 0118 46 72 6F 6D 20 20 20 20 3A From    :
     3A
0121 546F202020202020 (../cmds/BBS.read.):00108         L0121      fcc    "To      :"                                           * 0121 54 6F 20 20 20 20 20 20 3A To      :
     3A
012A 4C656674206F6E20 (../cmds/BBS.read.):00109         L012A      fcc    "Left on :"                                           * 012A 4C 65 66 74 20 6F 6E 20 3A Left on :
     3A
0133 41626F7574202020 (../cmds/BBS.read.):00110         L0133      fcc    "About   :"                                           * 0133 41 62 6F 75 74 20 20 20 3A About   :
     3A
013C 00               (../cmds/BBS.read.):00111         L013C      fcb    $00                                                   * 013C 00             .
013D 09               (../cmds/BBS.read.):00112                    fcb    $09                                                   * 013D 09             .
013E 2D2D2D2D2D2D2D2D (../cmds/BBS.read.):00113         L013E      fcc    "----------------------------------------------------------------" * 013E 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
017E 0D               (../cmds/BBS.read.):00114                    fcb    $0D                                                   * 017E 0D             .
017F 0A               (../cmds/BBS.read.):00115         L017F      fcb    $0A                                                   * 017F 0A             .
0180 0D               (../cmds/BBS.read.):00116                    fcb    $0D                                                   * 0180 0D             .
0181 4242532E6D73672E (../cmds/BBS.read.):00117         L0181      fcc    "BBS.msg.lst"                                         * 0181 42 42 53 2E 6D 73 67 2E 6C 73 74 BBS.msg.lst
     6C7374
018C 0D               (../cmds/BBS.read.):00118                    fcb    $0D                                                   * 018C 0D             .
018D 4242532E7265706C (../cmds/BBS.read.):00119         L018D      fcc    "BBS.reply"                                           * 018D 42 42 53 2E 72 65 70 6C 79 BBS.reply
     79
0196 0D               (../cmds/BBS.read.):00120                    fcb    $0D                                                   * 0196 0D             .
0197 2F64642F6262732F (../cmds/BBS.read.):00121         L0197      fcc    "/dd/bbs/BBS.userstats"                               * 0197 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
01AC 0D               (../cmds/BBS.read.):00122                    fcb    $0D                                                   * 01AC 0D             .
01AD 2F64642F6262732F (../cmds/BBS.read.):00123         L01AD      fcc    "/dd/bbs/BBS.alias"                                   * 01AD 2F 64 64 2F 62 62 73 2F 42 42 53 2E 61 6C 69 61 73 /dd/bbs/BBS.alias
     4242532E616C6961
     73
01BE 0D               (../cmds/BBS.read.):00124                    fcb    $0D                                                   * 01BE 0D             .
01BF 556E6B6E6F776E20 (../cmds/BBS.read.):00125         L01BF      fcc    "Unknown User"                                        * 01BF 55 6E 6B 6E 6F 77 6E 20 55 73 65 72 Unknown User
     55736572
01CB 0D               (../cmds/BBS.read.):00126                    fcb    $0D                                                   * 01CB 0D             .
01CC 416C6C2055736572 (../cmds/BBS.read.):00127         L01CC      fcc    "All Users"                                           * 01CC 41 6C 6C 20 55 73 65 72 73 All Users
     73
01D5 0D               (../cmds/BBS.read.):00128                    fcb    $0D                                                   * 01D5 0D             .
01D6 103F0C           (../cmds/BBS.read.):00129         start      os9    F$ID                                                  * 01D6 10 3F 0C       .?.
01D9 10AF4D           (../cmds/BBS.read.):00130                    sty    U000D,U                                               * 01D9 10 AF 4D       ./M
01DC 108E0000         (../cmds/BBS.read.):00131                    ldy    #0                                                    * 01DC 10 8E 00 00    ....
01E0 103F1C           (../cmds/BBS.read.):00132                    os9    F$SUser                                               * 01E0 10 3F 1C       .?.
01E3 10AFC815         (../cmds/BBS.read.):00133                    sty    <U0015,U                                              * 01E3 10 AF C8 15    ./H.
01E7 308DFEF6         (../cmds/BBS.read.):00134                    leax   >L00E1,PC                                             * 01E7 30 8D FE F6    0.~v
01EB 8601             (../cmds/BBS.read.):00135                    lda    #1                                                    * 01EB 86 01          ..
01ED 103F84           (../cmds/BBS.read.):00136                    os9    I$Open                                                * 01ED 10 3F 84       .?.
01F0 1025050C         (../cmds/BBS.read.):00137                    lbcs   L0700                                                 * 01F0 10 25 05 0C    .%..
01F4 A7C4             (../cmds/BBS.read.):00138                    sta    U0000,U                                               * 01F4 A7 C4          'D
01F6 308DFF87         (../cmds/BBS.read.):00139                    leax   >L0181,PC                                             * 01F6 30 8D FF 87    0...
01FA 8603             (../cmds/BBS.read.):00140                    lda    #3                                                    * 01FA 86 03          ..
01FC 103F84           (../cmds/BBS.read.):00141                    os9    I$Open                                                * 01FC 10 3F 84       .?.
01FF 2409             (../cmds/BBS.read.):00142                    bcc    L020A                                                 * 01FF 24 09          $.
0201 C603             (../cmds/BBS.read.):00143                    ldb    #3                                                    * 0201 C6 03          F.
0203 103F83           (../cmds/BBS.read.):00144                    os9    I$Create                                              * 0203 10 3F 83       .?.
0206 102504F6         (../cmds/BBS.read.):00145                    lbcs   L0700                                                 * 0206 10 25 04 F6    .%.v
020A A742             (../cmds/BBS.read.):00146         L020A      sta    U0002,U                                               * 020A A7 42          'B
020C 308DFEDD         (../cmds/BBS.read.):00147                    leax   >L00ED,PC                                             * 020C 30 8D FE DD    0.~]
0210 8601             (../cmds/BBS.read.):00148                    lda    #1                                                    * 0210 86 01          ..
0212 103F84           (../cmds/BBS.read.):00149                    os9    I$Open                                                * 0212 10 3F 84       .?.
0215 102504E7         (../cmds/BBS.read.):00150                    lbcs   L0700                                                 * 0215 10 25 04 E7    .%.g
0219 A741             (../cmds/BBS.read.):00151                    sta    U0001,U                                               * 0219 A7 41          'A
021B 30C83D           (../cmds/BBS.read.):00152                    leax   <U003D,U                                              * 021B 30 C8 3D       0H=
021E 108E0040         (../cmds/BBS.read.):00153                    ldy    #64                                                   * 021E 10 8E 00 40    ...@
0222 A6C4             (../cmds/BBS.read.):00154                    lda    U0000,U                                               * 0222 A6 C4          &D
0224 103F89           (../cmds/BBS.read.):00155                    os9    I$Read                                                * 0224 10 3F 89       .?.
0227 102504D5         (../cmds/BBS.read.):00156                    lbcs   L0700                                                 * 0227 10 25 04 D5    .%.U
022B CC0000           (../cmds/BBS.read.):00157                    ldd    #0                                                    * 022B CC 00 00       L..
022E EDC813           (../cmds/BBS.read.):00158                    std    <U0013,U                                              * 022E ED C8 13       mH.
0231 ECC83D           (../cmds/BBS.read.):00159         L0231      ldd    <U003D,U                                              * 0231 EC C8 3D       lH=
0234 30C817           (../cmds/BBS.read.):00160                    leax   <U0017,U                                              * 0234 30 C8 17       0H.
0237 170530           (../cmds/BBS.read.):00161                    lbsr   L076A                                                 * 0237 17 05 30       ..0
023A 308DFE42         (../cmds/BBS.read.):00162                    leax   >L0080,PC                                             * 023A 30 8D FE 42    0.~B
023E 108E0015         (../cmds/BBS.read.):00163                    ldy    #21                                                   * 023E 10 8E 00 15    ....
0242 8601             (../cmds/BBS.read.):00164                    lda    #1                                                    * 0242 86 01          ..
0244 103F8A           (../cmds/BBS.read.):00165                    os9    I$Write                                               * 0244 10 3F 8A       .?.
0247 102504B5         (../cmds/BBS.read.):00166                    lbcs   L0700                                                 * 0247 10 25 04 B5    .%.5
024B 30C817           (../cmds/BBS.read.):00167                    leax   <U0017,U                                              * 024B 30 C8 17       0H.
024E 108E0006         (../cmds/BBS.read.):00168                    ldy    #6                                                    * 024E 10 8E 00 06    ....
0252 103F8C           (../cmds/BBS.read.):00169                    os9    I$WritLn                                              * 0252 10 3F 8C       .?.
0255 102504A7         (../cmds/BBS.read.):00170                    lbcs   L0700                                                 * 0255 10 25 04 A7    .%.'
0259 ECC813           (../cmds/BBS.read.):00171                    ldd    <U0013,U                                              * 0259 EC C8 13       lH.
025C 30C817           (../cmds/BBS.read.):00172                    leax   <U0017,U                                              * 025C 30 C8 17       0H.
025F 170508           (../cmds/BBS.read.):00173                    lbsr   L076A                                                 * 025F 17 05 08       ...
0262 308DFE2F         (../cmds/BBS.read.):00174                    leax   >L0095,PC                                             * 0262 30 8D FE 2F    0.~/
0266 108E0014         (../cmds/BBS.read.):00175                    ldy    #20                                                   * 0266 10 8E 00 14    ....
026A 8601             (../cmds/BBS.read.):00176                    lda    #1                                                    * 026A 86 01          ..
026C 103F8A           (../cmds/BBS.read.):00177                    os9    I$Write                                               * 026C 10 3F 8A       .?.
026F 1025048D         (../cmds/BBS.read.):00178                    lbcs   L0700                                                 * 026F 10 25 04 8D    .%..
0273 30C817           (../cmds/BBS.read.):00179                    leax   <U0017,U                                              * 0273 30 C8 17       0H.
0276 108E0006         (../cmds/BBS.read.):00180                    ldy    #6                                                    * 0276 10 8E 00 06    ....
027A 103F8C           (../cmds/BBS.read.):00181                    os9    I$WritLn                                              * 027A 10 3F 8C       .?.
027D 1025047F         (../cmds/BBS.read.):00182                    lbcs   L0700                                                 * 027D 10 25 04 7F    .%..
0281 308DFE24         (../cmds/BBS.read.):00183                    leax   >L00A9,PC                                             * 0281 30 8D FE 24    0.~$
0285 108E00C8         (../cmds/BBS.read.):00184                    ldy    #200                                                  * 0285 10 8E 00 C8    ...H
0289 8601             (../cmds/BBS.read.):00185                    lda    #1                                                    * 0289 86 01          ..
028B 103F8C           (../cmds/BBS.read.):00186                    os9    I$WritLn                                              * 028B 10 3F 8C       .?.
028E 1025046E         (../cmds/BBS.read.):00187                    lbcs   L0700                                                 * 028E 10 25 04 6E    .%.n
0292 308DFE4A         (../cmds/BBS.read.):00188                    leax   >L00E0,PC                                             * 0292 30 8D FE 4A    0.~J
0296 108E0001         (../cmds/BBS.read.):00189                    ldy    #1                                                    * 0296 10 8E 00 01    ....
029A 103F8A           (../cmds/BBS.read.):00190                    os9    I$Write                                               * 029A 10 3F 8A       .?.
029D 1025045F         (../cmds/BBS.read.):00191                    lbcs   L0700                                                 * 029D 10 25 04 5F    .%._
02A1 30C824           (../cmds/BBS.read.):00192                    leax   <U0024,U                                              * 02A1 30 C8 24       0H$
02A4 108E0006         (../cmds/BBS.read.):00193                    ldy    #6                                                    * 02A4 10 8E 00 06    ....
02A8 4F               (../cmds/BBS.read.):00194                    clra                                                         * 02A8 4F             O
02A9 103F8B           (../cmds/BBS.read.):00195         L02A9      os9    I$ReadLn                                              * 02A9 10 3F 8B       .?.
02AC 25FB             (../cmds/BBS.read.):00196                    bcs    L02A9                                                 * 02AC 25 FB          %{
02AE A6C824           (../cmds/BBS.read.):00197                    lda    <U0024,U                                              * 02AE A6 C8 24       &H$
02B1 8139             (../cmds/BBS.read.):00198                    cmpa   #57                                                   * 02B1 81 39          .9
02B3 2D20             (../cmds/BBS.read.):00199                    blt    L02D5                                                 * 02B3 2D 20          -
02B5 84DF             (../cmds/BBS.read.):00200                    anda   #223                                                  * 02B5 84 DF          ._
02B7 8151             (../cmds/BBS.read.):00201                    cmpa   #81                                                   * 02B7 81 51          .Q
02B9 1027038C         (../cmds/BBS.read.):00202                    lbeq   L0649                                                 * 02B9 10 27 03 8C    .'..
02BD 814E             (../cmds/BBS.read.):00203                    cmpa   #78                                                   * 02BD 81 4E          .N
02BF 10270031         (../cmds/BBS.read.):00204                    lbeq   L02F4                                                 * 02BF 10 27 00 31    .'.1
02C3 8150             (../cmds/BBS.read.):00205                    cmpa   #80                                                   * 02C3 81 50          .P
02C5 1027003F         (../cmds/BBS.read.):00206                    lbeq   L0308                                                 * 02C5 10 27 00 3F    .'.?
02C9 8154             (../cmds/BBS.read.):00207                    cmpa   #84                                                   * 02C9 81 54          .T
02CB 10270049         (../cmds/BBS.read.):00208                    lbeq   L0318                                                 * 02CB 10 27 00 49    .'.I
02CF 8152             (../cmds/BBS.read.):00209                    cmpa   #82                                                   * 02CF 81 52          .R
02D1 10270086         (../cmds/BBS.read.):00210                    lbeq   L035B                                                 * 02D1 10 27 00 86    .'..
02D5 6FC823           (../cmds/BBS.read.):00211         L02D5      clr    <U0023,U                                              * 02D5 6F C8 23       oH#
02D8 30C824           (../cmds/BBS.read.):00212                    leax   <U0024,U                                              * 02D8 30 C8 24       0H$
02DB 170425           (../cmds/BBS.read.):00213                    lbsr   L0703                                                 * 02DB 17 04 25       ..%
02DE 10830000         (../cmds/BBS.read.):00214                    cmpd   #0                                                    * 02DE 10 83 00 00    ....
02E2 1027FF4B         (../cmds/BBS.read.):00215                    lbeq   L0231                                                 * 02E2 10 27 FF 4B    .'.K
02E6 10A3C83D         (../cmds/BBS.read.):00216                    cmpd   <U003D,U                                              * 02E6 10 A3 C8 3D    .#H=
02EA 1022FF43         (../cmds/BBS.read.):00217                    lbhi   L0231                                                 * 02EA 10 22 FF 43    .".C
02EE EDC813           (../cmds/BBS.read.):00218                    std    <U0013,U                                              * 02EE ED C8 13       mH.
02F1 1600A4           (../cmds/BBS.read.):00219                    lbra   L0398                                                 * 02F1 16 00 A4       ..$
02F4 ECC813           (../cmds/BBS.read.):00220         L02F4      ldd    <U0013,U                                              * 02F4 EC C8 13       lH.
02F7 C30001           (../cmds/BBS.read.):00221                    addd   #1                                                    * 02F7 C3 00 01       C..
02FA 10A3C83D         (../cmds/BBS.read.):00222                    cmpd   <U003D,U                                              * 02FA 10 A3 C8 3D    .#H=
02FE 102EFF2F         (../cmds/BBS.read.):00223                    lbgt   L0231                                                 * 02FE 10 2E FF 2F    .../
0302 EDC813           (../cmds/BBS.read.):00224                    std    <U0013,U                                              * 0302 ED C8 13       mH.
0305 160090           (../cmds/BBS.read.):00225                    lbra   L0398                                                 * 0305 16 00 90       ...
0308 ECC813           (../cmds/BBS.read.):00226         L0308      ldd    <U0013,U                                              * 0308 EC C8 13       lH.
030B 830001           (../cmds/BBS.read.):00227                    subd   #1                                                    * 030B 83 00 01       ...
030E 1027FF1F         (../cmds/BBS.read.):00228                    lbeq   L0231                                                 * 030E 10 27 FF 1F    .'..
0312 EDC813           (../cmds/BBS.read.):00229                    std    <U0013,U                                              * 0312 ED C8 13       mH.
0315 160080           (../cmds/BBS.read.):00230                    lbra   L0398                                                 * 0315 16 00 80       ...
0318 30C9012D         (../cmds/BBS.read.):00231         L0318      leax   >U012D,U                                              * 0318 30 C9 01 2D    0I.-
031C 108E0040         (../cmds/BBS.read.):00232                    ldy    #64                                                   * 031C 10 8E 00 40    ...@
0320 A6C4             (../cmds/BBS.read.):00233                    lda    U0000,U                                               * 0320 A6 C4          &D
0322 103F89           (../cmds/BBS.read.):00234                    os9    I$Read                                                * 0322 10 3F 89       .?.
0325 2525             (../cmds/BBS.read.):00235                    bcs    L034C                                                 * 0325 25 25          %%
0327 ECC813           (../cmds/BBS.read.):00236                    ldd    <U0013,U                                              * 0327 EC C8 13       lH.
032A C30001           (../cmds/BBS.read.):00237                    addd   #1                                                    * 032A C3 00 01       C..
032D EDC813           (../cmds/BBS.read.):00238                    std    <U0013,U                                              * 032D ED C8 13       mH.
0330 31C90105         (../cmds/BBS.read.):00239                    leay   >U0105,U                                              * 0330 31 C9 01 05    1I..
0334 30C90145         (../cmds/BBS.read.):00240                    leax   >U0145,U                                              * 0334 30 C9 01 45    0I.E
0338 A684             (../cmds/BBS.read.):00241         L0338      lda    0,X                                                   * 0338 A6 84          &.
033A 84DF             (../cmds/BBS.read.):00242                    anda   #223                                                  * 033A 84 DF          ._
033C A784             (../cmds/BBS.read.):00243                    sta    0,X                                                   * 033C A7 84          '.
033E A6A0             (../cmds/BBS.read.):00244                    lda    ,Y+                                                   * 033E A6 A0          &
0340 810D             (../cmds/BBS.read.):00245                    cmpa   #13                                                   * 0340 81 0D          ..
0342 2711             (../cmds/BBS.read.):00246                    beq    L0355                                                 * 0342 27 11          '.
0344 84DF             (../cmds/BBS.read.):00247                    anda   #223                                                  * 0344 84 DF          ._
0346 A180             (../cmds/BBS.read.):00248                    cmpa   ,X+                                                   * 0346 A1 80          !.
0348 26CE             (../cmds/BBS.read.):00249                    bne    L0318                                                 * 0348 26 CE          &N
034A 20EC             (../cmds/BBS.read.):00250                    bra    L0338                                                 * 034A 20 EC           l
034C C1D3             (../cmds/BBS.read.):00251         L034C      cmpb   #211                                                  * 034C C1 D3          AS
034E 102603AE         (../cmds/BBS.read.):00252                    lbne   L0700                                                 * 034E 10 26 03 AE    .&..
0352 16FEDC           (../cmds/BBS.read.):00253                    lbra   L0231                                                 * 0352 16 FE DC       .~\
0355 ECC813           (../cmds/BBS.read.):00254         L0355      ldd    <U0013,U                                              * 0355 EC C8 13       lH.
0358 16003D           (../cmds/BBS.read.):00255                    lbra   L0398                                                 * 0358 16 00 3D       ..=
035B 10AE4D           (../cmds/BBS.read.):00256         L035B      ldy    U000D,U                                               * 035B 10 AE 4D       ..M
035E 103F1C           (../cmds/BBS.read.):00257                    os9    F$SUser                                               * 035E 10 3F 1C       .?.
0361 8611             (../cmds/BBS.read.):00258                    lda    #17                                                   * 0361 86 11          ..
0363 C603             (../cmds/BBS.read.):00259                    ldb    #3                                                    * 0363 C6 03          F.
0365 308DFE24         (../cmds/BBS.read.):00260                    leax   >L018D,PC                                             * 0365 30 8D FE 24    0.~$
0369 108E0050         (../cmds/BBS.read.):00261                    ldy    #80                                                   * 0369 10 8E 00 50    ...P
036D 3440             (../cmds/BBS.read.):00262                    pshs   U                                                     * 036D 34 40          4@
036F 33C90105         (../cmds/BBS.read.):00263                    leau   >U0105,U                                              * 036F 33 C9 01 05    3I..
0373 103F03           (../cmds/BBS.read.):00264                    os9    F$Fork                                                * 0373 10 3F 03       .?.
0376 3540             (../cmds/BBS.read.):00265                    puls   U                                                     * 0376 35 40          5@
0378 1025FEB5         (../cmds/BBS.read.):00266                    lbcs   L0231                                                 * 0378 10 25 FE B5    .%~5
037C 5F               (../cmds/BBS.read.):00267                    clrb                                                         * 037C 5F             _
037D 103F04           (../cmds/BBS.read.):00268                    os9    F$Wait                                                * 037D 10 3F 04       .?.
0380 5D               (../cmds/BBS.read.):00269                    tstb                                                         * 0380 5D             ]
0381 1026FEAC         (../cmds/BBS.read.):00270                    lbne   L0231                                                 * 0381 10 26 FE AC    .&~,
0385 108E0000         (../cmds/BBS.read.):00271                    ldy    #0                                                    * 0385 10 8E 00 00    ....
0389 103F1C           (../cmds/BBS.read.):00272                    os9    F$SUser                                               * 0389 10 3F 1C       .?.
038C ECC83D           (../cmds/BBS.read.):00273                    ldd    <U003D,U                                              * 038C EC C8 3D       lH=
038F C30001           (../cmds/BBS.read.):00274                    addd   #1                                                    * 038F C3 00 01       C..
0392 EDC83D           (../cmds/BBS.read.):00275                    std    <U003D,U                                              * 0392 ED C8 3D       mH=
0395 16FE99           (../cmds/BBS.read.):00276                    lbra   L0231                                                 * 0395 16 FE 99       .~.
0398 A642             (../cmds/BBS.read.):00277         L0398      lda    U0002,U                                               * 0398 A6 42          &B
039A 304F             (../cmds/BBS.read.):00278                    leax   U000F,U                                               * 039A 30 4F          0O
039C 108E0004         (../cmds/BBS.read.):00279                    ldy    #4                                                    * 039C 10 8E 00 04    ....
03A0 103F89           (../cmds/BBS.read.):00280                    os9    I$Read                                                * 03A0 10 3F 89       .?.
03A3 252C             (../cmds/BBS.read.):00281                    bcs    L03D1                                                 * 03A3 25 2C          %,
03A5 EC4F             (../cmds/BBS.read.):00282                    ldd    U000F,U                                               * 03A5 EC 4F          lO
03A7 10A34D           (../cmds/BBS.read.):00283                    cmpd   U000D,U                                               * 03A7 10 A3 4D       .#M
03AA 26EC             (../cmds/BBS.read.):00284                    bne    L0398                                                 * 03AA 26 EC          &l
03AC ECC811           (../cmds/BBS.read.):00285                    ldd    <U0011,U                                              * 03AC EC C8 11       lH.
03AF 10A3C813         (../cmds/BBS.read.):00286                    cmpd   <U0013,U                                              * 03AF 10 A3 C8 13    .#H.
03B3 2433             (../cmds/BBS.read.):00287                    bcc    L03E8                                                 * 03B3 24 33          $3
03B5 3440             (../cmds/BBS.read.):00288                    pshs   U                                                     * 03B5 34 40          4@
03B7 A642             (../cmds/BBS.read.):00289                    lda    U0002,U                                               * 03B7 A6 42          &B
03B9 C605             (../cmds/BBS.read.):00290                    ldb    #5                                                    * 03B9 C6 05          F.
03BB 103F8D           (../cmds/BBS.read.):00291                    os9    I$GetStt                                              * 03BB 10 3F 8D       .?.
03BE 335E             (../cmds/BBS.read.):00292                    leau   -$02,U                                                * 03BE 33 5E          3^
03C0 103F88           (../cmds/BBS.read.):00293                    os9    I$Seek                                                * 03C0 10 3F 88       .?.
03C3 3540             (../cmds/BBS.read.):00294                    puls   U                                                     * 03C3 35 40          5@
03C5 30C813           (../cmds/BBS.read.):00295                    leax   <U0013,U                                              * 03C5 30 C8 13       0H.
03C8 108E0002         (../cmds/BBS.read.):00296                    ldy    #2                                                    * 03C8 10 8E 00 02    ....
03CC 103F8A           (../cmds/BBS.read.):00297                    os9    I$Write                                               * 03CC 10 3F 8A       .?.
03CF 2017             (../cmds/BBS.read.):00298                    bra    L03E8                                                 * 03CF 20 17           .
03D1 C1D3             (../cmds/BBS.read.):00299         L03D1      cmpb   #211                                                  * 03D1 C1 D3          AS
03D3 10260329         (../cmds/BBS.read.):00300                    lbne   L0700                                                 * 03D3 10 26 03 29    .&.)
03D7 A642             (../cmds/BBS.read.):00301                    lda    U0002,U                                               * 03D7 A6 42          &B
03D9 304D             (../cmds/BBS.read.):00302                    leax   U000D,U                                               * 03D9 30 4D          0M
03DB 108E0002         (../cmds/BBS.read.):00303                    ldy    #2                                                    * 03DB 10 8E 00 02    ....
03DF 103F8A           (../cmds/BBS.read.):00304                    os9    I$Write                                               * 03DF 10 3F 8A       .?.
03E2 30C813           (../cmds/BBS.read.):00305                    leax   <U0013,U                                              * 03E2 30 C8 13       0H.
03E5 103F8A           (../cmds/BBS.read.):00306                    os9    I$Write                                               * 03E5 10 3F 8A       .?.
03E8 6FC82A           (../cmds/BBS.read.):00307         L03E8      clr    <U002A,U                                              * 03E8 6F C8 2A       oH*
03EB 6FC82B           (../cmds/BBS.read.):00308                    clr    <U002B,U                                              * 03EB 6F C8 2B       oH+
03EE 8606             (../cmds/BBS.read.):00309                    lda    #6                                                    * 03EE 86 06          ..
03F0 A744             (../cmds/BBS.read.):00310                    sta    U0004,U                                               * 03F0 A7 44          'D
03F2 ECC813           (../cmds/BBS.read.):00311                    ldd    <U0013,U                                              * 03F2 EC C8 13       lH.
03F5 58               (../cmds/BBS.read.):00312         L03F5      aslb                                                         * 03F5 58             X
03F6 49               (../cmds/BBS.read.):00313                    rola                                                         * 03F6 49             I
03F7 69C82B           (../cmds/BBS.read.):00314                    rol    <U002B,U                                              * 03F7 69 C8 2B       iH+
03FA 6A44             (../cmds/BBS.read.):00315                    dec    U0004,U                                               * 03FA 6A 44          jD
03FC 26F7             (../cmds/BBS.read.):00316                    bne    L03F5                                                 * 03FC 26 F7          &w
03FE EDC82C           (../cmds/BBS.read.):00317                    std    <U002C,U                                              * 03FE ED C8 2C       mH,
0401 AEC82A           (../cmds/BBS.read.):00318                    ldx    <U002A,U                                              * 0401 AE C8 2A       .H*
0404 A6C4             (../cmds/BBS.read.):00319                    lda    U0000,U                                               * 0404 A6 C4          &D
0406 3440             (../cmds/BBS.read.):00320                    pshs   U                                                     * 0406 34 40          4@
0408 EEC82C           (../cmds/BBS.read.):00321                    ldu    <U002C,U                                              * 0408 EE C8 2C       nH,
040B 103F88           (../cmds/BBS.read.):00322                    os9    I$Seek                                                * 040B 10 3F 88       .?.
040E 102502EE         (../cmds/BBS.read.):00323                    lbcs   L0700                                                 * 040E 10 25 02 EE    .%.n
0412 3540             (../cmds/BBS.read.):00324                    puls   U                                                     * 0412 35 40          5@
0414 A6C4             (../cmds/BBS.read.):00325                    lda    U0000,U                                               * 0414 A6 C4          &D
0416 108E0040         (../cmds/BBS.read.):00326                    ldy    #64                                                   * 0416 10 8E 00 40    ...@
041A 30C900ED         (../cmds/BBS.read.):00327                    leax   >U00ED,U                                              * 041A 30 C9 00 ED    0I.m
041E 103F89           (../cmds/BBS.read.):00328                    os9    I$Read                                                * 041E 10 3F 89       .?.
0421 1025FE0C         (../cmds/BBS.read.):00329                    lbcs   L0231                                                 * 0421 10 25 FE 0C    .%~.
0425 308DFD56         (../cmds/BBS.read.):00330                    leax   >L017F,PC                                             * 0425 30 8D FD 56    0.}V
0429 108E0002         (../cmds/BBS.read.):00331                    ldy    #2                                                    * 0429 10 8E 00 02    ....
042D 8601             (../cmds/BBS.read.):00332                    lda    #1                                                    * 042D 86 01          ..
042F 103F8C           (../cmds/BBS.read.):00333                    os9    I$WritLn                                              * 042F 10 3F 8C       .?.
0432 ECC813           (../cmds/BBS.read.):00334                    ldd    <U0013,U                                              * 0432 EC C8 13       lH.
0435 30C81D           (../cmds/BBS.read.):00335                    leax   <U001D,U                                              * 0435 30 C8 1D       0H.
0438 17032F           (../cmds/BBS.read.):00336                    lbsr   L076A                                                 * 0438 17 03 2F       ../
043B 308DFCD0         (../cmds/BBS.read.):00337                    leax   >L010F,PC                                             * 043B 30 8D FC D0    0.|P
043F 10AE8DFCF8       (../cmds/BBS.read.):00338                    ldy    >L013C,PC                                             * 043F 10 AE 8D FC F8 ...|x
0444 8601             (../cmds/BBS.read.):00339                    lda    #1                                                    * 0444 86 01          ..
0446 103F8A           (../cmds/BBS.read.):00340                    os9    I$Write                                               * 0446 10 3F 8A       .?.
0449 102502B3         (../cmds/BBS.read.):00341                    lbcs   L0700                                                 * 0449 10 25 02 B3    .%.3
044D 30C81D           (../cmds/BBS.read.):00342                    leax   <U001D,U                                              * 044D 30 C8 1D       0H.
0450 A680             (../cmds/BBS.read.):00343         L0450      lda    ,X+                                                   * 0450 A6 80          &.
0452 8120             (../cmds/BBS.read.):00344                    cmpa   #32                                                   * 0452 81 20          .
0454 27FA             (../cmds/BBS.read.):00345                    beq    L0450                                                 * 0454 27 FA          'z
0456 301F             (../cmds/BBS.read.):00346                    leax   -$01,X                                                * 0456 30 1F          0.
0458 108E0006         (../cmds/BBS.read.):00347                    ldy    #6                                                    * 0458 10 8E 00 06    ....
045C 8601             (../cmds/BBS.read.):00348                    lda    #1                                                    * 045C 86 01          ..
045E 103F8C           (../cmds/BBS.read.):00349                    os9    I$WritLn                                              * 045E 10 3F 8C       .?.
0461 1025029B         (../cmds/BBS.read.):00350                    lbcs   L0700                                                 * 0461 10 25 02 9B    .%..
0465 ECC900ED         (../cmds/BBS.read.):00351                    ldd    >U00ED,U                                              * 0465 EC C9 00 ED    lI.m
0469 1083FFFF         (../cmds/BBS.read.):00352                    cmpd   #-1                                                   * 0469 10 83 FF FF    ....
046D 10270175         (../cmds/BBS.read.):00353                    lbeq   L05E6                                                 * 046D 10 27 01 75    .'.u
0471 308DFCA3         (../cmds/BBS.read.):00354                    leax   >L0118,PC                                             * 0471 30 8D FC A3    0.|#
0475 10AE8DFCC2       (../cmds/BBS.read.):00355                    ldy    >L013C,PC                                             * 0475 10 AE 8D FC C2 ...|B
047A 8601             (../cmds/BBS.read.):00356                    lda    #1                                                    * 047A 86 01          ..
047C 103F8A           (../cmds/BBS.read.):00357                    os9    I$Write                                               * 047C 10 3F 8A       .?.
047F 30C900F1         (../cmds/BBS.read.):00358                    leax   >U00F1,U                                              * 047F 30 C9 00 F1    0I.q
0483 108E00C8         (../cmds/BBS.read.):00359                    ldy    #200                                                  * 0483 10 8E 00 C8    ...H
0487 8601             (../cmds/BBS.read.):00360                    lda    #1                                                    * 0487 86 01          ..
0489 103F8C           (../cmds/BBS.read.):00361                    os9    I$WritLn                                              * 0489 10 3F 8C       .?.
048C 10250270         (../cmds/BBS.read.):00362                    lbcs   L0700                                                 * 048C 10 25 02 70    .%.p
0490 308DFC8D         (../cmds/BBS.read.):00363                    leax   >L0121,PC                                             * 0490 30 8D FC 8D    0.|.
0494 10AE8DFCA3       (../cmds/BBS.read.):00364                    ldy    >L013C,PC                                             * 0494 10 AE 8D FC A3 ...|#
0499 8601             (../cmds/BBS.read.):00365                    lda    #1                                                    * 0499 86 01          ..
049B 103F8A           (../cmds/BBS.read.):00366                    os9    I$Write                                               * 049B 10 3F 8A       .?.
049E ECC9012B         (../cmds/BBS.read.):00367                    ldd    >U012B,U                                              * 049E EC C9 01 2B    lI.+
04A2 1083FFFF         (../cmds/BBS.read.):00368                    cmpd   #-1                                                   * 04A2 10 83 FF FF    ....
04A6 2760             (../cmds/BBS.read.):00369                    beq    L0508                                                 * 04A6 27 60          '`
04A8 308DFD01         (../cmds/BBS.read.):00370                    leax   >L01AD,PC                                             * 04A8 30 8D FD 01    0.}.
04AC 8601             (../cmds/BBS.read.):00371                    lda    #1                                                    * 04AC 86 01          ..
04AE 103F84           (../cmds/BBS.read.):00372                    os9    I$Open                                                * 04AE 10 3F 84       .?.
04B1 1025024B         (../cmds/BBS.read.):00373                    lbcs   L0700                                                 * 04B1 10 25 02 4B    .%.K
04B5 A743             (../cmds/BBS.read.):00374                    sta    U0003,U                                               * 04B5 A7 43          'C
04B7 30C9016D         (../cmds/BBS.read.):00375         L04B7      leax   >U016D,U                                              * 04B7 30 C9 01 6D    0I.m
04BB 108E00C8         (../cmds/BBS.read.):00376                    ldy    #200                                                  * 04BB 10 8E 00 C8    ...H
04BF A643             (../cmds/BBS.read.):00377                    lda    U0003,U                                               * 04BF A6 43          &C
04C1 103F8B           (../cmds/BBS.read.):00378                    os9    I$ReadLn                                              * 04C1 10 3F 8B       .?.
04C4 252D             (../cmds/BBS.read.):00379                    bcs    L04F3                                                 * 04C4 25 2D          %-
04C6 30C9016D         (../cmds/BBS.read.):00380                    leax   >U016D,U                                              * 04C6 30 C9 01 6D    0I.m
04CA A680             (../cmds/BBS.read.):00381         L04CA      lda    ,X+                                                   * 04CA A6 80          &.
04CC 812C             (../cmds/BBS.read.):00382                    cmpa   #44                                                   * 04CC 81 2C          .,
04CE 26FA             (../cmds/BBS.read.):00383                    bne    L04CA                                                 * 04CE 26 FA          &z
04D0 860D             (../cmds/BBS.read.):00384                    lda    #13                                                   * 04D0 86 0D          ..
04D2 A71F             (../cmds/BBS.read.):00385                    sta    -$01,X                                                * 04D2 A7 1F          '.
04D4 17022C           (../cmds/BBS.read.):00386                    lbsr   L0703                                                 * 04D4 17 02 2C       ..,
04D7 10A3C9012B       (../cmds/BBS.read.):00387                    cmpd   >U012B,U                                              * 04D7 10 A3 C9 01 2B .#I.+
04DC 26D9             (../cmds/BBS.read.):00388                    bne    L04B7                                                 * 04DC 26 D9          &Y
04DE 30C9016D         (../cmds/BBS.read.):00389                    leax   >U016D,U                                              * 04DE 30 C9 01 6D    0I.m
04E2 108E00C8         (../cmds/BBS.read.):00390                    ldy    #200                                                  * 04E2 10 8E 00 C8    ...H
04E6 8601             (../cmds/BBS.read.):00391                    lda    #1                                                    * 04E6 86 01          ..
04E8 103F8C           (../cmds/BBS.read.):00392                    os9    I$WritLn                                              * 04E8 10 3F 8C       .?.
04EB A643             (../cmds/BBS.read.):00393                    lda    U0003,U                                               * 04EB A6 43          &C
04ED 103F8F           (../cmds/BBS.read.):00394                    os9    I$Close                                               * 04ED 10 3F 8F       .?.
04F0 160022           (../cmds/BBS.read.):00395                    lbra   L0515                                                 * 04F0 16 00 22       .."
04F3 308DFCC8         (../cmds/BBS.read.):00396         L04F3      leax   >L01BF,PC                                             * 04F3 30 8D FC C8    0.|H
04F7 108E00C8         (../cmds/BBS.read.):00397                    ldy    #200                                                  * 04F7 10 8E 00 C8    ...H
04FB 8601             (../cmds/BBS.read.):00398                    lda    #1                                                    * 04FB 86 01          ..
04FD 103F8C           (../cmds/BBS.read.):00399                    os9    I$WritLn                                              * 04FD 10 3F 8C       .?.
0500 A643             (../cmds/BBS.read.):00400                    lda    U0003,U                                               * 0500 A6 43          &C
0502 103F8F           (../cmds/BBS.read.):00401                    os9    I$Close                                               * 0502 10 3F 8F       .?.
0505 16000D           (../cmds/BBS.read.):00402                    lbra   L0515                                                 * 0505 16 00 0D       ...
0508 308DFCC0         (../cmds/BBS.read.):00403         L0508      leax   >L01CC,PC                                             * 0508 30 8D FC C0    0.|@
050C 108E00C8         (../cmds/BBS.read.):00404                    ldy    #200                                                  * 050C 10 8E 00 C8    ...H
0510 8601             (../cmds/BBS.read.):00405                    lda    #1                                                    * 0510 86 01          ..
0512 103F8C           (../cmds/BBS.read.):00406                    os9    I$WritLn                                              * 0512 10 3F 8C       .?.
0515 308DFC11         (../cmds/BBS.read.):00407         L0515      leax   >L012A,PC                                             * 0515 30 8D FC 11    0.|.
0519 10AE8DFC1E       (../cmds/BBS.read.):00408                    ldy    >L013C,PC                                             * 0519 10 AE 8D FC 1E ...|.
051E 8601             (../cmds/BBS.read.):00409                    lda    #1                                                    * 051E 86 01          ..
0520 103F8A           (../cmds/BBS.read.):00410                    os9    I$Write                                               * 0520 10 3F 8A       .?.
0523 30C81D           (../cmds/BBS.read.):00411                    leax   <U001D,U                                              * 0523 30 C8 1D       0H.
0526 E6C90124         (../cmds/BBS.read.):00412                    ldb    >U0124,U                                              * 0526 E6 C9 01 24    fI.$
052A 4F               (../cmds/BBS.read.):00413                    clra                                                         * 052A 4F             O
052B 17023C           (../cmds/BBS.read.):00414                    lbsr   L076A                                                 * 052B 17 02 3C       ..<
052E A6C820           (../cmds/BBS.read.):00415                    lda    <U0020,U                                              * 052E A6 C8 20       &H
0531 A7C82E           (../cmds/BBS.read.):00416                    sta    <U002E,U                                              * 0531 A7 C8 2E       'H.
0534 A6C821           (../cmds/BBS.read.):00417                    lda    <U0021,U                                              * 0534 A6 C8 21       &H!
0537 A7C82F           (../cmds/BBS.read.):00418                    sta    <U002F,U                                              * 0537 A7 C8 2F       'H/
053A 862F             (../cmds/BBS.read.):00419                    lda    #47                                                   * 053A 86 2F          ./
053C A7C830           (../cmds/BBS.read.):00420                    sta    <U0030,U                                              * 053C A7 C8 30       'H0
053F E6C90125         (../cmds/BBS.read.):00421                    ldb    >U0125,U                                              * 053F E6 C9 01 25    fI.%
0543 4F               (../cmds/BBS.read.):00422                    clra                                                         * 0543 4F             O
0544 30C81D           (../cmds/BBS.read.):00423                    leax   <U001D,U                                              * 0544 30 C8 1D       0H.
0547 170220           (../cmds/BBS.read.):00424                    lbsr   L076A                                                 * 0547 17 02 20       ..
054A A6C820           (../cmds/BBS.read.):00425                    lda    <U0020,U                                              * 054A A6 C8 20       &H
054D A7C831           (../cmds/BBS.read.):00426                    sta    <U0031,U                                              * 054D A7 C8 31       'H1
0550 A6C821           (../cmds/BBS.read.):00427                    lda    <U0021,U                                              * 0550 A6 C8 21       &H!
0553 A7C832           (../cmds/BBS.read.):00428                    sta    <U0032,U                                              * 0553 A7 C8 32       'H2
0556 862F             (../cmds/BBS.read.):00429                    lda    #47                                                   * 0556 86 2F          ./
0558 A7C833           (../cmds/BBS.read.):00430                    sta    <U0033,U                                              * 0558 A7 C8 33       'H3
055B E6C90123         (../cmds/BBS.read.):00431                    ldb    >U0123,U                                              * 055B E6 C9 01 23    fI.#
055F 4F               (../cmds/BBS.read.):00432                    clra                                                         * 055F 4F             O
0560 30C81D           (../cmds/BBS.read.):00433                    leax   <U001D,U                                              * 0560 30 C8 1D       0H.
0563 170204           (../cmds/BBS.read.):00434                    lbsr   L076A                                                 * 0563 17 02 04       ...
0566 A6C820           (../cmds/BBS.read.):00435                    lda    <U0020,U                                              * 0566 A6 C8 20       &H
0569 A7C834           (../cmds/BBS.read.):00436                    sta    <U0034,U                                              * 0569 A7 C8 34       'H4
056C A6C821           (../cmds/BBS.read.):00437                    lda    <U0021,U                                              * 056C A6 C8 21       &H!
056F A7C835           (../cmds/BBS.read.):00438                    sta    <U0035,U                                              * 056F A7 C8 35       'H5
0572 8620             (../cmds/BBS.read.):00439                    lda    #32                                                   * 0572 86 20          .
0574 A7C836           (../cmds/BBS.read.):00440                    sta    <U0036,U                                              * 0574 A7 C8 36       'H6
0577 E6C90126         (../cmds/BBS.read.):00441                    ldb    >U0126,U                                              * 0577 E6 C9 01 26    fI.&
057B 4F               (../cmds/BBS.read.):00442                    clra                                                         * 057B 4F             O
057C 30C81D           (../cmds/BBS.read.):00443                    leax   <U001D,U                                              * 057C 30 C8 1D       0H.
057F 1701E8           (../cmds/BBS.read.):00444                    lbsr   L076A                                                 * 057F 17 01 E8       ..h
0582 A6C820           (../cmds/BBS.read.):00445                    lda    <U0020,U                                              * 0582 A6 C8 20       &H
0585 A7C837           (../cmds/BBS.read.):00446                    sta    <U0037,U                                              * 0585 A7 C8 37       'H7
0588 A6C821           (../cmds/BBS.read.):00447                    lda    <U0021,U                                              * 0588 A6 C8 21       &H!
058B A7C838           (../cmds/BBS.read.):00448                    sta    <U0038,U                                              * 058B A7 C8 38       'H8
058E 863A             (../cmds/BBS.read.):00449                    lda    #58                                                   * 058E 86 3A          .:
0590 A7C839           (../cmds/BBS.read.):00450                    sta    <U0039,U                                              * 0590 A7 C8 39       'H9
0593 E6C90127         (../cmds/BBS.read.):00451                    ldb    >U0127,U                                              * 0593 E6 C9 01 27    fI.'
0597 4F               (../cmds/BBS.read.):00452                    clra                                                         * 0597 4F             O
0598 30C81D           (../cmds/BBS.read.):00453                    leax   <U001D,U                                              * 0598 30 C8 1D       0H.
059B 1701CC           (../cmds/BBS.read.):00454                    lbsr   L076A                                                 * 059B 17 01 CC       ..L
059E A6C820           (../cmds/BBS.read.):00455                    lda    <U0020,U                                              * 059E A6 C8 20       &H
05A1 A7C83A           (../cmds/BBS.read.):00456                    sta    <U003A,U                                              * 05A1 A7 C8 3A       'H:
05A4 A6C821           (../cmds/BBS.read.):00457                    lda    <U0021,U                                              * 05A4 A6 C8 21       &H!
05A7 A7C83B           (../cmds/BBS.read.):00458                    sta    <U003B,U                                              * 05A7 A7 C8 3B       'H;
05AA 860D             (../cmds/BBS.read.):00459                    lda    #13                                                   * 05AA 86 0D          ..
05AC A7C83C           (../cmds/BBS.read.):00460                    sta    <U003C,U                                              * 05AC A7 C8 3C       'H<
05AF 30C82E           (../cmds/BBS.read.):00461                    leax   <U002E,U                                              * 05AF 30 C8 2E       0H.
05B2 A680             (../cmds/BBS.read.):00462         L05B2      lda    ,X+                                                   * 05B2 A6 80          &.
05B4 8120             (../cmds/BBS.read.):00463                    cmpa   #32                                                   * 05B4 81 20          .
05B6 27FA             (../cmds/BBS.read.):00464                    beq    L05B2                                                 * 05B6 27 FA          'z
05B8 301F             (../cmds/BBS.read.):00465                    leax   -$01,X                                                * 05B8 30 1F          0.
05BA 108E00C8         (../cmds/BBS.read.):00466                    ldy    #200                                                  * 05BA 10 8E 00 C8    ...H
05BE 8601             (../cmds/BBS.read.):00467                    lda    #1                                                    * 05BE 86 01          ..
05C0 103F8C           (../cmds/BBS.read.):00468                    os9    I$WritLn                                              * 05C0 10 3F 8C       .?.
05C3 10250139         (../cmds/BBS.read.):00469                    lbcs   L0700                                                 * 05C3 10 25 01 39    .%.9
05C7 308DFB68         (../cmds/BBS.read.):00470                    leax   >L0133,PC                                             * 05C7 30 8D FB 68    0.{h
05CB 10AE8DFB6C       (../cmds/BBS.read.):00471                    ldy    >L013C,PC                                             * 05CB 10 AE 8D FB 6C ...{l
05D0 8601             (../cmds/BBS.read.):00472                    lda    #1                                                    * 05D0 86 01          ..
05D2 103F8A           (../cmds/BBS.read.):00473                    os9    I$Write                                               * 05D2 10 3F 8A       .?.
05D5 30C90105         (../cmds/BBS.read.):00474                    leax   >U0105,U                                              * 05D5 30 C9 01 05    0I..
05D9 108E001E         (../cmds/BBS.read.):00475                    ldy    #30                                                   * 05D9 10 8E 00 1E    ....
05DD 103F8C           (../cmds/BBS.read.):00476                    os9    I$WritLn                                              * 05DD 10 3F 8C       .?.
05E0 1025011C         (../cmds/BBS.read.):00477                    lbcs   L0700                                                 * 05E0 10 25 01 1C    .%..
05E4 2010             (../cmds/BBS.read.):00478                    bra    L05F6                                                 * 05E4 20 10           .
05E6 308DFB0B         (../cmds/BBS.read.):00479         L05E6      leax   >L00F5,PC                                             * 05E6 30 8D FB 0B    0.{.
05EA 108E00C8         (../cmds/BBS.read.):00480                    ldy    #200                                                  * 05EA 10 8E 00 C8    ...H
05EE 8601             (../cmds/BBS.read.):00481                    lda    #1                                                    * 05EE 86 01          ..
05F0 103F8C           (../cmds/BBS.read.):00482                    os9    I$WritLn                                              * 05F0 10 3F 8C       .?.
05F3 16FC3B           (../cmds/BBS.read.):00483                    lbra   L0231                                                 * 05F3 16 FC 3B       .|;
05F6 308DFB44         (../cmds/BBS.read.):00484         L05F6      leax   >L013E,PC                                             * 05F6 30 8D FB 44    0.{D
05FA 108E0050         (../cmds/BBS.read.):00485                    ldy    #80                                                   * 05FA 10 8E 00 50    ...P
05FE 8601             (../cmds/BBS.read.):00486                    lda    #1                                                    * 05FE 86 01          ..
0600 103F8C           (../cmds/BBS.read.):00487                    os9    I$WritLn                                              * 0600 10 3F 8C       .?.
0603 A641             (../cmds/BBS.read.):00488                    lda    U0001,U                                               * 0603 A6 41          &A
0605 AEC900ED         (../cmds/BBS.read.):00489                    ldx    >U00ED,U                                              * 0605 AE C9 00 ED    .I.m
0609 3440             (../cmds/BBS.read.):00490                    pshs   U                                                     * 0609 34 40          4@
060B EEC900EF         (../cmds/BBS.read.):00491                    ldu    >U00EF,U                                              * 060B EE C9 00 EF    nI.o
060F 103F88           (../cmds/BBS.read.):00492                    os9    I$Seek                                                * 060F 10 3F 88       .?.
0612 102500EA         (../cmds/BBS.read.):00493                    lbcs   L0700                                                 * 0612 10 25 00 EA    .%.j
0616 3540             (../cmds/BBS.read.):00494                    puls   U                                                     * 0616 35 40          5@
0618 A641             (../cmds/BBS.read.):00495         L0618      lda    U0001,U                                               * 0618 A6 41          &A
061A 30C9009D         (../cmds/BBS.read.):00496                    leax   >U009D,U                                              * 061A 30 C9 00 9D    0I..
061E 108E0050         (../cmds/BBS.read.):00497                    ldy    #80                                                   * 061E 10 8E 00 50    ...P
0622 103F8B           (../cmds/BBS.read.):00498                    os9    I$ReadLn                                              * 0622 10 3F 8B       .?.
0625 8601             (../cmds/BBS.read.):00499                    lda    #1                                                    * 0625 86 01          ..
0627 103F8C           (../cmds/BBS.read.):00500                    os9    I$WritLn                                              * 0627 10 3F 8C       .?.
062A 108C0001         (../cmds/BBS.read.):00501                    cmpy   #1                                                    * 062A 10 8C 00 01    ....
062E 22E8             (../cmds/BBS.read.):00502                    bhi    L0618                                                 * 062E 22 E8          "h
0630 308DFB0A         (../cmds/BBS.read.):00503                    leax   >L013E,PC                                             * 0630 30 8D FB 0A    0.{.
0634 108E0050         (../cmds/BBS.read.):00504                    ldy    #80                                                   * 0634 10 8E 00 50    ...P
0638 8601             (../cmds/BBS.read.):00505                    lda    #1                                                    * 0638 86 01          ..
063A 103F8C           (../cmds/BBS.read.):00506                    os9    I$WritLn                                              * 063A 10 3F 8C       .?.
063D ECC815           (../cmds/BBS.read.):00507                    ldd    <U0015,U                                              * 063D EC C8 15       lH.
0640 C30001           (../cmds/BBS.read.):00508                    addd   #1                                                    * 0640 C3 00 01       C..
0643 EDC815           (../cmds/BBS.read.):00509                    std    <U0015,U                                              * 0643 ED C8 15       mH.
0646 16FBE8           (../cmds/BBS.read.):00510                    lbra   L0231                                                 * 0646 16 FB E8       .{h
0649 308DFB4A         (../cmds/BBS.read.):00511         L0649      leax   >L0197,PC                                             * 0649 30 8D FB 4A    0.{J
064D 8603             (../cmds/BBS.read.):00512                    lda    #3                                                    * 064D 86 03          ..
064F 103F84           (../cmds/BBS.read.):00513                    os9    I$Open                                                * 064F 10 3F 84       .?.
0652 2409             (../cmds/BBS.read.):00514                    bcc    L065D                                                 * 0652 24 09          $.
0654 C61B             (../cmds/BBS.read.):00515                    ldb    #27                                                   * 0654 C6 1B          F.
0656 103F83           (../cmds/BBS.read.):00516                    os9    I$Create                                              * 0656 10 3F 83       .?.
0659 102500A3         (../cmds/BBS.read.):00517                    lbcs   L0700                                                 * 0659 10 25 00 A3    .%.#
065D A746             (../cmds/BBS.read.):00518         L065D      sta    U0006,U                                               * 065D A7 46          'F
065F 30C87D           (../cmds/BBS.read.):00519         L065F      leax   <U007D,U                                              * 065F 30 C8 7D       0H}
0662 108E0020         (../cmds/BBS.read.):00520                    ldy    #32                                                   * 0662 10 8E 00 20    ...
0666 A646             (../cmds/BBS.read.):00521                    lda    U0006,U                                               * 0666 A6 46          &F
0668 103F89           (../cmds/BBS.read.):00522                    os9    I$Read                                                * 0668 10 3F 89       .?.
066B 250A             (../cmds/BBS.read.):00523                    bcs    L0677                                                 * 066B 25 0A          %.
066D ECC87D           (../cmds/BBS.read.):00524                    ldd    <U007D,U                                              * 066D EC C8 7D       lH}
0670 10A34D           (../cmds/BBS.read.):00525                    cmpd   U000D,U                                               * 0670 10 A3 4D       .#M
0673 26EA             (../cmds/BBS.read.):00526                    bne    L065F                                                 * 0673 26 EA          &j
0675 2009             (../cmds/BBS.read.):00527                    bra    L0680                                                 * 0675 20 09           .
0677 C1D3             (../cmds/BBS.read.):00528         L0677      cmpb   #211                                                  * 0677 C1 D3          AS
0679 10260083         (../cmds/BBS.read.):00529                    lbne   L0700                                                 * 0679 10 26 00 83    .&..
067D 160040           (../cmds/BBS.read.):00530                    lbra   L06C0                                                 * 067D 16 00 40       ..@
0680 ECC90089         (../cmds/BBS.read.):00531         L0680      ldd    >U0089,U                                              * 0680 EC C9 00 89    lI..
0684 E3C815           (../cmds/BBS.read.):00532                    addd   <U0015,U                                              * 0684 E3 C8 15       cH.
0687 EDC90089         (../cmds/BBS.read.):00533                    std    >U0089,U                                              * 0687 ED C9 00 89    mI..
068B A646             (../cmds/BBS.read.):00534                    lda    U0006,U                                               * 068B A6 46          &F
068D C605             (../cmds/BBS.read.):00535                    ldb    #5                                                    * 068D C6 05          F.
068F 3440             (../cmds/BBS.read.):00536                    pshs   U                                                     * 068F 34 40          4@
0691 103F8D           (../cmds/BBS.read.):00537                    os9    I$GetStt                                              * 0691 10 3F 8D       .?.
0694 1F30             (../cmds/BBS.read.):00538                    tfr    U,D                                                   * 0694 1F 30          .0
0696 830020           (../cmds/BBS.read.):00539                    subd   #32                                                   * 0696 83 00 20       ..
0699 2C02             (../cmds/BBS.read.):00540                    bge    L069D                                                 * 0699 2C 02          ,.
069B 301F             (../cmds/BBS.read.):00541                    leax   -$01,X                                                * 069B 30 1F          0.
069D EEE4             (../cmds/BBS.read.):00542         L069D      ldu    0,S                                                   * 069D EE E4          nd
069F 1F02             (../cmds/BBS.read.):00543                    tfr    D,Y                                                   * 069F 1F 02          ..
06A1 A646             (../cmds/BBS.read.):00544                    lda    U0006,U                                               * 06A1 A6 46          &F
06A3 1F23             (../cmds/BBS.read.):00545                    tfr    Y,U                                                   * 06A3 1F 23          .#
06A5 103F88           (../cmds/BBS.read.):00546                    os9    I$Seek                                                * 06A5 10 3F 88       .?.
06A8 10250054         (../cmds/BBS.read.):00547                    lbcs   L0700                                                 * 06A8 10 25 00 54    .%.T
06AC 3540             (../cmds/BBS.read.):00548                    puls   U                                                     * 06AC 35 40          5@
06AE 30C87D           (../cmds/BBS.read.):00549                    leax   <U007D,U                                              * 06AE 30 C8 7D       0H}
06B1 108E0020         (../cmds/BBS.read.):00550                    ldy    #32                                                   * 06B1 10 8E 00 20    ...
06B5 A646             (../cmds/BBS.read.):00551                    lda    U0006,U                                               * 06B5 A6 46          &F
06B7 103F8A           (../cmds/BBS.read.):00552                    os9    I$Write                                               * 06B7 10 3F 8A       .?.
06BA 103F8F           (../cmds/BBS.read.):00553                    os9    I$Close                                               * 06BA 10 3F 8F       .?.
06BD 16003F           (../cmds/BBS.read.):00554                    lbra   L06FF                                                 * 06BD 16 00 3F       ..?
06C0 30C87D           (../cmds/BBS.read.):00555         L06C0      leax   <U007D,U                                              * 06C0 30 C8 7D       0H}
06C3 CC0001           (../cmds/BBS.read.):00556                    ldd    #1                                                    * 06C3 CC 00 01       L..
06C6 EDC87F           (../cmds/BBS.read.):00557                    std    <U007F,U                                              * 06C6 ED C8 7F       mH.
06C9 EDC90089         (../cmds/BBS.read.):00558                    std    >U0089,U                                              * 06C9 ED C9 00 89    mI..
06CD CC0000           (../cmds/BBS.read.):00559                    ldd    #0                                                    * 06CD CC 00 00       L..
06D0 EDC90087         (../cmds/BBS.read.):00560                    std    >U0087,U                                              * 06D0 ED C9 00 87    mI..
06D4 EDC9008D         (../cmds/BBS.read.):00561                    std    >U008D,U                                              * 06D4 ED C9 00 8D    mI..
06D8 EDC9008B         (../cmds/BBS.read.):00562                    std    >U008B,U                                              * 06D8 ED C9 00 8B    mI..
06DC EC4D             (../cmds/BBS.read.):00563                    ldd    U000D,U                                               * 06DC EC 4D          lM
06DE EDC87D           (../cmds/BBS.read.):00564                    std    <U007D,U                                              * 06DE ED C8 7D       mH}
06E1 30C90081         (../cmds/BBS.read.):00565                    leax   >U0081,U                                              * 06E1 30 C9 00 81    0I..
06E5 103F15           (../cmds/BBS.read.):00566                    os9    F$Time                                                * 06E5 10 3F 15       .?.
06E8 10250014         (../cmds/BBS.read.):00567                    lbcs   L0700                                                 * 06E8 10 25 00 14    .%..
06EC 30C87D           (../cmds/BBS.read.):00568                    leax   <U007D,U                                              * 06EC 30 C8 7D       0H}
06EF 108E0020         (../cmds/BBS.read.):00569                    ldy    #32                                                   * 06EF 10 8E 00 20    ...
06F3 A646             (../cmds/BBS.read.):00570                    lda    U0006,U                                               * 06F3 A6 46          &F
06F5 103F8A           (../cmds/BBS.read.):00571                    os9    I$Write                                               * 06F5 10 3F 8A       .?.
06F8 103F8F           (../cmds/BBS.read.):00572                    os9    I$Close                                               * 06F8 10 3F 8F       .?.
06FB 10250001         (../cmds/BBS.read.):00573                    lbcs   L0700                                                 * 06FB 10 25 00 01    .%..
06FF 5F               (../cmds/BBS.read.):00574         L06FF      clrb                                                         * 06FF 5F             _
0700 103F06           (../cmds/BBS.read.):00575         L0700      os9    F$Exit                                                * 0700 10 3F 06       .?.
0703 3420             (../cmds/BBS.read.):00576         L0703      pshs   Y                                                     * 0703 34 20          4
0705 A680             (../cmds/BBS.read.):00577         L0705      lda    ,X+                                                   * 0705 A6 80          &.
0707 810D             (../cmds/BBS.read.):00578                    cmpa   #13                                                   * 0707 81 0D          ..
0709 102700CB         (../cmds/BBS.read.):00579                    lbeq   L07D8                                                 * 0709 10 27 00 CB    .'.K
070D 8130             (../cmds/BBS.read.):00580                    cmpa   #48                                                   * 070D 81 30          .0
070F 25F4             (../cmds/BBS.read.):00581                    bcs    L0705                                                 * 070F 25 F4          %t
0711 8139             (../cmds/BBS.read.):00582                    cmpa   #57                                                   * 0711 81 39          .9
0713 22F0             (../cmds/BBS.read.):00583                    bhi    L0705                                                 * 0713 22 F0          "p
0715 301F             (../cmds/BBS.read.):00584                    leax   -$01,X                                                * 0715 30 1F          0.
0717 A680             (../cmds/BBS.read.):00585         L0717      lda    ,X+                                                   * 0717 A6 80          &.
0719 8130             (../cmds/BBS.read.):00586                    cmpa   #48                                                   * 0719 81 30          .0
071B 2506             (../cmds/BBS.read.):00587                    bcs    L0723                                                 * 071B 25 06          %.
071D 8139             (../cmds/BBS.read.):00588                    cmpa   #57                                                   * 071D 81 39          .9
071F 2202             (../cmds/BBS.read.):00589                    bhi    L0723                                                 * 071F 22 02          ".
0721 20F4             (../cmds/BBS.read.):00590                    bra    L0717                                                 * 0721 20 F4           t
0723 3410             (../cmds/BBS.read.):00591         L0723      pshs   X                                                     * 0723 34 10          4.
0725 301F             (../cmds/BBS.read.):00592                    leax   -$01,X                                                * 0725 30 1F          0.
0727 6F49             (../cmds/BBS.read.):00593                    clr    U0009,U                                               * 0727 6F 49          oI
0729 6F4A             (../cmds/BBS.read.):00594                    clr    U000A,U                                               * 0729 6F 4A          oJ
072B CC0001           (../cmds/BBS.read.):00595                    ldd    #1                                                    * 072B CC 00 01       L..
072E ED4B             (../cmds/BBS.read.):00596                    std    U000B,U                                               * 072E ED 4B          mK
0730 A682             (../cmds/BBS.read.):00597         L0730      lda    ,-X                                                   * 0730 A6 82          &.
0732 8130             (../cmds/BBS.read.):00598                    cmpa   #48                                                   * 0732 81 30          .0
0734 252E             (../cmds/BBS.read.):00599                    bcs    L0764                                                 * 0734 25 2E          %.
0736 8139             (../cmds/BBS.read.):00600                    cmpa   #57                                                   * 0736 81 39          .9
0738 222A             (../cmds/BBS.read.):00601                    bhi    L0764                                                 * 0738 22 2A          "*
073A 8030             (../cmds/BBS.read.):00602                    suba   #48                                                   * 073A 80 30          .0
073C A745             (../cmds/BBS.read.):00603                    sta    U0005,U                                               * 073C A7 45          'E
073E CC0000           (../cmds/BBS.read.):00604                    ldd    #0                                                    * 073E CC 00 00       L..
0741 6D45             (../cmds/BBS.read.):00605         L0741      tst    U0005,U                                               * 0741 6D 45          mE
0743 2706             (../cmds/BBS.read.):00606                    beq    L074B                                                 * 0743 27 06          '.
0745 E34B             (../cmds/BBS.read.):00607                    addd   U000B,U                                               * 0745 E3 4B          cK
0747 6A45             (../cmds/BBS.read.):00608                    dec    U0005,U                                               * 0747 6A 45          jE
0749 20F6             (../cmds/BBS.read.):00609                    bra    L0741                                                 * 0749 20 F6           v
074B E349             (../cmds/BBS.read.):00610         L074B      addd   U0009,U                                               * 074B E3 49          cI
074D ED49             (../cmds/BBS.read.):00611                    std    U0009,U                                               * 074D ED 49          mI
074F 860A             (../cmds/BBS.read.):00612                    lda    #10                                                   * 074F 86 0A          ..
0751 A745             (../cmds/BBS.read.):00613                    sta    U0005,U                                               * 0751 A7 45          'E
0753 CC0000           (../cmds/BBS.read.):00614                    ldd    #0                                                    * 0753 CC 00 00       L..
0756 6D45             (../cmds/BBS.read.):00615         L0756      tst    U0005,U                                               * 0756 6D 45          mE
0758 2706             (../cmds/BBS.read.):00616                    beq    L0760                                                 * 0758 27 06          '.
075A E34B             (../cmds/BBS.read.):00617                    addd   U000B,U                                               * 075A E3 4B          cK
075C 6A45             (../cmds/BBS.read.):00618                    dec    U0005,U                                               * 075C 6A 45          jE
075E 20F6             (../cmds/BBS.read.):00619                    bra    L0756                                                 * 075E 20 F6           v
0760 ED4B             (../cmds/BBS.read.):00620         L0760      std    U000B,U                                               * 0760 ED 4B          mK
0762 20CC             (../cmds/BBS.read.):00621                    bra    L0730                                                 * 0762 20 CC           L
0764 EC49             (../cmds/BBS.read.):00622         L0764      ldd    U0009,U                                               * 0764 EC 49          lI
0766 3510             (../cmds/BBS.read.):00623                    puls   X                                                     * 0766 35 10          5.
0768 35A0             (../cmds/BBS.read.):00624                    puls   PC,Y                                                  * 0768 35 A0          5
076A 3410             (../cmds/BBS.read.):00625         L076A      pshs   X                                                     * 076A 34 10          4.
076C ED49             (../cmds/BBS.read.):00626                    std    U0009,U                                               * 076C ED 49          mI
076E 8630             (../cmds/BBS.read.):00627                    lda    #48                                                   * 076E 86 30          .0
0770 A784             (../cmds/BBS.read.):00628                    sta    0,X                                                   * 0770 A7 84          '.
0772 A701             (../cmds/BBS.read.):00629                    sta    $01,X                                                 * 0772 A7 01          '.
0774 A702             (../cmds/BBS.read.):00630                    sta    $02,X                                                 * 0774 A7 02          '.
0776 A703             (../cmds/BBS.read.):00631                    sta    $03,X                                                 * 0776 A7 03          '.
0778 A704             (../cmds/BBS.read.):00632                    sta    $04,X                                                 * 0778 A7 04          '.
077A CC2710           (../cmds/BBS.read.):00633                    ldd    #10000                                                * 077A CC 27 10       L'.
077D ED4B             (../cmds/BBS.read.):00634                    std    U000B,U                                               * 077D ED 4B          mK
077F EC49             (../cmds/BBS.read.):00635                    ldd    U0009,U                                               * 077F EC 49          lI
0781 170045           (../cmds/BBS.read.):00636                    lbsr   L07C9                                                 * 0781 17 00 45       ..E
0784 CC03E8           (../cmds/BBS.read.):00637                    ldd    #1000                                                 * 0784 CC 03 E8       L.h
0787 ED4B             (../cmds/BBS.read.):00638                    std    U000B,U                                               * 0787 ED 4B          mK
0789 EC49             (../cmds/BBS.read.):00639                    ldd    U0009,U                                               * 0789 EC 49          lI
078B 8D3C             (../cmds/BBS.read.):00640                    bsr    L07C9                                                 * 078B 8D 3C          .<
078D CC0064           (../cmds/BBS.read.):00641                    ldd    #100                                                  * 078D CC 00 64       L.d
0790 ED4B             (../cmds/BBS.read.):00642                    std    U000B,U                                               * 0790 ED 4B          mK
0792 EC49             (../cmds/BBS.read.):00643                    ldd    U0009,U                                               * 0792 EC 49          lI
0794 8D33             (../cmds/BBS.read.):00644                    bsr    L07C9                                                 * 0794 8D 33          .3
0796 CC000A           (../cmds/BBS.read.):00645                    ldd    #10                                                   * 0796 CC 00 0A       L..
0799 ED4B             (../cmds/BBS.read.):00646                    std    U000B,U                                               * 0799 ED 4B          mK
079B EC49             (../cmds/BBS.read.):00647                    ldd    U0009,U                                               * 079B EC 49          lI
079D 8D2A             (../cmds/BBS.read.):00648                    bsr    L07C9                                                 * 079D 8D 2A          .*
079F CC0001           (../cmds/BBS.read.):00649                    ldd    #1                                                    * 079F CC 00 01       L..
07A2 ED4B             (../cmds/BBS.read.):00650                    std    U000B,U                                               * 07A2 ED 4B          mK
07A4 EC49             (../cmds/BBS.read.):00651                    ldd    U0009,U                                               * 07A4 EC 49          lI
07A6 8D21             (../cmds/BBS.read.):00652                    bsr    L07C9                                                 * 07A6 8D 21          .!
07A8 860D             (../cmds/BBS.read.):00653                    lda    #13                                                   * 07A8 86 0D          ..
07AA A784             (../cmds/BBS.read.):00654                    sta    0,X                                                   * 07AA A7 84          '.
07AC 3510             (../cmds/BBS.read.):00655                    puls   X                                                     * 07AC 35 10          5.
07AE C620             (../cmds/BBS.read.):00656                    ldb    #32                                                   * 07AE C6 20          F
07B0 A684             (../cmds/BBS.read.):00657         L07B0      lda    0,X                                                   * 07B0 A6 84          &.
07B2 8130             (../cmds/BBS.read.):00658                    cmpa   #48                                                   * 07B2 81 30          .0
07B4 2604             (../cmds/BBS.read.):00659                    bne    L07BA                                                 * 07B4 26 04          &.
07B6 E780             (../cmds/BBS.read.):00660                    stb    ,X+                                                   * 07B6 E7 80          g.
07B8 20F6             (../cmds/BBS.read.):00661                    bra    L07B0                                                 * 07B8 20 F6           v
07BA A680             (../cmds/BBS.read.):00662         L07BA      lda    ,X+                                                   * 07BA A6 80          &.
07BC 8130             (../cmds/BBS.read.):00663                    cmpa   #48                                                   * 07BC 81 30          .0
07BE 2506             (../cmds/BBS.read.):00664                    bcs    L07C6                                                 * 07BE 25 06          %.
07C0 8139             (../cmds/BBS.read.):00665                    cmpa   #57                                                   * 07C0 81 39          .9
07C2 2202             (../cmds/BBS.read.):00666                    bhi    L07C6                                                 * 07C2 22 02          ".
07C4 20F4             (../cmds/BBS.read.):00667                    bra    L07BA                                                 * 07C4 20 F4           t
07C6 301F             (../cmds/BBS.read.):00668         L07C6      leax   -$01,X                                                * 07C6 30 1F          0.
07C8 39               (../cmds/BBS.read.):00669                    rts                                                          * 07C8 39             9
07C9 A34B             (../cmds/BBS.read.):00670         L07C9      subd   U000B,U                                               * 07C9 A3 4B          #K
07CB 2504             (../cmds/BBS.read.):00671                    bcs    L07D1                                                 * 07CB 25 04          %.
07CD 6C84             (../cmds/BBS.read.):00672                    inc    0,X                                                   * 07CD 6C 84          l.
07CF 20F8             (../cmds/BBS.read.):00673                    bra    L07C9                                                 * 07CF 20 F8           x
07D1 E34B             (../cmds/BBS.read.):00674         L07D1      addd   U000B,U                                               * 07D1 E3 4B          cK
07D3 ED49             (../cmds/BBS.read.):00675                    std    U0009,U                                               * 07D3 ED 49          mI
07D5 3001             (../cmds/BBS.read.):00676                    leax   $01,X                                                 * 07D5 30 01          0.
07D7 39               (../cmds/BBS.read.):00677                    rts                                                          * 07D7 39             9
07D8 CCFFFF           (../cmds/BBS.read.):00678         L07D8      ldd    #-1                                                   * 07D8 CC FF FF       L..
07DB 35A0             (../cmds/BBS.read.):00679                    puls   PC,Y                                                  * 07DB 35 A0          5
                      (../cmds/BBS.read.):00680         
07DD B5108D           (../cmds/BBS.read.):00681                    emod
     07E0             (../cmds/BBS.read.):00682         eom        equ    *
                      (../cmds/BBS.read.):00683                    end
