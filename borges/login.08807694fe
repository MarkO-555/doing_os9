                      (../cmds/Login.asm):00001                    nam    Login
                      (../cmds/Login.asm):00002                    ttl    program module
                      (../cmds/Login.asm):00003         
                      (../cmds/Login.asm):00004                    ifp1
                      (../cmds/Login.asm):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/Login.asm):00006                    endc
                      (../cmds/Login.asm):00007         
     0011             (../cmds/Login.asm):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/Login.asm):00009         atrv       set    ReEnt+rev
     0001             (../cmds/Login.asm):00010         rev        set    $01
                      (../cmds/Login.asm):00011         
0000 87CD0880000D1181 (../cmds/Login.asm):00012                    mod    eom,name,tylg,atrv,start,size
     A0025105E1
                      (../cmds/Login.asm):00013         
0000.                 (../cmds/Login.asm):00014         U0000      rmb    2
0002.                 (../cmds/Login.asm):00015         U0002      rmb    1
0003.                 (../cmds/Login.asm):00016         U0003      rmb    1
0004.                 (../cmds/Login.asm):00017         U0004      rmb    1
0005.                 (../cmds/Login.asm):00018         U0005      rmb    1
0006.                 (../cmds/Login.asm):00019         U0006      rmb    5
000B.                 (../cmds/Login.asm):00020         U000B      rmb    1
000C.                 (../cmds/Login.asm):00021         U000C      rmb    1
000D.                 (../cmds/Login.asm):00022         U000D      rmb    1
000E.                 (../cmds/Login.asm):00023         U000E      rmb    1
000F.                 (../cmds/Login.asm):00024         U000F      rmb    1
0010.                 (../cmds/Login.asm):00025         U0010      rmb    3
0013.                 (../cmds/Login.asm):00026         U0013      rmb    2
0015.                 (../cmds/Login.asm):00027         U0015      rmb    1
0016.                 (../cmds/Login.asm):00028         U0016      rmb    1
0017.                 (../cmds/Login.asm):00029         U0017      rmb    2
0019.                 (../cmds/Login.asm):00030         U0019      rmb    2
001B.                 (../cmds/Login.asm):00031         U001B      rmb    2
001D.                 (../cmds/Login.asm):00032         U001D      rmb    2
001F.                 (../cmds/Login.asm):00033         U001F      rmb    2
0021.                 (../cmds/Login.asm):00034         U0021      rmb    2
0023.                 (../cmds/Login.asm):00035         U0023      rmb    2
0025.                 (../cmds/Login.asm):00036         U0025      rmb    2
0027.                 (../cmds/Login.asm):00037         U0027      rmb    1
0028.                 (../cmds/Login.asm):00038         U0028      rmb    2
002A.                 (../cmds/Login.asm):00039         U002A      rmb    1
002B.                 (../cmds/Login.asm):00040         U002B      rmb    2
002D.                 (../cmds/Login.asm):00041         U002D      rmb    2
002F.                 (../cmds/Login.asm):00042         U002F      rmb    2
0031.                 (../cmds/Login.asm):00043         U0031      rmb    2
0033.                 (../cmds/Login.asm):00044         U0033      rmb    2
0035.                 (../cmds/Login.asm):00045         U0035      rmb    1
0036.                 (../cmds/Login.asm):00046         U0036      rmb    1
0037.                 (../cmds/Login.asm):00047         U0037      rmb    1
0038.                 (../cmds/Login.asm):00048         U0038      rmb    1
0039.                 (../cmds/Login.asm):00049         U0039      rmb    2
003B.                 (../cmds/Login.asm):00050         U003B      rmb    8
0043.                 (../cmds/Login.asm):00051         U0043      rmb    3
0046.                 (../cmds/Login.asm):00052         U0046      rmb    1
0047.                 (../cmds/Login.asm):00053         U0047      rmb    1
0048.                 (../cmds/Login.asm):00054         U0048      rmb    1
0049.                 (../cmds/Login.asm):00055         U0049      rmb    32
0069.                 (../cmds/Login.asm):00056         U0069      rmb    200
0131.                 (../cmds/Login.asm):00057         U0131      rmb    200
01F9.                 (../cmds/Login.asm):00058         U01F9      rmb    400
0389.                 (../cmds/Login.asm):00059         U0389      rmb    1
038A.                 (../cmds/Login.asm):00060         U038A      rmb    599
     05E1             (../cmds/Login.asm):00061         size       equ    .
                      (../cmds/Login.asm):00062         
000D 4C6F6769EE       (../cmds/Login.asm):00063         name       fcs    /Login/                                               * 000D 4C 6F 67 69 EE Login
0012 436F707972696768 (../cmds/Login.asm):00064                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0012 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
006F EC               (../cmds/Login.asm):00065                    fcb    $EC                                                   * 006F EC             l
0070 E6               (../cmds/Login.asm):00066                    fcb    $E6                                                   * 0070 E6             f
0071 EA               (../cmds/Login.asm):00067                    fcb    $EA                                                   * 0071 EA             j
0072 F5               (../cmds/Login.asm):00068                    fcb    $F5                                                   * 0072 F5             u
0073 E9               (../cmds/Login.asm):00069                    fcb    $E9                                                   * 0073 E9             i
0074 A0               (../cmds/Login.asm):00070                    fcb    $A0                                                   * 0074 A0
0075 E2               (../cmds/Login.asm):00071                    fcb    $E2                                                   * 0075 E2             b
0076 ED               (../cmds/Login.asm):00072                    fcb    $ED                                                   * 0076 ED             m
0077 F1               (../cmds/Login.asm):00073                    fcb    $F1                                                   * 0077 F1             q
0078 E9               (../cmds/Login.asm):00074                    fcb    $E9                                                   * 0078 E9             i
0079 F0               (../cmds/Login.asm):00075                    fcb    $F0                                                   * 0079 F0             p
007A EF               (../cmds/Login.asm):00076                    fcb    $EF                                                   * 007A EF             o
007B F4               (../cmds/Login.asm):00077                    fcb    $F4                                                   * 007B F4             t
007C F0               (../cmds/Login.asm):00078                    fcb    $F0                                                   * 007C F0             p
007D 2F               (../cmds/Login.asm):00079         L007D      fcb    $2F                                                   * 007D 2F             /
007E 50               (../cmds/Login.asm):00080                    fcb    $50                                                   * 007E 50             P
007F 0D               (../cmds/Login.asm):00081                    fcb    $0D                                                   * 007F 0D             .
0080 0A               (../cmds/Login.asm):00082         L0080      fcb    $0A                                                   * 0080 0A             .
0081 456E74657220796F (../cmds/Login.asm):00083                    fcc    "Enter your user name-->"                             * 0081 45 6E 74 65 72 20 79 6F 75 72 20 75 73 65 72 20 6E 61 6D 65 2D 2D 3E Enter your user name-->
     7572207573657220
     6E616D652D2D3E
0098 00               (../cmds/Login.asm):00084         L0098      fcb    $00                                                   * 0098 00             .
0099 18               (../cmds/Login.asm):00085                    fcb    $18                                                   * 0099 18             .
009A 456E74657220796F (../cmds/Login.asm):00086         L009A      fcc    "Enter your Password--->"                             * 009A 45 6E 74 65 72 20 79 6F 75 72 20 50 61 73 73 77 6F 72 64 2D 2D 2D 3E Enter your Password--->
     7572205061737377
     6F72642D2D2D3E
00B1 00               (../cmds/Login.asm):00087         L00B1      fcb    $00                                                   * 00B1 00             .
00B2 17               (../cmds/Login.asm):00088                    fcb    $17                                                   * 00B2 17             .
00B3 4D6F7464         (../cmds/Login.asm):00089         L00B3      fcc    "Motd"                                                * 00B3 4D 6F 74 64    Motd
00B7 0D               (../cmds/Login.asm):00090                    fcb    $0D                                                   * 00B7 0D             .
00B8 5368656C6C       (../cmds/Login.asm):00091         L00B8      fcc    "Shell"                                               * 00B8 53 68 65 6C 6C Shell
00BD 0D               (../cmds/Login.asm):00092                    fcb    $0D                                                   * 00BD 0D             .
00BE 0D               (../cmds/Login.asm):00093                    fcb    $0D                                                   * 00BE 0D             .
00BF 4242532E75736572 (../cmds/Login.asm):00094         L00BF      fcc    "BBS.users"                                           * 00BF 42 42 53 2E 75 73 65 72 73 BBS.users
     73
00C8 0D               (../cmds/Login.asm):00095                    fcb    $0D                                                   * 00C8 0D             .
00C9 496E76616C64206E (../cmds/Login.asm):00096         L00C9      fcc    "Invald name/password!!!"                             * 00C9 49 6E 76 61 6C 64 20 6E 61 6D 65 2F 70 61 73 73 77 6F 72 64 21 21 21 Invald name/password!!!
     616D652F70617373
     776F7264212121
00E0 0D               (../cmds/Login.asm):00097                    fcb    $0D                                                   * 00E0 0D             .
00E1 0A               (../cmds/Login.asm):00098         L00E1      fcb    $0A                                                   * 00E1 0A             .
00E2 4F5339204C657665 (../cmds/Login.asm):00099                    fcc    "OS9 Level II BBS"                                    * 00E2 4F 53 39 20 4C 65 76 65 6C 20 49 49 20 42 42 53 OS9 Level II BBS
     6C20494920424253
00F2 0D               (../cmds/Login.asm):00100                    fcb    $0D                                                   * 00F2 0D             .
00F3 427920416C706861 (../cmds/Login.asm):00101         L00F3      fcc    "By Alpha Software Technologies"                      * 00F3 42 79 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 By Alpha Software Technologies
     20536F6674776172
     6520546563686E6F
     6C6F67696573
0111 0D               (../cmds/Login.asm):00102                    fcb    $0D                                                   * 0111 0D             .
0112 436F707972696768 (../cmds/Login.asm):00103         L0112      fcc    "Copyright (c) 1988"                                  * 0112 43 6F 70 79 72 69 67 68 74 20 28 63 29 20 31 39 38 38 Copyright (c) 1988
     7420286329203139
     3838
0124 0A               (../cmds/Login.asm):00104                    fcb    $0A                                                   * 0124 0A             .
0125 0D               (../cmds/Login.asm):00105                    fcb    $0D                                                   * 0125 0D             .
0126 0A               (../cmds/Login.asm):00106         L0126      fcb    $0A                                                   * 0126 0A             .
0127 0D               (../cmds/Login.asm):00107                    fcb    $0D                                                   * 0127 0D             .
0128 64617465         (../cmds/Login.asm):00108         L0128      fcc    "date"                                                * 0128 64 61 74 65    date
012C 0D               (../cmds/Login.asm):00109                    fcb    $0D                                                   * 012C 0D             .
012D 74               (../cmds/Login.asm):00110         L012D      fcb    $74                                                   * 012D 74             t
012E 0D               (../cmds/Login.asm):00111                    fcb    $0D                                                   * 012E 0D             .
012F 2020202020202020 (../cmds/Login.asm):00112         L012F      fcc    "                                       "             * 012F 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
     2020202020202020
     2020202020202020
     2020202020202020
     20202020202020
0156 3A               (../cmds/Login.asm):00113         L0156      fcc    ":"                                                   * 0156 3A             :
0157 536F7272792C2062 (../cmds/Login.asm):00114         L0157      fcc    "Sorry, but I cannot log you on"                      * 0157 53 6F 72 72 79 2C 20 62 75 74 20 49 20 63 61 6E 6E 6F 74 20 6C 6F 67 20 79 6F 75 20 6F 6E Sorry, but I cannot log you on
     757420492063616E
     6E6F74206C6F6720
     796F75206F6E
0175 0D               (../cmds/Login.asm):00115                    fcb    $0D                                                   * 0175 0D             .
0176 57656C636F6D652C (../cmds/Login.asm):00116         L0176      fcc    "Welcome, "                                           * 0176 57 65 6C 63 6F 6D 65 2C 20 Welcome,
     20
017F 0D               (../cmds/Login.asm):00117                    fcb    $0D                                                   * 017F 0D             .
0180 0A               (../cmds/Login.asm):00118         L0180      fcb    $0A                                                   * 0180 0A             .
0181 566572696679696E (../cmds/Login.asm):00119                    fcc    "Verifying Password...Please wait"                    * 0181 56 65 72 69 66 79 69 6E 67 20 50 61 73 73 77 6F 72 64 2E 2E 2E 50 6C 65 61 73 65 20 77 61 69 74 Verifying Password...Please wait
     672050617373776F
     72642E2E2E506C65
     6173652077616974
01A1 0A               (../cmds/Login.asm):00120                    fcb    $0A                                                   * 01A1 0A             .
01A2 0D               (../cmds/Login.asm):00121                    fcb    $0D                                                   * 01A2 0D             .
01A3 0A               (../cmds/Login.asm):00122         L01A3      fcb    $0A                                                   * 01A3 0A             .
01A4 456E746572696E67 (../cmds/Login.asm):00123                    fcc    "Entering system..."                                  * 01A4 45 6E 74 65 72 69 6E 67 20 73 79 73 74 65 6D 2E 2E 2E Entering system...
     2073797374656D2E
     2E2E
01B6 0A               (../cmds/Login.asm):00124                    fcb    $0A                                                   * 01B6 0A             .
01B7 0D               (../cmds/Login.asm):00125                    fcb    $0D                                                   * 01B7 0D             .
01B8 557365726C6F67   (../cmds/Login.asm):00126         L01B8      fcc    "Userlog"                                             * 01B8 55 73 65 72 6C 6F 67 Userlog
01BF 0D               (../cmds/Login.asm):00127                    fcb    $0D                                                   * 01BF 0D             .
01C0 20202020204C6973 (../cmds/Login.asm):00128         L01C0      fcc    "     List of today's callers"                        * 01C0 20 20 20 20 20 4C 69 73 74 20 6F 66 20 74 6F 64 61 79 27 73 20 63 61 6C 6C 65 72 73      List of today's callers
     74206F6620746F64
     617927732063616C
     6C657273
01DC 0D               (../cmds/Login.asm):00129                    fcb    $0D                                                   * 01DC 0D             .
01DD 3D3D3D3D3D3D3D3D (../cmds/Login.asm):00130         L01DD      fcc    "================================="                   * 01DD 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D =================================
     3D3D3D3D3D3D3D3D
     3D3D3D3D3D3D3D3D
     3D3D3D3D3D3D3D3D
     3D
01FE 0D               (../cmds/Login.asm):00131                    fcb    $0D                                                   * 01FE 0D             .
01FF 656F7464         (../cmds/Login.asm):00132         L01FF      fcc    "eotd"                                                * 01FF 65 6F 74 64    eotd
0203 0D               (../cmds/Login.asm):00133                    fcb    $0D                                                   * 0203 0D             .
0204 58               (../cmds/Login.asm):00134         L0204      fcb    $58                                                   * 0204 58             X
0205 08               (../cmds/Login.asm):00135         L0205      fcb    $08                                                   * 0205 08             .
0206 20               (../cmds/Login.asm):00136                    fcb    $20                                                   * 0206 20
0207 08               (../cmds/Login.asm):00137                    fcb    $08                                                   * 0207 08             .
0208 2F64642F6262732F (../cmds/Login.asm):00138         L0208      fcc    "/dd/bbs/BBS.userstats"                               * 0208 2F 64 64 2F 62 62 73 2F 42 42 53 2E 75 73 65 72 73 74 61 74 73 /dd/bbs/BBS.userstats
     4242532E75736572
     7374617473
021D 0D               (../cmds/Login.asm):00139                    fcb    $0D                                                   * 021D 0D             .
021E 49276D20736F7272 (../cmds/Login.asm):00140         L021E      fcc    "I'm sorry but you don't have any more time on-line"  * 021E 49 27 6D 20 73 6F 72 72 79 20 62 75 74 20 79 6F 75 20 64 6F 6E 27 74 20 68 61 76 65 20 61 6E 79 20 6D 6F 72 65 20 74 69 6D 65 20 6F 6E 2D 6C 69 6E 65 I'm sorry but you don't have any more time on-line
     792062757420796F
     7520646F6E277420
     6861766520616E79
     206D6F7265207469
     6D65206F6E2D6C69
     6E65
0250 0D               (../cmds/Login.asm):00141                    fcb    $0D                                                   * 0250 0D             .
0251 308DFE28         (../cmds/Login.asm):00142         start      leax   >L007D,PC                                             * 0251 30 8D FE 28    0.~(
0255 8602             (../cmds/Login.asm):00143                    lda    #2                                                    * 0255 86 02          ..
0257 103F84           (../cmds/Login.asm):00144                    os9    I$Open                                                * 0257 10 3F 84       .?.
025A 2402             (../cmds/Login.asm):00145                    bcc    L025E                                                 * 025A 24 02          $.
025C 86FF             (../cmds/Login.asm):00146                    lda    #255                                                  * 025C 86 FF          ..
025E A745             (../cmds/Login.asm):00147         L025E      sta    U0005,U                                               * 025E A7 45          'E
0260 108E0000         (../cmds/Login.asm):00148                    ldy    #0                                                    * 0260 10 8E 00 00    ....
0264 103F1C           (../cmds/Login.asm):00149                    os9    F$SUser                                               * 0264 10 3F 1C       .?.
0267 10250536         (../cmds/Login.asm):00150                    lbcs   L07A1                                                 * 0267 10 25 05 36    .%.6
026B 6F4D             (../cmds/Login.asm):00151                    clr    U000D,U                                               * 026B 6F 4D          oM
026D 308DFE42         (../cmds/Login.asm):00152                    leax   >L00B3,PC                                             * 026D 30 8D FE 42    0.~B
0271 8601             (../cmds/Login.asm):00153                    lda    #1                                                    * 0271 86 01          ..
0273 103F84           (../cmds/Login.asm):00154                    os9    I$Open                                                * 0273 10 3F 84       .?.
0276 251C             (../cmds/Login.asm):00155                    bcs    L0294                                                 * 0276 25 1C          %.
0278 30C869           (../cmds/Login.asm):00156                    leax   <U0069,U                                              * 0278 30 C8 69       0Hi
027B A744             (../cmds/Login.asm):00157                    sta    U0004,U                                               * 027B A7 44          'D
027D 108E00C8         (../cmds/Login.asm):00158         L027D      ldy    #200                                                  * 027D 10 8E 00 C8    ...H
0281 A644             (../cmds/Login.asm):00159                    lda    U0004,U                                               * 0281 A6 44          &D
0283 103F8B           (../cmds/Login.asm):00160                    os9    I$ReadLn                                              * 0283 10 3F 8B       .?.
0286 2507             (../cmds/Login.asm):00161                    bcs    L028F                                                 * 0286 25 07          %.
0288 8601             (../cmds/Login.asm):00162                    lda    #1                                                    * 0288 86 01          ..
028A 103F8C           (../cmds/Login.asm):00163                    os9    I$WritLn                                              * 028A 10 3F 8C       .?.
028D 20EE             (../cmds/Login.asm):00164                    bra    L027D                                                 * 028D 20 EE           n
028F A644             (../cmds/Login.asm):00165         L028F      lda    U0004,U                                               * 028F A6 44          &D
0291 103F8F           (../cmds/Login.asm):00166                    os9    I$Close                                               * 0291 10 3F 8F       .?.
0294 308DFE49         (../cmds/Login.asm):00167         L0294      leax   >L00E1,PC                                             * 0294 30 8D FE 49    0.~I
0298 108E00C8         (../cmds/Login.asm):00168                    ldy    #200                                                  * 0298 10 8E 00 C8    ...H
029C 8601             (../cmds/Login.asm):00169                    lda    #1                                                    * 029C 86 01          ..
029E 103F8C           (../cmds/Login.asm):00170                    os9    I$WritLn                                              * 029E 10 3F 8C       .?.
02A1 308DFE4E         (../cmds/Login.asm):00171                    leax   >L00F3,PC                                             * 02A1 30 8D FE 4E    0.~N
02A5 108E00C8         (../cmds/Login.asm):00172                    ldy    #200                                                  * 02A5 10 8E 00 C8    ...H
02A9 103F8C           (../cmds/Login.asm):00173                    os9    I$WritLn                                              * 02A9 10 3F 8C       .?.
02AC 308DFE62         (../cmds/Login.asm):00174                    leax   >L0112,PC                                             * 02AC 30 8D FE 62    0.~b
02B0 108E00C8         (../cmds/Login.asm):00175                    ldy    #200                                                  * 02B0 10 8E 00 C8    ...H
02B4 103F8C           (../cmds/Login.asm):00176                    os9    I$WritLn                                              * 02B4 10 3F 8C       .?.
02B7 308DFDC5         (../cmds/Login.asm):00177         L02B7      leax   >L0080,PC                                             * 02B7 30 8D FD C5    0.}E
02BB 10AE8DFDD8       (../cmds/Login.asm):00178                    ldy    >L0098,PC                                             * 02BB 10 AE 8D FD D8 ...}X
02C0 8601             (../cmds/Login.asm):00179                    lda    #1                                                    * 02C0 86 01          ..
02C2 103F8A           (../cmds/Login.asm):00180                    os9    I$Write                                               * 02C2 10 3F 8A       .?.
02C5 30C90131         (../cmds/Login.asm):00181                    leax   >U0131,U                                              * 02C5 30 C9 01 31    0I.1
02C9 4F               (../cmds/Login.asm):00182                    clra                                                         * 02C9 4F             O
02CA 108E00C8         (../cmds/Login.asm):00183                    ldy    #200                                                  * 02CA 10 8E 00 C8    ...H
02CE 103F8B           (../cmds/Login.asm):00184                    os9    I$ReadLn                                              * 02CE 10 3F 8B       .?.
02D1 25E4             (../cmds/Login.asm):00185                    bcs    L02B7                                                 * 02D1 25 E4          %d
02D3 10AFC819         (../cmds/Login.asm):00186                    sty    <U0019,U                                              * 02D3 10 AF C8 19    ./H.
02D7 17058F           (../cmds/Login.asm):00187                    lbsr   L0869                                                 * 02D7 17 05 8F       ...
02DA 170391           (../cmds/Login.asm):00188                    lbsr   L066E                                                 * 02DA 17 03 91       ...
02DD 308DFDB9         (../cmds/Login.asm):00189                    leax   >L009A,PC                                             * 02DD 30 8D FD B9    0.}9
02E1 10AE8DFDCB       (../cmds/Login.asm):00190                    ldy    >L00B1,PC                                             * 02E1 10 AE 8D FD CB ...}K
02E6 8601             (../cmds/Login.asm):00191                    lda    #1                                                    * 02E6 86 01          ..
02E8 103F8A           (../cmds/Login.asm):00192                    os9    I$Write                                               * 02E8 10 3F 8A       .?.
02EB 30C901F9         (../cmds/Login.asm):00193                    leax   >U01F9,U                                              * 02EB 30 C9 01 F9    0I.y
02EF 108E0001         (../cmds/Login.asm):00194         L02EF      ldy    #1                                                    * 02EF 10 8E 00 01    ....
02F3 4F               (../cmds/Login.asm):00195                    clra                                                         * 02F3 4F             O
02F4 103F89           (../cmds/Login.asm):00196                    os9    I$Read                                                * 02F4 10 3F 89       .?.
02F7 25F6             (../cmds/Login.asm):00197                    bcs    L02EF                                                 * 02F7 25 F6          %v
02F9 A684             (../cmds/Login.asm):00198                    lda    0,X                                                   * 02F9 A6 84          &.
02FB 8108             (../cmds/Login.asm):00199                    cmpa   #8                                                    * 02FB 81 08          ..
02FD 2730             (../cmds/Login.asm):00200                    beq    L032F                                                 * 02FD 27 30          '0
02FF 3410             (../cmds/Login.asm):00201                    pshs   X                                                     * 02FF 34 10          4.
0301 308DFEFF         (../cmds/Login.asm):00202                    leax   >L0204,PC                                             * 0301 30 8D FE FF    0.~.
0305 108E0001         (../cmds/Login.asm):00203                    ldy    #1                                                    * 0305 10 8E 00 01    ....
0309 8601             (../cmds/Login.asm):00204                    lda    #1                                                    * 0309 86 01          ..
030B 103F8A           (../cmds/Login.asm):00205                    os9    I$Write                                               * 030B 10 3F 8A       .?.
030E 3510             (../cmds/Login.asm):00206                    puls   X                                                     * 030E 35 10          5.
0310 A680             (../cmds/Login.asm):00207                    lda    ,X+                                                   * 0310 A6 80          &.
0312 810D             (../cmds/Login.asm):00208                    cmpa   #13                                                   * 0312 81 0D          ..
0314 26D9             (../cmds/Login.asm):00209                    bne    L02EF                                                 * 0314 26 D9          &Y
0316 30C901F9         (../cmds/Login.asm):00210                    leax   >U01F9,U                                              * 0316 30 C9 01 F9    0I.y
031A 17054C           (../cmds/Login.asm):00211                    lbsr   L0869                                                 * 031A 17 05 4C       ..L
031D 308DFE05         (../cmds/Login.asm):00212                    leax   >L0126,PC                                             * 031D 30 8D FE 05    0.~.
0321 108E0002         (../cmds/Login.asm):00213                    ldy    #2                                                    * 0321 10 8E 00 02    ....
0325 8601             (../cmds/Login.asm):00214                    lda    #1                                                    * 0325 86 01          ..
0327 103F8C           (../cmds/Login.asm):00215                    os9    I$WritLn                                              * 0327 10 3F 8C       .?.
032A 170358           (../cmds/Login.asm):00216                    lbsr   L0685                                                 * 032A 17 03 58       ..X
032D 2022             (../cmds/Login.asm):00217                    bra    L0351                                                 * 032D 20 22           "
032F 31C901F9         (../cmds/Login.asm):00218         L032F      leay   >U01F9,U                                              * 032F 31 C9 01 F9    1I.y
0333 10AFC815         (../cmds/Login.asm):00219                    sty    <U0015,U                                              * 0333 10 AF C8 15    ./H.
0337 ACC815           (../cmds/Login.asm):00220                    cmpx   <U0015,U                                              * 0337 AC C8 15       ,H.
033A 27B3             (../cmds/Login.asm):00221                    beq    L02EF                                                 * 033A 27 B3          '3
033C 3410             (../cmds/Login.asm):00222                    pshs   X                                                     * 033C 34 10          4.
033E 308DFEC3         (../cmds/Login.asm):00223                    leax   >L0205,PC                                             * 033E 30 8D FE C3    0.~C
0342 108E0003         (../cmds/Login.asm):00224                    ldy    #3                                                    * 0342 10 8E 00 03    ....
0346 8601             (../cmds/Login.asm):00225                    lda    #1                                                    * 0346 86 01          ..
0348 103F8A           (../cmds/Login.asm):00226                    os9    I$Write                                               * 0348 10 3F 8A       .?.
034B 3510             (../cmds/Login.asm):00227                    puls   X                                                     * 034B 35 10          5.
034D 301F             (../cmds/Login.asm):00228                    leax   -$01,X                                                * 034D 30 1F          0.
034F 209E             (../cmds/Login.asm):00229                    bra    L02EF                                                 * 034F 20 9E           .
0351 308DFE2B         (../cmds/Login.asm):00230         L0351      leax   >L0180,PC                                             * 0351 30 8D FE 2B    0.~+
0355 108E00C8         (../cmds/Login.asm):00231                    ldy    #200                                                  * 0355 10 8E 00 C8    ...H
0359 8601             (../cmds/Login.asm):00232                    lda    #1                                                    * 0359 86 01          ..
035B 103F8C           (../cmds/Login.asm):00233                    os9    I$WritLn                                              * 035B 10 3F 8C       .?.
035E 308DFD5D         (../cmds/Login.asm):00234                    leax   >L00BF,PC                                             * 035E 30 8D FD 5D    0.}]
0362 8601             (../cmds/Login.asm):00235                    lda    #1                                                    * 0362 86 01          ..
0364 103F84           (../cmds/Login.asm):00236                    os9    I$Open                                                * 0364 10 3F 84       .?.
0367 10250436         (../cmds/Login.asm):00237                    lbcs   L07A1                                                 * 0367 10 25 04 36    .%.6
036B A743             (../cmds/Login.asm):00238                    sta    U0003,U                                               * 036B A7 43          'C
036D 30C869           (../cmds/Login.asm):00239         L036D      leax   <U0069,U                                              * 036D 30 C8 69       0Hi
0370 C6C8             (../cmds/Login.asm):00240                    ldb    #200                                                  * 0370 C6 C8          FH
0372 860D             (../cmds/Login.asm):00241                    lda    #13                                                   * 0372 86 0D          ..
0374 A780             (../cmds/Login.asm):00242         L0374      sta    ,X+                                                   * 0374 A7 80          '.
0376 5A               (../cmds/Login.asm):00243                    decb                                                         * 0376 5A             Z
0377 26FB             (../cmds/Login.asm):00244                    bne    L0374                                                 * 0377 26 FB          &{
0379 30C869           (../cmds/Login.asm):00245                    leax   <U0069,U                                              * 0379 30 C8 69       0Hi
037C 6F4C             (../cmds/Login.asm):00246                    clr    U000C,U                                               * 037C 6F 4C          oL
037E A643             (../cmds/Login.asm):00247                    lda    U0003,U                                               * 037E A6 43          &C
0380 108E00C8         (../cmds/Login.asm):00248                    ldy    #200                                                  * 0380 10 8E 00 C8    ...H
0384 103F8B           (../cmds/Login.asm):00249                    os9    I$ReadLn                                              * 0384 10 3F 8B       .?.
0387 257A             (../cmds/Login.asm):00250                    bcs    L0403                                                 * 0387 25 7A          %z
0389 1704DD           (../cmds/Login.asm):00251                    lbsr   L0869                                                 * 0389 17 04 DD       ..]
038C 31C90131         (../cmds/Login.asm):00252                    leay   >U0131,U                                              * 038C 31 C9 01 31    1I.1
0390 A6A0             (../cmds/Login.asm):00253         L0390      lda    ,Y+                                                   * 0390 A6 A0          &
0392 810D             (../cmds/Login.asm):00254                    cmpa   #13                                                   * 0392 81 0D          ..
0394 270E             (../cmds/Login.asm):00255                    beq    L03A4                                                 * 0394 27 0E          '.
0396 815A             (../cmds/Login.asm):00256                    cmpa   #90                                                   * 0396 81 5A          .Z
0398 2302             (../cmds/Login.asm):00257                    bls    L039C                                                 * 0398 23 02          #.
039A 84DF             (../cmds/Login.asm):00258                    anda   #223                                                  * 039A 84 DF          ._
039C A180             (../cmds/Login.asm):00259         L039C      cmpa   ,X+                                                   * 039C A1 80          !.
039E 26CD             (../cmds/Login.asm):00260                    bne    L036D                                                 * 039E 26 CD          &M
03A0 6C4C             (../cmds/Login.asm):00261                    inc    U000C,U                                               * 03A0 6C 4C          lL
03A2 20EC             (../cmds/Login.asm):00262                    bra    L0390                                                 * 03A2 20 EC           l
03A4 A680             (../cmds/Login.asm):00263         L03A4      lda    ,X+                                                   * 03A4 A6 80          &.
03A6 812C             (../cmds/Login.asm):00264                    cmpa   #44                                                   * 03A6 81 2C          .,
03A8 26C3             (../cmds/Login.asm):00265                    bne    L036D                                                 * 03A8 26 C3          &C
03AA 31C901F9         (../cmds/Login.asm):00266                    leay   >U01F9,U                                              * 03AA 31 C9 01 F9    1I.y
03AE A6A0             (../cmds/Login.asm):00267         L03AE      lda    ,Y+                                                   * 03AE A6 A0          &
03B0 810D             (../cmds/Login.asm):00268                    cmpa   #13                                                   * 03B0 81 0D          ..
03B2 270C             (../cmds/Login.asm):00269                    beq    L03C0                                                 * 03B2 27 0C          '.
03B4 815A             (../cmds/Login.asm):00270                    cmpa   #90                                                   * 03B4 81 5A          .Z
03B6 2302             (../cmds/Login.asm):00271                    bls    L03BA                                                 * 03B6 23 02          #.
03B8 84DF             (../cmds/Login.asm):00272                    anda   #223                                                  * 03B8 84 DF          ._
03BA A180             (../cmds/Login.asm):00273         L03BA      cmpa   ,X+                                                   * 03BA A1 80          !.
03BC 26AF             (../cmds/Login.asm):00274                    bne    L036D                                                 * 03BC 26 AF          &/
03BE 20EE             (../cmds/Login.asm):00275                    bra    L03AE                                                 * 03BE 20 EE           n
03C0 A680             (../cmds/Login.asm):00276         L03C0      lda    ,X+                                                   * 03C0 A6 80          &.
03C2 812C             (../cmds/Login.asm):00277                    cmpa   #44                                                   * 03C2 81 2C          .,
03C4 26A7             (../cmds/Login.asm):00278                    bne    L036D                                                 * 03C4 26 A7          &'
03C6 31C90389         (../cmds/Login.asm):00279                    leay   >U0389,U                                              * 03C6 31 C9 03 89    1I..
03CA 6FC817           (../cmds/Login.asm):00280                    clr    <U0017,U                                              * 03CA 6F C8 17       oH.
03CD 6CC817           (../cmds/Login.asm):00281         L03CD      inc    <U0017,U                                              * 03CD 6C C8 17       lH.
03D0 A680             (../cmds/Login.asm):00282                    lda    ,X+                                                   * 03D0 A6 80          &.
03D2 812C             (../cmds/Login.asm):00283                    cmpa   #44                                                   * 03D2 81 2C          .,
03D4 2708             (../cmds/Login.asm):00284                    beq    L03DE                                                 * 03D4 27 08          '.
03D6 810D             (../cmds/Login.asm):00285                    cmpa   #13                                                   * 03D6 81 0D          ..
03D8 2704             (../cmds/Login.asm):00286                    beq    L03DE                                                 * 03D8 27 04          '.
03DA A7A0             (../cmds/Login.asm):00287                    sta    ,Y+                                                   * 03DA A7 A0          '
03DC 20EF             (../cmds/Login.asm):00288                    bra    L03CD                                                 * 03DC 20 EF           o
03DE 3430             (../cmds/Login.asm):00289         L03DE      pshs   Y,X                                                   * 03DE 34 30          40
03E0 1703C1           (../cmds/Login.asm):00290                    lbsr   L07A4                                                 * 03E0 17 03 C1       ..A
03E3 3530             (../cmds/Login.asm):00291                    puls   Y,X                                                   * 03E3 35 30          50
03E5 860D             (../cmds/Login.asm):00292                    lda    #13                                                   * 03E5 86 0D          ..
03E7 A7A4             (../cmds/Login.asm):00293                    sta    0,Y                                                   * 03E7 A7 A4          '$
03E9 6CC817           (../cmds/Login.asm):00294                    inc    <U0017,U                                              * 03E9 6C C8 17       lH.
03EC 8D49             (../cmds/Login.asm):00295                    bsr    L0437                                                 * 03EC 8D 49          .I
03EE EDC81D           (../cmds/Login.asm):00296                    std    <U001D,U                                              * 03EE ED C8 1D       mH.
03F1 1F02             (../cmds/Login.asm):00297                    tfr    D,Y                                                   * 03F1 1F 02          ..
03F3 103F1C           (../cmds/Login.asm):00298                    os9    F$SUser                                               * 03F3 10 3F 1C       .?.
03F6 8D3F             (../cmds/Login.asm):00299                    bsr    L0437                                                 * 03F6 8D 3F          .?
03F8 EDC81B           (../cmds/Login.asm):00300                    std    <U001B,U                                              * 03F8 ED C8 1B       mH.
03FB A643             (../cmds/Login.asm):00301                    lda    U0003,U                                               * 03FB A6 43          &C
03FD 103F8F           (../cmds/Login.asm):00302                    os9    I$Close                                               * 03FD 10 3F 8F       .?.
0400 1600A2           (../cmds/Login.asm):00303                    lbra   L04A5                                                 * 0400 16 00 A2       .."
0403 308DFCC2         (../cmds/Login.asm):00304         L0403      leax   >L00C9,PC                                             * 0403 30 8D FC C2    0.|B
0407 108E00C8         (../cmds/Login.asm):00305                    ldy    #200                                                  * 0407 10 8E 00 C8    ...H
040B 8601             (../cmds/Login.asm):00306                    lda    #1                                                    * 040B 86 01          ..
040D 103F8C           (../cmds/Login.asm):00307                    os9    I$WritLn                                              * 040D 10 3F 8C       .?.
0410 A643             (../cmds/Login.asm):00308                    lda    U0003,U                                               * 0410 A6 43          &C
0412 103F8F           (../cmds/Login.asm):00309                    os9    I$Close                                               * 0412 10 3F 8F       .?.
0415 6C4D             (../cmds/Login.asm):00310                    inc    U000D,U                                               * 0415 6C 4D          lM
0417 A64D             (../cmds/Login.asm):00311                    lda    U000D,U                                               * 0417 A6 4D          &M
0419 8103             (../cmds/Login.asm):00312                    cmpa   #3                                                    * 0419 81 03          ..
041B 2E08             (../cmds/Login.asm):00313                    bgt    L0425                                                 * 041B 2E 08          ..
041D 16FE97           (../cmds/Login.asm):00314                    lbra   L02B7                                                 * 041D 16 FE 97       .~.
0420 CC0000           (../cmds/Login.asm):00315         L0420      ldd    #0                                                    * 0420 CC 00 00       L..
0423 35A0             (../cmds/Login.asm):00316                    puls   PC,Y                                                  * 0423 35 A0          5
0425 308DFD2E         (../cmds/Login.asm):00317         L0425      leax   >L0157,PC                                             * 0425 30 8D FD 2E    0.}.
0429 108E00C8         (../cmds/Login.asm):00318                    ldy    #200                                                  * 0429 10 8E 00 C8    ...H
042D 8601             (../cmds/Login.asm):00319                    lda    #1                                                    * 042D 86 01          ..
042F 103F8C           (../cmds/Login.asm):00320                    os9    I$WritLn                                              * 042F 10 3F 8C       .?.
0432 3440             (../cmds/Login.asm):00321                    pshs   U                                                     * 0432 34 40          4@
0434 160267           (../cmds/Login.asm):00322                    lbra   L069E                                                 * 0434 16 02 67       ..g
0437 3420             (../cmds/Login.asm):00323         L0437      pshs   Y                                                     * 0437 34 20          4
0439 A680             (../cmds/Login.asm):00324         L0439      lda    ,X+                                                   * 0439 A6 80          &.
043B 810D             (../cmds/Login.asm):00325                    cmpa   #13                                                   * 043B 81 0D          ..
043D 27E1             (../cmds/Login.asm):00326                    beq    L0420                                                 * 043D 27 E1          'a
043F 8130             (../cmds/Login.asm):00327                    cmpa   #48                                                   * 043F 81 30          .0
0441 25F6             (../cmds/Login.asm):00328                    bcs    L0439                                                 * 0441 25 F6          %v
0443 8139             (../cmds/Login.asm):00329                    cmpa   #57                                                   * 0443 81 39          .9
0445 22F2             (../cmds/Login.asm):00330                    bhi    L0439                                                 * 0445 22 F2          "r
0447 301F             (../cmds/Login.asm):00331                    leax   -$01,X                                                * 0447 30 1F          0.
0449 A680             (../cmds/Login.asm):00332         L0449      lda    ,X+                                                   * 0449 A6 80          &.
044B 8130             (../cmds/Login.asm):00333                    cmpa   #48                                                   * 044B 81 30          .0
044D 2506             (../cmds/Login.asm):00334                    bcs    L0455                                                 * 044D 25 06          %.
044F 8139             (../cmds/Login.asm):00335                    cmpa   #57                                                   * 044F 81 39          .9
0451 2202             (../cmds/Login.asm):00336                    bhi    L0455                                                 * 0451 22 02          ".
0453 20F4             (../cmds/Login.asm):00337                    bra    L0449                                                 * 0453 20 F4           t
0455 3410             (../cmds/Login.asm):00338         L0455      pshs   X                                                     * 0455 34 10          4.
0457 301F             (../cmds/Login.asm):00339                    leax   -$01,X                                                * 0457 30 1F          0.
0459 6FC815           (../cmds/Login.asm):00340                    clr    <U0015,U                                              * 0459 6F C8 15       oH.
045C 6FC816           (../cmds/Login.asm):00341                    clr    <U0016,U                                              * 045C 6F C8 16       oH.
045F CC0001           (../cmds/Login.asm):00342                    ldd    #1                                                    * 045F CC 00 01       L..
0462 EDC813           (../cmds/Login.asm):00343                    std    <U0013,U                                              * 0462 ED C8 13       mH.
0465 A682             (../cmds/Login.asm):00344         L0465      lda    ,-X                                                   * 0465 A6 82          &.
0467 8130             (../cmds/Login.asm):00345                    cmpa   #48                                                   * 0467 81 30          .0
0469 2533             (../cmds/Login.asm):00346                    bcs    L049E                                                 * 0469 25 33          %3
046B 8139             (../cmds/Login.asm):00347                    cmpa   #57                                                   * 046B 81 39          .9
046D 222F             (../cmds/Login.asm):00348                    bhi    L049E                                                 * 046D 22 2F          "/
046F 8030             (../cmds/Login.asm):00349                    suba   #48                                                   * 046F 80 30          .0
0471 A74B             (../cmds/Login.asm):00350                    sta    U000B,U                                               * 0471 A7 4B          'K
0473 CC0000           (../cmds/Login.asm):00351                    ldd    #0                                                    * 0473 CC 00 00       L..
0476 6D4B             (../cmds/Login.asm):00352         L0476      tst    U000B,U                                               * 0476 6D 4B          mK
0478 2707             (../cmds/Login.asm):00353                    beq    L0481                                                 * 0478 27 07          '.
047A E3C813           (../cmds/Login.asm):00354                    addd   <U0013,U                                              * 047A E3 C8 13       cH.
047D 6A4B             (../cmds/Login.asm):00355                    dec    U000B,U                                               * 047D 6A 4B          jK
047F 20F5             (../cmds/Login.asm):00356                    bra    L0476                                                 * 047F 20 F5           u
0481 E3C815           (../cmds/Login.asm):00357         L0481      addd   <U0015,U                                              * 0481 E3 C8 15       cH.
0484 EDC815           (../cmds/Login.asm):00358                    std    <U0015,U                                              * 0484 ED C8 15       mH.
0487 860A             (../cmds/Login.asm):00359                    lda    #10                                                   * 0487 86 0A          ..
0489 A74B             (../cmds/Login.asm):00360                    sta    U000B,U                                               * 0489 A7 4B          'K
048B CC0000           (../cmds/Login.asm):00361                    ldd    #0                                                    * 048B CC 00 00       L..
048E 6D4B             (../cmds/Login.asm):00362         L048E      tst    U000B,U                                               * 048E 6D 4B          mK
0490 2707             (../cmds/Login.asm):00363                    beq    L0499                                                 * 0490 27 07          '.
0492 E3C813           (../cmds/Login.asm):00364                    addd   <U0013,U                                              * 0492 E3 C8 13       cH.
0495 6A4B             (../cmds/Login.asm):00365                    dec    U000B,U                                               * 0495 6A 4B          jK
0497 20F5             (../cmds/Login.asm):00366                    bra    L048E                                                 * 0497 20 F5           u
0499 EDC813           (../cmds/Login.asm):00367         L0499      std    <U0013,U                                              * 0499 ED C8 13       mH.
049C 20C7             (../cmds/Login.asm):00368                    bra    L0465                                                 * 049C 20 C7           G
049E ECC815           (../cmds/Login.asm):00369         L049E      ldd    <U0015,U                                              * 049E EC C8 15       lH.
04A1 3510             (../cmds/Login.asm):00370                    puls   X                                                     * 04A1 35 10          5.
04A3 35A0             (../cmds/Login.asm):00371                    puls   PC,Y                                                  * 04A3 35 A0          5
04A5 308DFCCD         (../cmds/Login.asm):00372         L04A5      leax   >L0176,PC                                             * 04A5 30 8D FC CD    0.|M
04A9 8601             (../cmds/Login.asm):00373                    lda    #1                                                    * 04A9 86 01          ..
04AB 108E0009         (../cmds/Login.asm):00374                    ldy    #9                                                    * 04AB 10 8E 00 09    ....
04AF 103F8A           (../cmds/Login.asm):00375                    os9    I$Write                                               * 04AF 10 3F 8A       .?.
04B2 102502EB         (../cmds/Login.asm):00376                    lbcs   L07A1                                                 * 04B2 10 25 02 EB    .%.k
04B6 30C90131         (../cmds/Login.asm):00377                    leax   >U0131,U                                              * 04B6 30 C9 01 31    0I.1
04BA E64C             (../cmds/Login.asm):00378                    ldb    U000C,U                                               * 04BA E6 4C          fL
04BC 4F               (../cmds/Login.asm):00379                    clra                                                         * 04BC 4F             O
04BD 1F02             (../cmds/Login.asm):00380                    tfr    D,Y                                                   * 04BD 1F 02          ..
04BF A645             (../cmds/Login.asm):00381                    lda    U0005,U                                               * 04BF A6 45          &E
04C1 2B03             (../cmds/Login.asm):00382                    bmi    L04C6                                                 * 04C1 2B 03          +.
04C3 103F8A           (../cmds/Login.asm):00383                    os9    I$Write                                               * 04C3 10 3F 8A       .?.
04C6 102502D7         (../cmds/Login.asm):00384         L04C6      lbcs   L07A1                                                 * 04C6 10 25 02 D7    .%.W
04CA 8601             (../cmds/Login.asm):00385                    lda    #1                                                    * 04CA 86 01          ..
04CC 3121             (../cmds/Login.asm):00386                    leay   $01,Y                                                 * 04CC 31 21          1!
04CE 103F8C           (../cmds/Login.asm):00387                    os9    I$WritLn                                              * 04CE 10 3F 8C       .?.
04D1 102502CC         (../cmds/Login.asm):00388                    lbcs   L07A1                                                 * 04D1 10 25 02 CC    .%.L
04D5 308DFCCA         (../cmds/Login.asm):00389                    leax   >L01A3,PC                                             * 04D5 30 8D FC CA    0.|J
04D9 108E00C8         (../cmds/Login.asm):00390                    ldy    #200                                                  * 04D9 10 8E 00 C8    ...H
04DD 8601             (../cmds/Login.asm):00391                    lda    #1                                                    * 04DD 86 01          ..
04DF 103F8C           (../cmds/Login.asm):00392                    os9    I$WritLn                                              * 04DF 10 3F 8C       .?.
04E2 C615             (../cmds/Login.asm):00393                    ldb    #21                                                   * 04E2 C6 15          F.
04E4 E04C             (../cmds/Login.asm):00394                    subb   U000C,U                                               * 04E4 E0 4C          `L
04E6 4F               (../cmds/Login.asm):00395                    clra                                                         * 04E6 4F             O
04E7 1F02             (../cmds/Login.asm):00396                    tfr    D,Y                                                   * 04E7 1F 02          ..
04E9 308DFC42         (../cmds/Login.asm):00397                    leax   >L012F,PC                                             * 04E9 30 8D FC 42    0.|B
04ED A645             (../cmds/Login.asm):00398                    lda    U0005,U                                               * 04ED A6 45          &E
04EF 2B03             (../cmds/Login.asm):00399                    bmi    L04F4                                                 * 04EF 2B 03          +.
04F1 103F8A           (../cmds/Login.asm):00400                    os9    I$Write                                               * 04F1 10 3F 8A       .?.
04F4 102502A9         (../cmds/Login.asm):00401         L04F4      lbcs   L07A1                                                 * 04F4 10 25 02 A9    .%.)
04F8 3440             (../cmds/Login.asm):00402                    pshs   U                                                     * 04F8 34 40          4@
04FA 8601             (../cmds/Login.asm):00403                    lda    #1                                                    * 04FA 86 01          ..
04FC 103F8F           (../cmds/Login.asm):00404                    os9    I$Close                                               * 04FC 10 3F 8F       .?.
04FF A645             (../cmds/Login.asm):00405                    lda    U0005,U                                               * 04FF A6 45          &E
0501 2B26             (../cmds/Login.asm):00406                    bmi    L0529                                                 * 0501 2B 26          +&
0503 103F82           (../cmds/Login.asm):00407                    os9    I$Dup                                                 * 0503 10 3F 82       .?.
0506 308DFC1E         (../cmds/Login.asm):00408                    leax   >L0128,PC                                             * 0506 30 8D FC 1E    0.|.
050A 338DFC1F         (../cmds/Login.asm):00409                    leau   >L012D,PC                                             * 050A 33 8D FC 1F    3.|.
050E 108E0002         (../cmds/Login.asm):00410                    ldy    #2                                                    * 050E 10 8E 00 02    ....
0512 8611             (../cmds/Login.asm):00411                    lda    #17                                                   * 0512 86 11          ..
0514 C603             (../cmds/Login.asm):00412                    ldb    #3                                                    * 0514 C6 03          F.
0516 103F03           (../cmds/Login.asm):00413                    os9    F$Fork                                                * 0516 10 3F 03       .?.
0519 10250284         (../cmds/Login.asm):00414                    lbcs   L07A1                                                 * 0519 10 25 02 84    .%..
051D 103F04           (../cmds/Login.asm):00415                    os9    F$Wait                                                * 051D 10 3F 04       .?.
0520 1025027D         (../cmds/Login.asm):00416                    lbcs   L07A1                                                 * 0520 10 25 02 7D    .%.}
0524 8601             (../cmds/Login.asm):00417                    lda    #1                                                    * 0524 86 01          ..
0526 103F8F           (../cmds/Login.asm):00418                    os9    I$Close                                               * 0526 10 3F 8F       .?.
0529 4F               (../cmds/Login.asm):00419         L0529      clra                                                         * 0529 4F             O
052A 103F82           (../cmds/Login.asm):00420                    os9    I$Dup                                                 * 052A 10 3F 82       .?.
052D 3540             (../cmds/Login.asm):00421                    puls   U                                                     * 052D 35 40          5@
052F 308DFCD5         (../cmds/Login.asm):00422                    leax   >L0208,PC                                             * 052F 30 8D FC D5    0.|U
0533 8603             (../cmds/Login.asm):00423                    lda    #3                                                    * 0533 86 03          ..
0535 103F84           (../cmds/Login.asm):00424                    os9    I$Open                                                * 0535 10 3F 84       .?.
0538 2409             (../cmds/Login.asm):00425                    bcc    L0543                                                 * 0538 24 09          $.
053A C61B             (../cmds/Login.asm):00426                    ldb    #27                                                   * 053A C6 1B          F.
053C 103F83           (../cmds/Login.asm):00427                    os9    I$Create                                              * 053C 10 3F 83       .?.
053F 1025025E         (../cmds/Login.asm):00428                    lbcs   L07A1                                                 * 053F 10 25 02 5E    .%.^
0543 A7C810           (../cmds/Login.asm):00429         L0543      sta    <U0010,U                                              * 0543 A7 C8 10       'H.
0546 30C823           (../cmds/Login.asm):00430         L0546      leax   <U0023,U                                              * 0546 30 C8 23       0H#
0549 108E0020         (../cmds/Login.asm):00431                    ldy    #32                                                   * 0549 10 8E 00 20    ...
054D A6C810           (../cmds/Login.asm):00432                    lda    <U0010,U                                              * 054D A6 C8 10       &H.
0550 103F89           (../cmds/Login.asm):00433                    os9    I$Read                                                * 0550 10 3F 89       .?.
0553 250B             (../cmds/Login.asm):00434                    bcs    L0560                                                 * 0553 25 0B          %.
0555 ECC823           (../cmds/Login.asm):00435                    ldd    <U0023,U                                              * 0555 EC C8 23       lH#
0558 10A3C81D         (../cmds/Login.asm):00436                    cmpd   <U001D,U                                              * 0558 10 A3 C8 1D    .#H.
055C 26E8             (../cmds/Login.asm):00437                    bne    L0546                                                 * 055C 26 E8          &h
055E 2019             (../cmds/Login.asm):00438                    bra    L0579                                                 * 055E 20 19           .
0560 C1D3             (../cmds/Login.asm):00439         L0560      cmpb   #211                                                  * 0560 C1 D3          AS
0562 1026023B         (../cmds/Login.asm):00440                    lbne   L07A1                                                 * 0562 10 26 02 3B    .&.;
0566 160081           (../cmds/Login.asm):00441                    lbra   L05EA                                                 * 0566 16 00 81       ...
0569 308DFCB1         (../cmds/Login.asm):00442         L0569      leax   >L021E,PC                                             * 0569 30 8D FC B1    0.|1
056D 108E00C8         (../cmds/Login.asm):00443                    ldy    #200                                                  * 056D 10 8E 00 C8    ...H
0571 8601             (../cmds/Login.asm):00444                    lda    #1                                                    * 0571 86 01          ..
0573 103F8C           (../cmds/Login.asm):00445                    os9    I$WritLn                                              * 0573 10 3F 8C       .?.
0576 160125           (../cmds/Login.asm):00446                    lbra   L069E                                                 * 0576 16 01 25       ..%
0579 ECC825           (../cmds/Login.asm):00447         L0579      ldd    <U0025,U                                              * 0579 EC C8 25       lH%
057C C30001           (../cmds/Login.asm):00448                    addd   #1                                                    * 057C C3 00 01       C..
057F EDC825           (../cmds/Login.asm):00449                    std    <U0025,U                                              * 057F ED C8 25       mH%
0582 30C827           (../cmds/Login.asm):00450                    leax   <U0027,U                                              * 0582 30 C8 27       0H'
0585 103F15           (../cmds/Login.asm):00451                    os9    F$Time                                                * 0585 10 3F 15       .?.
0588 A6C835           (../cmds/Login.asm):00452                    lda    <U0035,U                                              * 0588 A6 C8 35       &H5
058B A1C827           (../cmds/Login.asm):00453                    cmpa   <U0027,U                                              * 058B A1 C8 27       !H'
058E 260B             (../cmds/Login.asm):00454                    bne    L059B                                                 * 058E 26 0B          &.
0590 ECC836           (../cmds/Login.asm):00455                    ldd    <U0036,U                                              * 0590 EC C8 36       lH6
0593 10A3C828         (../cmds/Login.asm):00456                    cmpd   <U0028,U                                              * 0593 10 A3 C8 28    .#H(
0597 2602             (../cmds/Login.asm):00457                    bne    L059B                                                 * 0597 26 02          &.
0599 2006             (../cmds/Login.asm):00458                    bra    L05A1                                                 * 0599 20 06           .
059B ECC81B           (../cmds/Login.asm):00459         L059B      ldd    <U001B,U                                              * 059B EC C8 1B       lH.
059E EDC83B           (../cmds/Login.asm):00460                    std    <U003B,U                                              * 059E ED C8 3B       mH;
05A1 ECC83B           (../cmds/Login.asm):00461         L05A1      ldd    <U003B,U                                              * 05A1 EC C8 3B       lH;
05A4 10830001         (../cmds/Login.asm):00462                    cmpd   #1                                                    * 05A4 10 83 00 01    ....
05A8 1027FFBD         (../cmds/Login.asm):00463                    lbeq   L0569                                                 * 05A8 10 27 FF BD    .'.=
05AC A6C810           (../cmds/Login.asm):00464                    lda    <U0010,U                                              * 05AC A6 C8 10       &H.
05AF C605             (../cmds/Login.asm):00465                    ldb    #5                                                    * 05AF C6 05          F.
05B1 3440             (../cmds/Login.asm):00466                    pshs   U                                                     * 05B1 34 40          4@
05B3 103F8D           (../cmds/Login.asm):00467                    os9    I$GetStt                                              * 05B3 10 3F 8D       .?.
05B6 1F30             (../cmds/Login.asm):00468                    tfr    U,D                                                   * 05B6 1F 30          .0
05B8 830020           (../cmds/Login.asm):00469                    subd   #32                                                   * 05B8 83 00 20       ..
05BB 2C02             (../cmds/Login.asm):00470                    bge    L05BF                                                 * 05BB 2C 02          ,.
05BD 301F             (../cmds/Login.asm):00471                    leax   -$01,X                                                * 05BD 30 1F          0.
05BF EEE4             (../cmds/Login.asm):00472         L05BF      ldu    0,S                                                   * 05BF EE E4          nd
05C1 AFC81F           (../cmds/Login.asm):00473                    stx    <U001F,U                                              * 05C1 AF C8 1F       /H.
05C4 EDC821           (../cmds/Login.asm):00474                    std    <U0021,U                                              * 05C4 ED C8 21       mH!
05C7 1F02             (../cmds/Login.asm):00475                    tfr    D,Y                                                   * 05C7 1F 02          ..
05C9 A6C810           (../cmds/Login.asm):00476                    lda    <U0010,U                                              * 05C9 A6 C8 10       &H.
05CC 1F23             (../cmds/Login.asm):00477                    tfr    Y,U                                                   * 05CC 1F 23          .#
05CE 103F88           (../cmds/Login.asm):00478                    os9    I$Seek                                                * 05CE 10 3F 88       .?.
05D1 102501CC         (../cmds/Login.asm):00479                    lbcs   L07A1                                                 * 05D1 10 25 01 CC    .%.L
05D5 3540             (../cmds/Login.asm):00480                    puls   U                                                     * 05D5 35 40          5@
05D7 30C823           (../cmds/Login.asm):00481                    leax   <U0023,U                                              * 05D7 30 C8 23       0H#
05DA 108E0020         (../cmds/Login.asm):00482                    ldy    #32                                                   * 05DA 10 8E 00 20    ...
05DE A6C810           (../cmds/Login.asm):00483                    lda    <U0010,U                                              * 05DE A6 C8 10       &H.
05E1 103F8A           (../cmds/Login.asm):00484                    os9    I$Write                                               * 05E1 10 3F 8A       .?.
05E4 103F8F           (../cmds/Login.asm):00485                    os9    I$Close                                               * 05E4 10 3F 8F       .?.
05E7 160063           (../cmds/Login.asm):00486                    lbra   L064D                                                 * 05E7 16 00 63       ..c
05EA 30C823           (../cmds/Login.asm):00487         L05EA      leax   <U0023,U                                              * 05EA 30 C8 23       0H#
05ED CC0001           (../cmds/Login.asm):00488                    ldd    #1                                                    * 05ED CC 00 01       L..
05F0 EDC825           (../cmds/Login.asm):00489                    std    <U0025,U                                              * 05F0 ED C8 25       mH%
05F3 CC0000           (../cmds/Login.asm):00490                    ldd    #0                                                    * 05F3 CC 00 00       L..
05F6 EDC82D           (../cmds/Login.asm):00491                    std    <U002D,U                                              * 05F6 ED C8 2D       mH-
05F9 EDC82F           (../cmds/Login.asm):00492                    std    <U002F,U                                              * 05F9 ED C8 2F       mH/
05FC EDC833           (../cmds/Login.asm):00493                    std    <U0033,U                                              * 05FC ED C8 33       mH3
05FF EDC831           (../cmds/Login.asm):00494                    std    <U0031,U                                              * 05FF ED C8 31       mH1
0602 EDC835           (../cmds/Login.asm):00495                    std    <U0035,U                                              * 0602 ED C8 35       mH5
0605 EDC837           (../cmds/Login.asm):00496                    std    <U0037,U                                              * 0605 ED C8 37       mH7
0608 EDC839           (../cmds/Login.asm):00497                    std    <U0039,U                                              * 0608 ED C8 39       mH9
060B ECC81B           (../cmds/Login.asm):00498                    ldd    <U001B,U                                              * 060B EC C8 1B       lH.
060E EDC83B           (../cmds/Login.asm):00499                    std    <U003B,U                                              * 060E ED C8 3B       mH;
0611 ECC81D           (../cmds/Login.asm):00500                    ldd    <U001D,U                                              * 0611 EC C8 1D       lH.
0614 EDC823           (../cmds/Login.asm):00501                    std    <U0023,U                                              * 0614 ED C8 23       mH#
0617 30C827           (../cmds/Login.asm):00502                    leax   <U0027,U                                              * 0617 30 C8 27       0H'
061A 103F15           (../cmds/Login.asm):00503                    os9    F$Time                                                * 061A 10 3F 15       .?.
061D 10250180         (../cmds/Login.asm):00504                    lbcs   L07A1                                                 * 061D 10 25 01 80    .%..
0621 A6C810           (../cmds/Login.asm):00505                    lda    <U0010,U                                              * 0621 A6 C8 10       &H.
0624 C605             (../cmds/Login.asm):00506                    ldb    #5                                                    * 0624 C6 05          F.
0626 3440             (../cmds/Login.asm):00507                    pshs   U                                                     * 0626 34 40          4@
0628 103F8D           (../cmds/Login.asm):00508                    os9    I$GetStt                                              * 0628 10 3F 8D       .?.
062B 10250172         (../cmds/Login.asm):00509                    lbcs   L07A1                                                 * 062B 10 25 01 72    .%.r
062F 1F30             (../cmds/Login.asm):00510                    tfr    U,D                                                   * 062F 1F 30          .0
0631 3540             (../cmds/Login.asm):00511                    puls   U                                                     * 0631 35 40          5@
0633 AFC81F           (../cmds/Login.asm):00512                    stx    <U001F,U                                              * 0633 AF C8 1F       /H.
0636 EDC821           (../cmds/Login.asm):00513                    std    <U0021,U                                              * 0636 ED C8 21       mH!
0639 30C823           (../cmds/Login.asm):00514                    leax   <U0023,U                                              * 0639 30 C8 23       0H#
063C 108E0020         (../cmds/Login.asm):00515                    ldy    #32                                                   * 063C 10 8E 00 20    ...
0640 A6C810           (../cmds/Login.asm):00516                    lda    <U0010,U                                              * 0640 A6 C8 10       &H.
0643 103F8A           (../cmds/Login.asm):00517                    os9    I$Write                                               * 0643 10 3F 8A       .?.
0646 10250157         (../cmds/Login.asm):00518                    lbcs   L07A1                                                 * 0646 10 25 01 57    .%.W
064A 103F8F           (../cmds/Login.asm):00519                    os9    I$Close                                               * 064A 10 3F 8F       .?.
064D 3440             (../cmds/Login.asm):00520         L064D      pshs   U                                                     * 064D 34 40          4@
064F E6C817           (../cmds/Login.asm):00521                    ldb    <U0017,U                                              * 064F E6 C8 17       fH.
0652 4F               (../cmds/Login.asm):00522                    clra                                                         * 0652 4F             O
0653 1F02             (../cmds/Login.asm):00523                    tfr    D,Y                                                   * 0653 1F 02          ..
0655 308DFA5F         (../cmds/Login.asm):00524                    leax   >L00B8,PC                                             * 0655 30 8D FA 5F    0.z_
0659 33C90389         (../cmds/Login.asm):00525                    leau   >U0389,U                                              * 0659 33 C9 03 89    3I..
065D 8611             (../cmds/Login.asm):00526                    lda    #17                                                   * 065D 86 11          ..
065F C603             (../cmds/Login.asm):00527                    ldb    #3                                                    * 065F C6 03          F.
0661 103F03           (../cmds/Login.asm):00528                    os9    F$Fork                                                * 0661 10 3F 03       .?.
0664 10250139         (../cmds/Login.asm):00529                    lbcs   L07A1                                                 * 0664 10 25 01 39    .%.9
0668 103F04           (../cmds/Login.asm):00530                    os9    F$Wait                                                * 0668 10 3F 04       .?.
066B 160063           (../cmds/Login.asm):00531                    lbra   L06D1                                                 * 066B 16 00 63       ..c
066E 30C849           (../cmds/Login.asm):00532         L066E      leax   <U0049,U                                              * 066E 30 C8 49       0HI
0671 4F               (../cmds/Login.asm):00533                    clra                                                         * 0671 4F             O
0672 5F               (../cmds/Login.asm):00534                    clrb                                                         * 0672 5F             _
0673 103F8D           (../cmds/Login.asm):00535                    os9    I$GetStt                                              * 0673 10 3F 8D       .?.
0676 3088E0           (../cmds/Login.asm):00536                    leax   -$20,X                                                * 0676 30 88 E0       0.`
0679 6F8824           (../cmds/Login.asm):00537                    clr    <$0024,X                                              * 0679 6F 88 24       o.$
067C 30C849           (../cmds/Login.asm):00538                    leax   <U0049,U                                              * 067C 30 C8 49       0HI
067F 4F               (../cmds/Login.asm):00539                    clra                                                         * 067F 4F             O
0680 5F               (../cmds/Login.asm):00540                    clrb                                                         * 0680 5F             _
0681 103F8E           (../cmds/Login.asm):00541                    os9    I$SetStt                                              * 0681 10 3F 8E       .?.
0684 39               (../cmds/Login.asm):00542                    rts                                                          * 0684 39             9
0685 30C849           (../cmds/Login.asm):00543         L0685      leax   <U0049,U                                              * 0685 30 C8 49       0HI
0688 4F               (../cmds/Login.asm):00544                    clra                                                         * 0688 4F             O
0689 5F               (../cmds/Login.asm):00545                    clrb                                                         * 0689 5F             _
068A 103F8D           (../cmds/Login.asm):00546                    os9    I$GetStt                                              * 068A 10 3F 8D       .?.
068D 3088E0           (../cmds/Login.asm):00547                    leax   -$20,X                                                * 068D 30 88 E0       0.`
0690 8601             (../cmds/Login.asm):00548                    lda    #1                                                    * 0690 86 01          ..
0692 A78824           (../cmds/Login.asm):00549                    sta    <$0024,X                                              * 0692 A7 88 24       '.$
0695 30C849           (../cmds/Login.asm):00550                    leax   <U0049,U                                              * 0695 30 C8 49       0HI
0698 4F               (../cmds/Login.asm):00551                    clra                                                         * 0698 4F             O
0699 5F               (../cmds/Login.asm):00552                    clrb                                                         * 0699 5F             _
069A 103F8E           (../cmds/Login.asm):00553                    os9    I$SetStt                                              * 069A 10 3F 8E       .?.
069D 39               (../cmds/Login.asm):00554                    rts                                                          * 069D 39             9
069E 3540             (../cmds/Login.asm):00555         L069E      puls   U                                                     * 069E 35 40          5@
06A0 108E0000         (../cmds/Login.asm):00556                    ldy    #0                                                    * 06A0 10 8E 00 00    ....
06A4 103F1C           (../cmds/Login.asm):00557                    os9    F$SUser                                               * 06A4 10 3F 1C       .?.
06A7 308DFB54         (../cmds/Login.asm):00558                    leax   >L01FF,PC                                             * 06A7 30 8D FB 54    0.{T
06AB 8601             (../cmds/Login.asm):00559                    lda    #1                                                    * 06AB 86 01          ..
06AD 103F84           (../cmds/Login.asm):00560                    os9    I$Open                                                * 06AD 10 3F 84       .?.
06B0 251B             (../cmds/Login.asm):00561                    bcs    L06CD                                                 * 06B0 25 1B          %.
06B2 A742             (../cmds/Login.asm):00562                    sta    U0002,U                                               * 06B2 A7 42          'B
06B4 30C869           (../cmds/Login.asm):00563         L06B4      leax   <U0069,U                                              * 06B4 30 C8 69       0Hi
06B7 A642             (../cmds/Login.asm):00564                    lda    U0002,U                                               * 06B7 A6 42          &B
06B9 108E00C8         (../cmds/Login.asm):00565                    ldy    #200                                                  * 06B9 10 8E 00 C8    ...H
06BD 103F8B           (../cmds/Login.asm):00566                    os9    I$ReadLn                                              * 06BD 10 3F 8B       .?.
06C0 250B             (../cmds/Login.asm):00567                    bcs    L06CD                                                 * 06C0 25 0B          %.
06C2 8601             (../cmds/Login.asm):00568                    lda    #1                                                    * 06C2 86 01          ..
06C4 108E00C8         (../cmds/Login.asm):00569                    ldy    #200                                                  * 06C4 10 8E 00 C8    ...H
06C8 103F8C           (../cmds/Login.asm):00570                    os9    I$WritLn                                              * 06C8 10 3F 8C       .?.
06CB 20E7             (../cmds/Login.asm):00571                    bra    L06B4                                                 * 06CB 20 E7           g
06CD 5F               (../cmds/Login.asm):00572         L06CD      clrb                                                         * 06CD 5F             _
06CE 103F06           (../cmds/Login.asm):00573                    os9    F$Exit                                                * 06CE 10 3F 06       .?.
06D1 3540             (../cmds/Login.asm):00574         L06D1      puls   U                                                     * 06D1 35 40          5@
06D3 108E0000         (../cmds/Login.asm):00575                    ldy    #0                                                    * 06D3 10 8E 00 00    ....
06D7 103F1C           (../cmds/Login.asm):00576                    os9    F$SUser                                               * 06D7 10 3F 1C       .?.
06DA 308DFB21         (../cmds/Login.asm):00577                    leax   >L01FF,PC                                             * 06DA 30 8D FB 21    0.{!
06DE 8601             (../cmds/Login.asm):00578                    lda    #1                                                    * 06DE 86 01          ..
06E0 103F84           (../cmds/Login.asm):00579                    os9    I$Open                                                * 06E0 10 3F 84       .?.
06E3 251B             (../cmds/Login.asm):00580                    bcs    L0700                                                 * 06E3 25 1B          %.
06E5 A742             (../cmds/Login.asm):00581                    sta    U0002,U                                               * 06E5 A7 42          'B
06E7 30C869           (../cmds/Login.asm):00582         L06E7      leax   <U0069,U                                              * 06E7 30 C8 69       0Hi
06EA A642             (../cmds/Login.asm):00583                    lda    U0002,U                                               * 06EA A6 42          &B
06EC 108E00C8         (../cmds/Login.asm):00584                    ldy    #200                                                  * 06EC 10 8E 00 C8    ...H
06F0 103F8B           (../cmds/Login.asm):00585                    os9    I$ReadLn                                              * 06F0 10 3F 8B       .?.
06F3 250B             (../cmds/Login.asm):00586                    bcs    L0700                                                 * 06F3 25 0B          %.
06F5 8601             (../cmds/Login.asm):00587                    lda    #1                                                    * 06F5 86 01          ..
06F7 108E00C8         (../cmds/Login.asm):00588                    ldy    #200                                                  * 06F7 10 8E 00 C8    ...H
06FB 103F8C           (../cmds/Login.asm):00589                    os9    I$WritLn                                              * 06FB 10 3F 8C       .?.
06FE 20E7             (../cmds/Login.asm):00590                    bra    L06E7                                                 * 06FE 20 E7           g
0700 C1D3             (../cmds/Login.asm):00591         L0700      cmpb   #211                                                  * 0700 C1 D3          AS
0702 1026009B         (../cmds/Login.asm):00592                    lbne   L07A1                                                 * 0702 10 26 00 9B    .&..
0706 308DFAFE         (../cmds/Login.asm):00593                    leax   >L0208,PC                                             * 0706 30 8D FA FE    0.z~
070A 8603             (../cmds/Login.asm):00594                    lda    #3                                                    * 070A 86 03          ..
070C 103F84           (../cmds/Login.asm):00595                    os9    I$Open                                                * 070C 10 3F 84       .?.
070F A7C810           (../cmds/Login.asm):00596                    sta    <U0010,U                                              * 070F A7 C8 10       'H.
0712 1025008B         (../cmds/Login.asm):00597                    lbcs   L07A1                                                 * 0712 10 25 00 8B    .%..
0716 3440             (../cmds/Login.asm):00598                    pshs   U                                                     * 0716 34 40          4@
0718 AEC81F           (../cmds/Login.asm):00599                    ldx    <U001F,U                                              * 0718 AE C8 1F       .H.
071B EEC821           (../cmds/Login.asm):00600                    ldu    <U0021,U                                              * 071B EE C8 21       nH!
071E 103F88           (../cmds/Login.asm):00601                    os9    I$Seek                                                * 071E 10 3F 88       .?.
0721 3540             (../cmds/Login.asm):00602                    puls   U                                                     * 0721 35 40          5@
0723 30C823           (../cmds/Login.asm):00603                    leax   <U0023,U                                              * 0723 30 C8 23       0H#
0726 108E0020         (../cmds/Login.asm):00604                    ldy    #32                                                   * 0726 10 8E 00 20    ...
072A A6C810           (../cmds/Login.asm):00605                    lda    <U0010,U                                              * 072A A6 C8 10       &H.
072D 103F89           (../cmds/Login.asm):00606                    os9    I$Read                                                * 072D 10 3F 89       .?.
0730 30C835           (../cmds/Login.asm):00607                    leax   <U0035,U                                              * 0730 30 C8 35       0H5
0733 103F15           (../cmds/Login.asm):00608                    os9    F$Time                                                * 0733 10 3F 15       .?.
0736 ECC81B           (../cmds/Login.asm):00609                    ldd    <U001B,U                                              * 0736 EC C8 1B       lH.
0739 10830000         (../cmds/Login.asm):00610                    cmpd   #0                                                    * 0739 10 83 00 00    ....
073D 2742             (../cmds/Login.asm):00611                    beq    L0781                                                 * 073D 27 42          'B
073F A6C827           (../cmds/Login.asm):00612                    lda    <U0027,U                                              * 073F A6 C8 27       &H'
0742 A1C835           (../cmds/Login.asm):00613                    cmpa   <U0035,U                                              * 0742 A1 C8 35       !H5
0745 2634             (../cmds/Login.asm):00614                    bne    L077B                                                 * 0745 26 34          &4
0747 ECC828           (../cmds/Login.asm):00615                    ldd    <U0028,U                                              * 0747 EC C8 28       lH(
074A 10A3C836         (../cmds/Login.asm):00616                    cmpd   <U0036,U                                              * 074A 10 A3 C8 36    .#H6
074E 262B             (../cmds/Login.asm):00617                    bne    L077B                                                 * 074E 26 2B          &+
0750 A6C838           (../cmds/Login.asm):00618                    lda    <U0038,U                                              * 0750 A6 C8 38       &H8
0753 A0C82A           (../cmds/Login.asm):00619                    suba   <U002A,U                                              * 0753 A0 C8 2A        H*
0756 C63C             (../cmds/Login.asm):00620                    ldb    #60                                                   * 0756 C6 3C          F<
0758 3D               (../cmds/Login.asm):00621                    mul                                                          * 0758 3D             =
0759 EDC81B           (../cmds/Login.asm):00622                    std    <U001B,U                                              * 0759 ED C8 1B       mH.
075C A6C839           (../cmds/Login.asm):00623                    lda    <U0039,U                                              * 075C A6 C8 39       &H9
075F A0C82B           (../cmds/Login.asm):00624                    suba   <U002B,U                                              * 075F A0 C8 2B        H+
0762 1F89             (../cmds/Login.asm):00625                    tfr    A,B                                                   * 0762 1F 89          ..
0764 1D               (../cmds/Login.asm):00626                    sex                                                          * 0764 1D             .
0765 E3C81B           (../cmds/Login.asm):00627                    addd   <U001B,U                                              * 0765 E3 C8 1B       cH.
0768 EDC81B           (../cmds/Login.asm):00628                    std    <U001B,U                                              * 0768 ED C8 1B       mH.
076B ECC83B           (../cmds/Login.asm):00629                    ldd    <U003B,U                                              * 076B EC C8 3B       lH;
076E A3C81B           (../cmds/Login.asm):00630                    subd   <U001B,U                                              * 076E A3 C8 1B       #H.
0771 2E03             (../cmds/Login.asm):00631                    bgt    L0776                                                 * 0771 2E 03          ..
0773 CC0001           (../cmds/Login.asm):00632                    ldd    #1                                                    * 0773 CC 00 01       L..
0776 EDC83B           (../cmds/Login.asm):00633         L0776      std    <U003B,U                                              * 0776 ED C8 3B       mH;
0779 2006             (../cmds/Login.asm):00634                    bra    L0781                                                 * 0779 20 06           .
077B ECC81B           (../cmds/Login.asm):00635         L077B      ldd    <U001B,U                                              * 077B EC C8 1B       lH.
077E EDC83B           (../cmds/Login.asm):00636                    std    <U003B,U                                              * 077E ED C8 3B       mH;
0781 A6C810           (../cmds/Login.asm):00637         L0781      lda    <U0010,U                                              * 0781 A6 C8 10       &H.
0784 3440             (../cmds/Login.asm):00638                    pshs   U                                                     * 0784 34 40          4@
0786 AEC81F           (../cmds/Login.asm):00639                    ldx    <U001F,U                                              * 0786 AE C8 1F       .H.
0789 EEC821           (../cmds/Login.asm):00640                    ldu    <U0021,U                                              * 0789 EE C8 21       nH!
078C 103F88           (../cmds/Login.asm):00641                    os9    I$Seek                                                * 078C 10 3F 88       .?.
078F 3540             (../cmds/Login.asm):00642                    puls   U                                                     * 078F 35 40          5@
0791 30C823           (../cmds/Login.asm):00643                    leax   <U0023,U                                              * 0791 30 C8 23       0H#
0794 108E0020         (../cmds/Login.asm):00644                    ldy    #32                                                   * 0794 10 8E 00 20    ...
0798 A6C810           (../cmds/Login.asm):00645                    lda    <U0010,U                                              * 0798 A6 C8 10       &H.
079B 103F8A           (../cmds/Login.asm):00646                    os9    I$Write                                               * 079B 10 3F 8A       .?.
079E 2501             (../cmds/Login.asm):00647                    bcs    L07A1                                                 * 079E 25 01          %.
07A0 5F               (../cmds/Login.asm):00648                    clrb                                                         * 07A0 5F             _
07A1 103F06           (../cmds/Login.asm):00649         L07A1      os9    F$Exit                                                * 07A1 10 3F 06       .?.
07A4 308DFA10         (../cmds/Login.asm):00650         L07A4      leax   >L01B8,PC                                             * 07A4 30 8D FA 10    0.z.
07A8 8603             (../cmds/Login.asm):00651                    lda    #3                                                    * 07A8 86 03          ..
07AA 103F84           (../cmds/Login.asm):00652                    os9    I$Open                                                * 07AA 10 3F 84       .?.
07AD 2427             (../cmds/Login.asm):00653                    bcc    L07D6                                                 * 07AD 24 27          $'
07AF C1D8             (../cmds/Login.asm):00654                    cmpb   #216                                                  * 07AF C1 D8          AX
07B1 1026FFEC         (../cmds/Login.asm):00655                    lbne   L07A1                                                 * 07B1 10 26 FF EC    .&.l
07B5 308DF9FF         (../cmds/Login.asm):00656                    leax   >L01B8,PC                                             * 07B5 30 8D F9 FF    0.y.
07B9 8603             (../cmds/Login.asm):00657                    lda    #3                                                    * 07B9 86 03          ..
07BB C60B             (../cmds/Login.asm):00658                    ldb    #11                                                   * 07BB C6 0B          F.
07BD 103F83           (../cmds/Login.asm):00659                    os9    I$Create                                              * 07BD 10 3F 83       .?.
07C0 308DF9FC         (../cmds/Login.asm):00660                    leax   >L01C0,PC                                             * 07C0 30 8D F9 FC    0.y|
07C4 108E00C8         (../cmds/Login.asm):00661                    ldy    #200                                                  * 07C4 10 8E 00 C8    ...H
07C8 103F8C           (../cmds/Login.asm):00662                    os9    I$WritLn                                              * 07C8 10 3F 8C       .?.
07CB 308DFA0E         (../cmds/Login.asm):00663                    leax   >L01DD,PC                                             * 07CB 30 8D FA 0E    0.z.
07CF 108E00C8         (../cmds/Login.asm):00664                    ldy    #200                                                  * 07CF 10 8E 00 C8    ...H
07D3 103F8C           (../cmds/Login.asm):00665                    os9    I$WritLn                                              * 07D3 10 3F 8C       .?.
07D6 A746             (../cmds/Login.asm):00666         L07D6      sta    U0006,U                                               * 07D6 A7 46          'F
07D8 3440             (../cmds/Login.asm):00667                    pshs   U                                                     * 07D8 34 40          4@
07DA C602             (../cmds/Login.asm):00668                    ldb    #2                                                    * 07DA C6 02          F.
07DC 103F8D           (../cmds/Login.asm):00669                    os9    I$GetStt                                              * 07DC 10 3F 8D       .?.
07DF 103F88           (../cmds/Login.asm):00670                    os9    I$Seek                                                * 07DF 10 3F 88       .?.
07E2 3540             (../cmds/Login.asm):00671                    puls   U                                                     * 07E2 35 40          5@
07E4 30C90131         (../cmds/Login.asm):00672                    leax   >U0131,U                                              * 07E4 30 C9 01 31    0I.1
07E8 10AEC819         (../cmds/Login.asm):00673                    ldy    <U0019,U                                              * 07E8 10 AE C8 19    ..H.
07EC 313F             (../cmds/Login.asm):00674                    leay   -$01,Y                                                * 07EC 31 3F          1?
07EE 103F8A           (../cmds/Login.asm):00675                    os9    I$Write                                               * 07EE 10 3F 8A       .?.
07F1 10AFC815         (../cmds/Login.asm):00676                    sty    <U0015,U                                              * 07F1 10 AF C8 15    ./H.
07F5 CC0018           (../cmds/Login.asm):00677                    ldd    #24                                                   * 07F5 CC 00 18       L..
07F8 A3C815           (../cmds/Login.asm):00678                    subd   <U0015,U                                              * 07F8 A3 C8 15       #H.
07FB 2D0B             (../cmds/Login.asm):00679                    blt    L0808                                                 * 07FB 2D 0B          -.
07FD 1F02             (../cmds/Login.asm):00680                    tfr    D,Y                                                   * 07FD 1F 02          ..
07FF 308DF92C         (../cmds/Login.asm):00681                    leax   >L012F,PC                                             * 07FF 30 8D F9 2C    0.y,
0803 A646             (../cmds/Login.asm):00682                    lda    U0006,U                                               * 0803 A6 46          &F
0805 103F8A           (../cmds/Login.asm):00683                    os9    I$Write                                               * 0805 10 3F 8A       .?.
0808 30C843           (../cmds/Login.asm):00684         L0808      leax   <U0043,U                                              * 0808 30 C8 43       0HC
080B 103F15           (../cmds/Login.asm):00685                    os9    F$Time                                                * 080B 10 3F 15       .?.
080E 8D04             (../cmds/Login.asm):00686                    bsr    L0814                                                 * 080E 8D 04          ..
0810 103F8F           (../cmds/Login.asm):00687                    os9    I$Close                                               * 0810 10 3F 8F       .?.
0813 39               (../cmds/Login.asm):00688                    rts                                                          * 0813 39             9
0814 A6C846           (../cmds/Login.asm):00689         L0814      lda    <U0046,U                                              * 0814 A6 C8 46       &HF
0817 8D32             (../cmds/Login.asm):00690                    bsr    L084B                                                 * 0817 8D 32          .2
0819 308DF939         (../cmds/Login.asm):00691                    leax   >L0156,PC                                             * 0819 30 8D F9 39    0.y9
081D 108E0001         (../cmds/Login.asm):00692                    ldy    #1                                                    * 081D 10 8E 00 01    ....
0821 A646             (../cmds/Login.asm):00693                    lda    U0006,U                                               * 0821 A6 46          &F
0823 103F8A           (../cmds/Login.asm):00694                    os9    I$Write                                               * 0823 10 3F 8A       .?.
0826 A6C847           (../cmds/Login.asm):00695                    lda    <U0047,U                                              * 0826 A6 C8 47       &HG
0829 8D20             (../cmds/Login.asm):00696                    bsr    L084B                                                 * 0829 8D 20          .
082B 308DF927         (../cmds/Login.asm):00697                    leax   >L0156,PC                                             * 082B 30 8D F9 27    0.y'
082F 108E0001         (../cmds/Login.asm):00698                    ldy    #1                                                    * 082F 10 8E 00 01    ....
0833 A646             (../cmds/Login.asm):00699                    lda    U0006,U                                               * 0833 A6 46          &F
0835 103F8A           (../cmds/Login.asm):00700                    os9    I$Write                                               * 0835 10 3F 8A       .?.
0838 A6C848           (../cmds/Login.asm):00701                    lda    <U0048,U                                              * 0838 A6 C8 48       &HH
083B 8D0E             (../cmds/Login.asm):00702                    bsr    L084B                                                 * 083B 8D 0E          ..
083D 308DF8E5         (../cmds/Login.asm):00703                    leax   >L0126,PC                                             * 083D 30 8D F8 E5    0.xe
0841 108E0001         (../cmds/Login.asm):00704                    ldy    #1                                                    * 0841 10 8E 00 01    ....
0845 A646             (../cmds/Login.asm):00705                    lda    U0006,U                                               * 0845 A6 46          &F
0847 103F8C           (../cmds/Login.asm):00706                    os9    I$WritLn                                              * 0847 10 3F 8C       .?.
084A 39               (../cmds/Login.asm):00707                    rts                                                          * 084A 39             9
084B 5F               (../cmds/Login.asm):00708         L084B      clrb                                                         * 084B 5F             _
084C 810A             (../cmds/Login.asm):00709         L084C      cmpa   #10                                                   * 084C 81 0A          ..
084E 2D05             (../cmds/Login.asm):00710                    blt    L0855                                                 * 084E 2D 05          -.
0850 5C               (../cmds/Login.asm):00711                    incb                                                         * 0850 5C             \
0851 800A             (../cmds/Login.asm):00712                    suba   #10                                                   * 0851 80 0A          ..
0853 20F7             (../cmds/Login.asm):00713                    bra    L084C                                                 * 0853 20 F7           w
0855 CB30             (../cmds/Login.asm):00714         L0855      addb   #48                                                   * 0855 CB 30          K0
0857 E74E             (../cmds/Login.asm):00715                    stb    U000E,U                                               * 0857 E7 4E          gN
0859 8B30             (../cmds/Login.asm):00716                    adda   #48                                                   * 0859 8B 30          .0
085B A74F             (../cmds/Login.asm):00717                    sta    U000F,U                                               * 085B A7 4F          'O
085D 304E             (../cmds/Login.asm):00718                    leax   U000E,U                                               * 085D 30 4E          0N
085F 108E0002         (../cmds/Login.asm):00719                    ldy    #2                                                    * 085F 10 8E 00 02    ....
0863 A646             (../cmds/Login.asm):00720                    lda    U0006,U                                               * 0863 A6 46          &F
0865 103F8A           (../cmds/Login.asm):00721                    os9    I$Write                                               * 0865 10 3F 8A       .?.
0868 39               (../cmds/Login.asm):00722                    rts                                                          * 0868 39             9
0869 3410             (../cmds/Login.asm):00723         L0869      pshs   X                                                     * 0869 34 10          4.
086B A680             (../cmds/Login.asm):00724         L086B      lda    ,X+                                                   * 086B A6 80          &.
086D 810D             (../cmds/Login.asm):00725                    cmpa   #13                                                   * 086D 81 0D          ..
086F 270A             (../cmds/Login.asm):00726                    beq    L087B                                                 * 086F 27 0A          '.
0871 815A             (../cmds/Login.asm):00727                    cmpa   #90                                                   * 0871 81 5A          .Z
0873 23F6             (../cmds/Login.asm):00728                    bls    L086B                                                 * 0873 23 F6          #v
0875 84DF             (../cmds/Login.asm):00729                    anda   #223                                                  * 0875 84 DF          ._
0877 A71F             (../cmds/Login.asm):00730                    sta    -$01,X                                                * 0877 A7 1F          '.
0879 20F0             (../cmds/Login.asm):00731                    bra    L086B                                                 * 0879 20 F0           p
087B 3590             (../cmds/Login.asm):00732         L087B      puls   PC,X                                                  * 087B 35 90          5.
                      (../cmds/Login.asm):00733         
087D 7694FE           (../cmds/Login.asm):00734                    emod
     0880             (../cmds/Login.asm):00735         eom        equ    *
                      (../cmds/Login.asm):00736                    end
