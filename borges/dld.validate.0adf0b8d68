                      (../cmds/DLD.valid):00001                    nam    DLD.validate
                      (../cmds/DLD.valid):00002                    ttl    program module
                      (../cmds/DLD.valid):00003         
                      (../cmds/DLD.valid):00004                    ifp1
                      (../cmds/DLD.valid):00005                    use    defsfile
     0002             (         defsfile):00001         Level    equ   2
                      (         defsfile):00002                  use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                  use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         defsfile):00004                  use   rbf.d   
                      (            rbf.d):00001                        IFNE      RBF.D-1
                      (            rbf.d):00002         
     0001             (            rbf.d):00003         RBF.D          SET       1
                      (            rbf.d):00004         
                      (            rbf.d):00005         ********************************************************************
                      (            rbf.d):00006         * rbf.d - Random Block File Manager Definitions
                      (            rbf.d):00007         *
                      (            rbf.d):00008         * $Id$
                      (            rbf.d):00009         *
                      (            rbf.d):00010         * RBF stands for 'Random Block Filemanager' and is a package of subroutines
                      (            rbf.d):00011         * that define the logical structure of a disk and allows access to the files
                      (            rbf.d):00012         * in that structure.
                      (            rbf.d):00013         *
                      (            rbf.d):00014         * The data structures in this file give RBF its 'personality' and are used
                      (            rbf.d):00015         * by RBF itself, as well as applications that will require disk I/O.
                      (            rbf.d):00016         *
                      (            rbf.d):00017         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            rbf.d):00018         * Comment
                      (            rbf.d):00019         * ------------------------------------------------------------------
                      (            rbf.d):00020         *          1982/07/13  Robert F. Doggett
                      (            rbf.d):00021         * PD.Exten added to path descriptor and PE Entries defined.
                      (            rbf.d):00022         *
                      (            rbf.d):00023         *          1982/07/15  Robert F. Doggett
                      (            rbf.d):00024         * V.FileHd inserted in driver static storage.
                      (            rbf.d):00025         *
                      (            rbf.d):00026         *          1982/09/10  WGP
                      (            rbf.d):00027         * Level One/Level Two condionals added.
                      (            rbf.d):00028         *
                      (            rbf.d):00029         *          1982/09/17  WGP
                      (            rbf.d):00030         *
                      (            rbf.d):00031         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00032         * PD.SLE renamed to PD.Creat.
                      (            rbf.d):00033         *
                      (            rbf.d):00034         *          1982/09/17  Robert F. Doggett
                      (            rbf.d):00035         * V.DiskID, V.BMapSz, V.MapSct added for smart multi-sector bitmap searching.
                      (            rbf.d):00036         *
                      (            rbf.d):00037         *          1982/09/20  Robert F. Doggett
                      (            rbf.d):00038         * Reserved areas added in static storage.
                      (            rbf.d):00039         
                      (            rbf.d):00040         *          1983/06/07  Robert F. Doggett
                      (            rbf.d):00041         * Added InDriver flag in PD.SMF.
                      (            rbf.d):00042         *
                      (            rbf.d):00043         *          1983/06/13  Robert F. Doggett
                      (            rbf.d):00044         * Added PE.Req tmp save for PE.Lock.
                      (            rbf.d):00045         *
                      (            rbf.d):00046         *          1983/08/08  Robert F. Doggett
                      (            rbf.d):00047         * Reserved PD.SToff for Japanese.
                      (            rbf.d):00048         *
                      (            rbf.d):00049         *          1983/11/19  Robert F. Doggett
                      (            rbf.d):00050         * Added V.ResBit in drive tables.
                      (            rbf.d):00051         *
                      (            rbf.d):00052         *          1983/12/12  Robert F. Doggett
                      (            rbf.d):00053         * Added PE.Prior to save process priority.
                      (            rbf.d):00054         *
                      (            rbf.d):00055         *          1983/12/13  Robert F. Doggett
                      (            rbf.d):00056         * Added BufBusy bit in state flag (PD.SMF).
                      (            rbf.d):00057         *
                      (            rbf.d):00058         *          1984/07/06  Mark G. Hawkins
                      (            rbf.d):00059         * Added Bit Definitions for DD.FMT.
                      (            rbf.d):00060         *
                      (            rbf.d):00061         *          1987/06/23  Kevin K. Darling
                      (            rbf.d):00062         * Updated with Dev Desc Info
                      (            rbf.d):00063         *
                      (            rbf.d):00064         *          2003/06/02  Boisy G. Pitre
                      (            rbf.d):00065         * Updated comments for clarity.
                      (            rbf.d):00066         * Added TYP.256-TYP.2048 definitions for future expansion.
                      (            rbf.d):00067         *
                      (            rbf.d):00068         *          2004/04/14  Boisy G. Pitre
                      (            rbf.d):00069         * Added new entries to device descriptor as per OS-9 Level One V2.00.00
                      (            rbf.d):00070         * addendum.  Pointed out by Rodney Hamilton.
                      (            rbf.d):00071         *
                      (            rbf.d):00072         *              2005/05/31  P.Harvey-Smith.
                      (            rbf.d):00073         * Added defines for bit 2 of IT.DNS, which the format command uses to 
                      (            rbf.d):00074         * determine if a drive should have it's track 0 as single or double density
                      (            rbf.d):00075         *
                      (            rbf.d):00076         *          2005/11/23  Robert Gault
                      (            rbf.d):00077         * Added IT.MPI giving it duplicate location with IT.TFM. This will not be
                      (            rbf.d):00078         * transferred to the path descriptor, thus the  equ *  rahter than  rmb 1.
                      (            rbf.d):00079         *
                      (            rbf.d):00080         *          2005/12/11  Boisy G. Pitre
                      (            rbf.d):00081         * Added IT.SOFF1-ITSOFF3 and IT.LLDRV for SuperDrivers.
                      (            rbf.d):00082         
                      (            rbf.d):00083                        NAM       rbf.d
                      (            rbf.d):00084                        TTL       Random Block File Manager Definitions
                      (            rbf.d):00085         
                      (            rbf.d):00086                        PAG       
                      (            rbf.d):00087         *******************************
                      (            rbf.d):00088         * RBF Device Descriptor Offsets
                      (            rbf.d):00089         *
                      (            rbf.d):00090         * These definitions are for RBF device descriptors.
                      (            rbf.d):00091         
                      (            rbf.d):00092                        ORG       M$DTyp
0012                  (            rbf.d):00093                        RMB       1                   Device type (DT.RBF)
0013                  (            rbf.d):00094         IT.DRV         RMB       1                   Drive number
0014                  (            rbf.d):00095         IT.STP         RMB       1                   Step rate
0015                  (            rbf.d):00096         IT.TYP         RMB       1                   Disk device type information
0016                  (            rbf.d):00097         IT.DNS         RMB       1                   Density capability
0017                  (            rbf.d):00098         IT.CYL         RMB       2                   Number of cylinders
0019                  (            rbf.d):00099         IT.SID         RMB       1                   Number of surfaces
001A                  (            rbf.d):00100         IT.VFY         RMB       1                   Verify disk writes (0 = verify, 1 = don't)
001B                  (            rbf.d):00101         IT.SCT         RMB       2                   Default sectors/track
001D                  (            rbf.d):00102         IT.T0S         RMB       2                   Default sectors/track for track 0 sector 0
001F                  (            rbf.d):00103         IT.ILV         RMB       1                   Sector interleave offset
0020                  (            rbf.d):00104         IT.SAS         RMB       1                   Segment allocation size
                      (            rbf.d):00105         * The following fields are from the OS-9 Level One V2.00.00 Addendum
0021                  (            rbf.d):00106         IT.TFM         RMB       1                   DMA Transfer Mode
0022                  (            rbf.d):00107         IT.Exten       RMB       2                   Path Extension (PE) for record locking
0024                  (            rbf.d):00108         IT.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
                      (            rbf.d):00109         * The following fields are not copied to the path descriptor
0025                  (            rbf.d):00110         IT.WPC         RMB       1                   Write precomp cyl/4 (HD)
0026                  (            rbf.d):00111         IT.OFS         RMB       2                   Starting cylinder offset (HD)
0028                  (            rbf.d):00112         IT.RWC         RMB       2                   Reduced write current cylinder (HD)
                      (            rbf.d):00113         * These fields have been added because of SuperDriver.  They probably
                      (            rbf.d):00114         * can be used in other drivers
                      (            rbf.d):00115                        ORG       IT.WPC
0025                  (            rbf.d):00116         IT.SOFF1       RMB       1
0026                  (            rbf.d):00117         IT.SOFF2       RMB       1
0027                  (            rbf.d):00118         IT.SOFF3       RMB       1
0028                  (            rbf.d):00119         IT.LLDRV       RMB       2
002A                  (            rbf.d):00120         IT.MPI         RMB       1
                      (            rbf.d):00121         
                      (            rbf.d):00122         
                      (            rbf.d):00123         * IT.TYP Definitions
                      (            rbf.d):00124         *
     0080             (            rbf.d):00125         TYP.HARD       EQU       %10000000           Hard disk
     0000             (            rbf.d):00126         TYP.FLP        EQU       %00000000           Floppy disk
     0040             (            rbf.d):00127         TYP.NSF        EQU       %01000000           Non-standard format
     0000             (            rbf.d):00128         TYP.SOF        EQU       %00000000           Standard NitrOS-9 format
                      (            rbf.d):00129         
                      (            rbf.d):00130         * IT.TYP bit definitions if bit 7 of IT.TYP is set (hard disk)
     0000             (            rbf.d):00131         TYPH.256       EQU       %00000000           256 byte sector media
     0001             (            rbf.d):00132         TYPH.512       EQU       %00000001           512 byte sector media
     0002             (            rbf.d):00133         TYPH.1024      EQU       %00000010           1024 byte sector media
     0003             (            rbf.d):00134         TYPH.2048      EQU       %00000011           2048 byte sector media
     0003             (            rbf.d):00135         TYPH.SSM       EQU       %00000011           Sector size mask
     000C             (            rbf.d):00136         TYPH.DRSV      EQU       %00001100           Driver-reserved bits
     0010             (            rbf.d):00137         TYPH.DSQ       EQU       %00010000           Drive size query flag
                      (            rbf.d):00138         
                      (            rbf.d):00139         * IT.TYP bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00140         TYP.5          EQU       %00000000           5" media
     0001             (            rbf.d):00141         TYP.3          EQU       %00000001           3.5" media
     0002             (            rbf.d):00142         TYP.SBO        EQU       %00000010           Sector base offset (clear = 0; sect = 1)
     0000             (            rbf.d):00143         TYP.256        EQU       %00000000           256 byte sector media
     0004             (            rbf.d):00144         TYP.512        EQU       %00000100           512 byte sector media
     0020             (            rbf.d):00145         TYP.CCF        EQU       %00100000           CoCo format
     0000             (            rbf.d):00146         TYP.NCCF       EQU       %00000000           Non-CoCo format
                      (            rbf.d):00147         
                      (            rbf.d):00148         * IT.DNS Definitions
                      (            rbf.d):00149         *
                      (            rbf.d):00150         
                      (            rbf.d):00151         * If bit 7 of IT.TYP is set, IT.DNS is driver-dependent
                      (            rbf.d):00152         
                      (            rbf.d):00153         * IT.DNS bit definitions if bit 7 of IT.TYP is clear (floppy disk)
     0000             (            rbf.d):00154         DNS.FM         EQU       %00000000           Single-density (FM)
     0001             (            rbf.d):00155         DNS.MFM        EQU       %00000001           Double-density (MFM)
     0000             (            rbf.d):00156         DNS.STD        EQU       %00000000           Single track distance (48/135 tpi)
     0002             (            rbf.d):00157         DNS.DTD        EQU       %00000010           Double track distance (96 tpi)
                      (            rbf.d):00158         
                      (            rbf.d):00159         * Added PHS,2005-05-31, as format seems to use these
     0000             (            rbf.d):00160         DNS.FM0        EQU       %00000000           Single density track 0
     0004             (            rbf.d):00161         DNS.MFM0       EQU       %00000100           Double density track 0
                      (            rbf.d):00162         
                      (            rbf.d):00163         * Floppy disk step rate definitions
     0000             (            rbf.d):00164         STP.30ms       EQU       0                   30ms step rate
     0001             (            rbf.d):00165         STP.20ms       EQU       1                   20ms step rate
     0002             (            rbf.d):00166         STP.12ms       EQU       2                   12ms step rate
     0003             (            rbf.d):00167         STP.6ms        EQU       3                   6ms step rate
                      (            rbf.d):00168         
                      (            rbf.d):00169                        PAG       
                      (            rbf.d):00170         *************************************
                      (            rbf.d):00171         * Random Block Path Descriptor Format
                      (            rbf.d):00172         *
                      (            rbf.d):00173         * A path descriptor is created for every new path that is open
                      (            rbf.d):00174         * via the I$Open system call (processed by IOMan).  Process
                      (            rbf.d):00175         * descriptors track state information of a path.
                      (            rbf.d):00176         *
                      (            rbf.d):00177                        ORG       PD.FST
000A                  (            rbf.d):00178         PD.SMF         RMB       1                   State flags
000B                  (            rbf.d):00179         PD.CP          RMB       4                   Current logical byte position
000F                  (            rbf.d):00180         PD.SIZ         RMB       4                   File size
0013                  (            rbf.d):00181         PD.SBL         RMB       3                   Segment beginning lsn
0016                  (            rbf.d):00182         PD.SBP         RMB       3                   Segment beginning psn
0019                  (            rbf.d):00183         PD.SSZ         RMB       3                   Segment size
001C                  (            rbf.d):00184         PD.DSK         RMB       2                   Disk id
001E                  (            rbf.d):00185         PD.DTB         RMB       2                   Drive table ptr
                      (            rbf.d):00186                        ORG       PD.OPT
0020                  (            rbf.d):00187                        RMB       1                   Device type
0021                  (            rbf.d):00188         PD.DRV         RMB       1                   Drive number
0022                  (            rbf.d):00189         PD.STP         RMB       1                   Step rate
0023                  (            rbf.d):00190         PD.TYP         RMB       1                   Disk device type (5" 8" other)
0024                  (            rbf.d):00191         PD.DNS         RMB       1                   Density capability
0025                  (            rbf.d):00192         PD.CYL         RMB       2                   Number of cylinders
0027                  (            rbf.d):00193         PD.SID         RMB       1                   Number of surfaces
0028                  (            rbf.d):00194         PD.VFY         RMB       1                   0=verify disk writes
0029                  (            rbf.d):00195         PD.SCT         RMB       2                   Default sectors/track
002B                  (            rbf.d):00196         PD.T0S         RMB       2                   Default sectors/track tr00,s0
002D                  (            rbf.d):00197         PD.ILV         RMB       1                   Sector interleave offset
002E                  (            rbf.d):00198         PD.SAS         RMB       1                   Segment allocation size
002F                  (            rbf.d):00199         PD.TFM         RMB       1                   DMA Transfer Mode
0030                  (            rbf.d):00200         PD.Exten       RMB       2                   Path Extension (PE) for record locking
0032                  (            rbf.d):00201         PD.SToff       RMB       1                   Sector/Track offsets (for "foreign" disk formats)
0033                  (            rbf.d):00202         PD.ATT         RMB       1                   File attributes
0034                  (            rbf.d):00203         PD.FD          RMB       3                   File descriptor psn
0037                  (            rbf.d):00204         PD.DFD         RMB       3                   Directory file descriptor psn
003A                  (            rbf.d):00205         PD.DCP         RMB       4                   File directory entry ptr
003E                  (            rbf.d):00206         PD.DVT         RMB       2                   User readable dev tbl ptr
                      (            rbf.d):00207         
                      (            rbf.d):00208         * State Flags
     0001             (            rbf.d):00209         BUFMOD         EQU       $01                 Buffer modified
     0002             (            rbf.d):00210         SINBUF         EQU       $02                 Sector in buffer
     0004             (            rbf.d):00211         FDBUF          EQU       $04                 File descriptor in buffer
                      (            rbf.d):00212         *EOFSEC equ $08 End of file sector
                      (            rbf.d):00213         *EOF equ $10 End of file
     0020             (            rbf.d):00214         InDriver       EQU       $20                 Currently in Disk Driver, or queued
     0040             (            rbf.d):00215         BufBusy        EQU       $40                 Buffer is currently busy
                      (            rbf.d):00216         
                      (            rbf.d):00217                        IFNE      Level-1
                      (            rbf.d):00218         ************************************
                      (            rbf.d):00219         * Random Block Path Extension Format
                      (            rbf.d):00220         *
                      (            rbf.d):00221         * RBF paths under Level Two have additional information that
                      (            rbf.d):00222         * is referenced by the path extension area.
                      (            rbf.d):00223         *
                      (            rbf.d):00224                        ORG       0
0000                  (            rbf.d):00225         PE.PE          RMB       1                   PE path number
0001                  (            rbf.d):00226         PE.PDptr       RMB       2                   Back ptr to this PE's Path Descriptor
0003                  (            rbf.d):00227         PE.NxFil       RMB       2                   Drive Open-File list ptr
0005                  (            rbf.d):00228         PE.Confl       RMB       2                   Circular File Conflict list
0007                  (            rbf.d):00229         PE.Lock        RMB       1                   Path lockout status
0008                  (            rbf.d):00230         PE.LoLck       RMB       4                   Low Locked Logical addr
000C                  (            rbf.d):00231         PE.HiLck       RMB       4                   High Locked Logical addr
0010                  (            rbf.d):00232         PE.Wait        RMB       2                   PE ptr to (next) locked-out PE
0012                  (            rbf.d):00233         PE.TmOut       RMB       2                   Max ticks to wait for locked segment
0014                  (            rbf.d):00234         PE.Owner       RMB       1                   Process ID of owner of locked segment
0015                  (            rbf.d):00235         PE.Req         RMB       1                   Temp for PE.Lock in GAIN when LockSeg fails
0016                  (            rbf.d):00236         PE.Prior       RMB       1                   Temp for process priority while in driver
0017                  (            rbf.d):00237         PE.SigSg       RMB       1                   Signal code to send
0018                  (            rbf.d):00238         PE.SigID       RMB       1                   Process ID to send the signal to
0019                  (            rbf.d):00239                        RMB       32-.                Reserved
0020                  (            rbf.d):00240         PE.FilNm       RMB       32                  Temp for filename during directory search
                      (            rbf.d):00241         
                      (            rbf.d):00242         * PE.Lock status codes
     0000             (            rbf.d):00243         Unlocked       EQU       0                   No portion of file is locked
     0001             (            rbf.d):00244         RcdLock        EQU       1                   Record from LoLck to HiLck locked
     0002             (            rbf.d):00245         FileLock       EQU       2                   Entire file locked
     0004             (            rbf.d):00246         EofLock        EQU       4                   End of file is locked
                      (            rbf.d):00247                        ENDC      
                      (            rbf.d):00248         
                      (            rbf.d):00249         
                      (            rbf.d):00250                        PAG       
                      (            rbf.d):00251         ***********************
                      (            rbf.d):00252         * LSN0 Disk Data Format
                      (            rbf.d):00253         *
                      (            rbf.d):00254         * Logical Sector Number 0 is the first sector on an RBF formatted device
                      (            rbf.d):00255         * and contains information about the device's size and format.
                      (            rbf.d):00256         *
                      (            rbf.d):00257                        ORG       0
0000                  (            rbf.d):00258         DD.TOT         RMB       3                   Total number of sectors
0003                  (            rbf.d):00259         DD.TKS         RMB       1                   Track size in sectors
0004                  (            rbf.d):00260         DD.MAP         RMB       2                   Number of bytes in allocation bit map
0006                  (            rbf.d):00261         DD.BIT         RMB       2                   Number of sectors/bit
0008                  (            rbf.d):00262         DD.DIR         RMB       3                   Address of root directory fd
000B                  (            rbf.d):00263         DD.OWN         RMB       2                   Owner
000D                  (            rbf.d):00264         DD.ATT         RMB       1                   Attributes
000E                  (            rbf.d):00265         DD.DSK         RMB       2                   Disk ID
0010                  (            rbf.d):00266         DD.FMT         RMB       1                   Disk format; density/sides
0011                  (            rbf.d):00267         DD.SPT         RMB       2                   Sectors/track
0013                  (            rbf.d):00268         DD.RES         RMB       2                   Reserved for future use
     0015             (            rbf.d):00269         DD.SIZ         EQU       .                   Device descriptor minimum size
0015                  (            rbf.d):00270         DD.BT          RMB       3                   System bootstrap sector
0018                  (            rbf.d):00271         DD.BSZ         RMB       2                   Size of system bootstrap
001A                  (            rbf.d):00272         DD.DAT         RMB       5                   Creation date
001F                  (            rbf.d):00273         DD.NAM         RMB       32                  Volume name
003F                  (            rbf.d):00274         DD.OPT         RMB       32                  Option area
                      (            rbf.d):00275         
                      (            rbf.d):00276         *************************
                      (            rbf.d):00277         * 2012/11/09 Gene Heskett - Some additions for bootlink etc use.
                      (            rbf.d):00278                         ORG     $60                     More options from device descriptor
0060                  (            rbf.d):00279         VD.STP          RMB     1       This is for the /sh and /ih virtual disks in HDBDOS
0061                  (            rbf.d):00280         VD.OFS          RMB     3       This is DT.WPC and DT.OSF combined, might be more 
                      (            rbf.d):00281         
                      (            rbf.d):00282         * DD.FMT Bit Definitions - valid only if device is a floppy disk
     0001             (            rbf.d):00283         FMT.SIDE       EQU       %00000001           Single Sided=0, Double Sided=1
     0002             (            rbf.d):00284         FMT.DNS        EQU       %00000010           Single Density=0, Double Density=1
     0004             (            rbf.d):00285         FMT.TDNS       EQU       %00000100           Track Density: 48/135 TPI=0, 96 TPI=1
     0020             (            rbf.d):00286         FMT.T0DN       EQU       %00100000           Track 0 Density, see FMT.DNS
                      (            rbf.d):00287         
                      (            rbf.d):00288         
                      (            rbf.d):00289                        PAG       
                      (            rbf.d):00290         ************************
                      (            rbf.d):00291         * File Descriptor Format
                      (            rbf.d):00292         *
                      (            rbf.d):00293         * The file descriptor is a sector that is present for every file
                      (            rbf.d):00294         * on an RBF device.  It contains attributes, modification dates,
                      (            rbf.d):00295         * and segment information on a file.
                      (            rbf.d):00296         *
                      (            rbf.d):00297                        ORG       0
0000                  (            rbf.d):00298         FD.ATT         RMB       1                   Attributes
0001                  (            rbf.d):00299         FD.OWN         RMB       2                   Owner
0003                  (            rbf.d):00300         FD.DAT         RMB       5                   Date last modified
0008                  (            rbf.d):00301         FD.LNK         RMB       1                   Link count
0009                  (            rbf.d):00302         FD.SIZ         RMB       4                   File size
000D                  (            rbf.d):00303         FD.Creat       RMB       3                   File creation date (YY/MM/DD)
     0010             (            rbf.d):00304         FD.SEG         EQU       .                   Beginning of segment list
                      (            rbf.d):00305         * Segment List Entry Format
                      (            rbf.d):00306                        ORG       0
0000                  (            rbf.d):00307         FDSL.A         RMB       3                   Segment beginning physical sector number
0003                  (            rbf.d):00308         FDSL.B         RMB       2                   Segment size
     0005             (            rbf.d):00309         FDSL.S         EQU       .                   Segment list entry size
     00FB             (            rbf.d):00310         FD.LS1         EQU       FD.SEG+((256-FD.SEG)/FDSL.S-1)*FDSL.S
     00FA             (            rbf.d):00311         FD.LS2         EQU       (256/FDSL.S-1)*FDSL.S
     0010             (            rbf.d):00312         MINSEC         SET       16
                      (            rbf.d):00313         
                      (            rbf.d):00314         
                      (            rbf.d):00315                        PAG       
                      (            rbf.d):00316         ************************
                      (            rbf.d):00317         * Directory Entry Format
                      (            rbf.d):00318         *
                      (            rbf.d):00319         * Directory entries are part of a directory and define the name
                      (            rbf.d):00320         * of the file, as well as a pointer to its file descriptor.
                      (            rbf.d):00321         *
                      (            rbf.d):00322                        ORG       0
0000                  (            rbf.d):00323         DIR.NM         RMB       29                  File name
001D                  (            rbf.d):00324         DIR.FD         RMB       3                   File descriptor physical sector number
     0020             (            rbf.d):00325         DIR.SZ         EQU       .                   Directory record size
                      (            rbf.d):00326         
                      (            rbf.d):00327         
                      (            rbf.d):00328                        PAG       
                      (            rbf.d):00329         ********************
                      (            rbf.d):00330         * RBF Static Storage
                      (            rbf.d):00331         *
                      (            rbf.d):00332         * Overall Disk Static Storage
                      (            rbf.d):00333         *
                      (            rbf.d):00334         * Note:  This does not reserve any memory for drive tables.  Each
                      (            rbf.d):00335         *        driver is responsible for reserving sufficient memory for
                      (            rbf.d):00336         *        the appropriate number of tables.
                      (            rbf.d):00337         *
                      (            rbf.d):00338                        ORG       V.USER              Reserve required           ($06)
0006                  (            rbf.d):00339         V.NDRV         RMB       1                   Number of drives           ($07)
0007                  (            rbf.d):00340                        RMB       8                   reserved                   ($08)
     000F             (            rbf.d):00341         DRVBEG         EQU       .                   Beginning of drive tables  ($10)
                      (            rbf.d):00342         
                      (            rbf.d):00343         
                      (            rbf.d):00344                        PAG       
                      (            rbf.d):00345         ****************
                      (            rbf.d):00346         * Global Storage For Disk Drive Tables
                      (            rbf.d):00347         *
                      (            rbf.d):00348         * Each table contains the first 'DD.SIZ' bytes from
                      (            rbf.d):00349         * LSN 0, and the current track, stepping rate,
                      (            rbf.d):00350         * bitmap use flag, and disk type.
                      (            rbf.d):00351         *
                      (            rbf.d):00352                        ORG       0
0000                  (            rbf.d):00353                        RMB       DD.SIZ              Device descriptor, LSN 0
0015                  (            rbf.d):00354         V.TRAK         RMB       2                   Current track
0017                  (            rbf.d):00355         V.BMB          RMB       1                   Bit-map use flag
0018                  (            rbf.d):00356         V.FileHd       RMB       2                   Open file list for this drive
001A                  (            rbf.d):00357         V.DiskID       RMB       2                   Disk ID
001C                  (            rbf.d):00358         V.BMapSz       RMB       1                   Bitmap Size
001D                  (            rbf.d):00359         V.MapSct       RMB       1                   Lowest reasonable bitmap sector
001E                  (            rbf.d):00360         V.ResBit       RMB       1                   Reserved bitmap sector (for compaction)
001F                  (            rbf.d):00361         V.ScTkOf       RMB       1                   Sector/Track byte (Combined from descriptor)
0020                  (            rbf.d):00362         V.ScOfst       RMB       1                   Sector offset split from byte above
0021                  (            rbf.d):00363         V.TkOfst       RMB       1                   Track offset split from byte above
0022                  (            rbf.d):00364                        RMB       4                   Reserved
     0026             (            rbf.d):00365         DRVMEM         EQU       .
                      (            rbf.d):00366         
                      (            rbf.d):00367                        ENDC      
                      (            rbf.d):00368         
                      (../cmds/DLD.valid):00006                    endc
                      (../cmds/DLD.valid):00007         
     0011             (../cmds/DLD.valid):00008         tylg       set    Prgrm+Objct
     0081             (../cmds/DLD.valid):00009         atrv       set    ReEnt+rev
     0001             (../cmds/DLD.valid):00010         rev        set    $01
                      (../cmds/DLD.valid):00011         
0000 87CD0ADF000D1181 (../cmds/DLD.valid):00012                    mod    eom,name,tylg,atrv,start,size
     FD033D21D1
                      (../cmds/DLD.valid):00013         
0000.                 (../cmds/DLD.valid):00014         U0000      rmb    1
0001.                 (../cmds/DLD.valid):00015         U0001      rmb    1
0002.                 (../cmds/DLD.valid):00016         U0002      rmb    1
0003.                 (../cmds/DLD.valid):00017         U0003      rmb    1
0004.                 (../cmds/DLD.valid):00018         U0004      rmb    1
0005.                 (../cmds/DLD.valid):00019         U0005      rmb    1
0006.                 (../cmds/DLD.valid):00020         U0006      rmb    1
0007.                 (../cmds/DLD.valid):00021         U0007      rmb    1
0008.                 (../cmds/DLD.valid):00022         U0008      rmb    80
0058.                 (../cmds/DLD.valid):00023         U0058      rmb    32
0078.                 (../cmds/DLD.valid):00024         U0078      rmb    2
007A.                 (../cmds/DLD.valid):00025         U007A      rmb    2
007C.                 (../cmds/DLD.valid):00026         U007C      rmb    2
007E.                 (../cmds/DLD.valid):00027         U007E      rmb    2
0080.                 (../cmds/DLD.valid):00028         U0080      rmb    2
0082.                 (../cmds/DLD.valid):00029         U0082      rmb    2
0084.                 (../cmds/DLD.valid):00030         U0084      rmb    1
0085.                 (../cmds/DLD.valid):00031         U0085      rmb    1
0086.                 (../cmds/DLD.valid):00032         U0086      rmb    2
0088.                 (../cmds/DLD.valid):00033         U0088      rmb    1
0089.                 (../cmds/DLD.valid):00034         U0089      rmb    1
008A.                 (../cmds/DLD.valid):00035         U008A      rmb    2
008C.                 (../cmds/DLD.valid):00036         U008C      rmb    2
008E.                 (../cmds/DLD.valid):00037         U008E      rmb    3
0091.                 (../cmds/DLD.valid):00038         U0091      rmb    12
009D.                 (../cmds/DLD.valid):00039         U009D      rmb    2
009F.                 (../cmds/DLD.valid):00040         U009F      rmb    2
00A1.                 (../cmds/DLD.valid):00041         U00A1      rmb    27
00BC.                 (../cmds/DLD.valid):00042         U00BC      rmb    2
00BE.                 (../cmds/DLD.valid):00043         U00BE      rmb    2
00C0.                 (../cmds/DLD.valid):00044         U00C0      rmb    1
00C1.                 (../cmds/DLD.valid):00045         U00C1      rmb    64
0101.                 (../cmds/DLD.valid):00046         U0101      rmb    1
0102.                 (../cmds/DLD.valid):00047         U0102      rmb    8399
     21D1             (../cmds/DLD.valid):00048         size       equ    .
                      (../cmds/DLD.valid):00049         
000D 444C442E76616C69 (../cmds/DLD.valid):00050         name       fcs    /DLD.validate/                                            * 000D 44 4C 44 2E 76 61 6C 69 64 61 74 E5 DLD.validate
     646174E5
0019 436F707972696768 (../cmds/DLD.valid):00051                    fcc    "Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved" * 0019 43 6F 70 79 72 69 67 68 74 20 28 43 29 20 31 39 38 38 42 79 20 4B 65 69 74 68 20 41 6C 70 68 6F 6E 73 6F 4C 69 63 65 6E 63 65 64 20 74 6F 20 41 6C 70 68 61 20 53 6F 66 74 77 61 72 65 20 54 65 63 68 6E 6F 6C 6F 67 69 65 73 41 6C 6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64 Copyright (C) 1988By Keith AlphonsoLicenced to Alpha Software TechnologiesAll rights reserved
     7420284329203139
     38384279204B6569
     746820416C70686F
     6E736F4C6963656E
     63656420746F2041
     6C70686120536F66
     7477617265205465
     63686E6F6C6F6769
     6573416C6C207269
     6768747320726573
     6572766564
0076 EC               (../cmds/DLD.valid):00052                    fcb    $EC                                                   * 0076 EC             l
0077 E6               (../cmds/DLD.valid):00053                    fcb    $E6                                                   * 0077 E6             f
0078 EA               (../cmds/DLD.valid):00054                    fcb    $EA                                                   * 0078 EA             j
0079 F5               (../cmds/DLD.valid):00055                    fcb    $F5                                                   * 0079 F5             u
007A E9               (../cmds/DLD.valid):00056                    fcb    $E9                                                   * 007A E9             i
007B A0               (../cmds/DLD.valid):00057                    fcb    $A0                                                   * 007B A0
007C E2               (../cmds/DLD.valid):00058                    fcb    $E2                                                   * 007C E2             b
007D ED               (../cmds/DLD.valid):00059                    fcb    $ED                                                   * 007D ED             m
007E F1               (../cmds/DLD.valid):00060                    fcb    $F1                                                   * 007E F1             q
007F E9               (../cmds/DLD.valid):00061                    fcb    $E9                                                   * 007F E9             i
0080 F0               (../cmds/DLD.valid):00062                    fcb    $F0                                                   * 0080 F0             p
0081 EF               (../cmds/DLD.valid):00063                    fcb    $EF                                                   * 0081 EF             o
0082 F4               (../cmds/DLD.valid):00064                    fcb    $F4                                                   * 0082 F4             t
0083 F0               (../cmds/DLD.valid):00065                    fcb    $F0                                                   * 0083 F0             p
0084 0A               (../cmds/DLD.valid):00066         L0084      fcb    $0A                                                   * 0084 0A             .
0085 0A               (../cmds/DLD.valid):00067                    fcb    $0A                                                   * 0085 0A             .
0086 202020456E746572 (../cmds/DLD.valid):00068                    fcc    "   Enter long description now          (Blank line ends)" * 0086 20 20 20 45 6E 74 65 72 20 6C 6F 6E 67 20 64 65 73 63 72 69 70 74 69 6F 6E 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29    Enter long description now          (Blank line ends)
     206C6F6E67206465
     736372697074696F
     6E206E6F77202020
     2020202020202028
     426C616E6B206C69
     6E6520656E647329
00BE 0D               (../cmds/DLD.valid):00069                    fcb    $0D                                                   * 00BE 0D             .
00BF 2D2D2D2D2D2D2D2D (../cmds/DLD.valid):00070         L00BF      fcc    "----------------------------------------------------------------" * 00BF 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
00FF 0D               (../cmds/DLD.valid):00071                    fcb    $0D                                                   * 00FF 0D             .
0100 2020202020456E74 (../cmds/DLD.valid):00072         L0100      fcc    "     Enter file keywords now            (Blank line ends)" * 0100 20 20 20 20 20 45 6E 74 65 72 20 66 69 6C 65 20 6B 65 79 77 6F 72 64 73 20 6E 6F 77 20 20 20 20 20 20 20 20 20 20 20 20 28 42 6C 61 6E 6B 20 6C 69 6E 65 20 65 6E 64 73 29      Enter file keywords now            (Blank line ends)
     65722066696C6520
     6B6579776F726473
     206E6F7720202020
     2020202020202020
     28426C616E6B206C
     696E6520656E6473
     29
0139 0D               (../cmds/DLD.valid):00073                    fcb    $0D                                                   * 0139 0D             .
013A 456E746572206B65 (../cmds/DLD.valid):00074         L013A      fcc    "Enter keyword:"                                      * 013A 45 6E 74 65 72 20 6B 65 79 77 6F 72 64 3A Enter keyword:
     79776F72643A
0148 0A               (../cmds/DLD.valid):00075         L0148      fcb    $0A                                                   * 0148 0A             .
0149 5B445D6F6E65205B (../cmds/DLD.valid):00076                    fcc    "[D]one [E]dit [C]ontinue or [L]ist"                  * 0149 5B 44 5D 6F 6E 65 20 5B 45 5D 64 69 74 20 5B 43 5D 6F 6E 74 69 6E 75 65 20 6F 72 20 5B 4C 5D 69 73 74 [D]one [E]dit [C]ontinue or [L]ist
     455D646974205B43
     5D6F6E74696E7565
     206F72205B4C5D69
     7374
016B 0D               (../cmds/DLD.valid):00077                    fcb    $0D                                                   * 016B 0D             .
016C 456E746572206C69 (../cmds/DLD.valid):00078         L016C      fcc    "Enter line #"                                        * 016C 45 6E 74 65 72 20 6C 69 6E 65 20 23 Enter line #
     6E652023
0178 0D               (../cmds/DLD.valid):00079                    fcb    $0D                                                   * 0178 0D             .
0179 3E               (../cmds/DLD.valid):00080         L0179      fcb    $3E                                                   * 0179 3E             >
017A 0A               (../cmds/DLD.valid):00081         L017A      fcb    $0A                                                   * 017A 0A             .
017B 0D               (../cmds/DLD.valid):00082                    fcb    $0D                                                   * 017B 0D             .
017C 0A               (../cmds/DLD.valid):00083         L017C      fcb    $0A                                                   * 017C 0A             .
017D 50726F6772616D73 (../cmds/DLD.valid):00084                    fcc    "Programs to be validated"                            * 017D 50 72 6F 67 72 61 6D 73 20 74 6F 20 62 65 20 76 61 6C 69 64 61 74 65 64 Programs to be validated
     20746F2062652076
     616C696461746564
0195 0D               (../cmds/DLD.valid):00085                    fcb    $0D                                                   * 0195 0D             .
0196 46696C65206E616D (../cmds/DLD.valid):00086         L0196      fcc    "File name      Description"                          * 0196 46 69 6C 65 20 6E 61 6D 65 20 20 20 20 20 20 44 65 73 63 72 69 70 74 69 6F 6E File name      Description
     6520202020202044
     6573637269707469
     6F6E
01B0 0D               (../cmds/DLD.valid):00087                    fcb    $0D                                                   * 01B0 0D             .
01B1 2D2D2D2D2D2D2D2D (../cmds/DLD.valid):00088         L01B1      fcc    "----------------------------------------------------------------------------" * 01B1 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D ----------------------------------------------------------------------------
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D
01FD 0D               (../cmds/DLD.valid):00089                    fcb    $0D                                                   * 01FD 0D             .
01FE 5B445D6F776E6C6F (../cmds/DLD.valid):00090         L01FE      fcc    "[D]ownload, [V]alidate [K]ill or [N]ext:"            * 01FE 5B 44 5D 6F 77 6E 6C 6F 61 64 2C 20 5B 56 5D 61 6C 69 64 61 74 65 20 5B 4B 5D 69 6C 6C 20 6F 72 20 5B 4E 5D 65 78 74 3A [D]ownload, [V]alidate [K]ill or [N]ext:
     61642C205B565D61
     6C6964617465205B
     4B5D696C6C206F72
     205B4E5D6578743A
0226 444C442E6C7374   (../cmds/DLD.valid):00091         L0226      fcc    "DLD.lst"                                             * 0226 44 4C 44 2E 6C 73 74 DLD.lst
022D 0D               (../cmds/DLD.valid):00092                    fcb    $0D                                                   * 022D 0D             .
022E 444C442E647363   (../cmds/DLD.valid):00093         L022E      fcc    "DLD.dsc"                                             * 022E 44 4C 44 2E 64 73 63 DLD.dsc
0235 0D               (../cmds/DLD.valid):00094                    fcb    $0D                                                   * 0235 0D             .
0236 444C442E6B6579   (../cmds/DLD.valid):00095         L0236      fcc    "DLD.key"                                             * 0236 44 4C 44 2E 6B 65 79 DLD.key
023D 0D               (../cmds/DLD.valid):00096                    fcb    $0D                                                   * 023D 0D             .
023E 2020202020202020 (../cmds/DLD.valid):00097         L023E      fcc    "                                                                               " * 023E 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
     2020202020202020
     2020202020202020
     2020202020202020
     2020202020202020
     2020202020202020
     2020202020202020
     2020202020202020
     2020202020202020
     20202020202020
028D 0D               (../cmds/DLD.valid):00098         L028D      fcb    $0D                                                   * 028D 0D             .
028E 0A               (../cmds/DLD.valid):00099                    fcb    $0A                                                   * 028E 0A             .
028F 456E74657220796F (../cmds/DLD.valid):00100                    fcc    "Enter your download protocol"                        * 028F 45 6E 74 65 72 20 79 6F 75 72 20 64 6F 77 6E 6C 6F 61 64 20 70 72 6F 74 6F 63 6F 6C Enter your download protocol
     757220646F776E6C
     6F61642070726F74
     6F636F6C
02AB 0D               (../cmds/DLD.valid):00101                    fcb    $0D                                                   * 02AB 0D             .
02AC 0A               (../cmds/DLD.valid):00102         L02AC      fcb    $0A                                                   * 02AC 0A             .
02AD 0D               (../cmds/DLD.valid):00103                    fcb    $0D                                                   * 02AD 0D             .
02AE 5B585D20786D6F64 (../cmds/DLD.valid):00104                    fcc    "[X] xmodem"                                          * 02AE 5B 58 5D 20 78 6D 6F 64 65 6D [X] xmodem
     656D
02B8 0A               (../cmds/DLD.valid):00105                    fcb    $0A                                                   * 02B8 0A             .
02B9 0D               (../cmds/DLD.valid):00106                    fcb    $0D                                                   * 02B9 0D             .
02BA 5B435D20786D6F64 (../cmds/DLD.valid):00107                    fcc    "[C] xmodem (CRC)"                                    * 02BA 5B 43 5D 20 78 6D 6F 64 65 6D 20 28 43 52 43 29 [C] xmodem (CRC)
     656D202843524329
02CA 0A               (../cmds/DLD.valid):00108                    fcb    $0A                                                   * 02CA 0A             .
02CB 0D               (../cmds/DLD.valid):00109                    fcb    $0D                                                   * 02CB 0D             .
02CC 5B595D20796D6F64 (../cmds/DLD.valid):00110                    fcc    "[Y] ymodem"                                          * 02CC 5B 59 5D 20 79 6D 6F 64 65 6D [Y] ymodem
     656D
02D6 0A               (../cmds/DLD.valid):00111                    fcb    $0A                                                   * 02D6 0A             .
02D7 0D               (../cmds/DLD.valid):00112                    fcb    $0D                                                   * 02D7 0D             .
02D8 5B515D2071756974 (../cmds/DLD.valid):00113                    fcc    "[Q] quit"                                            * 02D8 5B 51 5D 20 71 75 69 74 [Q] quit
02E0 0A               (../cmds/DLD.valid):00114                    fcb    $0A                                                   * 02E0 0A             .
02E1 0D               (../cmds/DLD.valid):00115                    fcb    $0D                                                   * 02E1 0D             .
02E2 50726F746F636F6C (../cmds/DLD.valid):00116                    fcc    "Protocol?"                                           * 02E2 50 72 6F 74 6F 63 6F 6C 3F Protocol?
     3F
02EB 646C6F616478     (../cmds/DLD.valid):00117         L02EB      fcc    "dloadx"                                              * 02EB 64 6C 6F 61 64 78 dloadx
02F1 0D               (../cmds/DLD.valid):00118                    fcb    $0D                                                   * 02F1 0D             .
02F2 646C6F61647863   (../cmds/DLD.valid):00119         L02F2      fcc    "dloadxc"                                             * 02F2 64 6C 6F 61 64 78 63 dloadxc
02F9 0D               (../cmds/DLD.valid):00120                    fcb    $0D                                                   * 02F9 0D             .
02FA 646C6F616479     (../cmds/DLD.valid):00121         L02FA      fcc    "dloady"                                              * 02FA 64 6C 6F 61 64 79 dloady
0300 0D               (../cmds/DLD.valid):00122                    fcb    $0D                                                   * 0300 0D             .
0301 646C6F61647962   (../cmds/DLD.valid):00123                    fcc    "dloadyb"                                             * 0301 64 6C 6F 61 64 79 62 dloadyb
0308 0D               (../cmds/DLD.valid):00124                    fcb    $0D                                                   * 0308 0D             .
0309 0A               (../cmds/DLD.valid):00125         L0309      fcb    $0A                                                   * 0309 0A             .
030A 456E746572206120 (../cmds/DLD.valid):00126                    fcc    "Enter a one line description"                        * 030A 45 6E 74 65 72 20 61 20 6F 6E 65 20 6C 69 6E 65 20 64 65 73 63 72 69 70 74 69 6F 6E Enter a one line description
     6F6E65206C696E65
     2064657363726970
     74696F6E
0326 0D               (../cmds/DLD.valid):00127                    fcb    $0D                                                   * 0326 0D             .
0327 44656C6574652066 (../cmds/DLD.valid):00128         L0327      fcc    "Delete file? (Y/N):"                                 * 0327 44 65 6C 65 74 65 20 66 69 6C 65 3F 20 28 59 2F 4E 29 3A Delete file? (Y/N):
     696C653F2028592F
     4E293A
033A 08               (../cmds/DLD.valid):00129         L033A      fcb    $08                                                   * 033A 08             .
033B 20               (../cmds/DLD.valid):00130                    fcb    $20                                                   * 033B 20
033C 08               (../cmds/DLD.valid):00131                    fcb    $08                                                   * 033C 08             .
033D A684             (../cmds/DLD.valid):00132         start      lda    0,X                                                   * 033D A6 84          &.
033F 810D             (../cmds/DLD.valid):00133                    cmpa   #13                                                   * 033F 81 0D          ..
0341 2709             (../cmds/DLD.valid):00134                    beq    L034C                                                 * 0341 27 09          '.
0343 8601             (../cmds/DLD.valid):00135                    lda    #1                                                    * 0343 86 01          ..
0345 103F86           (../cmds/DLD.valid):00136                    os9    I$ChgDir                                              * 0345 10 3F 86       .?.
0348 10250542         (../cmds/DLD.valid):00137                    lbcs   L088E                                                 * 0348 10 25 05 42    .%.B
034C 308DFEE6         (../cmds/DLD.valid):00138         L034C      leax   >L0236,PC                                             * 034C 30 8D FE E6    0.~f
0350 8602             (../cmds/DLD.valid):00139                    lda    #2                                                    * 0350 86 02          ..
0352 103F84           (../cmds/DLD.valid):00140                    os9    I$Open                                                * 0352 10 3F 84       .?.
0355 240F             (../cmds/DLD.valid):00141                    bcc    L0366                                                 * 0355 24 0F          $.
0357 C1D8             (../cmds/DLD.valid):00142                    cmpb   #216                                                  * 0357 C1 D8          AX
0359 10260531         (../cmds/DLD.valid):00143                    lbne   L088E                                                 * 0359 10 26 05 31    .&.1
035D C61B             (../cmds/DLD.valid):00144                    ldb    #27                                                   * 035D C6 1B          F.
035F 103F83           (../cmds/DLD.valid):00145                    os9    I$Create                                              * 035F 10 3F 83       .?.
0362 10250528         (../cmds/DLD.valid):00146                    lbcs   L088E                                                 * 0362 10 25 05 28    .%.(
0366 A743             (../cmds/DLD.valid):00147         L0366      sta    U0003,U                                               * 0366 A7 43          'C
0368 308DFEC2         (../cmds/DLD.valid):00148                    leax   >L022E,PC                                             * 0368 30 8D FE C2    0.~B
036C 8603             (../cmds/DLD.valid):00149                    lda    #3                                                    * 036C 86 03          ..
036E 103F84           (../cmds/DLD.valid):00150                    os9    I$Open                                                * 036E 10 3F 84       .?.
0371 240F             (../cmds/DLD.valid):00151                    bcc    L0382                                                 * 0371 24 0F          $.
0373 C1D8             (../cmds/DLD.valid):00152                    cmpb   #216                                                  * 0373 C1 D8          AX
0375 10260515         (../cmds/DLD.valid):00153                    lbne   L088E                                                 * 0375 10 26 05 15    .&..
0379 C61B             (../cmds/DLD.valid):00154                    ldb    #27                                                   * 0379 C6 1B          F.
037B 103F83           (../cmds/DLD.valid):00155                    os9    I$Create                                              * 037B 10 3F 83       .?.
037E 1025050C         (../cmds/DLD.valid):00156                    lbcs   L088E                                                 * 037E 10 25 05 0C    .%..
0382 A744             (../cmds/DLD.valid):00157         L0382      sta    U0004,U                                               * 0382 A7 44          'D
0384 308DFDF4         (../cmds/DLD.valid):00158                    leax   >L017C,PC                                             * 0384 30 8D FD F4    0.}t
0388 108E00C8         (../cmds/DLD.valid):00159                    ldy    #200                                                  * 0388 10 8E 00 C8    ...H
038C 8601             (../cmds/DLD.valid):00160                    lda    #1                                                    * 038C 86 01          ..
038E 103F8C           (../cmds/DLD.valid):00161                    os9    I$WritLn                                              * 038E 10 3F 8C       .?.
0391 308DFE01         (../cmds/DLD.valid):00162                    leax   >L0196,PC                                             * 0391 30 8D FE 01    0.~.
0395 108E00C8         (../cmds/DLD.valid):00163                    ldy    #200                                                  * 0395 10 8E 00 C8    ...H
0399 103F8C           (../cmds/DLD.valid):00164                    os9    I$WritLn                                              * 0399 10 3F 8C       .?.
039C 308DFE11         (../cmds/DLD.valid):00165                    leax   >L01B1,PC                                             * 039C 30 8D FE 11    0.~.
03A0 108E00C8         (../cmds/DLD.valid):00166                    ldy    #200                                                  * 03A0 10 8E 00 C8    ...H
03A4 103F8C           (../cmds/DLD.valid):00167                    os9    I$WritLn                                              * 03A4 10 3F 8C       .?.
03A7 8E0000           (../cmds/DLD.valid):00168                    ldx    #0                                                    * 03A7 8E 00 00       ...
03AA AFC878           (../cmds/DLD.valid):00169                    stx    <U0078,U                                              * 03AA AF C8 78       /Hx
03AD AFC87A           (../cmds/DLD.valid):00170                    stx    <U007A,U                                              * 03AD AF C8 7A       /Hz
03B0 AFC87C           (../cmds/DLD.valid):00171                    stx    <U007C,U                                              * 03B0 AF C8 7C       /H|
03B3 AFC87E           (../cmds/DLD.valid):00172                    stx    <U007E,U                                              * 03B3 AF C8 7E       /H~
03B6 308DFE6C         (../cmds/DLD.valid):00173                    leax   >L0226,PC                                             * 03B6 30 8D FE 6C    0.~l
03BA 8603             (../cmds/DLD.valid):00174                    lda    #3                                                    * 03BA 86 03          ..
03BC 103F84           (../cmds/DLD.valid):00175                    os9    I$Open                                                * 03BC 10 3F 84       .?.
03BF 102504CB         (../cmds/DLD.valid):00176                    lbcs   L088E                                                 * 03BF 10 25 04 CB    .%.K
03C3 A742             (../cmds/DLD.valid):00177                    sta    U0002,U                                               * 03C3 A7 42          'B
03C5 ECC878           (../cmds/DLD.valid):00178         L03C5      ldd    <U0078,U                                              * 03C5 EC C8 78       lHx
03C8 EDC90080         (../cmds/DLD.valid):00179                    std    >U0080,U                                              * 03C8 ED C9 00 80    mI..
03CC ECC87A           (../cmds/DLD.valid):00180                    ldd    <U007A,U                                              * 03CC EC C8 7A       lHz
03CF EDC90082         (../cmds/DLD.valid):00181                    std    >U0082,U                                              * 03CF ED C9 00 82    mI..
03D3 A642             (../cmds/DLD.valid):00182                    lda    U0002,U                                               * 03D3 A6 42          &B
03D5 3440             (../cmds/DLD.valid):00183                    pshs   U                                                     * 03D5 34 40          4@
03D7 AEC878           (../cmds/DLD.valid):00184                    ldx    <U0078,U                                              * 03D7 AE C8 78       .Hx
03DA EEC87A           (../cmds/DLD.valid):00185                    ldu    <U007A,U                                              * 03DA EE C8 7A       nHz
03DD 103F88           (../cmds/DLD.valid):00186                    os9    I$Seek                                                * 03DD 10 3F 88       .?.
03E0 3540             (../cmds/DLD.valid):00187                    puls   U                                                     * 03E0 35 40          5@
03E2 30C900A1         (../cmds/DLD.valid):00188                    leax   >U00A1,U                                              * 03E2 30 C9 00 A1    0I.!
03E6 108E0060         (../cmds/DLD.valid):00189                    ldy    #96                                                   * 03E6 10 8E 00 60    ...`
03EA 103F89           (../cmds/DLD.valid):00190                    os9    I$Read                                                * 03EA 10 3F 89       .?.
03ED 10250116         (../cmds/DLD.valid):00191                    lbcs   L0507                                                 * 03ED 10 25 01 16    .%..
03F1 3440             (../cmds/DLD.valid):00192                    pshs   U                                                     * 03F1 34 40          4@
03F3 C605             (../cmds/DLD.valid):00193                    ldb    #5                                                    * 03F3 C6 05          F.
03F5 103F8D           (../cmds/DLD.valid):00194                    os9    I$GetStt                                              * 03F5 10 3F 8D       .?.
03F8 1F32             (../cmds/DLD.valid):00195                    tfr    U,Y                                                   * 03F8 1F 32          .2
03FA 3540             (../cmds/DLD.valid):00196                    puls   U                                                     * 03FA 35 40          5@
03FC AFC878           (../cmds/DLD.valid):00197                    stx    <U0078,U                                              * 03FC AF C8 78       /Hx
03FF 10AFC87A         (../cmds/DLD.valid):00198                    sty    <U007A,U                                              * 03FF 10 AF C8 7A    ./Hz
0403 6DC900C0         (../cmds/DLD.valid):00199                    tst    >U00C0,U                                              * 0403 6D C9 00 C0    mI.@
0407 102603E7         (../cmds/DLD.valid):00200                    lbne   L07F2                                                 * 0407 10 26 03 E7    .&.g
040B 5F               (../cmds/DLD.valid):00201                    clrb                                                         * 040B 5F             _
040C 30C900A1         (../cmds/DLD.valid):00202                    leax   >U00A1,U                                              * 040C 30 C9 00 A1    0I.!
0410 A680             (../cmds/DLD.valid):00203         L0410      lda    ,X+                                                   * 0410 A6 80          &.
0412 810D             (../cmds/DLD.valid):00204                    cmpa   #13                                                   * 0412 81 0D          ..
0414 2703             (../cmds/DLD.valid):00205                    beq    L0419                                                 * 0414 27 03          '.
0416 5C               (../cmds/DLD.valid):00206                    incb                                                         * 0416 5C             \
0417 20F7             (../cmds/DLD.valid):00207                    bra    L0410                                                 * 0417 20 F7           w
0419 E746             (../cmds/DLD.valid):00208         L0419      stb    U0006,U                                               * 0419 E7 46          gF
041B 4F               (../cmds/DLD.valid):00209                    clra                                                         * 041B 4F             O
041C 1F02             (../cmds/DLD.valid):00210                    tfr    D,Y                                                   * 041C 1F 02          ..
041E 30C900A1         (../cmds/DLD.valid):00211                    leax   >U00A1,U                                              * 041E 30 C9 00 A1    0I.!
0422 8601             (../cmds/DLD.valid):00212                    lda    #1                                                    * 0422 86 01          ..
0424 103F8A           (../cmds/DLD.valid):00213                    os9    I$Write                                               * 0424 10 3F 8A       .?.
0427 C60F             (../cmds/DLD.valid):00214                    ldb    #15                                                   * 0427 C6 0F          F.
0429 E046             (../cmds/DLD.valid):00215                    subb   U0006,U                                               * 0429 E0 46          `F
042B 2D0C             (../cmds/DLD.valid):00216                    blt    L0439                                                 * 042B 2D 0C          -.
042D 4F               (../cmds/DLD.valid):00217                    clra                                                         * 042D 4F             O
042E 1F02             (../cmds/DLD.valid):00218                    tfr    D,Y                                                   * 042E 1F 02          ..
0430 8601             (../cmds/DLD.valid):00219                    lda    #1                                                    * 0430 86 01          ..
0432 308DFE08         (../cmds/DLD.valid):00220                    leax   >L023E,PC                                             * 0432 30 8D FE 08    0.~.
0436 103F8A           (../cmds/DLD.valid):00221                    os9    I$Write                                               * 0436 10 3F 8A       .?.
0439 30C900C1         (../cmds/DLD.valid):00222         L0439      leax   >U00C1,U                                              * 0439 30 C9 00 C1    0I.A
043D 108E0041         (../cmds/DLD.valid):00223                    ldy    #65                                                   * 043D 10 8E 00 41    ...A
0441 8601             (../cmds/DLD.valid):00224                    lda    #1                                                    * 0441 86 01          ..
0443 103F8C           (../cmds/DLD.valid):00225                    os9    I$WritLn                                              * 0443 10 3F 8C       .?.
0446 308DFDB4         (../cmds/DLD.valid):00226         L0446      leax   >L01FE,PC                                             * 0446 30 8D FD B4    0.}4
044A 108E0028         (../cmds/DLD.valid):00227                    ldy    #40                                                   * 044A 10 8E 00 28    ...(
044E 8601             (../cmds/DLD.valid):00228                    lda    #1                                                    * 044E 86 01          ..
0450 103F8A           (../cmds/DLD.valid):00229                    os9    I$Write                                               * 0450 10 3F 8A       .?.
0453 3045             (../cmds/DLD.valid):00230                    leax   U0005,U                                               * 0453 30 45          0E
0455 108E0001         (../cmds/DLD.valid):00231                    ldy    #1                                                    * 0455 10 8E 00 01    ....
0459 4F               (../cmds/DLD.valid):00232                    clra                                                         * 0459 4F             O
045A 103F89           (../cmds/DLD.valid):00233                    os9    I$Read                                                * 045A 10 3F 89       .?.
045D 308DFE2C         (../cmds/DLD.valid):00234                    leax   >L028D,PC                                             * 045D 30 8D FE 2C    0.~,
0461 108E0001         (../cmds/DLD.valid):00235                    ldy    #1                                                    * 0461 10 8E 00 01    ....
0465 8601             (../cmds/DLD.valid):00236                    lda    #1                                                    * 0465 86 01          ..
0467 103F8C           (../cmds/DLD.valid):00237                    os9    I$WritLn                                              * 0467 10 3F 8C       .?.
046A A645             (../cmds/DLD.valid):00238                    lda    U0005,U                                               * 046A A6 45          &E
046C 84DF             (../cmds/DLD.valid):00239                    anda   #223                                                  * 046C 84 DF          ._
046E 8156             (../cmds/DLD.valid):00240                    cmpa   #86                                                   * 046E 81 56          .V
0470 10270015         (../cmds/DLD.valid):00241                    lbeq   L0489                                                 * 0470 10 27 00 15    .'..
0474 8144             (../cmds/DLD.valid):00242                    cmpa   #68                                                   * 0474 81 44          .D
0476 10270300         (../cmds/DLD.valid):00243                    lbeq   L077A                                                 * 0476 10 27 03 00    .'..
047A 814E             (../cmds/DLD.valid):00244                    cmpa   #78                                                   * 047A 81 4E          .N
047C 10270372         (../cmds/DLD.valid):00245                    lbeq   L07F2                                                 * 047C 10 27 03 72    .'.r
0480 814B             (../cmds/DLD.valid):00246                    cmpa   #75                                                   * 0480 81 4B          .K
0482 1027039B         (../cmds/DLD.valid):00247                    lbeq   L0821                                                 * 0482 10 27 03 9B    .'..
0486 16FFBD           (../cmds/DLD.valid):00248                    lbra   L0446                                                 * 0486 16 FF BD       ..=
0489 308DFE7C         (../cmds/DLD.valid):00249         L0489      leax   >L0309,PC                                             * 0489 30 8D FE 7C    0.~|
048D 108E00C8         (../cmds/DLD.valid):00250                    ldy    #200                                                  * 048D 10 8E 00 C8    ...H
0491 8601             (../cmds/DLD.valid):00251                    lda    #1                                                    * 0491 86 01          ..
0493 103F8C           (../cmds/DLD.valid):00252                    os9    I$WritLn                                              * 0493 10 3F 8C       .?.
0496 308DFCDF         (../cmds/DLD.valid):00253                    leax   >L0179,PC                                             * 0496 30 8D FC DF    0.|_
049A 108E0001         (../cmds/DLD.valid):00254                    ldy    #1                                                    * 049A 10 8E 00 01    ....
049E 8601             (../cmds/DLD.valid):00255                    lda    #1                                                    * 049E 86 01          ..
04A0 103F8A           (../cmds/DLD.valid):00256                    os9    I$Write                                               * 04A0 10 3F 8A       .?.
04A3 30C900C1         (../cmds/DLD.valid):00257                    leax   >U00C1,U                                              * 04A3 30 C9 00 C1    0I.A
04A7 108E0040         (../cmds/DLD.valid):00258                    ldy    #64                                                   * 04A7 10 8E 00 40    ...@
04AB 4F               (../cmds/DLD.valid):00259                    clra                                                         * 04AB 4F             O
04AC 103F8B           (../cmds/DLD.valid):00260                    os9    I$ReadLn                                              * 04AC 10 3F 8B       .?.
04AF 86FF             (../cmds/DLD.valid):00261                    lda    #255                                                  * 04AF 86 FF          ..
04B1 A7C900C0         (../cmds/DLD.valid):00262                    sta    >U00C0,U                                              * 04B1 A7 C9 00 C0    'I.@
04B5 A644             (../cmds/DLD.valid):00263                    lda    U0004,U                                               * 04B5 A6 44          &D
04B7 C602             (../cmds/DLD.valid):00264                    ldb    #2                                                    * 04B7 C6 02          F.
04B9 3440             (../cmds/DLD.valid):00265                    pshs   U                                                     * 04B9 34 40          4@
04BB 103F8D           (../cmds/DLD.valid):00266                    os9    I$GetStt                                              * 04BB 10 3F 8D       .?.
04BE 102503CC         (../cmds/DLD.valid):00267                    lbcs   L088E                                                 * 04BE 10 25 03 CC    .%.L
04C2 103F88           (../cmds/DLD.valid):00268                    os9    I$Seek                                                * 04C2 10 3F 88       .?.
04C5 102503C5         (../cmds/DLD.valid):00269                    lbcs   L088E                                                 * 04C5 10 25 03 C5    .%.E
04C9 1F32             (../cmds/DLD.valid):00270                    tfr    U,Y                                                   * 04C9 1F 32          .2
04CB 3540             (../cmds/DLD.valid):00271                    puls   U                                                     * 04CB 35 40          5@
04CD AFC900BC         (../cmds/DLD.valid):00272                    stx    >U00BC,U                                              * 04CD AF C9 00 BC    /I.<
04D1 10AFC900BE       (../cmds/DLD.valid):00273                    sty    >U00BE,U                                              * 04D1 10 AF C9 00 BE ./I.>
04D6 A642             (../cmds/DLD.valid):00274                    lda    U0002,U                                               * 04D6 A6 42          &B
04D8 3440             (../cmds/DLD.valid):00275                    pshs   U                                                     * 04D8 34 40          4@
04DA AEC87C           (../cmds/DLD.valid):00276                    ldx    <U007C,U                                              * 04DA AE C8 7C       .H|
04DD EEC87E           (../cmds/DLD.valid):00277                    ldu    <U007E,U                                              * 04DD EE C8 7E       nH~
04E0 103F88           (../cmds/DLD.valid):00278                    os9    I$Seek                                                * 04E0 10 3F 88       .?.
04E3 3540             (../cmds/DLD.valid):00279                    puls   U                                                     * 04E3 35 40          5@
04E5 30C900A1         (../cmds/DLD.valid):00280                    leax   >U00A1,U                                              * 04E5 30 C9 00 A1    0I.!
04E9 108E0060         (../cmds/DLD.valid):00281                    ldy    #96                                                   * 04E9 10 8E 00 60    ...`
04ED A642             (../cmds/DLD.valid):00282                    lda    U0002,U                                               * 04ED A6 42          &B
04EF 103F8A           (../cmds/DLD.valid):00283                    os9    I$Write                                               * 04EF 10 3F 8A       .?.
04F2 3440             (../cmds/DLD.valid):00284                    pshs   U                                                     * 04F2 34 40          4@
04F4 C605             (../cmds/DLD.valid):00285                    ldb    #5                                                    * 04F4 C6 05          F.
04F6 103F8D           (../cmds/DLD.valid):00286                    os9    I$GetStt                                              * 04F6 10 3F 8D       .?.
04F9 1F32             (../cmds/DLD.valid):00287                    tfr    U,Y                                                   * 04F9 1F 32          .2
04FB 3540             (../cmds/DLD.valid):00288                    puls   U                                                     * 04FB 35 40          5@
04FD AFC87C           (../cmds/DLD.valid):00289                    stx    <U007C,U                                              * 04FD AF C8 7C       /H|
0500 10AFC87E         (../cmds/DLD.valid):00290                    sty    <U007E,U                                              * 0500 10 AF C8 7E    ./H~
0504 16001A           (../cmds/DLD.valid):00291                    lbra   L0521                                                 * 0504 16 00 1A       ...
0507 C1D3             (../cmds/DLD.valid):00292         L0507      cmpb   #211                                                  * 0507 C1 D3          AS
0509 10260381         (../cmds/DLD.valid):00293                    lbne   L088E                                                 * 0509 10 26 03 81    .&..
050D A642             (../cmds/DLD.valid):00294                    lda    U0002,U                                               * 050D A6 42          &B
050F C602             (../cmds/DLD.valid):00295                    ldb    #2                                                    * 050F C6 02          F.
0511 3440             (../cmds/DLD.valid):00296                    pshs   U                                                     * 0511 34 40          4@
0513 AEC87C           (../cmds/DLD.valid):00297                    ldx    <U007C,U                                              * 0513 AE C8 7C       .H|
0516 EEC87E           (../cmds/DLD.valid):00298                    ldu    <U007E,U                                              * 0516 EE C8 7E       nH~
0519 103F8E           (../cmds/DLD.valid):00299                    os9    I$SetStt                                              * 0519 10 3F 8E       .?.
051C 3540             (../cmds/DLD.valid):00300                    puls   U                                                     * 051C 35 40          5@
051E 16036C           (../cmds/DLD.valid):00301                    lbra   L088D                                                 * 051E 16 03 6C       ..l
0521 A643             (../cmds/DLD.valid):00302         L0521      lda    U0003,U                                               * 0521 A6 43          &C
0523 C602             (../cmds/DLD.valid):00303                    ldb    #2                                                    * 0523 C6 02          F.
0525 3440             (../cmds/DLD.valid):00304                    pshs   U                                                     * 0525 34 40          4@
0527 103F8D           (../cmds/DLD.valid):00305                    os9    I$GetStt                                              * 0527 10 3F 8D       .?.
052A 10250360         (../cmds/DLD.valid):00306                    lbcs   L088E                                                 * 052A 10 25 03 60    .%.`
052E 103F88           (../cmds/DLD.valid):00307                    os9    I$Seek                                                * 052E 10 3F 88       .?.
0531 10250359         (../cmds/DLD.valid):00308                    lbcs   L088E                                                 * 0531 10 25 03 59    .%.Y
0535 3540             (../cmds/DLD.valid):00309                    puls   U                                                     * 0535 35 40          5@
0537 308DFBC5         (../cmds/DLD.valid):00310                    leax   >L0100,PC                                             * 0537 30 8D FB C5    0.{E
053B 108E00C8         (../cmds/DLD.valid):00311                    ldy    #200                                                  * 053B 10 8E 00 C8    ...H
053F 8601             (../cmds/DLD.valid):00312                    lda    #1                                                    * 053F 86 01          ..
0541 103F8C           (../cmds/DLD.valid):00313                    os9    I$WritLn                                              * 0541 10 3F 8C       .?.
0544 308DFB77         (../cmds/DLD.valid):00314                    leax   >L00BF,PC                                             * 0544 30 8D FB 77    0.{w
0548 108E0041         (../cmds/DLD.valid):00315                    ldy    #65                                                   * 0548 10 8E 00 41    ...A
054C 8601             (../cmds/DLD.valid):00316                    lda    #1                                                    * 054C 86 01          ..
054E 103F8C           (../cmds/DLD.valid):00317                    os9    I$WritLn                                              * 054E 10 3F 8C       .?.
0551 ECC90080         (../cmds/DLD.valid):00318                    ldd    >U0080,U                                              * 0551 EC C9 00 80    lI..
0555 EDC9009D         (../cmds/DLD.valid):00319                    std    >U009D,U                                              * 0555 ED C9 00 9D    mI..
0559 ECC90082         (../cmds/DLD.valid):00320                    ldd    >U0082,U                                              * 0559 EC C9 00 82    lI..
055D EDC9009F         (../cmds/DLD.valid):00321                    std    >U009F,U                                              * 055D ED C9 00 9F    mI..
0561 308DFBD5         (../cmds/DLD.valid):00322         L0561      leax   >L013A,PC                                             * 0561 30 8D FB D5    0.{U
0565 108E000E         (../cmds/DLD.valid):00323                    ldy    #14                                                   * 0565 10 8E 00 0E    ....
0569 8601             (../cmds/DLD.valid):00324                    lda    #1                                                    * 0569 86 01          ..
056B 103F8A           (../cmds/DLD.valid):00325                    os9    I$Write                                               * 056B 10 3F 8A       .?.
056E 30C90091         (../cmds/DLD.valid):00326                    leax   >U0091,U                                              * 056E 30 C9 00 91    0I..
0572 108E000C         (../cmds/DLD.valid):00327                    ldy    #12                                                   * 0572 10 8E 00 0C    ....
0576 4F               (../cmds/DLD.valid):00328                    clra                                                         * 0576 4F             O
0577 103F8B           (../cmds/DLD.valid):00329                    os9    I$ReadLn                                              * 0577 10 3F 8B       .?.
057A 1025FFE3         (../cmds/DLD.valid):00330                    lbcs   L0561                                                 * 057A 10 25 FF E3    .%.c
057E 108C0001         (../cmds/DLD.valid):00331                    cmpy   #1                                                    * 057E 10 8C 00 01    ....
0582 1023000B         (../cmds/DLD.valid):00332                    lbls   L0591                                                 * 0582 10 23 00 0B    .#..
0586 A643             (../cmds/DLD.valid):00333                    lda    U0003,U                                               * 0586 A6 43          &C
0588 108E0010         (../cmds/DLD.valid):00334                    ldy    #16                                                   * 0588 10 8E 00 10    ....
058C 103F8A           (../cmds/DLD.valid):00335                    os9    I$Write                                               * 058C 10 3F 8A       .?.
058F 20D0             (../cmds/DLD.valid):00336                    bra    L0561                                                 * 058F 20 D0           P
0591 308DFAEF         (../cmds/DLD.valid):00337         L0591      leax   >L0084,PC                                             * 0591 30 8D FA EF    0.zo
0595 108E00C8         (../cmds/DLD.valid):00338                    ldy    #200                                                  * 0595 10 8E 00 C8    ...H
0599 8601             (../cmds/DLD.valid):00339                    lda    #1                                                    * 0599 86 01          ..
059B 103F8C           (../cmds/DLD.valid):00340                    os9    I$WritLn                                              * 059B 10 3F 8C       .?.
059E 102502EC         (../cmds/DLD.valid):00341                    lbcs   L088E                                                 * 059E 10 25 02 EC    .%.l
05A2 308DFB19         (../cmds/DLD.valid):00342                    leax   >L00BF,PC                                             * 05A2 30 8D FB 19    0.{.
05A6 108E0050         (../cmds/DLD.valid):00343                    ldy    #80                                                   * 05A6 10 8E 00 50    ...P
05AA 103F8C           (../cmds/DLD.valid):00344                    os9    I$WritLn                                              * 05AA 10 3F 8C       .?.
05AD 102502DD         (../cmds/DLD.valid):00345                    lbcs   L088E                                                 * 05AD 10 25 02 DD    .%.]
05B1 CC0000           (../cmds/DLD.valid):00346                    ldd    #0                                                    * 05B1 CC 00 00       L..
05B4 EDC90084         (../cmds/DLD.valid):00347                    std    >U0084,U                                              * 05B4 ED C9 00 84    mI..
05B8 A747             (../cmds/DLD.valid):00348                    sta    U0007,U                                               * 05B8 A7 47          'G
05BA ECC90084         (../cmds/DLD.valid):00349         L05BA      ldd    >U0084,U                                              * 05BA EC C9 00 84    lI..
05BE C30001           (../cmds/DLD.valid):00350                    addd   #1                                                    * 05BE C3 00 01       C..
05C1 EDC90084         (../cmds/DLD.valid):00351                    std    >U0084,U                                              * 05C1 ED C9 00 84    mI..
05C5 10830063         (../cmds/DLD.valid):00352                    cmpd   #99                                                   * 05C5 10 83 00 63    ...c
05C9 2C0B             (../cmds/DLD.valid):00353                    bge    L05D6                                                 * 05C9 2C 0B          ,.
05CB 170121           (../cmds/DLD.valid):00354                    lbsr   L06EF                                                 * 05CB 17 01 21       ..!
05CE 108C0001         (../cmds/DLD.valid):00355                    cmpy   #1                                                    * 05CE 10 8C 00 01    ....
05D2 2302             (../cmds/DLD.valid):00356                    bls    L05D6                                                 * 05D2 23 02          #.
05D4 20E4             (../cmds/DLD.valid):00357                    bra    L05BA                                                 * 05D4 20 E4           d
05D6 308DFB6E         (../cmds/DLD.valid):00358         L05D6      leax   >L0148,PC                                             * 05D6 30 8D FB 6E    0.{n
05DA 108E00C8         (../cmds/DLD.valid):00359                    ldy    #200                                                  * 05DA 10 8E 00 C8    ...H
05DE 8601             (../cmds/DLD.valid):00360                    lda    #1                                                    * 05DE 86 01          ..
05E0 103F8C           (../cmds/DLD.valid):00361                    os9    I$WritLn                                              * 05E0 10 3F 8C       .?.
05E3 308DFB92         (../cmds/DLD.valid):00362                    leax   >L0179,PC                                             * 05E3 30 8D FB 92    0.{.
05E7 108E0001         (../cmds/DLD.valid):00363                    ldy    #1                                                    * 05E7 10 8E 00 01    ....
05EB 103F8A           (../cmds/DLD.valid):00364                    os9    I$Write                                               * 05EB 10 3F 8A       .?.
05EE 3045             (../cmds/DLD.valid):00365                    leax   U0005,U                                               * 05EE 30 45          0E
05F0 4F               (../cmds/DLD.valid):00366                    clra                                                         * 05F0 4F             O
05F1 108E0001         (../cmds/DLD.valid):00367                    ldy    #1                                                    * 05F1 10 8E 00 01    ....
05F5 103F89           (../cmds/DLD.valid):00368                    os9    I$Read                                                * 05F5 10 3F 89       .?.
05F8 308DFB7E         (../cmds/DLD.valid):00369                    leax   >L017A,PC                                             * 05F8 30 8D FB 7E    0.{~
05FC 108E0001         (../cmds/DLD.valid):00370                    ldy    #1                                                    * 05FC 10 8E 00 01    ....
0600 8601             (../cmds/DLD.valid):00371                    lda    #1                                                    * 0600 86 01          ..
0602 103F8C           (../cmds/DLD.valid):00372                    os9    I$WritLn                                              * 0602 10 3F 8C       .?.
0605 A645             (../cmds/DLD.valid):00373                    lda    U0005,U                                               * 0605 A6 45          &E
0607 84DF             (../cmds/DLD.valid):00374                    anda   #223                                                  * 0607 84 DF          ._
0609 8144             (../cmds/DLD.valid):00375                    cmpa   #68                                                   * 0609 81 44          .D
060B 10270133         (../cmds/DLD.valid):00376                    lbeq   L0742                                                 * 060B 10 27 01 33    .'.3
060F 8145             (../cmds/DLD.valid):00377                    cmpa   #69                                                   * 060F 81 45          .E
0611 2719             (../cmds/DLD.valid):00378                    beq    L062C                                                 * 0611 27 19          '.
0613 8143             (../cmds/DLD.valid):00379                    cmpa   #67                                                   * 0613 81 43          .C
0615 2708             (../cmds/DLD.valid):00380                    beq    L061F                                                 * 0615 27 08          '.
0617 814C             (../cmds/DLD.valid):00381                    cmpa   #76                                                   * 0617 81 4C          .L
0619 10270089         (../cmds/DLD.valid):00382                    lbeq   L06A6                                                 * 0619 10 27 00 89    .'..
061D 20B7             (../cmds/DLD.valid):00383                    bra    L05D6                                                 * 061D 20 B7           7
061F ECC90084         (../cmds/DLD.valid):00384         L061F      ldd    >U0084,U                                              * 061F EC C9 00 84    lI..
0623 830001           (../cmds/DLD.valid):00385                    subd   #1                                                    * 0623 83 00 01       ...
0626 EDC90084         (../cmds/DLD.valid):00386                    std    >U0084,U                                              * 0626 ED C9 00 84    mI..
062A 208E             (../cmds/DLD.valid):00387                    bra    L05BA                                                 * 062A 20 8E           .
062C 308DFB3C         (../cmds/DLD.valid):00388         L062C      leax   >L016C,PC                                             * 062C 30 8D FB 3C    0.{<
0630 108E00C8         (../cmds/DLD.valid):00389                    ldy    #200                                                  * 0630 10 8E 00 C8    ...H
0634 8601             (../cmds/DLD.valid):00390                    lda    #1                                                    * 0634 86 01          ..
0636 103F8C           (../cmds/DLD.valid):00391                    os9    I$WritLn                                              * 0636 10 3F 8C       .?.
0639 308DFB3C         (../cmds/DLD.valid):00392                    leax   >L0179,PC                                             * 0639 30 8D FB 3C    0.{<
063D 108E0001         (../cmds/DLD.valid):00393                    ldy    #1                                                    * 063D 10 8E 00 01    ....
0641 103F8A           (../cmds/DLD.valid):00394                    os9    I$Write                                               * 0641 10 3F 8A       .?.
0644 4F               (../cmds/DLD.valid):00395                    clra                                                         * 0644 4F             O
0645 30C9008E         (../cmds/DLD.valid):00396                    leax   >U008E,U                                              * 0645 30 C9 00 8E    0I..
0649 108E0003         (../cmds/DLD.valid):00397                    ldy    #3                                                    * 0649 10 8E 00 03    ....
064D 103F8B           (../cmds/DLD.valid):00398                    os9    I$ReadLn                                              * 064D 10 3F 8B       .?.
0650 1703CA           (../cmds/DLD.valid):00399                    lbsr   L0A1D                                                 * 0650 17 03 CA       ..J
0653 10A3C90084       (../cmds/DLD.valid):00400                    cmpd   >U0084,U                                              * 0653 10 A3 C9 00 84 .#I..
0658 1024FF7A         (../cmds/DLD.valid):00401                    lbcc   L05D6                                                 * 0658 10 24 FF 7A    .$.z
065C EDC9008C         (../cmds/DLD.valid):00402                    std    >U008C,U                                              * 065C ED C9 00 8C    mI..
0660 30C9008E         (../cmds/DLD.valid):00403                    leax   >U008E,U                                              * 0660 30 C9 00 8E    0I..
0664 17042F           (../cmds/DLD.valid):00404                    lbsr   L0A96                                                 * 0664 17 04 2F       ../
0667 30C9008E         (../cmds/DLD.valid):00405                    leax   >U008E,U                                              * 0667 30 C9 00 8E    0I..
066B 863A             (../cmds/DLD.valid):00406                    lda    #58                                                   * 066B 86 3A          .:
066D A702             (../cmds/DLD.valid):00407                    sta    $02,X                                                 * 066D A7 02          '.
066F 108E0003         (../cmds/DLD.valid):00408                    ldy    #3                                                    * 066F 10 8E 00 03    ....
0673 8601             (../cmds/DLD.valid):00409                    lda    #1                                                    * 0673 86 01          ..
0675 103F8A           (../cmds/DLD.valid):00410                    os9    I$Write                                               * 0675 10 3F 8A       .?.
0678 ECC9008C         (../cmds/DLD.valid):00411                    ldd    >U008C,U                                              * 0678 EC C9 00 8C    lI..
067C 30C90101         (../cmds/DLD.valid):00412                    leax   >U0101,U                                              * 067C 30 C9 01 01    0I..
0680 8650             (../cmds/DLD.valid):00413                    lda    #80                                                   * 0680 86 50          .P
0682 3D               (../cmds/DLD.valid):00414                    mul                                                          * 0682 3D             =
0683 308B             (../cmds/DLD.valid):00415                    leax   D,X                                                   * 0683 30 8B          0.
0685 108E0050         (../cmds/DLD.valid):00416                    ldy    #80                                                   * 0685 10 8E 00 50    ...P
0689 8601             (../cmds/DLD.valid):00417                    lda    #1                                                    * 0689 86 01          ..
068B 103F8C           (../cmds/DLD.valid):00418                    os9    I$WritLn                                              * 068B 10 3F 8C       .?.
068E 1F20             (../cmds/DLD.valid):00419                    tfr    Y,D                                                   * 068E 1F 20          .
0690 E747             (../cmds/DLD.valid):00420                    stb    U0007,U                                               * 0690 E7 47          gG
0692 6A47             (../cmds/DLD.valid):00421                    dec    U0007,U                                               * 0692 6A 47          jG
0694 3148             (../cmds/DLD.valid):00422                    leay   U0008,U                                               * 0694 31 48          1H
0696 A680             (../cmds/DLD.valid):00423         L0696      lda    ,X+                                                   * 0696 A6 80          &.
0698 A7A0             (../cmds/DLD.valid):00424                    sta    ,Y+                                                   * 0698 A7 A0          '
069A 5A               (../cmds/DLD.valid):00425                    decb                                                         * 069A 5A             Z
069B 26F9             (../cmds/DLD.valid):00426                    bne    L0696                                                 * 069B 26 F9          &y
069D ECC9008C         (../cmds/DLD.valid):00427                    ldd    >U008C,U                                              * 069D EC C9 00 8C    lI..
06A1 8D4C             (../cmds/DLD.valid):00428                    bsr    L06EF                                                 * 06A1 8D 4C          .L
06A3 16FF30           (../cmds/DLD.valid):00429                    lbra   L05D6                                                 * 06A3 16 FF 30       ..0
06A6 CC0000           (../cmds/DLD.valid):00430         L06A6      ldd    #0                                                    * 06A6 CC 00 00       L..
06A9 EDC90084         (../cmds/DLD.valid):00431                    std    >U0084,U                                              * 06A9 ED C9 00 84    mI..
06AD ECC90084         (../cmds/DLD.valid):00432         L06AD      ldd    >U0084,U                                              * 06AD EC C9 00 84    lI..
06B1 C30001           (../cmds/DLD.valid):00433                    addd   #1                                                    * 06B1 C3 00 01       C..
06B4 EDC90084         (../cmds/DLD.valid):00434                    std    >U0084,U                                              * 06B4 ED C9 00 84    mI..
06B8 30C9008E         (../cmds/DLD.valid):00435                    leax   >U008E,U                                              * 06B8 30 C9 00 8E    0I..
06BC 1703D7           (../cmds/DLD.valid):00436                    lbsr   L0A96                                                 * 06BC 17 03 D7       ..W
06BF 30C9008E         (../cmds/DLD.valid):00437                    leax   >U008E,U                                              * 06BF 30 C9 00 8E    0I..
06C3 863A             (../cmds/DLD.valid):00438                    lda    #58                                                   * 06C3 86 3A          .:
06C5 A702             (../cmds/DLD.valid):00439                    sta    $02,X                                                 * 06C5 A7 02          '.
06C7 8601             (../cmds/DLD.valid):00440                    lda    #1                                                    * 06C7 86 01          ..
06C9 108E0003         (../cmds/DLD.valid):00441                    ldy    #3                                                    * 06C9 10 8E 00 03    ....
06CD 103F8A           (../cmds/DLD.valid):00442                    os9    I$Write                                               * 06CD 10 3F 8A       .?.
06D0 30C90101         (../cmds/DLD.valid):00443                    leax   >U0101,U                                              * 06D0 30 C9 01 01    0I..
06D4 ECC90084         (../cmds/DLD.valid):00444                    ldd    >U0084,U                                              * 06D4 EC C9 00 84    lI..
06D8 8650             (../cmds/DLD.valid):00445                    lda    #80                                                   * 06D8 86 50          .P
06DA 3D               (../cmds/DLD.valid):00446                    mul                                                          * 06DA 3D             =
06DB 308B             (../cmds/DLD.valid):00447                    leax   D,X                                                   * 06DB 30 8B          0.
06DD 108E0050         (../cmds/DLD.valid):00448                    ldy    #80                                                   * 06DD 10 8E 00 50    ...P
06E1 8601             (../cmds/DLD.valid):00449                    lda    #1                                                    * 06E1 86 01          ..
06E3 103F8C           (../cmds/DLD.valid):00450                    os9    I$WritLn                                              * 06E3 10 3F 8C       .?.
06E6 108C0001         (../cmds/DLD.valid):00451                    cmpy   #1                                                    * 06E6 10 8C 00 01    ....
06EA 22C1             (../cmds/DLD.valid):00452                    bhi    L06AD                                                 * 06EA 22 C1          "A
06EC 16FEE7           (../cmds/DLD.valid):00453                    lbra   L05D6                                                 * 06EC 16 FE E7       .~g
06EF 30C9008E         (../cmds/DLD.valid):00454         L06EF      leax   >U008E,U                                              * 06EF 30 C9 00 8E    0I..
06F3 3406             (../cmds/DLD.valid):00455                    pshs   D                                                     * 06F3 34 06          4.
06F5 17039E           (../cmds/DLD.valid):00456                    lbsr   L0A96                                                 * 06F5 17 03 9E       ...
06F8 30C9008E         (../cmds/DLD.valid):00457                    leax   >U008E,U                                              * 06F8 30 C9 00 8E    0I..
06FC 863A             (../cmds/DLD.valid):00458                    lda    #58                                                   * 06FC 86 3A          .:
06FE A702             (../cmds/DLD.valid):00459                    sta    $02,X                                                 * 06FE A7 02          '.
0700 8601             (../cmds/DLD.valid):00460                    lda    #1                                                    * 0700 86 01          ..
0702 108E0003         (../cmds/DLD.valid):00461                    ldy    #3                                                    * 0702 10 8E 00 03    ....
0706 103F8A           (../cmds/DLD.valid):00462                    os9    I$Write                                               * 0706 10 3F 8A       .?.
0709 10250181         (../cmds/DLD.valid):00463                    lbcs   L088E                                                 * 0709 10 25 01 81    .%..
070D 3048             (../cmds/DLD.valid):00464                    leax   U0008,U                                               * 070D 30 48          0H
070F E647             (../cmds/DLD.valid):00465                    ldb    U0007,U                                               * 070F E6 47          fG
0711 4F               (../cmds/DLD.valid):00466                    clra                                                         * 0711 4F             O
0712 1F02             (../cmds/DLD.valid):00467                    tfr    D,Y                                                   * 0712 1F 02          ..
0714 8601             (../cmds/DLD.valid):00468                    lda    #1                                                    * 0714 86 01          ..
0716 103F8A           (../cmds/DLD.valid):00469                    os9    I$Write                                               * 0716 10 3F 8A       .?.
0719 3506             (../cmds/DLD.valid):00470                    puls   D                                                     * 0719 35 06          5.
071B 8650             (../cmds/DLD.valid):00471                    lda    #80                                                   * 071B 86 50          .P
071D 3D               (../cmds/DLD.valid):00472                    mul                                                          * 071D 3D             =
071E 30C90101         (../cmds/DLD.valid):00473                    leax   >U0101,U                                              * 071E 30 C9 01 01    0I..
0722 308B             (../cmds/DLD.valid):00474                    leax   D,X                                                   * 0722 30 8B          0.
0724 3148             (../cmds/DLD.valid):00475                    leay   U0008,U                                               * 0724 31 48          1H
0726 C650             (../cmds/DLD.valid):00476                    ldb    #80                                                   * 0726 C6 50          FP
0728 A647             (../cmds/DLD.valid):00477                    lda    U0007,U                                               * 0728 A6 47          &G
072A 270F             (../cmds/DLD.valid):00478                    beq    L073B                                                 * 072A 27 0F          '.
072C A7C90088         (../cmds/DLD.valid):00479                    sta    >U0088,U                                              * 072C A7 C9 00 88    'I..
0730 A6A0             (../cmds/DLD.valid):00480         L0730      lda    ,Y+                                                   * 0730 A6 A0          &
0732 A780             (../cmds/DLD.valid):00481                    sta    ,X+                                                   * 0732 A7 80          '.
0734 5A               (../cmds/DLD.valid):00482                    decb                                                         * 0734 5A             Z
0735 6AC90088         (../cmds/DLD.valid):00483                    dec    >U0088,U                                              * 0735 6A C9 00 88    jI..
0739 26F5             (../cmds/DLD.valid):00484                    bne    L0730                                                 * 0739 26 F5          &u
073B 4F               (../cmds/DLD.valid):00485         L073B      clra                                                         * 073B 4F             O
073C 1F02             (../cmds/DLD.valid):00486                    tfr    D,Y                                                   * 073C 1F 02          ..
073E 170150           (../cmds/DLD.valid):00487                    lbsr   L0891                                                 * 073E 17 01 50       ..P
0741 39               (../cmds/DLD.valid):00488                    rts                                                          * 0741 39             9
0742 8600             (../cmds/DLD.valid):00489         L0742      lda    #0                                                    * 0742 86 00          ..
0744 A7C90086         (../cmds/DLD.valid):00490                    sta    >U0086,U                                              * 0744 A7 C9 00 86    'I..
0748 A6C90086         (../cmds/DLD.valid):00491         L0748      lda    >U0086,U                                              * 0748 A6 C9 00 86    &I..
074C 4C               (../cmds/DLD.valid):00492                    inca                                                         * 074C 4C             L
074D A7C90086         (../cmds/DLD.valid):00493                    sta    >U0086,U                                              * 074D A7 C9 00 86    'I..
0751 A1C90085         (../cmds/DLD.valid):00494                    cmpa   >U0085,U                                              * 0751 A1 C9 00 85    !I..
0755 2220             (../cmds/DLD.valid):00495                    bhi    L0777                                                 * 0755 22 20          "
0757 C650             (../cmds/DLD.valid):00496                    ldb    #80                                                   * 0757 C6 50          FP
0759 3D               (../cmds/DLD.valid):00497                    mul                                                          * 0759 3D             =
075A 30C90101         (../cmds/DLD.valid):00498                    leax   >U0101,U                                              * 075A 30 C9 01 01    0I..
075E 308B             (../cmds/DLD.valid):00499                    leax   D,X                                                   * 075E 30 8B          0.
0760 108E0050         (../cmds/DLD.valid):00500                    ldy    #80                                                   * 0760 10 8E 00 50    ...P
0764 A644             (../cmds/DLD.valid):00501                    lda    U0004,U                                               * 0764 A6 44          &D
0766 103F8C           (../cmds/DLD.valid):00502                    os9    I$WritLn                                              * 0766 10 3F 8C       .?.
0769 10250121         (../cmds/DLD.valid):00503                    lbcs   L088E                                                 * 0769 10 25 01 21    .%.!
076D 108C0001         (../cmds/DLD.valid):00504                    cmpy   #1                                                    * 076D 10 8C 00 01    ....
0771 2304             (../cmds/DLD.valid):00505                    bls    L0777                                                 * 0771 23 04          #.
0773 1F20             (../cmds/DLD.valid):00506                    tfr    Y,D                                                   * 0773 1F 20          .
0775 20D1             (../cmds/DLD.valid):00507                    bra    L0748                                                 * 0775 20 D1           Q
0777 16FC4B           (../cmds/DLD.valid):00508         L0777      lbra   L03C5                                                 * 0777 16 FC 4B       .|K
077A 308DFB2E         (../cmds/DLD.valid):00509         L077A      leax   >L02AC,PC                                             * 077A 30 8D FB 2E    0.{.
077E 108E003F         (../cmds/DLD.valid):00510                    ldy    #63                                                   * 077E 10 8E 00 3F    ...?
0782 8601             (../cmds/DLD.valid):00511                    lda    #1                                                    * 0782 86 01          ..
0784 103F8A           (../cmds/DLD.valid):00512                    os9    I$Write                                               * 0784 10 3F 8A       .?.
0787 3045             (../cmds/DLD.valid):00513                    leax   U0005,U                                               * 0787 30 45          0E
0789 108E0001         (../cmds/DLD.valid):00514                    ldy    #1                                                    * 0789 10 8E 00 01    ....
078D 4F               (../cmds/DLD.valid):00515                    clra                                                         * 078D 4F             O
078E 103F89           (../cmds/DLD.valid):00516                    os9    I$Read                                                * 078E 10 3F 89       .?.
0791 308DFAF8         (../cmds/DLD.valid):00517                    leax   >L028D,PC                                             * 0791 30 8D FA F8    0.zx
0795 108E0001         (../cmds/DLD.valid):00518                    ldy    #1                                                    * 0795 10 8E 00 01    ....
0799 8601             (../cmds/DLD.valid):00519                    lda    #1                                                    * 0799 86 01          ..
079B 103F8C           (../cmds/DLD.valid):00520                    os9    I$WritLn                                              * 079B 10 3F 8C       .?.
079E A645             (../cmds/DLD.valid):00521                    lda    U0005,U                                               * 079E A6 45          &E
07A0 84DF             (../cmds/DLD.valid):00522                    anda   #223                                                  * 07A0 84 DF          ._
07A2 8158             (../cmds/DLD.valid):00523                    cmpa   #88                                                   * 07A2 81 58          .X
07A4 2710             (../cmds/DLD.valid):00524                    beq    L07B6                                                 * 07A4 27 10          '.
07A6 8143             (../cmds/DLD.valid):00525                    cmpa   #67                                                   * 07A6 81 43          .C
07A8 2712             (../cmds/DLD.valid):00526                    beq    L07BC                                                 * 07A8 27 12          '.
07AA 8159             (../cmds/DLD.valid):00527                    cmpa   #89                                                   * 07AA 81 59          .Y
07AC 2714             (../cmds/DLD.valid):00528                    beq    L07C2                                                 * 07AC 27 14          '.
07AE 8151             (../cmds/DLD.valid):00529                    cmpa   #81                                                   * 07AE 81 51          .Q
07B0 102700D9         (../cmds/DLD.valid):00530                    lbeq   L088D                                                 * 07B0 10 27 00 D9    .'.Y
07B4 20C4             (../cmds/DLD.valid):00531                    bra    L077A                                                 * 07B4 20 C4           D
07B6 308DFB31         (../cmds/DLD.valid):00532         L07B6      leax   >L02EB,PC                                             * 07B6 30 8D FB 31    0.{1
07BA 2010             (../cmds/DLD.valid):00533                    bra    L07CC                                                 * 07BA 20 10           .
07BC 308DFB32         (../cmds/DLD.valid):00534         L07BC      leax   >L02F2,PC                                             * 07BC 30 8D FB 32    0.{2
07C0 200A             (../cmds/DLD.valid):00535                    bra    L07CC                                                 * 07C0 20 0A           .
07C2 308DFB34         (../cmds/DLD.valid):00536         L07C2      leax   >L02FA,PC                                             * 07C2 30 8D FB 34    0.{4
07C6 2004             (../cmds/DLD.valid):00537                    bra    L07CC                                                 * 07C6 20 04           .
07C8 30               (../cmds/DLD.valid):00538                    fcb    $30                                                   * 07C8 30             0
07C9 8D               (../cmds/DLD.valid):00539                    fcb    $8D                                                   * 07C9 8D             .
07CA FB               (../cmds/DLD.valid):00540                    fcb    $FB                                                   * 07CA FB             {
07CB 35               (../cmds/DLD.valid):00541                    fcb    $35                                                   * 07CB 35             5
07CC E646             (../cmds/DLD.valid):00542         L07CC      ldb    U0006,U                                               * 07CC E6 46          fF
07CE 5C               (../cmds/DLD.valid):00543                    incb                                                         * 07CE 5C             \
07CF 4F               (../cmds/DLD.valid):00544                    clra                                                         * 07CF 4F             O
07D0 1F02             (../cmds/DLD.valid):00545                    tfr    D,Y                                                   * 07D0 1F 02          ..
07D2 8611             (../cmds/DLD.valid):00546                    lda    #17                                                   * 07D2 86 11          ..
07D4 C603             (../cmds/DLD.valid):00547                    ldb    #3                                                    * 07D4 C6 03          F.
07D6 3440             (../cmds/DLD.valid):00548                    pshs   U                                                     * 07D6 34 40          4@
07D8 33C900A1         (../cmds/DLD.valid):00549                    leau   >U00A1,U                                              * 07D8 33 C9 00 A1    3I.!
07DC 103F03           (../cmds/DLD.valid):00550                    os9    F$Fork                                                * 07DC 10 3F 03       .?.
07DF 102500AB         (../cmds/DLD.valid):00551                    lbcs   L088E                                                 * 07DF 10 25 00 AB    .%.+
07E3 5F               (../cmds/DLD.valid):00552                    clrb                                                         * 07E3 5F             _
07E4 103F04           (../cmds/DLD.valid):00553                    os9    F$Wait                                                * 07E4 10 3F 04       .?.
07E7 102500A3         (../cmds/DLD.valid):00554                    lbcs   L088E                                                 * 07E7 10 25 00 A3    .%.#
07EB 3540             (../cmds/DLD.valid):00555                    puls   U                                                     * 07EB 35 40          5@
07ED 5D               (../cmds/DLD.valid):00556                    tstb                                                         * 07ED 5D             ]
07EE 1026FF88         (../cmds/DLD.valid):00557                    lbne   L077A                                                 * 07EE 10 26 FF 88    .&..
07F2 A642             (../cmds/DLD.valid):00558         L07F2      lda    U0002,U                                               * 07F2 A6 42          &B
07F4 3440             (../cmds/DLD.valid):00559                    pshs   U                                                     * 07F4 34 40          4@
07F6 AEC87C           (../cmds/DLD.valid):00560                    ldx    <U007C,U                                              * 07F6 AE C8 7C       .H|
07F9 EEC87E           (../cmds/DLD.valid):00561                    ldu    <U007E,U                                              * 07F9 EE C8 7E       nH~
07FC 103F88           (../cmds/DLD.valid):00562                    os9    I$Seek                                                * 07FC 10 3F 88       .?.
07FF 3540             (../cmds/DLD.valid):00563                    puls   U                                                     * 07FF 35 40          5@
0801 30C900A1         (../cmds/DLD.valid):00564                    leax   >U00A1,U                                              * 0801 30 C9 00 A1    0I.!
0805 108E0060         (../cmds/DLD.valid):00565                    ldy    #96                                                   * 0805 10 8E 00 60    ...`
0809 103F8A           (../cmds/DLD.valid):00566                    os9    I$Write                                               * 0809 10 3F 8A       .?.
080C 3440             (../cmds/DLD.valid):00567                    pshs   U                                                     * 080C 34 40          4@
080E C605             (../cmds/DLD.valid):00568                    ldb    #5                                                    * 080E C6 05          F.
0810 103F8D           (../cmds/DLD.valid):00569                    os9    I$GetStt                                              * 0810 10 3F 8D       .?.
0813 1F32             (../cmds/DLD.valid):00570                    tfr    U,Y                                                   * 0813 1F 32          .2
0815 3540             (../cmds/DLD.valid):00571                    puls   U                                                     * 0815 35 40          5@
0817 AFC87C           (../cmds/DLD.valid):00572                    stx    <U007C,U                                              * 0817 AF C8 7C       /H|
081A 10AFC87E         (../cmds/DLD.valid):00573                    sty    <U007E,U                                              * 081A 10 AF C8 7E    ./H~
081E 16FBA4           (../cmds/DLD.valid):00574                    lbra   L03C5                                                 * 081E 16 FB A4       .{$
0821 308DFB02         (../cmds/DLD.valid):00575         L0821      leax   >L0327,PC                                             * 0821 30 8D FB 02    0.{.
0825 108E0013         (../cmds/DLD.valid):00576                    ldy    #19                                                   * 0825 10 8E 00 13    ....
0829 8601             (../cmds/DLD.valid):00577                    lda    #1                                                    * 0829 86 01          ..
082B 103F8A           (../cmds/DLD.valid):00578                    os9    I$Write                                               * 082B 10 3F 8A       .?.
082E 3045             (../cmds/DLD.valid):00579                    leax   U0005,U                                               * 082E 30 45          0E
0830 108E0001         (../cmds/DLD.valid):00580                    ldy    #1                                                    * 0830 10 8E 00 01    ....
0834 4F               (../cmds/DLD.valid):00581                    clra                                                         * 0834 4F             O
0835 103F89           (../cmds/DLD.valid):00582                    os9    I$Read                                                * 0835 10 3F 89       .?.
0838 308DF93E         (../cmds/DLD.valid):00583                    leax   >L017A,PC                                             * 0838 30 8D F9 3E    0.y>
083C 108E0001         (../cmds/DLD.valid):00584                    ldy    #1                                                    * 083C 10 8E 00 01    ....
0840 8601             (../cmds/DLD.valid):00585                    lda    #1                                                    * 0840 86 01          ..
0842 103F8C           (../cmds/DLD.valid):00586                    os9    I$WritLn                                              * 0842 10 3F 8C       .?.
0845 A645             (../cmds/DLD.valid):00587                    lda    U0005,U                                               * 0845 A6 45          &E
0847 84DF             (../cmds/DLD.valid):00588                    anda   #223                                                  * 0847 84 DF          ._
0849 8159             (../cmds/DLD.valid):00589                    cmpa   #89                                                   * 0849 81 59          .Y
084B 1026FFA3         (../cmds/DLD.valid):00590                    lbne   L07F2                                                 * 084B 10 26 FF A3    .&.#
084F 30C900A1         (../cmds/DLD.valid):00591                    leax   >U00A1,U                                              * 084F 30 C9 00 A1    0I.!
0853 103F87           (../cmds/DLD.valid):00592                    os9    I$Delete                                              * 0853 10 3F 87       .?.
0856 8601             (../cmds/DLD.valid):00593                    lda    #1                                                    * 0856 86 01          ..
0858 A7C900C0         (../cmds/DLD.valid):00594                    sta    >U00C0,U                                              * 0858 A7 C9 00 C0    'I.@
085C A642             (../cmds/DLD.valid):00595                    lda    U0002,U                                               * 085C A6 42          &B
085E 3440             (../cmds/DLD.valid):00596                    pshs   U                                                     * 085E 34 40          4@
0860 AEC87C           (../cmds/DLD.valid):00597                    ldx    <U007C,U                                              * 0860 AE C8 7C       .H|
0863 EEC87E           (../cmds/DLD.valid):00598                    ldu    <U007E,U                                              * 0863 EE C8 7E       nH~
0866 103F88           (../cmds/DLD.valid):00599                    os9    I$Seek                                                * 0866 10 3F 88       .?.
0869 3540             (../cmds/DLD.valid):00600                    puls   U                                                     * 0869 35 40          5@
086B 30C900A1         (../cmds/DLD.valid):00601                    leax   >U00A1,U                                              * 086B 30 C9 00 A1    0I.!
086F 108E0060         (../cmds/DLD.valid):00602                    ldy    #96                                                   * 086F 10 8E 00 60    ...`
0873 A642             (../cmds/DLD.valid):00603                    lda    U0002,U                                               * 0873 A6 42          &B
0875 103F8A           (../cmds/DLD.valid):00604                    os9    I$Write                                               * 0875 10 3F 8A       .?.
0878 3440             (../cmds/DLD.valid):00605                    pshs   U                                                     * 0878 34 40          4@
087A C605             (../cmds/DLD.valid):00606                    ldb    #5                                                    * 087A C6 05          F.
087C 103F8D           (../cmds/DLD.valid):00607                    os9    I$GetStt                                              * 087C 10 3F 8D       .?.
087F 1F32             (../cmds/DLD.valid):00608                    tfr    U,Y                                                   * 087F 1F 32          .2
0881 3540             (../cmds/DLD.valid):00609                    puls   U                                                     * 0881 35 40          5@
0883 AFC87C           (../cmds/DLD.valid):00610                    stx    <U007C,U                                              * 0883 AF C8 7C       /H|
0886 10AFC87E         (../cmds/DLD.valid):00611                    sty    <U007E,U                                              * 0886 10 AF C8 7E    ./H~
088A 16FB38           (../cmds/DLD.valid):00612                    lbra   L03C5                                                 * 088A 16 FB 38       .{8
088D 5F               (../cmds/DLD.valid):00613         L088D      clrb                                                         * 088D 5F             _
088E 103F06           (../cmds/DLD.valid):00614         L088E      os9    F$Exit                                                * 088E 10 3F 06       .?.
0891 170154           (../cmds/DLD.valid):00615         L0891      lbsr   L09E8                                                 * 0891 17 01 54       ..T
0894 E647             (../cmds/DLD.valid):00616                    ldb    U0007,U                                               * 0894 E6 47          fG
0896 31A5             (../cmds/DLD.valid):00617                    leay   B,Y                                                   * 0896 31 A5          1%
0898 3420             (../cmds/DLD.valid):00618                    pshs   Y                                                     * 0898 34 20          4
089A 50               (../cmds/DLD.valid):00619                    negb                                                         * 089A 50             P
089B 1D               (../cmds/DLD.valid):00620                    sex                                                          * 089B 1D             .
089C 31AB             (../cmds/DLD.valid):00621                    leay   D,Y                                                   * 089C 31 AB          1+
089E 6F47             (../cmds/DLD.valid):00622                    clr    U0007,U                                               * 089E 6F 47          oG
08A0 108C0000         (../cmds/DLD.valid):00623                    cmpy   #0                                                    * 08A0 10 8C 00 00    ....
08A4 102700B8         (../cmds/DLD.valid):00624                    lbeq   L0960                                                 * 08A4 10 27 00 B8    .'.8
08A8 3430             (../cmds/DLD.valid):00625                    pshs   Y,X                                                   * 08A8 34 30          40
08AA 860D             (../cmds/DLD.valid):00626                    lda    #13                                                   * 08AA 86 0D          ..
08AC A780             (../cmds/DLD.valid):00627         L08AC      sta    ,X+                                                   * 08AC A7 80          '.
08AE 313F             (../cmds/DLD.valid):00628                    leay   -$01,Y                                                * 08AE 31 3F          1?
08B0 26FA             (../cmds/DLD.valid):00629                    bne    L08AC                                                 * 08B0 26 FA          &z
08B2 3530             (../cmds/DLD.valid):00630                    puls   Y,X                                                   * 08B2 35 30          50
08B4 3430             (../cmds/DLD.valid):00631         L08B4      pshs   Y,X                                                   * 08B4 34 30          40
08B6 3045             (../cmds/DLD.valid):00632                    leax   U0005,U                                               * 08B6 30 45          0E
08B8 108E0001         (../cmds/DLD.valid):00633                    ldy    #1                                                    * 08B8 10 8E 00 01    ....
08BC 4F               (../cmds/DLD.valid):00634                    clra                                                         * 08BC 4F             O
08BD 103F89           (../cmds/DLD.valid):00635                    os9    I$Read                                                * 08BD 10 3F 89       .?.
08C0 252B             (../cmds/DLD.valid):00636                    bcs    L08ED                                                 * 08C0 25 2B          %+
08C2 A645             (../cmds/DLD.valid):00637                    lda    U0005,U                                               * 08C2 A6 45          &E
08C4 8101             (../cmds/DLD.valid):00638                    cmpa   #1                                                    * 08C4 81 01          ..
08C6 2729             (../cmds/DLD.valid):00639                    beq    L08F1                                                 * 08C6 27 29          ')
08C8 8108             (../cmds/DLD.valid):00640                    cmpa   #8                                                    * 08C8 81 08          ..
08CA 2747             (../cmds/DLD.valid):00641                    beq    L0913                                                 * 08CA 27 47          'G
08CC 8118             (../cmds/DLD.valid):00642                    cmpa   #24                                                   * 08CC 81 18          ..
08CE 2767             (../cmds/DLD.valid):00643                    beq    L0937                                                 * 08CE 27 67          'g
08D0 810D             (../cmds/DLD.valid):00644                    cmpa   #13                                                   * 08D0 81 0D          ..
08D2 10270088         (../cmds/DLD.valid):00645                    lbeq   L095E                                                 * 08D2 10 27 00 88    .'..
08D6 8120             (../cmds/DLD.valid):00646                    cmpa   #32                                                   * 08D6 81 20          .
08D8 2513             (../cmds/DLD.valid):00647                    bcs    L08ED                                                 * 08D8 25 13          %.
08DA 8601             (../cmds/DLD.valid):00648                    lda    #1                                                    * 08DA 86 01          ..
08DC 103F8A           (../cmds/DLD.valid):00649                    os9    I$Write                                               * 08DC 10 3F 8A       .?.
08DF 3530             (../cmds/DLD.valid):00650                    puls   Y,X                                                   * 08DF 35 30          50
08E1 A645             (../cmds/DLD.valid):00651                    lda    U0005,U                                               * 08E1 A6 45          &E
08E3 A780             (../cmds/DLD.valid):00652                    sta    ,X+                                                   * 08E3 A7 80          '.
08E5 313F             (../cmds/DLD.valid):00653                    leay   -$01,Y                                                * 08E5 31 3F          1?
08E7 1027009C         (../cmds/DLD.valid):00654                    lbeq   L0987                                                 * 08E7 10 27 00 9C    .'..
08EB 20C7             (../cmds/DLD.valid):00655                    bra    L08B4                                                 * 08EB 20 C7           G
08ED 3530             (../cmds/DLD.valid):00656         L08ED      puls   Y,X                                                   * 08ED 35 30          50
08EF 20C3             (../cmds/DLD.valid):00657                    bra    L08B4                                                 * 08EF 20 C3           C
08F1 3530             (../cmds/DLD.valid):00658         L08F1      puls   Y,X                                                   * 08F1 35 30          50
08F3 313F             (../cmds/DLD.valid):00659                    leay   -$01,Y                                                * 08F3 31 3F          1?
08F5 2717             (../cmds/DLD.valid):00660                    beq    L090E                                                 * 08F5 27 17          '.
08F7 A680             (../cmds/DLD.valid):00661                    lda    ,X+                                                   * 08F7 A6 80          &.
08F9 810D             (../cmds/DLD.valid):00662                    cmpa   #13                                                   * 08F9 81 0D          ..
08FB 270F             (../cmds/DLD.valid):00663                    beq    L090C                                                 * 08FB 27 0F          '.
08FD 3430             (../cmds/DLD.valid):00664                    pshs   Y,X                                                   * 08FD 34 30          40
08FF 301F             (../cmds/DLD.valid):00665                    leax   -$01,X                                                * 08FF 30 1F          0.
0901 108E0001         (../cmds/DLD.valid):00666                    ldy    #1                                                    * 0901 10 8E 00 01    ....
0905 8601             (../cmds/DLD.valid):00667                    lda    #1                                                    * 0905 86 01          ..
0907 103F8A           (../cmds/DLD.valid):00668                    os9    I$Write                                               * 0907 10 3F 8A       .?.
090A 20E5             (../cmds/DLD.valid):00669                    bra    L08F1                                                 * 090A 20 E5           e
090C 301F             (../cmds/DLD.valid):00670         L090C      leax   -$01,X                                                * 090C 30 1F          0.
090E 3121             (../cmds/DLD.valid):00671         L090E      leay   $01,Y                                                 * 090E 31 21          1!
0910 16FFA1           (../cmds/DLD.valid):00672                    lbra   L08B4                                                 * 0910 16 FF A1       ..!
0913 3530             (../cmds/DLD.valid):00673         L0913      puls   Y,X                                                   * 0913 35 30          50
0915 3121             (../cmds/DLD.valid):00674                    leay   $01,Y                                                 * 0915 31 21          1!
0917 10ACE4           (../cmds/DLD.valid):00675                    cmpy   0,S                                                   * 0917 10 AC E4       .,d
091A 2216             (../cmds/DLD.valid):00676                    bhi    L0932                                                 * 091A 22 16          ".
091C 3430             (../cmds/DLD.valid):00677                    pshs   Y,X                                                   * 091C 34 30          40
091E 308DFA18         (../cmds/DLD.valid):00678                    leax   >L033A,PC                                             * 091E 30 8D FA 18    0.z.
0922 108E0003         (../cmds/DLD.valid):00679                    ldy    #3                                                    * 0922 10 8E 00 03    ....
0926 8601             (../cmds/DLD.valid):00680                    lda    #1                                                    * 0926 86 01          ..
0928 103F8A           (../cmds/DLD.valid):00681                    os9    I$Write                                               * 0928 10 3F 8A       .?.
092B 3530             (../cmds/DLD.valid):00682                    puls   Y,X                                                   * 092B 35 30          50
092D 301F             (../cmds/DLD.valid):00683                    leax   -$01,X                                                * 092D 30 1F          0.
092F 16FF82           (../cmds/DLD.valid):00684                    lbra   L08B4                                                 * 092F 16 FF 82       ...
0932 313F             (../cmds/DLD.valid):00685         L0932      leay   -$01,Y                                                * 0932 31 3F          1?
0934 16FF7D           (../cmds/DLD.valid):00686                    lbra   L08B4                                                 * 0934 16 FF 7D       ..}
0937 3530             (../cmds/DLD.valid):00687         L0937      puls   Y,X                                                   * 0937 35 30          50
0939 3121             (../cmds/DLD.valid):00688                    leay   $01,Y                                                 * 0939 31 21          1!
093B 10ACE4           (../cmds/DLD.valid):00689                    cmpy   0,S                                                   * 093B 10 AC E4       .,d
093E 22F2             (../cmds/DLD.valid):00690                    bhi    L0932                                                 * 093E 22 F2          "r
0940 3430             (../cmds/DLD.valid):00691                    pshs   Y,X                                                   * 0940 34 30          40
0942 308DF9F4         (../cmds/DLD.valid):00692                    leax   >L033A,PC                                             * 0942 30 8D F9 F4    0.yt
0946 108E0003         (../cmds/DLD.valid):00693                    ldy    #3                                                    * 0946 10 8E 00 03    ....
094A 8601             (../cmds/DLD.valid):00694                    lda    #1                                                    * 094A 86 01          ..
094C 103F8A           (../cmds/DLD.valid):00695                    os9    I$Write                                               * 094C 10 3F 8A       .?.
094F 3530             (../cmds/DLD.valid):00696                    puls   Y,X                                                   * 094F 35 30          50
0951 301F             (../cmds/DLD.valid):00697                    leax   -$01,X                                                * 0951 30 1F          0.
0953 10ACE4           (../cmds/DLD.valid):00698                    cmpy   0,S                                                   * 0953 10 AC E4       .,d
0956 1022FF5A         (../cmds/DLD.valid):00699                    lbhi   L08B4                                                 * 0956 10 22 FF 5A    .".Z
095A 3430             (../cmds/DLD.valid):00700                    pshs   Y,X                                                   * 095A 34 30          40
095C 20D9             (../cmds/DLD.valid):00701                    bra    L0937                                                 * 095C 20 D9           Y
095E 3530             (../cmds/DLD.valid):00702         L095E      puls   Y,X                                                   * 095E 35 30          50
0960 860D             (../cmds/DLD.valid):00703         L0960      lda    #13                                                   * 0960 86 0D          ..
0962 A780             (../cmds/DLD.valid):00704                    sta    ,X+                                                   * 0962 A7 80          '.
0964 3430             (../cmds/DLD.valid):00705                    pshs   Y,X                                                   * 0964 34 30          40
0966 308DF810         (../cmds/DLD.valid):00706                    leax   >L017A,PC                                             * 0966 30 8D F8 10    0.x.
096A 108E0001         (../cmds/DLD.valid):00707                    ldy    #1                                                    * 096A 10 8E 00 01    ....
096E 8601             (../cmds/DLD.valid):00708                    lda    #1                                                    * 096E 86 01          ..
0970 103F8C           (../cmds/DLD.valid):00709                    os9    I$WritLn                                              * 0970 10 3F 8C       .?.
0973 3530             (../cmds/DLD.valid):00710                    puls   Y,X                                                   * 0973 35 30          50
0975 3506             (../cmds/DLD.valid):00711                    puls   D                                                     * 0975 35 06          5.
0977 3420             (../cmds/DLD.valid):00712                    pshs   Y                                                     * 0977 34 20          4
0979 A3E4             (../cmds/DLD.valid):00713                    subd   0,S                                                   * 0979 A3 E4          #d
097B 3262             (../cmds/DLD.valid):00714                    leas   $02,S                                                 * 097B 32 62          2b
097D 1F02             (../cmds/DLD.valid):00715                    tfr    D,Y                                                   * 097D 1F 02          ..
097F 3121             (../cmds/DLD.valid):00716                    leay   $01,Y                                                 * 097F 31 21          1!
0981 17007D           (../cmds/DLD.valid):00717                    lbsr   L0A01                                                 * 0981 17 00 7D       ..}
0984 39               (../cmds/DLD.valid):00718                    rts                                                          * 0984 39             9
0985 3530             (../cmds/DLD.valid):00719                    fcc    "50"                                                  * 0985 35 30          50
0987 3506             (../cmds/DLD.valid):00720         L0987      puls   D                                                     * 0987 35 06          5.
0989 3420             (../cmds/DLD.valid):00721                    pshs   Y                                                     * 0989 34 20          4
098B A3E4             (../cmds/DLD.valid):00722                    subd   0,S                                                   * 098B A3 E4          #d
098D 3262             (../cmds/DLD.valid):00723                    leas   $02,S                                                 * 098D 32 62          2b
098F C30001           (../cmds/DLD.valid):00724                    addd   #1                                                    * 098F C3 00 01       C..
0992 1F02             (../cmds/DLD.valid):00725                    tfr    D,Y                                                   * 0992 1F 02          ..
0994 5F               (../cmds/DLD.valid):00726                    clrb                                                         * 0994 5F             _
0995 313F             (../cmds/DLD.valid):00727         L0995      leay   -$01,Y                                                * 0995 31 3F          1?
0997 271A             (../cmds/DLD.valid):00728                    beq    L09B3                                                 * 0997 27 1A          '.
0999 A682             (../cmds/DLD.valid):00729                    lda    ,-X                                                   * 0999 A6 82          &.
099B 8120             (../cmds/DLD.valid):00730                    cmpa   #32                                                   * 099B 81 20          .
099D 2725             (../cmds/DLD.valid):00731                    beq    L09C4                                                 * 099D 27 25          '%
099F 3430             (../cmds/DLD.valid):00732                    pshs   Y,X                                                   * 099F 34 30          40
09A1 308DF995         (../cmds/DLD.valid):00733                    leax   >L033A,PC                                             * 09A1 30 8D F9 95    0.y.
09A5 108E0003         (../cmds/DLD.valid):00734                    ldy    #3                                                    * 09A5 10 8E 00 03    ....
09A9 8601             (../cmds/DLD.valid):00735                    lda    #1                                                    * 09A9 86 01          ..
09AB 103F8A           (../cmds/DLD.valid):00736                    os9    I$Write                                               * 09AB 10 3F 8A       .?.
09AE 5C               (../cmds/DLD.valid):00737                    incb                                                         * 09AE 5C             \
09AF 3530             (../cmds/DLD.valid):00738                    puls   Y,X                                                   * 09AF 35 30          50
09B1 20E2             (../cmds/DLD.valid):00739                    bra    L0995                                                 * 09B1 20 E2           b
09B3 860D             (../cmds/DLD.valid):00740         L09B3      lda    #13                                                   * 09B3 86 0D          ..
09B5 A7884F           (../cmds/DLD.valid):00741                    sta    <$004F,X                                              * 09B5 A7 88 4F       '.O
09B8 108E00C8         (../cmds/DLD.valid):00742                    ldy    #200                                                  * 09B8 10 8E 00 C8    ...H
09BC 8601             (../cmds/DLD.valid):00743                    lda    #1                                                    * 09BC 86 01          ..
09BE 103F8C           (../cmds/DLD.valid):00744                    os9    I$WritLn                                              * 09BE 10 3F 8C       .?.
09C1 3520             (../cmds/DLD.valid):00745                    puls   Y                                                     * 09C1 35 20          5
09C3 39               (../cmds/DLD.valid):00746                    rts                                                          * 09C3 39             9
09C4 860D             (../cmds/DLD.valid):00747         L09C4      lda    #13                                                   * 09C4 86 0D          ..
09C6 A780             (../cmds/DLD.valid):00748                    sta    ,X+                                                   * 09C6 A7 80          '.
09C8 3430             (../cmds/DLD.valid):00749                    pshs   Y,X                                                   * 09C8 34 30          40
09CA E747             (../cmds/DLD.valid):00750                    stb    U0007,U                                               * 09CA E7 47          gG
09CC 3148             (../cmds/DLD.valid):00751                    leay   U0008,U                                               * 09CC 31 48          1H
09CE A680             (../cmds/DLD.valid):00752         L09CE      lda    ,X+                                                   * 09CE A6 80          &.
09D0 A7A0             (../cmds/DLD.valid):00753                    sta    ,Y+                                                   * 09D0 A7 A0          '
09D2 5A               (../cmds/DLD.valid):00754                    decb                                                         * 09D2 5A             Z
09D3 26F9             (../cmds/DLD.valid):00755                    bne    L09CE                                                 * 09D3 26 F9          &y
09D5 308DF7A1         (../cmds/DLD.valid):00756                    leax   >L017A,PC                                             * 09D5 30 8D F7 A1    0.w!
09D9 108E0001         (../cmds/DLD.valid):00757                    ldy    #1                                                    * 09D9 10 8E 00 01    ....
09DD 8601             (../cmds/DLD.valid):00758                    lda    #1                                                    * 09DD 86 01          ..
09DF 103F8C           (../cmds/DLD.valid):00759                    os9    I$WritLn                                              * 09DF 10 3F 8C       .?.
09E2 3530             (../cmds/DLD.valid):00760                    puls   Y,X                                                   * 09E2 35 30          50
09E4 17001A           (../cmds/DLD.valid):00761                    lbsr   L0A01                                                 * 09E4 17 00 1A       ...
09E7 39               (../cmds/DLD.valid):00762                    rts                                                          * 09E7 39             9
09E8 3436             (../cmds/DLD.valid):00763         L09E8      pshs   Y,X,D                                                 * 09E8 34 36          46
09EA 30C858           (../cmds/DLD.valid):00764                    leax   <U0058,U                                              * 09EA 30 C8 58       0HX
09ED 4F               (../cmds/DLD.valid):00765                    clra                                                         * 09ED 4F             O
09EE C600             (../cmds/DLD.valid):00766                    ldb    #0                                                    * 09EE C6 00          F.
09F0 103F8D           (../cmds/DLD.valid):00767                    os9    I$GetStt                                              * 09F0 10 3F 8D       .?.
09F3 3088E0           (../cmds/DLD.valid):00768                    leax   -$20,X                                                * 09F3 30 88 E0       0.`
09F6 6F8824           (../cmds/DLD.valid):00769                    clr    <$0024,X                                              * 09F6 6F 88 24       o.$
09F9 308820           (../cmds/DLD.valid):00770                    leax   <$0020,X                                              * 09F9 30 88 20       0.
09FC 103F8E           (../cmds/DLD.valid):00771                    os9    I$SetStt                                              * 09FC 10 3F 8E       .?.
09FF 35B6             (../cmds/DLD.valid):00772                    puls   PC,Y,X,D                                              * 09FF 35 B6          56
0A01 3436             (../cmds/DLD.valid):00773         L0A01      pshs   Y,X,D                                                 * 0A01 34 36          46
0A03 30C858           (../cmds/DLD.valid):00774                    leax   <U0058,U                                              * 0A03 30 C8 58       0HX
0A06 4F               (../cmds/DLD.valid):00775                    clra                                                         * 0A06 4F             O
0A07 C600             (../cmds/DLD.valid):00776                    ldb    #0                                                    * 0A07 C6 00          F.
0A09 103F8D           (../cmds/DLD.valid):00777                    os9    I$GetStt                                              * 0A09 10 3F 8D       .?.
0A0C 3088E0           (../cmds/DLD.valid):00778                    leax   -$20,X                                                * 0A0C 30 88 E0       0.`
0A0F 8601             (../cmds/DLD.valid):00779                    lda    #1                                                    * 0A0F 86 01          ..
0A11 A78824           (../cmds/DLD.valid):00780                    sta    <$0024,X                                              * 0A11 A7 88 24       '.$
0A14 308820           (../cmds/DLD.valid):00781                    leax   <$0020,X                                              * 0A14 30 88 20       0.
0A17 4F               (../cmds/DLD.valid):00782                    clra                                                         * 0A17 4F             O
0A18 103F8E           (../cmds/DLD.valid):00783                    os9    I$SetStt                                              * 0A18 10 3F 8E       .?.
0A1B 35B6             (../cmds/DLD.valid):00784                    puls   PC,Y,X,D                                              * 0A1B 35 B6          56
0A1D 3420             (../cmds/DLD.valid):00785         L0A1D      pshs   Y                                                     * 0A1D 34 20          4
0A1F A680             (../cmds/DLD.valid):00786         L0A1F      lda    ,X+                                                   * 0A1F A6 80          &.
0A21 810D             (../cmds/DLD.valid):00787                    cmpa   #13                                                   * 0A21 81 0D          ..
0A23 102700B0         (../cmds/DLD.valid):00788                    lbeq   L0AD7                                                 * 0A23 10 27 00 B0    .'.0
0A27 8130             (../cmds/DLD.valid):00789                    cmpa   #48                                                   * 0A27 81 30          .0
0A29 25F4             (../cmds/DLD.valid):00790                    bcs    L0A1F                                                 * 0A29 25 F4          %t
0A2B 8139             (../cmds/DLD.valid):00791                    cmpa   #57                                                   * 0A2B 81 39          .9
0A2D 22F0             (../cmds/DLD.valid):00792                    bhi    L0A1F                                                 * 0A2D 22 F0          "p
0A2F 301F             (../cmds/DLD.valid):00793                    leax   -$01,X                                                * 0A2F 30 1F          0.
0A31 A680             (../cmds/DLD.valid):00794         L0A31      lda    ,X+                                                   * 0A31 A6 80          &.
0A33 8130             (../cmds/DLD.valid):00795                    cmpa   #48                                                   * 0A33 81 30          .0
0A35 2506             (../cmds/DLD.valid):00796                    bcs    L0A3D                                                 * 0A35 25 06          %.
0A37 8139             (../cmds/DLD.valid):00797                    cmpa   #57                                                   * 0A37 81 39          .9
0A39 2202             (../cmds/DLD.valid):00798                    bhi    L0A3D                                                 * 0A39 22 02          ".
0A3B 20F4             (../cmds/DLD.valid):00799                    bra    L0A31                                                 * 0A3B 20 F4           t
0A3D 3410             (../cmds/DLD.valid):00800         L0A3D      pshs   X                                                     * 0A3D 34 10          4.
0A3F 301F             (../cmds/DLD.valid):00801                    leax   -$01,X                                                * 0A3F 30 1F          0.
0A41 6FC90088         (../cmds/DLD.valid):00802                    clr    >U0088,U                                              * 0A41 6F C9 00 88    oI..
0A45 6FC90089         (../cmds/DLD.valid):00803                    clr    >U0089,U                                              * 0A45 6F C9 00 89    oI..
0A49 CC0001           (../cmds/DLD.valid):00804                    ldd    #1                                                    * 0A49 CC 00 01       L..
0A4C EDC9008A         (../cmds/DLD.valid):00805                    std    >U008A,U                                              * 0A4C ED C9 00 8A    mI..
0A50 A682             (../cmds/DLD.valid):00806         L0A50      lda    ,-X                                                   * 0A50 A6 82          &.
0A52 8130             (../cmds/DLD.valid):00807                    cmpa   #48                                                   * 0A52 81 30          .0
0A54 2538             (../cmds/DLD.valid):00808                    bcs    L0A8E                                                 * 0A54 25 38          %8
0A56 8139             (../cmds/DLD.valid):00809                    cmpa   #57                                                   * 0A56 81 39          .9
0A58 2234             (../cmds/DLD.valid):00810                    bhi    L0A8E                                                 * 0A58 22 34          "4
0A5A 8030             (../cmds/DLD.valid):00811                    suba   #48                                                   * 0A5A 80 30          .0
0A5C A741             (../cmds/DLD.valid):00812                    sta    U0001,U                                               * 0A5C A7 41          'A
0A5E CC0000           (../cmds/DLD.valid):00813                    ldd    #0                                                    * 0A5E CC 00 00       L..
0A61 6D41             (../cmds/DLD.valid):00814         L0A61      tst    U0001,U                                               * 0A61 6D 41          mA
0A63 2708             (../cmds/DLD.valid):00815                    beq    L0A6D                                                 * 0A63 27 08          '.
0A65 E3C9008A         (../cmds/DLD.valid):00816                    addd   >U008A,U                                              * 0A65 E3 C9 00 8A    cI..
0A69 6A41             (../cmds/DLD.valid):00817                    dec    U0001,U                                               * 0A69 6A 41          jA
0A6B 20F4             (../cmds/DLD.valid):00818                    bra    L0A61                                                 * 0A6B 20 F4           t
0A6D E3C90088         (../cmds/DLD.valid):00819         L0A6D      addd   >U0088,U                                              * 0A6D E3 C9 00 88    cI..
0A71 EDC90088         (../cmds/DLD.valid):00820                    std    >U0088,U                                              * 0A71 ED C9 00 88    mI..
0A75 860A             (../cmds/DLD.valid):00821                    lda    #10                                                   * 0A75 86 0A          ..
0A77 A741             (../cmds/DLD.valid):00822                    sta    U0001,U                                               * 0A77 A7 41          'A
0A79 CC0000           (../cmds/DLD.valid):00823                    ldd    #0                                                    * 0A79 CC 00 00       L..
0A7C 6D41             (../cmds/DLD.valid):00824         L0A7C      tst    U0001,U                                               * 0A7C 6D 41          mA
0A7E 2708             (../cmds/DLD.valid):00825                    beq    L0A88                                                 * 0A7E 27 08          '.
0A80 E3C9008A         (../cmds/DLD.valid):00826                    addd   >U008A,U                                              * 0A80 E3 C9 00 8A    cI..
0A84 6A41             (../cmds/DLD.valid):00827                    dec    U0001,U                                               * 0A84 6A 41          jA
0A86 20F4             (../cmds/DLD.valid):00828                    bra    L0A7C                                                 * 0A86 20 F4           t
0A88 EDC9008A         (../cmds/DLD.valid):00829         L0A88      std    >U008A,U                                              * 0A88 ED C9 00 8A    mI..
0A8C 20C2             (../cmds/DLD.valid):00830                    bra    L0A50                                                 * 0A8C 20 C2           B
0A8E ECC90088         (../cmds/DLD.valid):00831         L0A8E      ldd    >U0088,U                                              * 0A8E EC C9 00 88    lI..
0A92 3510             (../cmds/DLD.valid):00832                    puls   X                                                     * 0A92 35 10          5.
0A94 35A0             (../cmds/DLD.valid):00833                    puls   PC,Y                                                  * 0A94 35 A0          5
0A96 3420             (../cmds/DLD.valid):00834         L0A96      pshs   Y                                                     * 0A96 34 20          4
0A98 EDC90088         (../cmds/DLD.valid):00835                    std    >U0088,U                                              * 0A98 ED C9 00 88    mI..
0A9C 8630             (../cmds/DLD.valid):00836                    lda    #48                                                   * 0A9C 86 30          .0
0A9E A784             (../cmds/DLD.valid):00837                    sta    0,X                                                   * 0A9E A7 84          '.
0AA0 A701             (../cmds/DLD.valid):00838                    sta    $01,X                                                 * 0AA0 A7 01          '.
0AA2 CC000A           (../cmds/DLD.valid):00839                    ldd    #10                                                   * 0AA2 CC 00 0A       L..
0AA5 EDC9008A         (../cmds/DLD.valid):00840                    std    >U008A,U                                              * 0AA5 ED C9 00 8A    mI..
0AA9 ECC90088         (../cmds/DLD.valid):00841                    ldd    >U0088,U                                              * 0AA9 EC C9 00 88    lI..
0AAD 8D13             (../cmds/DLD.valid):00842                    bsr    L0AC2                                                 * 0AAD 8D 13          ..
0AAF CC0001           (../cmds/DLD.valid):00843                    ldd    #1                                                    * 0AAF CC 00 01       L..
0AB2 EDC9008A         (../cmds/DLD.valid):00844                    std    >U008A,U                                              * 0AB2 ED C9 00 8A    mI..
0AB6 ECC90088         (../cmds/DLD.valid):00845                    ldd    >U0088,U                                              * 0AB6 EC C9 00 88    lI..
0ABA 8D06             (../cmds/DLD.valid):00846                    bsr    L0AC2                                                 * 0ABA 8D 06          ..
0ABC 860D             (../cmds/DLD.valid):00847                    lda    #13                                                   * 0ABC 86 0D          ..
0ABE A784             (../cmds/DLD.valid):00848                    sta    0,X                                                   * 0ABE A7 84          '.
0AC0 35A0             (../cmds/DLD.valid):00849                    puls   PC,Y                                                  * 0AC0 35 A0          5
0AC2 A3C9008A         (../cmds/DLD.valid):00850         L0AC2      subd   >U008A,U                                              * 0AC2 A3 C9 00 8A    #I..
0AC6 2504             (../cmds/DLD.valid):00851                    bcs    L0ACC                                                 * 0AC6 25 04          %.
0AC8 6C84             (../cmds/DLD.valid):00852                    inc    0,X                                                   * 0AC8 6C 84          l.
0ACA 20F6             (../cmds/DLD.valid):00853                    bra    L0AC2                                                 * 0ACA 20 F6           v
0ACC E3C9008A         (../cmds/DLD.valid):00854         L0ACC      addd   >U008A,U                                              * 0ACC E3 C9 00 8A    cI..
0AD0 EDC90088         (../cmds/DLD.valid):00855                    std    >U0088,U                                              * 0AD0 ED C9 00 88    mI..
0AD4 3001             (../cmds/DLD.valid):00856                    leax   $01,X                                                 * 0AD4 30 01          0.
0AD6 39               (../cmds/DLD.valid):00857                    rts                                                          * 0AD6 39             9
0AD7 CCFFFF           (../cmds/DLD.valid):00858         L0AD7      ldd    #-1                                                   * 0AD7 CC FF FF       L..
0ADA 35A0             (../cmds/DLD.valid):00859                    puls   PC,Y                                                  * 0ADA 35 A0          5
                      (../cmds/DLD.valid):00860         
0ADC 0B8D68           (../cmds/DLD.valid):00861                    emod
     0ADF             (../cmds/DLD.valid):00862         eom        equ    *
                      (../cmds/DLD.valid):00863                    end
