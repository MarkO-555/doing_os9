                      (          sub.asm):00001         ********************************************************************
                      (          sub.asm):00002         * sub - Sub Battle Simulator
                      (          sub.asm):00003         *
                      (          sub.asm):00004         * $Id$
                      (          sub.asm):00005         *
                      (          sub.asm):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (          sub.asm):00007         * Comment
                      (          sub.asm):00008         * ------------------------------------------------------------------
                      (          sub.asm):00009         *   0      2003/03/28  Paul W. Zibaila
                      (          sub.asm):00010         * Disassembly of original distribution; as assembly continues the
                      (          sub.asm):00011         * various varibles will be identified (hopefully).
                      (          sub.asm):00012         
                      (          sub.asm):00013               nam sub
                      (          sub.asm):00014               ttl Sub Battle Simulator
                      (          sub.asm):00015         
                      (          sub.asm):00016               ifp1
                      (          sub.asm):00017               use defsfile
     0002             (         defsfile):00001         Level   equ   2
                      (         defsfile):00002                 use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                 use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (          sub.asm):00018               endc
                      (          sub.asm):00019         
                      (          sub.asm):00020         * I/O path definitions
     0000             (          sub.asm):00021         StdIn    equ   0
     0001             (          sub.asm):00022         StdOut   equ   1
     0002             (          sub.asm):00023         StdErr   equ   2
                      (          sub.asm):00024         
                      (          sub.asm):00025         * Enum of subroutines
     0000             (          sub.asm):00026         sub_0    equ   0
     0001             (          sub.asm):00027         sub_1    equ   1
     0002             (          sub.asm):00028         sub_2    equ   2
     0003             (          sub.asm):00029         sub_3    equ   3
     0004             (          sub.asm):00030         sub_4    equ   4
     0005             (          sub.asm):00031         sub_5    equ   5
                      (          sub.asm):00032         
                      (          sub.asm):00033         *  defines for 5 bit zero offset instructions
     E640             (          sub.asm):00034         Zldb_u   equ  $E640
     AB40             (          sub.asm):00035         Zadda_u  equ  $AB40
     A740             (          sub.asm):00036         Zsta_u   equ  $A740
     A600             (          sub.asm):00037         Zlda_x   equ  $A600
     A640             (          sub.asm):00038         Zlda_u   equ  $A640
     A700             (          sub.asm):00039         Zsta_x   equ  $A700
     6F40             (          sub.asm):00040         Zclr_u   equ  $6F40
     6D00             (          sub.asm):00041         Ztst_x   equ  $6D00
                      (          sub.asm):00042         
                      (          sub.asm):00043         * class X external label equates
                      (          sub.asm):00044         
     0102             (          sub.asm):00045         X0102 equ $0102     holds the index of the subroutine loaded
     0103             (          sub.asm):00046         X0103 equ $0103     address of subroutine module header
     0105             (          sub.asm):00047         X0105 equ $0105     address of subroutine name string
     0107             (          sub.asm):00048         X0107 equ $0107     address of subroutine module entry point
                      (          sub.asm):00049         
     0109             (          sub.asm):00050         X0109 equ $0109
     010B             (          sub.asm):00051         X010B equ $010B
     010C             (          sub.asm):00052         X010C equ $010C
     010E             (          sub.asm):00053         X010E equ $010E
     0110             (          sub.asm):00054         X0110 equ $0110
     0111             (          sub.asm):00055         X0111 equ $0111
     0112             (          sub.asm):00056         X0112 equ $0112
     0114             (          sub.asm):00057         X0114 equ $0114
     011A             (          sub.asm):00058         X011A equ $011A
     011B             (          sub.asm):00059         X011B equ $011B
     011E             (          sub.asm):00060         X011E equ $011E
     0120             (          sub.asm):00061         X0120 equ $0120
     0122             (          sub.asm):00062         X0122 equ $0122
     0124             (          sub.asm):00063         X0124 equ $0124
     0125             (          sub.asm):00064         X0125 equ $0125
     028F             (          sub.asm):00065         X028F equ $028F
     0290             (          sub.asm):00066         X0290 equ $0290
     0291             (          sub.asm):00067         X0291 equ $0291
     0292             (          sub.asm):00068         X0292 equ $0292
     0294             (          sub.asm):00069         X0294 equ $0294
     0295             (          sub.asm):00070         X0295 equ $0295
     0296             (          sub.asm):00071         X0296 equ $0296
     0297             (          sub.asm):00072         X0297 equ $0297
     0298             (          sub.asm):00073         X0298 equ $0298
     0299             (          sub.asm):00074         X0299 equ $0299
     029C             (          sub.asm):00075         X029C equ $029C
     029D             (          sub.asm):00076         X029D equ $029D
     029E             (          sub.asm):00077         X029E equ $029E
     02A0             (          sub.asm):00078         X02A0 equ $02A0
     02A2             (          sub.asm):00079         X02A2 equ $02A2
     02A4             (          sub.asm):00080         X02A4 equ $02A4
     0355             (          sub.asm):00081         X0355 equ $0355
     0356             (          sub.asm):00082         X0356 equ $0356
     0359             (          sub.asm):00083         X0359 equ $0359
     035F             (          sub.asm):00084         X035F equ $035F
     04F7             (          sub.asm):00085         X04F7 equ $04F7
     04F8             (          sub.asm):00086         X04F8 equ $04F8
     04F9             (          sub.asm):00087         X04F9 equ $04F9
     04FA             (          sub.asm):00088         X04FA equ $04FA
     04FB             (          sub.asm):00089         X04FB equ $04FB
     04FE             (          sub.asm):00090         X04FE equ $04FE
     04FF             (          sub.asm):00091         X04FF equ $04FF
     0500             (          sub.asm):00092         X0500 equ $0500
     05CE             (          sub.asm):00093         X05CE equ $05CE
     1D3F             (          sub.asm):00094         X1D3F equ $1D3F
     1D43             (          sub.asm):00095         X1D43 equ $1D43
     1D6D             (          sub.asm):00096         X1D6D equ $1D6D
     1D7B             (          sub.asm):00097         X1D7B equ $1D7B
     1D87             (          sub.asm):00098         X1D87 equ $1D87
     1D89             (          sub.asm):00099         X1D89 equ $1D89
     1D8B             (          sub.asm):00100         X1D8B equ $1D8B
     1D8D             (          sub.asm):00101         X1D8D equ $1D8D
     1DA5             (          sub.asm):00102         X1DA5 equ $1DA5
     1DA7             (          sub.asm):00103         X1DA7 equ $1DA7
     1DB9             (          sub.asm):00104         X1DB9 equ $1DB9
     1DBF             (          sub.asm):00105         X1DBF equ $1DBF
     1DC9             (          sub.asm):00106         X1DC9 equ $1DC9         
     1DDA             (          sub.asm):00107         X1DDA equ $1DDA         temp store for sub index smap call and input reads
     1DDB             (          sub.asm):00108         X1DDB equ $1DDB         temp store for jmptbl offset smap call
     1DDC             (          sub.asm):00109         X1DDC equ $1DDC
     1DEF             (          sub.asm):00110         X1DEF equ $1DEF
     1DF0             (          sub.asm):00111         X1DF0 equ $1DF0
     1DF2             (          sub.asm):00112         X1DF2 equ $1DF2
     1DF3             (          sub.asm):00113         X1DF3 equ $1DF3
     1DF5             (          sub.asm):00114         X1DF5 equ $1DF5
     1DF6             (          sub.asm):00115         X1DF6 equ $1DF6
     1DF7             (          sub.asm):00116         X1DF7 equ $1DF7
     1DF9             (          sub.asm):00117         X1DF9 equ $1DF9
     1DFA             (          sub.asm):00118         X1DFA equ $1DFA
     1DFC             (          sub.asm):00119         X1DFC equ $1DFC
     1DFD             (          sub.asm):00120         X1DFD equ $1DFD
     1DFF             (          sub.asm):00121         X1DFF equ $1DFF
     1E00             (          sub.asm):00122         X1E00 equ $1E00
     1E02             (          sub.asm):00123         X1E02 equ $1E02
     1E0D             (          sub.asm):00124         X1E0D equ $1E0D
     1E0E             (          sub.asm):00125         X1E0E equ $1E0E
     1E10             (          sub.asm):00126         X1E10 equ $1E10
     1E11             (          sub.asm):00127         X1E11 equ $1E11
     1E13             (          sub.asm):00128         X1E13 equ $1E13
     1E16             (          sub.asm):00129         X1E16 equ $1E16      year value
     1E17             (          sub.asm):00130         X1E17 equ $1E17
     1E19             (          sub.asm):00131         X1E19 equ $1E19
     1E1A             (          sub.asm):00132         X1E1A equ $1E1A
     1E1B             (          sub.asm):00133         X1E1B equ $1E1B
     1E1C             (          sub.asm):00134         X1E1C equ $1E1C
     1E1D             (          sub.asm):00135         X1E1D equ $1E1D
     1E1E             (          sub.asm):00136         X1E1E equ $1E1E
     1E1F             (          sub.asm):00137         X1E1F equ $1E1F
     1E20             (          sub.asm):00138         X1E20 equ $1E20
     1E22             (          sub.asm):00139         X1E22 equ $1E22
     1E23             (          sub.asm):00140         X1E23 equ $1E23
     4265             (          sub.asm):00141         X4265 equ $4265
     4C75             (          sub.asm):00142         X4C75 equ $4C75      side      0=German 1=US
     4C76             (          sub.asm):00143         X4C76 equ $4C76      game type
     4C77             (          sub.asm):00144         X4C77 equ $4C77      game level
     4C80             (          sub.asm):00145         X4C80 equ $4C80
     4C81             (          sub.asm):00146         X4C81 equ $4C81
     4C82             (          sub.asm):00147         X4C82 equ $4C82
     4C84             (          sub.asm):00148         X4C84 equ $4C84
     4C85             (          sub.asm):00149         X4C85 equ $4C85
     4C87             (          sub.asm):00150         X4C87 equ $4C87
     4C88             (          sub.asm):00151         X4C88 equ $4C88
     4CA0             (          sub.asm):00152         X4CA0 equ $4CA0
     4CA1             (          sub.asm):00153         X4CA1 equ $4CA1
     4CA2             (          sub.asm):00154         X4CA2 equ $4CA2
     4CA3             (          sub.asm):00155         X4CA3 equ $4CA3
     4CB4             (          sub.asm):00156         X4CB4 equ $4CB4
     4CBD             (          sub.asm):00157         X4CBD equ $4CBD
     4CC2             (          sub.asm):00158         X4CC2 equ $4CC2
     4CCA             (          sub.asm):00159         X4CCA equ $4CCA
     4CCC             (          sub.asm):00160         X4CCC equ $4CCC
     4CCD             (          sub.asm):00161         X4CCD equ $4CCD
     4CD0             (          sub.asm):00162         X4CD0 equ $4CD0
     4CD1             (          sub.asm):00163         X4CD1 equ $4CD1
     4CD2             (          sub.asm):00164         X4CD2 equ $4CD2
     4CD3             (          sub.asm):00165         X4CD3 equ $4CD3
     4CD4             (          sub.asm):00166         X4CD4 equ $4CD4
     4CD5             (          sub.asm):00167         X4CD5 equ $4CD5
     4CD9             (          sub.asm):00168         X4CD9 equ $4CD9
     4CDA             (          sub.asm):00169         X4CDA equ $4CDA
     4CDF             (          sub.asm):00170         X4CDF equ $4CDF
     4CE1             (          sub.asm):00171         X4CE1 equ $4CE1
     4CE3             (          sub.asm):00172         X4CE3 equ $4CE3
     4CEE             (          sub.asm):00173         X4CEE equ $4CEE
     4CEF             (          sub.asm):00174         X4CEF equ $4CEF
     4CF1             (          sub.asm):00175         X4CF1 equ $4CF1
     4CF2             (          sub.asm):00176         X4CF2 equ $4CF2
     4CF3             (          sub.asm):00177         X4CF3 equ $4CF3
     4CF7             (          sub.asm):00178         X4CF7 equ $4CF7
     4CFA             (          sub.asm):00179         X4CFA equ $4CFA
     4CFB             (          sub.asm):00180         X4CFB equ $4CFB
     4CFF             (          sub.asm):00181         X4CFF equ $4CFF
     4D00             (          sub.asm):00182         X4D00 equ $4D00
     4D0F             (          sub.asm):00183         X4D0F equ $4D0F
     4D10             (          sub.asm):00184         X4D10 equ $4D10
     4D11             (          sub.asm):00185         X4D11 equ $4D11
     4D14             (          sub.asm):00186         X4D14 equ $4D14
     4D15             (          sub.asm):00187         X4D15 equ $4D15
     4D16             (          sub.asm):00188         X4D16 equ $4D16
     4D17             (          sub.asm):00189         X4D17 equ $4D17
     4D19             (          sub.asm):00190         X4D19 equ $4D19
     4D1B             (          sub.asm):00191         X4D1B equ $4D1B
     4D1D             (          sub.asm):00192         X4D1D equ $4D1D
     4D1F             (          sub.asm):00193         X4D1F equ $4D1F
     4D21             (          sub.asm):00194         X4D21 equ $4D21
     4D25             (          sub.asm):00195         X4D25 equ $4D25
     4D26             (          sub.asm):00196         X4D26 equ $4D26
     4D27             (          sub.asm):00197         X4D27 equ $4D27
     4D28             (          sub.asm):00198         X4D28 equ $4D28
     4D29             (          sub.asm):00199         X4D29 equ $4D29
     4D2A             (          sub.asm):00200         X4D2A equ $4D2A
     4D2B             (          sub.asm):00201         X4D2B equ $4D2B
     4D2C             (          sub.asm):00202         X4D2C equ $4D2C
     4D30             (          sub.asm):00203         X4D30 equ $4D30
     4D3A             (          sub.asm):00204         X4D3A equ $4D3A
                      (          sub.asm):00205         
                      (          sub.asm):00206         
     71C9             (          sub.asm):00207         X71C9 equ $71C9
     71CB             (          sub.asm):00208         X71CB equ $71CB
                      (          sub.asm):00209         
                      (          sub.asm):00210         * subroutine address from code loaded out of sub6
     7228             (          sub.asm):00211         X7228 equ $7228
     723C             (          sub.asm):00212         X723C equ $723C
     72C3             (          sub.asm):00213         X72C3 equ $72C3
     72F3             (          sub.asm):00214         X72F3 equ $72F3
     7304             (          sub.asm):00215         X7304 equ $7304    calcs a integer based on input passed in d
     735B             (          sub.asm):00216         X735B equ $735B    change palette routine
     7477             (          sub.asm):00217         X7477 equ $7477    some sort of copy routine accepts ascii between $20-$5F
     74CC             (          sub.asm):00218         X74CC equ $74CC
     74D9             (          sub.asm):00219         X74D9 equ $74D9
     7556             (          sub.asm):00220         X7556 equ $7556
     7604             (          sub.asm):00221         X7604 equ $7604
     7648             (          sub.asm):00222         X7648 equ $7648
     765F             (          sub.asm):00223         X765F equ $765F
     7691             (          sub.asm):00224         X7691 equ $7691
     76A4             (          sub.asm):00225         X76A4 equ $76A4
     76B9             (          sub.asm):00226         X76B9 equ $76B9
     76F7             (          sub.asm):00227         X76F7 equ $76F7
     7718             (          sub.asm):00228         X7718 equ $7718
     7720             (          sub.asm):00229         X7720 equ $7720
     7843             (          sub.asm):00230         X7843 equ $7843
     7866             (          sub.asm):00231         X7866 equ $7866
     7889             (          sub.asm):00232         X7889 equ $7889
     7A23             (          sub.asm):00233         X7A23 equ $7A23
     7A3A             (          sub.asm):00234         X7A3A equ $7A3A
     7A68             (          sub.asm):00235         X7A68 equ $7A68
     7A89             (          sub.asm):00236         X7A89 equ $7A89
     7AA7             (          sub.asm):00237         X7AA7 equ $7AA7
     7D56             (          sub.asm):00238         X7D56 equ $7D56
     7D75             (          sub.asm):00239         X7D75 equ $7D75
     7DB4             (          sub.asm):00240         X7DB4 equ $7DB4
                      (          sub.asm):00241         
     7217             (          sub.asm):00242         Sub6Load equ $7217
     0BED             (          sub.asm):00243         Sub6sz   equ $0BED     ( sub6 file size)
     3C00             (          sub.asm):00244         STitlesz equ  $3C00    ( file is larger, padded with 00)
                      (          sub.asm):00245              
     0011             (          sub.asm):00246         tylg    set   Prgrm+Objct   
     0081             (          sub.asm):00247         atrv    set   ReEnt+rev
     0001             (          sub.asm):00248         rev     set   $01
     0010             (          sub.asm):00249         edition set   $10
                      (          sub.asm):00250           
0000 87CD1FCD000D1181 (          sub.asm):00251               mod   eom,name,tylg,atrv,start,size
     FA00107E04
                      (          sub.asm):00252         
                      (          sub.asm):00253         
                      (          sub.asm):00254         
                      (          sub.asm):00255         * OS9 data area definitions
                      (          sub.asm):00256         
                      (          sub.asm):00257               org 0
                      (          sub.asm):00258         
0000.                 (          sub.asm):00259         D0000 rmb 32260
     7E04             (          sub.asm):00260         D7e04 equ . 
                      (          sub.asm):00261         
     7E04             (          sub.asm):00262         size  equ .
                      (          sub.asm):00263         
000D 7375E2           (          sub.asm):00264         name  fcs "sub"
                      (          sub.asm):00265         
                      (          sub.asm):00266         
0010 10               (          sub.asm):00267         start fcb   edition          they put the "start" at the wrong byte :-)
0011 CE0100           (          sub.asm):00268               ldu   #$0100           set u end of direct page
0014 8E0102           (          sub.asm):00269               ldx   #$0102           set x to the word past it start of data area
0017 CC7E04           (          sub.asm):00270               ldd   #$7E04           set d to the end of the data area
001A 830102           (          sub.asm):00271               subd  #$0102           find the difference
001D 1F02             (          sub.asm):00272               tfr   d,y              move that to index reg y
                      (          sub.asm):00273         
                      (          sub.asm):00274         *                            make this inc by 2's next rev since
                      (          sub.asm):00275         *                            we know its an even number
001F                  (          sub.asm):00276         clr_mem
001F 6F80             (          sub.asm):00277         L001F clr   ,x+              clear x and bump one byte
0021 313F             (          sub.asm):00278               leay  -1,y             dec the counter 
0023 26FA             (          sub.asm):00279               bne   clr_mem          loop till we're done  L001F
                      (          sub.asm):00280         
                      (          sub.asm):00281         
                      (          sub.asm):00282         * Intercept - Sets a signal intercept trap
                      (          sub.asm):00283         *            
                      (          sub.asm):00284         * entry:
                      (          sub.asm):00285         *       x -> address of the intercept routine 
                      (          sub.asm):00286         *       u -> starting address of the routine's memory area
                      (          sub.asm):00287         * exit:
                      (          sub.asm):00288         *       Signals sent to the process cause the intercept routine
                      (          sub.asm):00289         *       to be called instead of the process being killed. 
                      (          sub.asm):00290         *
                      (          sub.asm):00291                     
0025 CE0000           (          sub.asm):00292               ldu   #$0000
0028 308D0695         (          sub.asm):00293               leax  intercept,pcr
002C 103F09           (          sub.asm):00294               os9   F$Icpt
                      (          sub.asm):00295         
                      (          sub.asm):00296         
                      (          sub.asm):00297         * Open Path - Opens a path to the an existing file or device
                      (          sub.asm):00298         *             as specified by the path list
                      (          sub.asm):00299         * entry:
                      (          sub.asm):00300         *       a -> access mode (D S PE PW PR E W R) 
                      (          sub.asm):00301         *       x -> address of the path list 
                      (          sub.asm):00302         *
                      (          sub.asm):00303         * exit:
                      (          sub.asm):00304         *       a -> path number 
                      (          sub.asm):00305         *       x -> address of the last btye of the path list + 1 
                      (          sub.asm):00306         *
                      (          sub.asm):00307         * error:
                      (          sub.asm):00308         *       CC -> Carry set on error
                      (          sub.asm):00309         *       b  -> error code (if any)
                      (          sub.asm):00310               
                      (          sub.asm):00311               
002F 8601             (          sub.asm):00312               lda   #READ.
0031 308D1F41         (          sub.asm):00313               leax  Sub6,pcr         reads this "subroutine" in as a data file
0035 103F84           (          sub.asm):00314               os9   I$Open
                      (          sub.asm):00315               
                      (          sub.asm):00316         * Read  - Reads n bytes from the specified path
                      (          sub.asm):00317         * entry:
                      (          sub.asm):00318         *       a -> path number
                      (          sub.asm):00319         *       x -> address in which to store the data
                      (          sub.asm):00320         *       y -> is the number of bytes to read
                      (          sub.asm):00321         *
                      (          sub.asm):00322         * exit:
                      (          sub.asm):00323         *       y -> number of bytes read 
                      (          sub.asm):00324         *
                      (          sub.asm):00325         * error:
                      (          sub.asm):00326         *       CC -> Carry set on error
                      (          sub.asm):00327         *       b  -> error code (if any)
                      (          sub.asm):00328               
0038 3402             (          sub.asm):00329               pshs  a                push the path num on the stack (not needed)
003A 8E7217           (          sub.asm):00330               ldx   #Sub6Load        base address to load file  
003D 108E0BED         (          sub.asm):00331               ldy   #Sub6sz          size of the file 
0041 103F89           (          sub.asm):00332               os9   I$Read           read it in
0044 3502             (          sub.asm):00333               puls  a                pull the path num off the stack (not needed)
                      (          sub.asm):00334               
0046 103F8F           (          sub.asm):00335               os9   I$Close          close the sub6 file
                      (          sub.asm):00336               
                      (          sub.asm):00337         *  Set up screens 
                      (          sub.asm):00338         *  SetStat Function Code $8B 
                      (          sub.asm):00339         *          Allocates and maps high res screen 
                      (          sub.asm):00340         *          into application address space
                      (          sub.asm):00341         * entry:
                      (          sub.asm):00342         *       a -> path number 
                      (          sub.asm):00343         *       b -> function code $8B (SS.AScrn)
                      (          sub.asm):00344         *       x -> screen type 
                      (          sub.asm):00345         *            0 = 640 x 192 x 2 colors (16K)
                      (          sub.asm):00346         *            1 = 320 x 192 x 4 colors (16K)
                      (          sub.asm):00347         *            2 = 160 x 192 x 16 colors (16K)
                      (          sub.asm):00348         *            3 = 640 x 192 x 4 colors (32K)
                      (          sub.asm):00349         *            4 = 320 x 192 x 16 colors (32K)
                      (          sub.asm):00350         *
                      (          sub.asm):00351         * exit:
                      (          sub.asm):00352         *       x -> application address space of screen
                      (          sub.asm):00353         *       y -> screen number (1-3)
                      (          sub.asm):00354         *
                      (          sub.asm):00355         * error:
                      (          sub.asm):00356         *       CC -> Carry set on error
                      (          sub.asm):00357         *       b  -> error code (if any)
                      (          sub.asm):00358         * 
                      (          sub.asm):00359         *  Call use VDGINT allocates high res graphics for use with screens 
                      (          sub.asm):00360         *  updated by the process, does not clear the screens only allocates
                      (          sub.asm):00361         *  See OS-9 Technical Reference 8-142 for more details
                      (          sub.asm):00362               
0049 8E0001           (          sub.asm):00363               ldx   #$0001                   320x192x4 colors (16K)
004C CC018B           (          sub.asm):00364               ldd   #(StdOut*$100)+SS.Ascrn  path/set stat code
004F 103F8E           (          sub.asm):00365               os9   I$SetStt                 make the call
0052 102503F6         (          sub.asm):00366               lbcs  BailOut
                      (          sub.asm):00367               
0056 BF1D8B           (          sub.asm):00368               stx   X1D8B                    store the screen address here 
0059 BF1D8D           (          sub.asm):00369               stx   X1D8D                    and here and
005C BF1D89           (          sub.asm):00370               stx   X1D89                    here  (could have at least put them in order)
                      (          sub.asm):00371               
005F 8601             (          sub.asm):00372               lda   #READ.           read only mode
0061 308D1F37         (          sub.asm):00373               leax  STitle,pcr       addr of the title picture        
0065 103F84           (          sub.asm):00374               os9   I$Open           open that rascal
                      (          sub.asm):00375               
0068 3402             (          sub.asm):00376               pshs  a                "always" push the path number
006A BE1D89           (          sub.asm):00377               ldx   X1D89            addr to store it at 
006D 108E3C00         (          sub.asm):00378               ldy   #STitlesz        load 15K of screen space
0071 A6E4             (          sub.asm):00379               lda   ,s               get that path number for no good reason
0073 103F89           (          sub.asm):00380               os9   I$Read           read  it in
0076 3502             (          sub.asm):00381               puls  a                and again get the path number in a
                      (          sub.asm):00382               
0078 103F8F           (          sub.asm):00383               os9   I$Close          close the file STitle.pic
                      (          sub.asm):00384               
                      (          sub.asm):00385         * the following code changes the 0-3 palettes via a subroutine in sub6      
                      (          sub.asm):00386               
007B CC0000           (          sub.asm):00387               ldd   #$0000           PRN,CTN
007E BD735B           (          sub.asm):00388               jsr   X735B            call palette change
                      (          sub.asm):00389               
0081 CC010F           (          sub.asm):00390               ldd   #$010F           PRN,CTN
0084 BD735B           (          sub.asm):00391               jsr   X735B            call palette change
                      (          sub.asm):00392               
0087 CC0207           (          sub.asm):00393               ldd   #$0207           PRN,CTN
008A BD735B           (          sub.asm):00394               jsr   X735B            call palette change
                      (          sub.asm):00395               
008D CC033F           (          sub.asm):00396               ldd   #$033F           PRN,CTN
0090 BD735B           (          sub.asm):00397               jsr   X735B            call palette change
                      (          sub.asm):00398               
                      (          sub.asm):00399         *  SS.Dscrn causes VDGINT to display a screen allocated by SS.AScrn
                      (          sub.asm):00400         *  SetStat Function Code $8C
                      (          sub.asm):00401         *
                      (          sub.asm):00402         * entry:
                      (          sub.asm):00403         *       a -> path number 
                      (          sub.asm):00404         *       b -> function code $8C (SS.DScrn)
                      (          sub.asm):00405         *       y -> screen number
                      (          sub.asm):00406         *            0 = text screen (32 x 16)
                      (          sub.asm):00407         *            1-3 = high resolution screen
                      (          sub.asm):00408         *
                      (          sub.asm):00409         * error:
                      (          sub.asm):00410         *       CC -> Carry set on error
                      (          sub.asm):00411         *       b  -> error code (if any)
                      (          sub.asm):00412               
                      (          sub.asm):00413               
0093 108E0001         (          sub.asm):00414               ldy   #$01                     screen number ( the screen allocated by ss.ascrn)
0097 CC018C           (          sub.asm):00415               ldd   #(StdOut*$100)+SS.Dscrn  $018C
009A 103F8E           (          sub.asm):00416               os9   I$SetStt                 call it in
                      (          sub.asm):00417               
                      (          sub.asm):00418               
                      (          sub.asm):00419         * F$NMLoad - Loads one or more modules from a file but does not map the module
                      (          sub.asm):00420         * into user's address space
                      (          sub.asm):00421         * entry:
                      (          sub.asm):00422         *      a -> type/language byte
                      (          sub.asm):00423         *      x -> address of the path list
                      (          sub.asm):00424         *           with out path list default path is current execution dir
                      (          sub.asm):00425         *
                      (          sub.asm):00426         * exit:
                      (          sub.asm):00427         *      a -> type/language
                      (          sub.asm):00428         *      b -> module revision
                      (          sub.asm):00429         *      x -> address of the last byte in the pathlist + 1
                      (          sub.asm):00430         *      y -> storageb requirements of the module
                      (          sub.asm):00431         *
                      (          sub.asm):00432         * error:
                      (          sub.asm):00433         *      b  -> error code if any
                      (          sub.asm):00434         *      cc -> carry set on error
                      (          sub.asm):00435               
009D 308D1F0F         (          sub.asm):00436               leax  Sub2,pcr
00A1 8621             (          sub.asm):00437               lda   #SbRtn+Objct
00A3 103F22           (          sub.asm):00438               os9   F$NMLoad
00A6 102503A2         (          sub.asm):00439               lbcs  BailOut
                      (          sub.asm):00440               
                      (          sub.asm):00441               
                      (          sub.asm):00442         * F$Link - Links to a memory module that has the specified name, language and type
                      (          sub.asm):00443         * entry:
                      (          sub.asm):00444         *      a -> type/language byte
                      (          sub.asm):00445         *      x -> address of the module name
                      (          sub.asm):00446         *
                      (          sub.asm):00447         * exit:
                      (          sub.asm):00448         *      a -> type/language
                      (          sub.asm):00449         *      b -> attributes/module revision
                      (          sub.asm):00450         *      x -> address of the last byte in the modulename + 1
                      (          sub.asm):00451         *      y -> module entry point absolute address
                      (          sub.asm):00452         *      u -> module header absolute address
                      (          sub.asm):00453               
00AA 8621             (          sub.asm):00454               lda   #SbRtn+Objct  
00AC 308D1F00         (          sub.asm):00455               leax  Sub2,pcr
00B0 103F00           (          sub.asm):00456               os9   F$Link
                      (          sub.asm):00457               
00B3 308D1EF9         (          sub.asm):00458               leax  Sub2,pcr   
00B7 BF0105           (          sub.asm):00459               stx   X0105            subroutine name string address
00BA 10BF0107         (          sub.asm):00460               sty   X0107            subroutine module entry point abs addr
00BE FF0103           (          sub.asm):00461               stu   X0103            subroutine module header abs addr 
                      (          sub.asm):00462               
00C1 8602             (          sub.asm):00463               lda   #sub_2
00C3 B70102           (          sub.asm):00464               sta   X0102            index of the subroutine currently loaded
                      (          sub.asm):00465               
                      (          sub.asm):00466               
                      (          sub.asm):00467         *                              why do we load sub2 and immediantly load and execute something in sub1?      
                      (          sub.asm):00468         *                              prior to smap call load acca with index of subroutine
                      (          sub.asm):00469         *                              and load accb with and index into the jump tables at entry of each subroutine
00C6 CC0100           (          sub.asm):00470               ldd   #(sub_1*$100)+$00  turns echo and pause off  
00C9 1703D2           (          sub.asm):00471               lbsr  SMap 
                      (          sub.asm):00472               
00CC 8633             (          sub.asm):00473               lda   #$33
00CE 1704C7           (          sub.asm):00474               lbsr  L0598
                      (          sub.asm):00475         
00D1 B60500           (          sub.asm):00476         L00D1 lda   X0500
00D4 BA4C82           (          sub.asm):00477               ora   X4C82
00D7 2646             (          sub.asm):00478               bne   L011F
                      (          sub.asm):00479         
00D9 BE0292           (          sub.asm):00480               ldx   X0292
00DC 2636             (          sub.asm):00481               bne   L0114
                      (          sub.asm):00482         
00DE 8E0005           (          sub.asm):00483               ldx   #$0005
00E1 BF0292           (          sub.asm):00484               stx   X0292
                      (          sub.asm):00485         
00E4 171B4D           (          sub.asm):00486               lbsr  L1C34
00E7 170940           (          sub.asm):00487               lbsr  L0A2A
00EA 171DB5           (          sub.asm):00488               lbsr  L1EA2
00ED 171201           (          sub.asm):00489               lbsr  L12F1
00F0 1715DD           (          sub.asm):00490               lbsr  L16D0
00F3 171798           (          sub.asm):00491               lbsr  L188E
00F6 171804           (          sub.asm):00492               lbsr  L18FD
00F9 1718AF           (          sub.asm):00493               lbsr  L19AB
00FC 17199F           (          sub.asm):00494               lbsr  L1A9E
00FF 171A24           (          sub.asm):00495               lbsr  L1B26
0102 171ABA           (          sub.asm):00496               lbsr  L1BBF
0105 1710F4           (          sub.asm):00497               lbsr  L11FC
0108 171020           (          sub.asm):00498               lbsr  L112B
010B 170F92           (          sub.asm):00499               lbsr  L10A0
010E 170A9E           (          sub.asm):00500               lbsr  L0BAF
0111 1716BA           (          sub.asm):00501               lbsr  L17CE
                      (          sub.asm):00502         
0114 BE0292           (          sub.asm):00503         L0114 ldx   X0292
0117 301F             (          sub.asm):00504               leax  -1,x
0119 BF0292           (          sub.asm):00505               stx   X0292
011C 170D57           (          sub.asm):00506               lbsr  L0E76
                      (          sub.asm):00507         
011F 170585           (          sub.asm):00508         L011F lbsr  L06A7
0122 BD7D56           (          sub.asm):00509               jsr   X7D56
                      (          sub.asm):00510         
0125 1706E9           (          sub.asm):00511               lbsr  InpReady
0128 4D               (          sub.asm):00512               tsta  
0129 27A6             (          sub.asm):00513               beq   L00D1
012B 17071C           (          sub.asm):00514               lbsr  L084A
012E 7F0110           (          sub.asm):00515               clr   X0110
0131 170007           (          sub.asm):00516               lbsr  L013B
0134 B60110           (          sub.asm):00517               lda   X0110
0137 2798             (          sub.asm):00518               beq   L00D1
0139 20E4             (          sub.asm):00519               bra   L011F
                      (          sub.asm):00520         
013B 8138             (          sub.asm):00521         L013B cmpa  #$38
013D 2206             (          sub.asm):00522               bhi   L0145
013F 8131             (          sub.asm):00523               cmpa  #$31
0141 10240453         (          sub.asm):00524               lbhs  L0598
                      (          sub.asm):00525         
0145 8162             (          sub.asm):00526         L0145 cmpa  #$62
0147 10270145         (          sub.asm):00527               lbeq  L0290
014B 8164             (          sub.asm):00528               cmpa  #$64
014D 10270205         (          sub.asm):00529               lbeq  L0356
0151 8165             (          sub.asm):00530               cmpa  #$65
0153 1027013F         (          sub.asm):00531               lbeq  L0296
0157 8166             (          sub.asm):00532               cmpa  #$66
0159 10270260         (          sub.asm):00533               lbeq  L03BD
015D 8167             (          sub.asm):00534               cmpa  #$67
015F 10270139         (          sub.asm):00535               lbeq  L029C
0163 8168             (          sub.asm):00536               cmpa  #$68
0165 102701D5         (          sub.asm):00537               lbeq  L033E
0169 8169             (          sub.asm):00538               cmpa  #$69
016B 10270133         (          sub.asm):00539               lbeq  L02A2
016F 816A             (          sub.asm):00540               cmpa  #$6A
0171 10270133         (          sub.asm):00541               lbeq  L02A8
0175 814A             (          sub.asm):00542               cmpa  #$4A
0177 10270133         (          sub.asm):00543               lbeq  L02AE
017B 816B             (          sub.asm):00544               cmpa  #$6B
017D 102701C3         (          sub.asm):00545               lbeq  L0344
0181 816D             (          sub.asm):00546               cmpa  #$6D
0183 1027012D         (          sub.asm):00547               lbeq  L02B4
0187 816F             (          sub.asm):00548               cmpa  #$6F
0189 1027012D         (          sub.asm):00549               lbeq  L02BA
018D 8170             (          sub.asm):00550               cmpa  #$70
018F 1027012D         (          sub.asm):00551               lbeq  L02C0
0193 8171             (          sub.asm):00552               cmpa  #$71
0195 1027013F         (          sub.asm):00553               lbeq  L02D8
0199 8172             (          sub.asm):00554               cmpa  #$72
019B 10270127         (          sub.asm):00555               lbeq  L02C6
019F 8173             (          sub.asm):00556               cmpa  #$73
01A1 10270127         (          sub.asm):00557               lbeq  L02CC
01A5 8174             (          sub.asm):00558               cmpa  #$74
01A7 10270127         (          sub.asm):00559               lbeq  L02D2
01AB 8175             (          sub.asm):00560               cmpa  #$75
01AD 1027012D         (          sub.asm):00561               lbeq  L02DE
01B1 8176             (          sub.asm):00562               cmpa  #$76
01B3 1027012D         (          sub.asm):00563               lbeq  L02E4
01B7 8177             (          sub.asm):00564               cmpa  #$77
01B9 10270252         (          sub.asm):00565               lbeq  L040F
01BD 8178             (          sub.asm):00566               cmpa  #$78
01BF 10270127         (          sub.asm):00567               lbeq  L02EA
01C3 8179             (          sub.asm):00568               cmpa  #$79
01C5 10270127         (          sub.asm):00569               lbeq  L02F0
01C9 817A             (          sub.asm):00570               cmpa  #$7A
01CB 10270127         (          sub.asm):00571               lbeq  L02F6
01CF 812C             (          sub.asm):00572               cmpa  #$2C
01D1 10270175         (          sub.asm):00573               lbeq  L034A
01D5 812E             (          sub.asm):00574               cmpa  #$2E
01D7 10270175         (          sub.asm):00575               lbeq  L0350
01DB 8108             (          sub.asm):00576               cmpa  #8
01DD 1027015D         (          sub.asm):00577               lbeq  L033E
01E1 8109             (          sub.asm):00578               cmpa  #$09
01E3 1027015D         (          sub.asm):00579               lbeq  L0344
01E7 810C             (          sub.asm):00580               cmpa  #$0C
01E9 10270139         (          sub.asm):00581               lbeq  L0326
01ED 810A             (          sub.asm):00582               cmpa  #$0A
01EF 1027012D         (          sub.asm):00583               lbeq  L0320
01F3 81B1             (          sub.asm):00584               cmpa  #$B1
01F5 10270133         (          sub.asm):00585               lbeq  L032C
01F9 81B2             (          sub.asm):00586               cmpa  #$B2
01FB 10270177         (          sub.asm):00587               lbeq  L0376
01FF 8130             (          sub.asm):00588               cmpa  #$30
0201 102701B2         (          sub.asm):00589               lbeq  L03B7
0205 8139             (          sub.asm):00590               cmpa  #$39
0207 102701A0         (          sub.asm):00591               lbeq  L03AB
020B 812F             (          sub.asm):00592               cmpa  #$2F
020D 10270079         (          sub.asm):00593               lbeq  L028A
0211 812A             (          sub.asm):00594               cmpa  #$2A
0213 10270115         (          sub.asm):00595               lbeq  L032C
0217 813A             (          sub.asm):00596               cmpa  #$3A
0219 1027010F         (          sub.asm):00597               lbeq  L032C
021D 813D             (          sub.asm):00598               cmpa  #$3D
021F 10270153         (          sub.asm):00599               lbeq  L0376
0223 812D             (          sub.asm):00600               cmpa  #$2D
0225 1027014D         (          sub.asm):00601               lbeq  L0376
0229 8101             (          sub.asm):00602               cmpa  #1
022B 102700D9         (          sub.asm):00603               lbeq  L0308
022F 8102             (          sub.asm):00604               cmpa  #2
0231 1027016D         (          sub.asm):00605               lbeq  L03A2
0235 8104             (          sub.asm):00606               cmpa  #4
0237 102700F7         (          sub.asm):00607               lbeq  L0332
023B 8106             (          sub.asm):00608               cmpa  #6
023D 102700F7         (          sub.asm):00609               lbeq  L0338
0241 8107             (          sub.asm):00610               cmpa  #7
0243 10270486         (          sub.asm):00611               lbeq  L06CD
0247 810B             (          sub.asm):00612               cmpa  #$0B
0249 102700C7         (          sub.asm):00613               lbeq  L0314
024D 810D             (          sub.asm):00614               cmpa  #$0D
024F 10270115         (          sub.asm):00615               lbeq  L0368
0253 8112             (          sub.asm):00616               cmpa  #$12
0255 102700A9         (          sub.asm):00617               lbeq  L0302
0259 8113             (          sub.asm):00618               cmpa  #$13
025B 1027009D         (          sub.asm):00619               lbeq  L02FC
025F 810E             (          sub.asm):00620               cmpa  #$0E
0261 10270134         (          sub.asm):00621               lbeq  L0399
0265 810F             (          sub.asm):00622               cmpa  #$0F
0267 102700A3         (          sub.asm):00623               lbeq  L030E
026B 8110             (          sub.asm):00624               cmpa  #$10
026D 102700F1         (          sub.asm):00625               lbeq  L0362
0271 8111             (          sub.asm):00626               cmpa  #$11
0273 102701BE         (          sub.asm):00627               lbeq  L0435
0277 8114             (          sub.asm):00628               cmpa  #$14
0279 10270107         (          sub.asm):00629               lbeq  L0384
027D 8116             (          sub.asm):00630               cmpa  #$16
027F 102700D9         (          sub.asm):00631               lbeq  L035C
0283 8117             (          sub.asm):00632               cmpa  #$17
0285 10270091         (          sub.asm):00633               lbeq  L031A
0289 39               (          sub.asm):00634               rts   
                      (          sub.asm):00635               
                      (          sub.asm):00636               
028A CC024A           (          sub.asm):00637         L028A ldd   #(sub_2*$100)+$4A
028D 16020E           (          sub.asm):00638               lbra  SMap
                      (          sub.asm):00639                
0290 CC020E           (          sub.asm):00640         L0290 ldd   #(sub_2*$100)+$0E
0293 160208           (          sub.asm):00641               lbra  SMap
                      (          sub.asm):00642                
0296 CC020C           (          sub.asm):00643         L0296 ldd   #(sub_2*$100)+$0C
0299 160202           (          sub.asm):00644               lbra  SMap
                      (          sub.asm):00645                
029C CC020A           (          sub.asm):00646         L029C ldd   #(sub_2*$100)+$0A
029F 1601FC           (          sub.asm):00647               lbra  SMap
                      (          sub.asm):00648                
02A2 CC0242           (          sub.asm):00649         L02A2 ldd   #(sub_2*$100)+$42
02A5 1601F6           (          sub.asm):00650               lbra  SMap
                      (          sub.asm):00651                
02A8 CC023C           (          sub.asm):00652         L02A8 ldd   #(sub_2*$100)+$3C
02AB 1601F0           (          sub.asm):00653               lbra  SMap
                      (          sub.asm):00654                
02AE CC023A           (          sub.asm):00655         L02AE ldd   #(sub_2*$100)+$3A
02B1 1601EA           (          sub.asm):00656               lbra  SMap
                      (          sub.asm):00657                
02B4 CC0216           (          sub.asm):00658         L02B4 ldd   #(sub_2*$100)+$16
02B7 1601E4           (          sub.asm):00659               lbra  SMap 
                      (          sub.asm):00660               
02BA CC0226           (          sub.asm):00661         L02BA ldd   #(sub_2*$100)+$26
02BD 1601DE           (          sub.asm):00662               lbra  SMap 
                      (          sub.asm):00663         
02C0 CC0228           (          sub.asm):00664         L02C0 ldd   #(sub_2*$100)+$28
02C3 1601D8           (          sub.asm):00665               lbra  SMap 
                      (          sub.asm):00666         
02C6 CC0212           (          sub.asm):00667         L02C6 ldd   #(sub_2*$100)+$12
02C9 1601D2           (          sub.asm):00668               lbra  SMap 
                      (          sub.asm):00669         
02CC CC0210           (          sub.asm):00670         L02CC ldd   #(sub_2*$100)+$10
02CF 1601CC           (          sub.asm):00671               lbra  SMap 
                      (          sub.asm):00672         
02D2 CC0206           (          sub.asm):00673         L02D2 ldd   #(sub_2*$100)+$06
02D5 1601C6           (          sub.asm):00674               lbra  SMap 
                      (          sub.asm):00675         
02D8 CC021A           (          sub.asm):00676         L02D8 ldd   #(sub_2*$100)+$1A
02DB 1601C0           (          sub.asm):00677               lbra  SMap 
                      (          sub.asm):00678         
02DE CC0240           (          sub.asm):00679         L02DE ldd   #(sub_2*$100)+$40
02E1 1601BA           (          sub.asm):00680               lbra  SMap 
                      (          sub.asm):00681         
02E4 CC0248           (          sub.asm):00682         L02E4 ldd   #(sub_2*$100)+$48
02E7 1601B4           (          sub.asm):00683               lbra  SMap 
                      (          sub.asm):00684         
02EA CC0246           (          sub.asm):00685         L02EA ldd   #(sub_2*$100)+$46
02ED 1601AE           (          sub.asm):00686               lbra  SMap 
                      (          sub.asm):00687         
02F0 CC0208           (          sub.asm):00688         L02F0 ldd   #(sub_2*$100)+$08
02F3 1601A8           (          sub.asm):00689               lbra  SMap 
                      (          sub.asm):00690         
02F6 CC0244           (          sub.asm):00691         L02F6 ldd   #(sub_2*$100)+$44
02F9 1601A2           (          sub.asm):00692               lbra  SMap 
                      (          sub.asm):00693         
02FC CC0106           (          sub.asm):00694         L02FC ldd   #(sub_1*$100)+$06    MakeFile
02FF 16019C           (          sub.asm):00695               lbra  SMap 
                      (          sub.asm):00696         
0302 CC0108           (          sub.asm):00697         L0302 ldd   #(sub_1*$100)+$08    ReadFile
0305 160196           (          sub.asm):00698               lbra  SMap 
                      (          sub.asm):00699         
0308 CC050C           (          sub.asm):00700         L0308 ldd   #(sub_5*$100)+$0C
030B 160190           (          sub.asm):00701               lbra  SMap 
                      (          sub.asm):00702         
030E CC0104           (          sub.asm):00703         L030E ldd   #(sub_1*$100)+$04    Read_mission
0311 16018A           (          sub.asm):00704               lbra  SMap 
                      (          sub.asm):00705         
0314 CC0110           (          sub.asm):00706         L0314 ldd   #(sub_1*$100)+$10    XmtSOS
0317 160184           (          sub.asm):00707               lbra  SMap 
                      (          sub.asm):00708         
031A CC022A           (          sub.asm):00709         L031A ldd   #(sub_2*$100)+$2A
031D 16017E           (          sub.asm):00710               lbra  SMap 
                      (          sub.asm):00711         
0320 CC0220           (          sub.asm):00712         L0320 ldd   #(sub_2*$100)+$20
0323 160178           (          sub.asm):00713               lbra  SMap 
                      (          sub.asm):00714         
0326 CC021E           (          sub.asm):00715         L0326 ldd   #(sub_2*$100)+$1E
0329 160172           (          sub.asm):00716               lbra  SMap 
                      (          sub.asm):00717         
032C CC0224           (          sub.asm):00718         L032C ldd   #(sub_2*$100)+$24
032F 16016C           (          sub.asm):00719               lbra  SMap 
                      (          sub.asm):00720         
0332 CC0506           (          sub.asm):00721         L0332 ldd   #(sub_5*$100)+$06
0335 160166           (          sub.asm):00722               lbra  SMap 
                      (          sub.asm):00723         
0338 CC0508           (          sub.asm):00724         L0338 ldd   #(sub_5*$100)+$08
033B 160160           (          sub.asm):00725               lbra  SMap 
                      (          sub.asm):00726         
033E CC0232           (          sub.asm):00727         L033E ldd   #(sub_2*$100)+$32
0341 16015A           (          sub.asm):00728               lbra  SMap 
                      (          sub.asm):00729         
0344 CC0234           (          sub.asm):00730         L0344 ldd   #(sub_2*$100)+$34
0347 160154           (          sub.asm):00731               lbra  SMap 
                      (          sub.asm):00732         
034A CC0236           (          sub.asm):00733         L034A ldd   #(sub_2*$100)+$36
034D 16014E           (          sub.asm):00734               lbra  SMap 
                      (          sub.asm):00735         
0350 CC0238           (          sub.asm):00736         L0350 ldd   #(sub_2*$100)+$38
0353 160148           (          sub.asm):00737               lbra  SMap 
                      (          sub.asm):00738         
0356 CC023E           (          sub.asm):00739         L0356 ldd   #(sub_2*$100)+$3E
0359 160142           (          sub.asm):00740               lbra  SMap 
                      (          sub.asm):00741         
035C CC0116           (          sub.asm):00742         L035C ldd   #(sub_1*$100)+$16    XmtPOS
035F 16013C           (          sub.asm):00743               lbra  SMap 
                      (          sub.asm):00744         
0362 CC024C           (          sub.asm):00745         L0362 ldd   #(sub_2*$100)+$4C
0365 160136           (          sub.asm):00746               lbra  SMap 
                      (          sub.asm):00747         
0368 CC021C           (          sub.asm):00748         L0368 ldd   #(sub_2*$100)+$1C
036B 170130           (          sub.asm):00749               lbsr  SMap 
                      (          sub.asm):00750         
036E B60294           (          sub.asm):00751               lda   X0294
0371 1026020D         (          sub.asm):00752               lbne  L0582
0375 39               (          sub.asm):00753               rts
                      (          sub.asm):00754               
                      (          sub.asm):00755                  
0376 CC0222           (          sub.asm):00756         L0376 ldd   #(sub_2*$100)+$22
0379 170122           (          sub.asm):00757               lbsr  SMap 
                      (          sub.asm):00758         
037C B60294           (          sub.asm):00759               lda   X0294
037F 102601FF         (          sub.asm):00760               lbne  L0582
0383 39               (          sub.asm):00761               rts
                      (          sub.asm):00762               
                      (          sub.asm):00763                  
0384 CC0114           (          sub.asm):00764         L0384 ldd   #(sub_1*$100)+$14    TransferTorp
0387 170114           (          sub.asm):00765               lbsr  SMap 
                      (          sub.asm):00766         
038A F60291           (          sub.asm):00767               ldb   X0291
038D 2B06             (          sub.asm):00768               bmi   L0395
                      (          sub.asm):00769         
038F CC0214           (          sub.asm):00770               ldd   #(sub_2*$100)+$14
0392 170109           (          sub.asm):00771               lbsr  SMap 
                      (          sub.asm):00772         
0395 7F0291           (          sub.asm):00773         L0395 clr   X0291
0398 39               (          sub.asm):00774               rts
                      (          sub.asm):00775               
                      (          sub.asm):00776                  
0399 7C0297           (          sub.asm):00777         L0399 inc   X0297
                      (          sub.asm):00778         
039C CC0102           (          sub.asm):00779               ldd   #(sub_1*$100)+$02    GameSetup
039F 1600FC           (          sub.asm):00780               lbra  SMap 
                      (          sub.asm):00781         
03A2 7C0297           (          sub.asm):00782         L03A2 inc   X0297
                      (          sub.asm):00783         
03A5 CC0500           (          sub.asm):00784               ldd   #(sub_5*$100)+$00
03A8 1600F3           (          sub.asm):00785               lbra  SMap 
                      (          sub.asm):00786         
03AB F64CD4           (          sub.asm):00787         L03AB ldb   X4CD4
03AE C00A             (          sub.asm):00788               subb  #$0A
03B0 4F               (          sub.asm):00789               clra  
03B1 FD4CF7           (          sub.asm):00790               std   X4CF7
03B4 16FFBF           (          sub.asm):00791               lbra  L0376
                      (          sub.asm):00792         
03B7 FC4CEF           (          sub.asm):00793         L03B7 ldd   X4CEF
03BA 7E7AA7           (          sub.asm):00794               jmp   X7AA7
                      (          sub.asm):00795         
03BD CC0230           (          sub.asm):00796         L03BD ldd   #(sub_2*$100)+$30
03C0 1700DB           (          sub.asm):00797               lbsr  SMap 
                      (          sub.asm):00798         
03C3 5D               (          sub.asm):00799               tstb  
03C4 2B48             (          sub.asm):00800               bmi   L040E
03C6 3404             (          sub.asm):00801               pshs  b
03C8 BE1DC9           (          sub.asm):00802               ldx   X1DC9
03CB 2706             (          sub.asm):00803               beq   L03D3
                      (          sub.asm):00804         
03CD CC0402           (          sub.asm):00805               ldd   #(sub_4*$100)+$02
03D0 1700CB           (          sub.asm):00806               lbsr  SMap 
                      (          sub.asm):00807         
03D3 6DE0             (          sub.asm):00808         L03D3 tst   ,s+
03D5 2725             (          sub.asm):00809               beq   WeMissed
                      (          sub.asm):00810         
03D7 8614             (          sub.asm):00811               lda   #$14
03D9 B04C77           (          sub.asm):00812               suba  X4C77
03DC BB1E16           (          sub.asm):00813               adda  X1E16
03DF 8027             (          sub.asm):00814               suba  #$27
03E1 FE1DBF           (          sub.asm):00815               ldu   X1DBF
03E4 2603             (          sub.asm):00816               bne   L03E9
03E6 FE1DB9           (          sub.asm):00817               ldu   X1DB9
                      (          sub.asm):00818               
03E9 170A3A           (          sub.asm):00819         L03E9 lbsr  L0E26
                      (          sub.asm):00820         
03EC BD72C3           (          sub.asm):00821               jsr   X72C3
03EF 5765206869742C20 (          sub.asm):00822               fcc   "We hit, Sir"
     536972
03FA 00               (          sub.asm):00823               fcb   C$NULL
03FB 39               (          sub.asm):00824               rts
                      (          sub.asm):00825               
03FC                  (          sub.asm):00826         WeMissed         
03FC BD72C3           (          sub.asm):00827         L03FC jsr   X72C3
03FF 5765206D69737365 (          sub.asm):00828               fcc   "We missed, Sir"
     642C20536972
040D 00               (          sub.asm):00829               fcb   C$NULL
040E 39               (          sub.asm):00830         L040E rts
                      (          sub.asm):00831         
                      (          sub.asm):00832            
040F CC0218           (          sub.asm):00833         L040F ldd   #(sub_2*$100)+$18
0412 170089           (          sub.asm):00834               lbsr  SMap 
                      (          sub.asm):00835         
0415 B61E1D           (          sub.asm):00836               lda   X1E1D
0418 8104             (          sub.asm):00837               cmpa  #4
041A 2618             (          sub.asm):00838               bne   L0434
041C B61D43           (          sub.asm):00839               lda   X1D43
041F 8107             (          sub.asm):00840               cmpa  #7
0421 2711             (          sub.asm):00841               beq   L0434
0423 B605CE           (          sub.asm):00842               lda   X05CE
0426 8101             (          sub.asm):00843               cmpa  #1
0428 2F02             (          sub.asm):00844               ble   L042C
042A 8601             (          sub.asm):00845               lda   #1
042C B705CE           (          sub.asm):00846         L042C sta   X05CE
042F 8636             (          sub.asm):00847               lda   #$36
0431 160164           (          sub.asm):00848               lbra  L0598
0434 39               (          sub.asm):00849         L0434 rts   
                      (          sub.asm):00850         
                      (          sub.asm):00851         
0435 CC050A           (          sub.asm):00852         L0435 ldd   #(sub_5*$100)+$0A
0438 170063           (          sub.asm):00853               lbsr  SMap 
                      (          sub.asm):00854         
043B 7D0299           (          sub.asm):00855               tst   X0299
043E 2601             (          sub.asm):00856               bne   L0441
0440 39               (          sub.asm):00857               rts   
                      (          sub.asm):00858         
                      (          sub.asm):00859         
0441 FE0103           (          sub.asm):00860         L0441 ldu   X0103               Expects sub2 loaded module header abs addr              
0444 103F02           (          sub.asm):00861               os9   F$UnLink
0447 17002C           (          sub.asm):00862               lbsr  UnLoadtheRest       call to unload
044A 4F               (          sub.asm):00863               clra  
044B 5F               (          sub.asm):00864               clrb  
                      (          sub.asm):00865         
                      (          sub.asm):00866         
044C                  (          sub.asm):00867         BailOut
044C 3405             (          sub.asm):00868         L044C pshs  cc,b        save condition code and b (error code)
                      (          sub.asm):00869         
044E 8621             (          sub.asm):00870               lda   #SbRtn+Objct     module type
0450 308D1B5C         (          sub.asm):00871               leax  Sub2,pcr         sub2 subroutine
0454 103F1D           (          sub.asm):00872               os9   F$UnLoad         unload it
                      (          sub.asm):00873               
0457 8621             (          sub.asm):00874               lda   #SbRtn+Objct     try one more time
0459 308D1B53         (          sub.asm):00875               leax  Sub2,pcr
045D 103F1D           (          sub.asm):00876               os9   F$UnLoad
                      (          sub.asm):00877               
0460 3505             (          sub.asm):00878               puls  cc,b             pull that condition code and os9 error code
                      (          sub.asm):00879               
0462 CC1100           (          sub.asm):00880               ldd   #((Prgrm+Objct)*$100)+00 lang/type =a opt data size =b   1100
0465 308D1B5B         (          sub.asm):00881               leax  Shell,pcr        points to name string
0469 108E0000         (          sub.asm):00882               ldy   #0               parameter size
046D CE0000           (          sub.asm):00883               ldu   #0               beginning addr of parameter area
0470 103F05           (          sub.asm):00884               os9   F$Chain          chain to it 
0473 103F06           (          sub.asm):00885               os9   F$Exit           kill ourself
                      (          sub.asm):00886         
                      (          sub.asm):00887         
0476                  (          sub.asm):00888         UnLoadtheRest      
0476 3476             (          sub.asm):00889         L0476 pshs  a,b,x,y,u
0478 8621             (          sub.asm):00890               lda   #SbRtn+Objct
047A 308D1B2D         (          sub.asm):00891               leax  Sub1,pcr
047E 103F1D           (          sub.asm):00892               os9   F$UnLoad
                      (          sub.asm):00893               
0481 8621             (          sub.asm):00894               lda   #SbRtn+Objct
0483 308D1B2E         (          sub.asm):00895               leax  Sub3,pcr
0487 103F1D           (          sub.asm):00896               os9   F$UnLoad
                      (          sub.asm):00897               
048A 8621             (          sub.asm):00898               lda   #SbRtn+Objct
048C 308D1B2A         (          sub.asm):00899               leax  Sub4,pcr
0490 103F1D           (          sub.asm):00900               os9   F$UnLoad
                      (          sub.asm):00901               
0493 8621             (          sub.asm):00902               lda   #SbRtn+Objct
0495 308D1B26         (          sub.asm):00903               leax  Sub5,pcr
0499 103F1D           (          sub.asm):00904               os9   F$UnLoad
049C 35F6             (          sub.asm):00905               puls  a,b,x,y,u,pc
                      (          sub.asm):00906               
                      (          sub.asm):00907         
                      (          sub.asm):00908         * acca = index of suroutine to call; accb = offset into jumptable of routine to execute      
049E B10102           (          sub.asm):00909         SMap  cmpa  X0102            compare acca to the index of the currently "loaded" subroutine
04A1 2605             (          sub.asm):00910               bne   SMap2            not the same? map in a new one
04A3 AD9F0107         (          sub.asm):00911               jsr   [X0107]          otherwise calling the one currently mapped so have at it
04A7 39               (          sub.asm):00912               rts   
                      (          sub.asm):00913               
                      (          sub.asm):00914               
                      (          sub.asm):00915         *                            as with many other places this logic can be streamlined      
04A8                  (          sub.asm):00916         SMap2      
04A8 FD1DDA           (          sub.asm):00917         L04A8 std   X1DDA            save the callers arguments
04AB 308D1AFC         (          sub.asm):00918               leax  Sub1,pcr         get the address of "sub1C$null"
04AF 4A               (          sub.asm):00919               deca                   make us zero based
04B0 C605             (          sub.asm):00920               ldb   #Subsz           size of the text string "sub?0"
04B2 3D               (          sub.asm):00921               mul                    multipy them now we have an offset to the name string to use from sub1
04B3 308B             (          sub.asm):00922               leax  d,x              index to that rascal
                      (          sub.asm):00923               
04B5 BF1DDC           (          sub.asm):00924               stx   X1DDC            store the address of the new name string
04B8 B60102           (          sub.asm):00925               lda   X0102            get subroutine index 
04BB 2706             (          sub.asm):00926               beq   NoneMapped       if its zero nothing loaded (not sure if this will ever be true)
04BD FE0103           (          sub.asm):00927               ldu   X0103            otherwise get loaded subroutine module header abs addr 
04C0 103F02           (          sub.asm):00928               os9   F$UnLink         and unlink it
                      (          sub.asm):00929         
04C3                  (          sub.asm):00930         NoneMapped      
04C3 BE1DDC           (          sub.asm):00931         L04C3 ldx   X1DDC            (not needed) unlink doen't fiddle with x
04C6 8621             (          sub.asm):00932               lda   #SbRtn+Objct     type language     
04C8 103F00           (          sub.asm):00933               os9   F$Link           link to it
04CB 2434             (          sub.asm):00934               bcc   GoodLink         all went well save pointers and call it
                      (          sub.asm):00935               
04CD B61DDA           (          sub.asm):00936               lda   X1DDA            load the new sub index
04D0 8102             (          sub.asm):00937               cmpa  #sub_2           is it looking for sub2 ?
04D2 2723             (          sub.asm):00938               beq   LinkMe           Link to me then I've been loaded once
                      (          sub.asm):00939               
04D4                  (          sub.asm):00940         BadLink
04D4 B60102           (          sub.asm):00941         L04D4 lda   X0102            get the currently loaded sub index
04D7 8102             (          sub.asm):00942               cmpa  #sub_2           is it sub2?
04D9 2612             (          sub.asm):00943               bne   LoadMe           if it's not sub2 then NMload it
                      (          sub.asm):00944               
04DB FE0103           (          sub.asm):00945               ldu   X0103            load pointer to currently loaded sub2 module header
04DE 103F02           (          sub.asm):00946               os9   F$UnLink         unlink that one and go load and link new one 
04E1 200A             (          sub.asm):00947               bra   LoadMe
                      (          sub.asm):00948         
04E3                  (          sub.asm):00949         BadLoad
04E3 BE0105           (          sub.asm):00950         L04E3 ldx   X0105            pointer to current sub name string
04E6 2705             (          sub.asm):00951               beq   LoadMe           I'm zero? then go load module to be mapped
04E8 8621             (          sub.asm):00952               lda   #SbRtn+Objct     otherwise attempt to unload 1,3,4,5 subs
04EA 17FF89           (          sub.asm):00953               lbsr  UnLoadtheRest
                      (          sub.asm):00954         
04ED                  (          sub.asm):00955         LoadMe      
04ED 8621             (          sub.asm):00956         L04ED lda   #SbRtn+Objct     type/language
04EF BE1DDC           (          sub.asm):00957               ldx   X1DDC            name string of new module to load
04F2 103F22           (          sub.asm):00958               os9   F$NMLoad         load it
04F5 25EC             (          sub.asm):00959               bcs   BadLoad          bad load?
                      (          sub.asm):00960         
04F7                  (          sub.asm):00961         LinkMe
04F7 8621             (          sub.asm):00962         L04F7 lda   #SbRtn+Objct     type/language
04F9 BE1DDC           (          sub.asm):00963               ldx   X1DDC            address of the name string
04FC 103F00           (          sub.asm):00964               os9   F$Link           link to it
04FF 25D3             (          sub.asm):00965               bcs   BadLink
                      (          sub.asm):00966         
0501                  (          sub.asm):00967         GoodLink
0501 BE1DDC           (          sub.asm):00968         L0501 ldx   X1DDC            pointer to module name string
0504 BF0105           (          sub.asm):00969               stx   X0105            stow that 
0507 10BF0107         (          sub.asm):00970               sty   X0107            pointer to module entry point
050B FF0103           (          sub.asm):00971               stu   X0103            pointer to module header addr
050E FC1DDA           (          sub.asm):00972               ldd   X1DDA            fetch back the arguments passed
0511 B70102           (          sub.asm):00973               sta   X0102            stow the acca value in subroutine index
0514 ADA4             (          sub.asm):00974               jsr   ,y               make the call
0516 39               (          sub.asm):00975               rts                    return to the one that called us
                      (          sub.asm):00976               
                      (          sub.asm):00977         * The following few not labeled by disasm
                      (          sub.asm):00978         * hope they really don't call a sub to clear a mem location
                      (          sub.asm):00979                  
0517 7F1D87           (          sub.asm):00980         N0517 clr   X1D87
051A 39               (          sub.asm):00981               rts
                      (          sub.asm):00982               
                      (          sub.asm):00983                  
051B 3402             (          sub.asm):00984         N051B pshs  a
051D 86FF             (          sub.asm):00985               lda   #$FF
051F B71D87           (          sub.asm):00986               sta   X1D87
0522 3582             (          sub.asm):00987               puls  a,pc
                      (          sub.asm):00988               
                      (          sub.asm):00989               
0524 3476             (          sub.asm):00990         N0524 pshs  a,b,x,y,u
0526 8601             (          sub.asm):00991               lda   #READ.           open read only
0528 308D1A53         (          sub.asm):00992               leax  Radar,pcr        the radar.dat file
052C 103F84           (          sub.asm):00993               os9   I$Open           open it
052F 3402             (          sub.asm):00994               pshs  a                push the stupid path number
                      (          sub.asm):00995         
0531 C674             (          sub.asm):00996               ldb   #$74             load the loop counter  $74 x $3D = $1BA4
                      (          sub.asm):00997         *                            file is only 1BA1 long      
0533 8E1E25           (          sub.asm):00998               ldx   #$1E25           base address to accept the data
0536 A6E4             (          sub.asm):00999         RadLp lda   ,s               pull the path num
0538 3414             (          sub.asm):01000               pshs  b,x              push the loop counter and base address
053A 108E003D         (          sub.asm):01001               ldy   #$003D           read 61 bytes at a time
053E 103F89           (          sub.asm):01002               os9   I$Read           read them
0541 3514             (          sub.asm):01003               puls  b,x              pull our counter and addr
0543 308850           (          sub.asm):01004               leax  $50,x             bump the address by 80
0546 5A               (          sub.asm):01005               decb                   dec the loop counter
0547 26ED             (          sub.asm):01006               bne   Radlp
                      (          sub.asm):01007               
0549 3502             (          sub.asm):01008               puls  a                pull that path that's still the same
054B 103F8F           (          sub.asm):01009               os9   I$Close          close the file
054E 35F6             (          sub.asm):01010               puls  a,b,x,y,u,pc
                      (          sub.asm):01011               
                      (          sub.asm):01012               
                      (          sub.asm):01013         * they snuck a jump in here instead of a jsr      
0550 CC0212           (          sub.asm):01014         N0550 ldd   #$0212           PRN,CTN
0553 7E735B           (          sub.asm):01015               jmp   X735B            call Change Pallete
                      (          sub.asm):01016               
                      (          sub.asm):01017               
0556 3476             (          sub.asm):01018         N0556 pshs  a,b,x,y,u       THERE IS NO STATUS.DAT file
0558 8601             (          sub.asm):01019               lda   #READ.          open read only
055A 308D1A2F         (          sub.asm):01020               leax  Status,pcr      status.dat
055E 103F84           (          sub.asm):01021               os9   I$Open          open it
0561 3402             (          sub.asm):01022               pshs  a               push that path num
                      (          sub.asm):01023               
0563 C674             (          sub.asm):01024               ldb   #$74            load the loop counter
0565 8E1E25           (          sub.asm):01025               ldx   #$1E25          base address to store status
0568 A6E4             (          sub.asm):01026         StaLp lda   ,s              get the path number
056A 3414             (          sub.asm):01027               pshs  b,x             save loop counter and destination
056C 108E003D         (          sub.asm):01028               ldy   #$003D          read 61 bytes at a time 
0570 103F89           (          sub.asm):01029               os9   I$Read          make the call
0573 3514             (          sub.asm):01030               puls  b,x
0575 308850           (          sub.asm):01031               leax  $50,x           Move 80 bytes ahead
0578 5A               (          sub.asm):01032               decb                  dec the loopcounter
0579 26ED             (          sub.asm):01033               bne   StaLp           not zero go again
057B 3502             (          sub.asm):01034               puls  a               pull that path num
                      (          sub.asm):01035               
057D 103F8F           (          sub.asm):01036               os9   I$Close
0580 35F6             (          sub.asm):01037               puls  a,b,x,y,u,pc
                      (          sub.asm):01038               
                      (          sub.asm):01039               
0582 7F0294           (          sub.asm):01040         L0582 clr   X0294
0585 B61D43           (          sub.asm):01041               lda   X1D43
0588 270D             (          sub.asm):01042               beq   L0597
058A 8103             (          sub.asm):01043               cmpa  #3
058C 2709             (          sub.asm):01044               beq   L0597
058E 8105             (          sub.asm):01045               cmpa  #5
0590 2405             (          sub.asm):01046               bcc   L0597
0592 8631             (          sub.asm):01047               lda   #$31
0594 160001           (          sub.asm):01048               lbra  L0598
0597 39               (          sub.asm):01049         L0597 rts
                      (          sub.asm):01050         
                      (          sub.asm):01051            
0598 8030             (          sub.asm):01052         L0598 suba  #$30
059A 102700E7         (          sub.asm):01053               lbeq  L0685
059E 8108             (          sub.asm):01054               cmpa  #8
05A0 102200E1         (          sub.asm):01055               lbhi  L0685
05A4 F61E1D           (          sub.asm):01056               ldb   X1E1D
05A7 C104             (          sub.asm):01057               cmpb  #4
05A9 260C             (          sub.asm):01058               bne   L05B7
05AB 8104             (          sub.asm):01059               cmpa  #4
05AD 102500D4         (          sub.asm):01060               lblo  L0685
05B1 8107             (          sub.asm):01061               cmpa  #7
05B3 102700CE         (          sub.asm):01062               lbeq  L0685
05B7 8105             (          sub.asm):01063         L05B7 cmpa  #5
05B9 264A             (          sub.asm):01064               bne   L0605
05BB F64CDA           (          sub.asm):01065               ldb   X4CDA
05BE 2623             (          sub.asm):01066               bne   L05E3
05C0 BD72C3           (          sub.asm):01067               jsr   X72C3
05C3 4F75722073756220 (          sub.asm):01068               fcc   "Our sub does not have radar!"
     646F6573206E6F74
     2068617665207261
     64617221
05DF 00               (          sub.asm):01069               fcb   C$NULL
05E0 16               (          sub.asm):01070               fcb   C$CLSALL
05E1 00               (          sub.asm):01071               fcb   C$NULL
05E2 A2               (          sub.asm):01072               fcb   $A2
05E3 7D4D2B           (          sub.asm):01073         L05E3 tst   X4D2B
05E6 261D             (          sub.asm):01074               bne   L0605
05E8 BD72C3           (          sub.asm):01075               jsr   X72C3
05EB 5261646172207475 (          sub.asm):01076               fcc   "Radar turned off, Sir!"
     726E6564206F6666
     2C2053697221
0601 00               (          sub.asm):01077               fcb   C$NULL
0602 16               (          sub.asm):01078               fcb   C$CLSALL
0603 00               (          sub.asm):01079               fcb   C$NULL
0604 80               (          sub.asm):01080               fcb   $80
0605 BE4CEF           (          sub.asm):01081         L0605 ldx   X4CEF
0608 273E             (          sub.asm):01082               beq   L0648
060A 8102             (          sub.asm):01083               cmpa  #2
060C 261B             (          sub.asm):01084               bne   L0629
060E BD72C3           (          sub.asm):01085         L060E jsr   X72C3
0611 596F7520776F756C (          sub.asm):01086               fcc   "You would drown, Sir"
     642064726F776E2C
     20536972
0625 00               (          sub.asm):01087               fcb   C$NULL
0626 16               (          sub.asm):01088               fcb   C$CLSALL
0627 00               (          sub.asm):01089               fcb   C$NULL
0628 5C               (          sub.asm):01090               fcb   $5C
                      (          sub.asm):01091         
0629 8103             (          sub.asm):01092         L0629 cmpa  #3
062B 27E1             (          sub.asm):01093               beq   L060E
062D 8105             (          sub.asm):01094               cmpa  #5
062F 2617             (          sub.asm):01095               bne   L0648
0631 BD72C3           (          sub.asm):01096               jsr   X72C3
0634 556E646572776174 (          sub.asm):01097               fcc   "Underwater, Sir!"
     65722C2053697221
0644 00               (          sub.asm):01098               fcb   C$NULL
0645 16               (          sub.asm):01099               fcb   C$CLSALL
0646 00               (          sub.asm):01100               fcb   C$NULL
0647 3D               (          sub.asm):01101               fcb   $3D
                      (          sub.asm):01102         
0648 4A               (          sub.asm):01103         L0648 deca  
0649 B11D43           (          sub.asm):01104               cmpa  X1D43
064C 10270035         (          sub.asm):01105               lbeq  L0685
0650 B71D43           (          sub.asm):01106               sta   X1D43
0653 CE0000           (          sub.asm):01107               ldu   #$0000
0656 FF1DB9           (          sub.asm):01108               stu   X1DB9
0659 308D0029         (          sub.asm):01109               leax  >WordTbl1,pcr
065D 48               (          sub.asm):01110               asla  
065E EC86             (          sub.asm):01111               ldd   a,x
0660 FD010C           (          sub.asm):01112               std   X010C
0663 308D002F         (          sub.asm):01113               leax  >WordTbl2,pcr
0667 B61D43           (          sub.asm):01114               lda   X1D43
066A 48               (          sub.asm):01115               asla  
066B EC86             (          sub.asm):01116               ldd   a,x
066D 308DF98F         (          sub.asm):01117               leax  D0000,pcr
0671 308B             (          sub.asm):01118               leax  d,x
0673 BF010E           (          sub.asm):01119               stx   X010E
                      (          sub.asm):01120               
0676 CC0236           (          sub.asm):01121               ldd   #$0236           PRN,CTN
0679 BD735B           (          sub.asm):01122               jsr   X735B            call Change Palette
                      (          sub.asm):01123               
067C CC0109           (          sub.asm):01124               ldd   #$0109           PRN,CTN
067F BD735B           (          sub.asm):01125               jsr   X735B            call Change Palette
                      (          sub.asm):01126               
0682 7C0297           (          sub.asm):01127               inc   X0297
0685 39               (          sub.asm):01128         L0685 rts   
                      (          sub.asm):01129         
                      (          sub.asm):01130         
0686                  (          sub.asm):01131         WordTbl1
0686 0400             (          sub.asm):01132         L0686 fdb   $0400
0688 0400             (          sub.asm):01133               fdb   $0400
068A 0400             (          sub.asm):01134               fdb   $0400
068C 0202             (          sub.asm):01135               fdb   $0202
068E 0200             (          sub.asm):01136               fdb   $0200
0690 0300             (          sub.asm):01137               fdb   $0300
0692 0502             (          sub.asm):01138               fdb   $0502
0694 0204             (          sub.asm):01139               fdb   $0204
                      (          sub.asm):01140         
0696                  (          sub.asm):01141         WordTbl2
0696 06A6             (          sub.asm):01142         L0696 fdb   $06A6
0698 051B             (          sub.asm):01143               fdb   $051B
069A 0517             (          sub.asm):01144               fdb   $0517
069C 0524             (          sub.asm):01145               fdb   $0524
069E 0524             (          sub.asm):01146               fdb   $0524
06A0 0550             (          sub.asm):01147               fdb   $0550
06A2 06A6             (          sub.asm):01148               fdb   $06A6
06A4 0556             (          sub.asm):01149               fdb   $0556
06A6 39               (          sub.asm):01150               fcb   $39
                      (          sub.asm):01151         
06A7 B60297           (          sub.asm):01152         L06A7 lda   X0297
06AA 270F             (          sub.asm):01153               beq   L06BB
06AC 7F0297           (          sub.asm):01154               clr   X0297
06AF 308D0008         (          sub.asm):01155               leax  >L06BB,pcr
06B3 3410             (          sub.asm):01156               pshs  x
06B5 BE010E           (          sub.asm):01157               ldx   X010E
06B8 3410             (          sub.asm):01158               pshs  x
06BA 39               (          sub.asm):01159               rts   
                      (          sub.asm):01160         
06BB FC010C           (          sub.asm):01161         L06BB ldd   X010C
06BE 16FDDD           (          sub.asm):01162               lbra  SMap 
                      (          sub.asm):01163         
06C1                  (          sub.asm):01164         intercept
06C1 B7010B           (          sub.asm):01165         L06C1 sta   X010B
06C4 861B             (          sub.asm):01166               lda   #C$EOF
06C6 B7029C           (          sub.asm):01167               sta   X029C
06C9 B6010B           (          sub.asm):01168               lda   X010B
06CC 3B               (          sub.asm):01169               rti
                      (          sub.asm):01170                  
                      (          sub.asm):01171         
06CD CC0302           (          sub.asm):01172         L06CD ldd   #(sub_3*$100)+$02
06D0 17FDCB           (          sub.asm):01173               lbsr  SMap 
06D3 B6035F           (          sub.asm):01174               lda   X035F
06D6 2701             (          sub.asm):01175               beq   L06D9
06D8 39               (          sub.asm):01176               rts   
                      (          sub.asm):01177         
                      (          sub.asm):01178         
06D9 7D4D28           (          sub.asm):01179         L06D9 tst   X4D28
06DC 2606             (          sub.asm):01180               bne   L06E4
06DE CC020C           (          sub.asm):01181               ldd   #(sub_2*$100)+$0C
06E1 17FDBA           (          sub.asm):01182               lbsr  SMap 
06E4 8605             (          sub.asm):01183         L06E4 lda   #5
06E6 B71E1D           (          sub.asm):01184               sta   X1E1D
06E9 CC021A           (          sub.asm):01185               ldd   #(sub_2*$100)+$1A
06EC 17FDAF           (          sub.asm):01186               lbsr  SMap 
                      (          sub.asm):01187               
06EF CC0015           (          sub.asm):01188               ldd   #$0015
06F2 BD7A68           (          sub.asm):01189               jsr   X7A68
                      (          sub.asm):01190               
06F5 8638             (          sub.asm):01191               lda   #$38
06F7 17FE9E           (          sub.asm):01192               lbsr  L0598
06FA 171191           (          sub.asm):01193               lbsr  L188E
06FD 1711FD           (          sub.asm):01194               lbsr  L18FD
0700 1712A8           (          sub.asm):01195               lbsr  L19AB
0703 171398           (          sub.asm):01196               lbsr  L1A9E
0706 17141D           (          sub.asm):01197               lbsr  L1B26
0709 1714B3           (          sub.asm):01198               lbsr  L1BBF
                      (          sub.asm):01199               
070C C6FF             (          sub.asm):01200               ldb   #$FF
070E F70290           (          sub.asm):01201               stb   X0290
                      (          sub.asm):01202               
0711 108E0356         (          sub.asm):01203         L0711 ldy   #$0356
0715 CE4C84           (          sub.asm):01204               ldu   #$4C84
0718 BD74D9           (          sub.asm):01205               jsr   X74D9
071B 8102             (          sub.asm):01206               cmpa  #2
071D 2336             (          sub.asm):01207               bls   L0755
071F BD7556           (          sub.asm):01208               jsr   X7556
0722 FD4CF3           (          sub.asm):01209               std   X4CF3
0725 FD4CFB           (          sub.asm):01210               std   X4CFB
0728 171509           (          sub.asm):01211               lbsr  L1C34
072B 171506           (          sub.asm):01212               lbsr  L1C34
072E 171503           (          sub.asm):01213               lbsr  L1C34
0731 17176E           (          sub.asm):01214               lbsr  L1EA2
0734 170BBA           (          sub.asm):01215               lbsr  L12F1
0737 170F96           (          sub.asm):01216               lbsr  L16D0
073A 1709EE           (          sub.asm):01217               lbsr  L112B
073D 17046F           (          sub.asm):01218               lbsr  L0BAF
0740 170733           (          sub.asm):01219               lbsr  L0E76
0743 17FF61           (          sub.asm):01220               lbsr  L06A7
0746 7D4CF2           (          sub.asm):01221               tst   X4CF2
0749 270A             (          sub.asm):01222               beq   L0755
074B 7D0500           (          sub.asm):01223               tst   X0500
074E 2605             (          sub.asm):01224               bne   L0755
0750 7D4D25           (          sub.asm):01225               tst   X4D25
0753 27BC             (          sub.asm):01226               beq   L0711
0755 F60356           (          sub.asm):01227         L0755 ldb   X0356
0758 F74C84           (          sub.asm):01228               stb   X4C84
075B CC4000           (          sub.asm):01229               ldd   #$4000
075E FD4C85           (          sub.asm):01230               std   X4C85
0761 F60359           (          sub.asm):01231               ldb   X0359
0764 F74C87           (          sub.asm):01232               stb   X4C87
0767 CC4000           (          sub.asm):01233               ldd   #$4000
076A FD4C88           (          sub.asm):01234               std   X4C88
076D CE4C84           (          sub.asm):01235               ldu   #$4C84
0770 BD7D75           (          sub.asm):01236               jsr   X7D75
0773 3406             (          sub.asm):01237               pshs  a,b
0775 BD7DB4           (          sub.asm):01238               jsr   X7DB4
0778 5D               (          sub.asm):01239               tstb  
0779 272F             (          sub.asm):01240               beq   L07AA
077B ECE4             (          sub.asm):01241               ldd   ,s
077D 4C               (          sub.asm):01242               inca  
077E BD7DB4           (          sub.asm):01243               jsr   X7DB4
0781 5D               (          sub.asm):01244               tstb  
0782 2608             (          sub.asm):01245               bne   L078C
0784 CCBF68           (          sub.asm):01246               ldd   #$BF68
0787 FD4C88           (          sub.asm):01247               std   X4C88
078A 201E             (          sub.asm):01248               bra   L07AA
078C ECE4             (          sub.asm):01249         L078C ldd   ,s
078E 5C               (          sub.asm):01250               incb  
078F 4C               (          sub.asm):01251               inca  
0790 BD7DB4           (          sub.asm):01252               jsr   X7DB4
0793 5D               (          sub.asm):01253               tstb  
0794 260B             (          sub.asm):01254               bne   L07A1
0796 CCBF68           (          sub.asm):01255               ldd   #$BF68
0799 FD4C88           (          sub.asm):01256               std   X4C88
079C FD4C85           (          sub.asm):01257               std   X4C85
079F 2009             (          sub.asm):01258               bra   L07AA
07A1 CCBF68           (          sub.asm):01259         L07A1 ldd   #$BF68
07A4 FD4C85           (          sub.asm):01260               std   X4C85
07A7 FD4C88           (          sub.asm):01261               std   X4C88
07AA 3506             (          sub.asm):01262         L07AA puls  a,b
07AC 7F4D2C           (          sub.asm):01263               clr   X4D2C
07AF 7F0125           (          sub.asm):01264               clr   X0125
                      (          sub.asm):01265               
07B2 BD72C3           (          sub.asm):01266               jsr   X72C3
07B5 4E6176696761746F (          sub.asm):01267               fcc   "Navigator disengaging, Sir!"
     7220646973656E67
     6167696E672C2053
     697221
07D0 00               (          sub.asm):01268               fcb   C$NULL
                      (          sub.asm):01269               
07D1 8601             (          sub.asm):01270               lda   #1
07D3 B71E1D           (          sub.asm):01271               sta   X1E1D
07D6 CC021A           (          sub.asm):01272               ldd   #(sub_2*$100)+$1A
07D9 17FCC2           (          sub.asm):01273               lbsr  SMap
                      (          sub.asm):01274                
07DC FC4CF3           (          sub.asm):01275               ldd   X4CF3
07DF BD7A23           (          sub.asm):01276               jsr   X7A23
                      (          sub.asm):01277               
07E2 FC4CF3           (          sub.asm):01278               ldd   X4CF3    load d with some value 
07E5 FD4CFB           (          sub.asm):01279               std   X4CFB    store it a this mem location    
07E8 17176F           (          sub.asm):01280               lbsr  L1F5A    call a subroutine that stores it there again
                      (          sub.asm):01281               
07EB CC0000           (          sub.asm):01282               ldd   #$0000
07EE B70290           (          sub.asm):01283               sta   X0290
07F1 BD7A68           (          sub.asm):01284               jsr   X7A68
                      (          sub.asm):01285               
07F4 39               (          sub.asm):01286               rts   
                      (          sub.asm):01287         
07F5                  (          sub.asm):01288         ReadKey
07F5 3434             (          sub.asm):01289         N07F5 pshs  b,x,y
07F7 4F               (          sub.asm):01290               clra                   set path to stdin
07F8 8E4265           (          sub.asm):01291               ldx   #$4265           base address to store data
07FB 108E0001         (          sub.asm):01292               ldy   #$01             read one byte
07FF 103F89           (          sub.asm):01293               os9   I$Read           read it
0802 B64265           (          sub.asm):01294               lda   X4265            get the byte just read
0805 8103             (          sub.asm):01295               cmpa  #C$INTR          is it a key board interrupt (ctrl-C)
0807 2704             (          sub.asm):01296               beq   Ex1rk
0809 8105             (          sub.asm):01297               cmpa  #C$QUIT          is it a keyboard abort (ctrl-E)
080B 2602             (          sub.asm):01298               bne   Ex_rk
080D 861B             (          sub.asm):01299         Ex1rk lda   #C$EOF
080F 35B4             (          sub.asm):01300         Ex_rk puls  b,x,y,pc
                      (          sub.asm):01301         
                      (          sub.asm):01302         
0811                  (          sub.asm):01303         InpReady
0811 3434             (          sub.asm):01304         L0811 pshs  b,x,y
0813 7C1D3F           (          sub.asm):01305               inc   X1D3F            bump some mem location
0816 4F               (          sub.asm):01306               clra                   set path to stdin
0817 C601             (          sub.asm):01307               ldb   #SS.Ready        test if data available 
0819 103F8D           (          sub.asm):01308               os9   I$GetStt         make the call
081C 2403             (          sub.asm):01309               bcc   ReadKey2         data ready go read it
081E 4F               (          sub.asm):01310               clra                   not ready clear a that is still 0
081F 35B4             (          sub.asm):01311               puls  b,x,y,pc         pull b back over any error code and return
                      (          sub.asm):01312         
                      (          sub.asm):01313         
0821                  (          sub.asm):01314         ReadKey2
0821 4F               (          sub.asm):01315         L0821 clra                   data ready to read set path to stdin still
0822 8E1DDA           (          sub.asm):01316               ldx   #$1DDA           set address to hold data
0825 108E0001         (          sub.asm):01317               ldy   #$01             read one byte
0829 103F89           (          sub.asm):01318               os9   I$Read           make the call
082C B61DDA           (          sub.asm):01319               lda   X1DDA            load the byte just read
082F BB1D3F           (          sub.asm):01320               adda  X1D3F            add it to some mem location
0832 B71D3F           (          sub.asm):01321               sta   X1D3F            stow the result back
0835 B61DDA           (          sub.asm):01322               lda   X1DDA            get the byte read again
0838 8103             (          sub.asm):01323               cmpa  #C$INTR          is it a key board interrupt (ctrl-C)
083A 2707             (          sub.asm):01324               beq   EndKey
083C 7D029C           (          sub.asm):01325               tst   X029C
083F 2602             (          sub.asm):01326               bne   EndKey
0841 35B4             (          sub.asm):01327               puls  b,x,y,pc
                      (          sub.asm):01328         
0843                  (          sub.asm):01329         EndKey      
0843 7F029C           (          sub.asm):01330         L0843 clr   X029C
0846 861B             (          sub.asm):01331               lda   #C$EOF
0848 35B4             (          sub.asm):01332               puls  b,x,y,pc
                      (          sub.asm):01333               
                      (          sub.asm):01334               
084A 3476             (          sub.asm):01335         L084A   pshs  a,b,x,y,u
084C 17FFC2           (          sub.asm):01336         ChkInp  lbsr  InpReady
084F 4D               (          sub.asm):01337                 tsta  
0850 26FA             (          sub.asm):01338                 bne   ChkInp
0852 35F6             (          sub.asm):01339                 puls  a,b,x,y,u,pc
                      (          sub.asm):01340               
                      (          sub.asm):01341         
                      (          sub.asm):01342         *  acca = index to ship type from caller
                      (          sub.asm):01343         *  this routine is actually pretty slick
0854                  (          sub.asm):01344         TypeShip      
0854 3476             (          sub.asm):01345         L0854   pshs  a,b,x,y,u        save'm all
0856 308D0029         (          sub.asm):01346                 leax  >ShipType,pcr    point x at shiptype array
                      (          sub.asm):01347         
085A 4D               (          sub.asm):01348         TSLopI  tsta                   test index passed in 
085B 2707             (          sub.asm):01349                 beq   Ex_TS            When 0 call screen write and leave 
                      (          sub.asm):01350         
085D E680             (          sub.asm):01351         TSLopN  ldb   ,x+              accb is a throw away moved x to one past null 
085F 26FC             (          sub.asm):01352                 bne   TSLopN            
                      (          sub.asm):01353               
0861 4A               (          sub.asm):01354                 deca                   decrement the index loop
0862 20F6             (          sub.asm):01355                 bra   TSLopI           test that value
                      (          sub.asm):01356         
0864 BD74CC           (          sub.asm):01357         Ex_TS   jsr   X74CC            puts one char at a time to screen
0867 35F6             (          sub.asm):01358                 puls  a,b,x,y,u,pc     we're done return
                      (          sub.asm):01359               
                      (          sub.asm):01360               
                      (          sub.asm):01361         * acca = index to type of plane from caller
                      (          sub.asm):01362         * assume input is 0 or 1      
0869                  (          sub.asm):01363         TypePlane
0869 3476             (          sub.asm):01364         L0869 pshs  a,b,x,y,u          save'm all
086B F64C75           (          sub.asm):01365               ldb   X4C75              side 0=German 1=US
086E 2602             (          sub.asm):01366               bne   L0872              not German
0870 8B02             (          sub.asm):01367               adda  #$02               Is German
0872 308D0057         (          sub.asm):01368         L0872 leax  >WhatPlane,pcr     load base of offset table
0876 A686             (          sub.asm):01369               lda   a,x                based on index load the offset value
0878 308D0055         (          sub.asm):01370               leax  >PlaneType,pcr     load base of plane name strings
087C 3086             (          sub.asm):01371               leax  a,x                based on offset index to chosen one
087E BD74CC           (          sub.asm):01372               jsr   X74CC              puts one char at a time to screen
0881 35F6             (          sub.asm):01373               puls  a,b,x,y,u,pc       were done return
                      (          sub.asm):01374         
                      (          sub.asm):01375         
0883                  (          sub.asm):01376         ShipType                       
0883 502E542E20426F61 (          sub.asm):01377         L0883 fcc "P.T. Boat"           name strings
     74
088C 00               (          sub.asm):01378               fcb C$NULL
088D 54726F6F70205368 (          sub.asm):01379               fcc "Troop Ship"
     6970
0897 00               (          sub.asm):01380               fcb C$NULL
0898 54616E6B6572     (          sub.asm):01381               fcc "Tanker"
089E 00               (          sub.asm):01382               fcb C$NULL
089F 436172676F736869 (          sub.asm):01383               fcc "Cargoship"
     70
08A8 00               (          sub.asm):01384               fcb C$NULL
08A9 43617272696572   (          sub.asm):01385               fcc "Carrier"
08B0 00               (          sub.asm):01386               fcb C$NULL
08B1 426174746C657368 (          sub.asm):01387               fcc "Battleship"
     6970
08BB 00               (          sub.asm):01388               fcb C$NULL
08BC 44657374726F7965 (          sub.asm):01389               fcc "Destroyer"
     72
08C5 00               (          sub.asm):01390               fcb C$NULL
08C6 4573636F7274     (          sub.asm):01391               fcc "Escort"
08CC 00               (          sub.asm):01392               fcb C$NULL
                      (          sub.asm):01393         
08CD                  (          sub.asm):01394         WhatPlane                      
08CD 00               (          sub.asm):01395         L08CD fcb Zerox-PlaneType  $00 name string offsets
08CE 0A               (          sub.asm):01396               fcb Aichi-PlaneType $0D
08CF 15               (          sub.asm):01397               fcb AVngr-PlaneType $15
08D0 1D               (          sub.asm):01398               fcb Ctlna-PlaneType $1D
                      (          sub.asm):01399         
                      (          sub.asm):01400         
08D1                  (          sub.asm):01401         PlaneType                      
08D1                  (          sub.asm):01402         Zerox      
08D1 5A65726F2C205369 (          sub.asm):01403         L08D1 fcc "Zero, Sir"         name strings
     72
08DA 00               (          sub.asm):01404               fcb C$NULL
08DB 41696368692C2053 (          sub.asm):01405         Aichi fcc "Aichi, Sir"
     6972
08E5 00               (          sub.asm):01406               fcb C$NULL
08E6 4176656E676572   (          sub.asm):01407         AVngr fcc "Avenger"
08ED 00               (          sub.asm):01408               fcb C$NULL
08EE 436174616C696E61 (          sub.asm):01409         Ctlna fcc "Catalina"
08F6 00               (          sub.asm):01410               fcb C$NULL
                      (          sub.asm):01411         
                      (          sub.asm):01412         
                      (          sub.asm):01413         
08F7 3476             (          sub.asm):01414         L08F7 pshs  a,b,x,y,u
08F9 308D000F         (          sub.asm):01415               leax  >L090C,pcr
08FD 5D               (          sub.asm):01416         L08FD tstb  
08FE 2707             (          sub.asm):01417               beq   L0907
0900 A680             (          sub.asm):01418         L0900 lda   ,x+
0902 26FC             (          sub.asm):01419               bne   L0900
0904 5A               (          sub.asm):01420               decb  
0905 20F6             (          sub.asm):01421               bra   L08FD
0907 BD74CC           (          sub.asm):01422         L0907 jsr   X74CC
090A 35F6             (          sub.asm):01423               puls  a,b,x,y,u,pc
                      (          sub.asm):01424         
                      (          sub.asm):01425         
090C 736F6E6172       (          sub.asm):01426         L090C fcc "sonar"
0911 00               (          sub.asm):01427               fcb C$NULL
0912 726164696F       (          sub.asm):01428               fcc "radio"
0917 00               (          sub.asm):01429               fcb C$NULL
0918 656E67696E6573   (          sub.asm):01430               fcc "engines"
091F 00               (          sub.asm):01431               fcb C$NULL
0920 727564646572     (          sub.asm):01432               fcc "rudder"
0926 00               (          sub.asm):01433               fcb C$NULL
0927 62616C6C617374   (          sub.asm):01434               fcc "ballast"
092E 00               (          sub.asm):01435               fcb C$NULL
092F 68756C6C         (          sub.asm):01436               fcc "hull"
0933 00               (          sub.asm):01437               fcb C$NULL
0934 6677642074756265 (          sub.asm):01438               fcc "fwd tubes"
     73
093D 00               (          sub.asm):01439               fcb C$NULL
093E 6166742074756265 (          sub.asm):01440               fcc "aft tubes"
     73
0947 00               (          sub.asm):01441               fcb C$NULL
0948 706C616E6573     (          sub.asm):01442               fcc "planes"
094E 00               (          sub.asm):01443               fcb C$NULL
094F 61612067756E     (          sub.asm):01444               fcc "aa gun"
0955 00               (          sub.asm):01445               fcb C$NULL
0956 7065726973636F70 (          sub.asm):01446               fcc "periscope"
     65
095F 00               (          sub.asm):01447               fcb C$NULL
0960 6261747465726965 (          sub.asm):01448               fcc "batteries"
     73
0969 00               (          sub.asm):01449               fcb C$NULL
096A 6465636B2067756E (          sub.asm):01450               fcc "deck gun"
0972 00               (          sub.asm):01451               fcb C$NULL
0973 7261646172       (          sub.asm):01452               fcc "radar"
0978 00               (          sub.asm):01453               fcb C$NULL
                      (          sub.asm):01454         
                      (          sub.asm):01455         
0979 3476             (          sub.asm):01456         L0979 pshs  a,b,x,y,u
097B 308D000F         (          sub.asm):01457               leax  >L098E,pcr
097F 5D               (          sub.asm):01458         L097F tstb  
0980 2707             (          sub.asm):01459               beq   L0989
0982 A680             (          sub.asm):01460         L0982 lda   ,x+
0984 26FC             (          sub.asm):01461               bne   L0982
0986 5A               (          sub.asm):01462               decb  
0987 20F6             (          sub.asm):01463               bra   L097F
0989 BD74CC           (          sub.asm):01464         L0989 jsr   X74CC
098C 35F6             (          sub.asm):01465               puls  a,b,x,y,u,pc
                      (          sub.asm):01466         
                      (          sub.asm):01467         
098E 736F6E6172206973 (          sub.asm):01468         L098E fcc "sonar is"
0996 00               (          sub.asm):01469               fcb C$NULL
0997 726164696F206973 (          sub.asm):01470               fcc "radio is"
099F 00               (          sub.asm):01471               fcb C$NULL
09A0 656E67696E657320 (          sub.asm):01472               fcc "engines are"
     617265
09AB 00               (          sub.asm):01473               fcb C$NULL
09AC 7275646465722069 (          sub.asm):01474               fcc "rudder is"
     73
09B5 00               (          sub.asm):01475               fcb C$NULL
09B6 62616C6C61737420 (          sub.asm):01476               fcc "ballast is"
     6973
09C0 00               (          sub.asm):01477               fcb C$NULL
09C1 68756C6C206973   (          sub.asm):01478               fcc "hull is"
09C8 00               (          sub.asm):01479               fcb C$NULL
09C9 6677642074756265 (          sub.asm):01480               fcc "fwd tubes are"
     7320617265
09D6 00               (          sub.asm):01481               fcb C$NULL
09D7 6166742074756265 (          sub.asm):01482               fcc "aft tubes are"
     7320617265
09E4 00               (          sub.asm):01483               fcb C$NULL
09E5 706C616E65732061 (          sub.asm):01484               fcc "planes are"
     7265
09EF 00               (          sub.asm):01485               fcb C$NULL
09F0 61612067756E2069 (          sub.asm):01486               fcc "aa gun is"
     73
09F9 00               (          sub.asm):01487               fcb C$NULL
09FA 7065726973636F70 (          sub.asm):01488               fcc "periscope is"
     65206973
0A06 00               (          sub.asm):01489               fcb C$NULL
0A07 6261747465726965 (          sub.asm):01490               fcc "batteries are"
     7320617265
0A14 00               (          sub.asm):01491               fcb C$NULL
0A15 6465636B2067756E (          sub.asm):01492               fcc "deck gun is"
     206973
0A20 00               (          sub.asm):01493               fcb C$NULL
0A21 7261646172206973 (          sub.asm):01494               fcc "radar is"
0A29 00               (          sub.asm):01495               fcb C$NULL
0A2A 3476             (          sub.asm):01496         L0A2A pshs  a,b,x,y,u
0A2C FC4CEF           (          sub.asm):01497               ldd   X4CEF
0A2F 58               (          sub.asm):01498               lslb  
0A30 49               (          sub.asm):01499               rola  
0A31 1083000A         (          sub.asm):01500               cmpd  #$000A
0A35 2503             (          sub.asm):01501               bcs   L0A3A
0A37 83000A           (          sub.asm):01502               subd  #$000A
0A3A FD011E           (          sub.asm):01503         L0A3A std   X011E
0A3D FC0120           (          sub.asm):01504               ldd   X0120
0A40 FD0122           (          sub.asm):01505               std   X0122
0A43 7F0125           (          sub.asm):01506               clr   X0125
0A46 CE4C84           (          sub.asm):01507               ldu   #$4C84
0A49 BD7D75           (          sub.asm):01508               jsr   X7D75
0A4C 3436             (          sub.asm):01509               pshs  a,b,x,y
0A4E 8105             (          sub.asm):01510               cmpa  #5
0A50 10230115         (          sub.asm):01511               lbls  L0B69
0A54 81D8             (          sub.asm):01512               cmpa  #$D8
0A56 1024010F         (          sub.asm):01513               lbhs  L0B69
0A5A C105             (          sub.asm):01514               cmpb  #5
0A5C 10230109         (          sub.asm):01515               lbls  L0B69
0A60 7D4C75           (          sub.asm):01516               tst   X4C75            side      0=German 1=US
0A63 2608             (          sub.asm):01517               bne   L0A6D            Not German (US)
0A65 C19A             (          sub.asm):01518               cmpb  #$9A
0A67 102400FE         (          sub.asm):01519               lbhs  L0B69
0A6B 2006             (          sub.asm):01520               bra   L0A73
0A6D C1C2             (          sub.asm):01521         L0A6D cmpb  #$C2
0A6F 102400F6         (          sub.asm):01522               lbhs  L0B69
0A73 ECE4             (          sub.asm):01523         L0A73 ldd   ,s
0A75 BD7DB4           (          sub.asm):01524               jsr   X7DB4
0A78 5D               (          sub.asm):01525               tstb  
0A79 2712             (          sub.asm):01526               beq   L0A8D
0A7B 3536             (          sub.asm):01527               puls  a,b,x,y
0A7D 7D0500           (          sub.asm):01528               tst   X0500
0A80 2609             (          sub.asm):01529               bne   L0A8B
0A82 CC0518           (          sub.asm):01530               ldd   #$0518
0A85 17FA16           (          sub.asm):01531               lbsr  SMap 
0A88 7C0500           (          sub.asm):01532               inc   X0500
0A8B 35F6             (          sub.asm):01533         L0A8B puls  a,b,x,y,u,pc
                      (          sub.asm):01534         
                      (          sub.asm):01535         
0A8D ECE4             (          sub.asm):01536         L0A8D ldd   ,s
0A8F 8C4E20           (          sub.asm):01537               cmpx  #$4E20
0A92 251D             (          sub.asm):01538               bcs   L0AB1
0A94 4C               (          sub.asm):01539               inca  
0A95 BD7DB4           (          sub.asm):01540               jsr   X7DB4
0A98 5D               (          sub.asm):01541               tstb  
0A99 2716             (          sub.asm):01542               beq   L0AB1
0A9B CC4E20           (          sub.asm):01543               ldd   #$4E20
0A9E 3406             (          sub.asm):01544               pshs  a,b
0AA0 1F10             (          sub.asm):01545               tfr   x,d
0AA2 A3E1             (          sub.asm):01546               subd  ,s++
0AA4 FD0120           (          sub.asm):01547               std   X0120
0AA7 7C0125           (          sub.asm):01548               inc   X0125
0AAA 8C5550           (          sub.asm):01549               cmpx  #$5550
0AAD 102200B8         (          sub.asm):01550               lbhi  L0B69
0AB1 8C2E40           (          sub.asm):01551         L0AB1 cmpx  #$2E40
0AB4 221F             (          sub.asm):01552               bhi   L0AD5
0AB6 ECE4             (          sub.asm):01553               ldd   ,s
0AB8 4A               (          sub.asm):01554               deca  
0AB9 BD7DB4           (          sub.asm):01555               jsr   X7DB4
0ABC 5D               (          sub.asm):01556               tstb  
0ABD 2716             (          sub.asm):01557               beq   L0AD5
0ABF BF0120           (          sub.asm):01558               stx   X0120
0AC2 CC2E40           (          sub.asm):01559               ldd   #$2E40
0AC5 B30120           (          sub.asm):01560               subd  X0120
0AC8 FD0120           (          sub.asm):01561               std   X0120
0ACB 7C0125           (          sub.asm):01562               inc   X0125
0ACE 8C2710           (          sub.asm):01563               cmpx  #$2710
0AD1 10250094         (          sub.asm):01564               lblo  L0B69
0AD5 108C2E40         (          sub.asm):01565         L0AD5 cmpy  #$2E40
0AD9 2221             (          sub.asm):01566               bhi   L0AFC
0ADB ECE4             (          sub.asm):01567               ldd   ,s
0ADD 5A               (          sub.asm):01568               decb  
0ADE BD7DB4           (          sub.asm):01569               jsr   X7DB4
0AE1 5D               (          sub.asm):01570               tstb  
0AE2 2718             (          sub.asm):01571               beq   L0AFC
0AE4 10BF0120         (          sub.asm):01572               sty   X0120
0AE8 CC2E40           (          sub.asm):01573               ldd   #$2E40
0AEB B30120           (          sub.asm):01574               subd  X0120
0AEE FD0120           (          sub.asm):01575               std   X0120
0AF1 7C0125           (          sub.asm):01576               inc   X0125
0AF4 108C2710         (          sub.asm):01577               cmpy  #$2710
0AF8 1025006D         (          sub.asm):01578               lblo  L0B69
0AFC 108C4E20         (          sub.asm):01579         L0AFC cmpy  #$4E20
0B00 2520             (          sub.asm):01580               bcs   L0B22
0B02 ECE4             (          sub.asm):01581               ldd   ,s
0B04 5C               (          sub.asm):01582               incb  
0B05 BD7DB4           (          sub.asm):01583               jsr   X7DB4
0B08 5D               (          sub.asm):01584               tstb  
0B09 2717             (          sub.asm):01585               beq   L0B22
0B0B CC4E20           (          sub.asm):01586               ldd   #$4E20
0B0E 3406             (          sub.asm):01587               pshs  a,b
0B10 1F20             (          sub.asm):01588               tfr   y,d
0B12 A3E1             (          sub.asm):01589               subd  ,s++
0B14 FD0120           (          sub.asm):01590               std   X0120
0B17 7C0125           (          sub.asm):01591               inc   X0125
0B1A 108C5550         (          sub.asm):01592               cmpy  #$5550
0B1E 10220047         (          sub.asm):01593               lbhi  L0B69
0B22 B60125           (          sub.asm):01594         L0B22 lda   X0125
0B25 270C             (          sub.asm):01595               beq   L0B33
0B27 CC0730           (          sub.asm):01596               ldd   #$0730
0B2A B30120           (          sub.asm):01597               subd  X0120
0B2D 10B3011E         (          sub.asm):01598               cmpd  X011E
0B31 2F36             (          sub.asm):01599               ble   L0B69
0B33 7F4D2C           (          sub.asm):01600         L0B33 clr   X4D2C
0B36 7D0125           (          sub.asm):01601               tst   X0125
0B39 272A             (          sub.asm):01602               beq   L0B65
0B3B C619             (          sub.asm):01603               ldb   #$19
0B3D BD7691           (          sub.asm):01604               jsr   X7691
0B40 C105             (          sub.asm):01605               cmpb  #5
0B42 2621             (          sub.asm):01606               bne   L0B65
0B44 BD72C3           (          sub.asm):01607               jsr   X72C3
0B47 5765206172652069 (          sub.asm):01608               fcc   "We are in shallow water, Sir."
     6E207368616C6C6F
     772077617465722C
     205369722E
0B64 00               (          sub.asm):01609               fcb   C$NULL
0B65 3536             (          sub.asm):01610         L0B65 puls  a,b,x,y
0B67 35F6             (          sub.asm):01611               puls  a,b,x,y,u,pc
                      (          sub.asm):01612               
                      (          sub.asm):01613               
0B69 7F0125           (          sub.asm):01614         L0B69 clr   X0125
0B6C 7D4D2C           (          sub.asm):01615               tst   X4D2C
0B6F 2635             (          sub.asm):01616               bne   L0BA6
0B71 BD72C3           (          sub.asm):01617               jsr   X72C3
0B74 5765206861766520 (          sub.asm):01618               fcc   "We have run aground, Sir"
     72756E206167726F
     756E642C20536972
0B8C 00               (          sub.asm):01619               fcb   C$NULL
0B8D C60C             (          sub.asm):01620               ldb   #$0C
0B8F BD7691           (          sub.asm):01621               jsr   X7691
0B92 B64C77           (          sub.asm):01622               lda   X4C77
0B95 4C               (          sub.asm):01623               inca  
0B96 3D               (          sub.asm):01624               mul   
0B97 1701A0           (          sub.asm):01625               lbsr  L0D3A
0B9A CC0000           (          sub.asm):01626               ldd   #0
0B9D BD7A3A           (          sub.asm):01627               jsr   X7A3A
0BA0 CC0000           (          sub.asm):01628               ldd   #0
0BA3 BD7A68           (          sub.asm):01629               jsr   X7A68
0BA6 86FF             (          sub.asm):01630         L0BA6 lda   #$FF
0BA8 B74D2C           (          sub.asm):01631               sta   X4D2C
0BAB 3536             (          sub.asm):01632               puls  a,b,x,y
0BAD 35F6             (          sub.asm):01633               puls  a,b,x,y,u,pc
                      (          sub.asm):01634               
                      (          sub.asm):01635               
0BAF 3476             (          sub.asm):01636         L0BAF pshs  a,b,x,y,u
0BB1 7D4C82           (          sub.asm):01637               tst   X4C82
0BB4 10260180         (          sub.asm):01638               lbne  L0D38
0BB8 7D4C76           (          sub.asm):01639               tst   X4C76
0BBB 10270110         (          sub.asm):01640               lbeq  L0CCF
0BBF 7D0295           (          sub.asm):01641               tst   X0295
0BC2 10270109         (          sub.asm):01642               lbeq  L0CCF
0BC6 7F0295           (          sub.asm):01643               clr   X0295
0BC9 7D4C80           (          sub.asm):01644               tst   X4C80
0BCC 102B00A1         (          sub.asm):01645               lbmi  L0C71
0BD0 8E4C98           (          sub.asm):01646               ldx   #$4C98
0BD3 B64C80           (          sub.asm):01647               lda   X4C80
0BD6 3086             (          sub.asm):01648               leax  a,x
0BD8 E684             (          sub.asm):01649               ldb   ,x
0BDA F71E10           (          sub.asm):01650               stb   X1E10
0BDD E604             (          sub.asm):01651               ldb   4,x
0BDF F71E0D           (          sub.asm):01652               stb   X1E0D
0BE2 CC7FFF           (          sub.asm):01653               ldd   #$7FFF
0BE5 FD1E0E           (          sub.asm):01654               std   X1E0E
0BE8 FD1E11           (          sub.asm):01655               std   X1E11
0BEB CE4C84           (          sub.asm):01656               ldu   #$4C84
0BEE 108E1E0D         (          sub.asm):01657               ldy   #$1E0D
0BF2 BD74D9           (          sub.asm):01658               jsr   X74D9
0BF5 F64C77           (          sub.asm):01659               ldb   X4C77
0BF8 C102             (          sub.asm):01660               cmpb  #2
0BFA 2D06             (          sub.asm):01661               blt   L0C02
0BFC 8101             (          sub.asm):01662               cmpa  #1
0BFE 2471             (          sub.asm):01663               bcc   L0C71
0C00 2004             (          sub.asm):01664               bra   L0C06
0C02 8102             (          sub.asm):01665         L0C02 cmpa  #2
0C04 246B             (          sub.asm):01666               bcc   L0C71
0C06 7F4C81           (          sub.asm):01667         L0C06 clr   X4C81
0C09 B64C80           (          sub.asm):01668               lda   X4C80
0C0C 8E4CA4           (          sub.asm):01669               ldx   #$4CA4
0C0F 108E4C78         (          sub.asm):01670               ldy   #$4C78
0C13 6CA6             (          sub.asm):01671               inc   a,y
0C15 E6A6             (          sub.asm):01672               ldb   a,y
0C17 BD723C           (          sub.asm):01673               jsr   X723C
0C1A BD723C           (          sub.asm):01674               jsr   X723C
0C1D 3406             (          sub.asm):01675               pshs  a,b
0C1F 4F               (          sub.asm):01676               clra  
0C20 BD7304           (          sub.asm):01677               jsr   X7304          calcs a integer based on input passed in d
0C23 BD72F3           (          sub.asm):01678               jsr   X72F3
0C26 20646179         (          sub.asm):01679               fcc   " day"
0C2A 00               (          sub.asm):01680               fcb   C$NULL
0C2B C101             (          sub.asm):01681               cmpb  #1
0C2D 2705             (          sub.asm):01682               beq   L0C34
0C2F BD72F3           (          sub.asm):01683               jsr   X72F3
                      (          sub.asm):01684               
0C32 73               (          sub.asm):01685               fcc   "s"          fcb  $73
0C33 00               (          sub.asm):01686               fcb  $00
                      (          sub.asm):01687               
0C34 BD72F3           (          sub.asm):01688         L0C34 jsr   X72F3
0C37 206F6E2073746174 (          sub.asm):01689               fcc   " on station, Sir!"
     696F6E2C20536972
     21
0C48 00               (          sub.asm):01690               fcb   C$NULL
0C49 BD7228           (          sub.asm):01691               jsr   X7228
0C4C 3506             (          sub.asm):01692               puls  a,b
0C4E E186             (          sub.asm):01693               cmpb  a,x
0C50 261F             (          sub.asm):01694               bne   L0C71
0C52 BD72C3           (          sub.asm):01695               jsr   X72C3
0C55 57652063616E206C (          sub.asm):01696               fcc   "We can leave now, Sir"
     65617665206E6F77
     2C20536972
0C6A 00               (          sub.asm):01697               fcb   C$NULL
                      (          sub.asm):01698               
0C6B CC010E           (          sub.asm):01699               ldd   #$010E
0C6E 17F82D           (          sub.asm):01700               lbsr  SMap 
                      (          sub.asm):01701         
0C71 7D4C81           (          sub.asm):01702         L0C71 tst   X4C81
0C74 2703             (          sub.asm):01703               beq   L0C79
0C76 7A4C81           (          sub.asm):01704               dec   X4C81
0C79 8E4C8A           (          sub.asm):01705         L0C79 ldx   #$4C8A
0C7C 5F               (          sub.asm):01706               clrb  
0C7D 6D84             (          sub.asm):01707         L0C7D tst   ,x
0C7F 2B0A             (          sub.asm):01708               bmi   L0C8B
0C81 6D03             (          sub.asm):01709               tst   3,x
0C83 2B06             (          sub.asm):01710               bmi   L0C8B
0C85 6A03             (          sub.asm):01711               dec   3,x
0C87 2602             (          sub.asm):01712               bne   L0C8B
0C89 2709             (          sub.asm):01713               beq   L0C94
0C8B 3001             (          sub.asm):01714         L0C8B leax  1,x
0C8D 5C               (          sub.asm):01715               incb  
0C8E C103             (          sub.asm):01716               cmpb  #3
0C90 26EB             (          sub.asm):01717               bne   L0C7D
0C92 2009             (          sub.asm):01718               bra   L0C9D
0C94 7C0298           (          sub.asm):01719         L0C94 inc   X0298
0C97 CC010C           (          sub.asm):01720               ldd   #$010C
0C9A 17F801           (          sub.asm):01721               lbsr  SMap 
                      (          sub.asm):01722               
0C9D 8E4C90           (          sub.asm):01723         L0C9D ldx   #$4C90
0CA0 5F               (          sub.asm):01724               clrb  
0CA1 6D84             (          sub.asm):01725         L0CA1 tst   ,x
0CA3 2B0A             (          sub.asm):01726               bmi   L0CAF
0CA5 6D04             (          sub.asm):01727               tst   4,x
0CA7 2B06             (          sub.asm):01728               bmi   L0CAF
0CA9 6A04             (          sub.asm):01729               dec   4,x
0CAB 2602             (          sub.asm):01730               bne   L0CAF
0CAD 2009             (          sub.asm):01731               bra   L0CB8
0CAF 3001             (          sub.asm):01732         L0CAF leax  1,x
0CB1 5C               (          sub.asm):01733               incb  
0CB2 C104             (          sub.asm):01734               cmpb  #4
0CB4 2DEB             (          sub.asm):01735               blt   L0CA1
0CB6 2017             (          sub.asm):01736               bra   L0CCF
0CB8 F70296           (          sub.asm):01737         L0CB8 stb   X0296
0CBB 8616             (          sub.asm):01738               lda   #$16
0CBD 3D               (          sub.asm):01739               mul   
0CBE C30579           (          sub.asm):01740               addd  #$0579
0CC1 1F01             (          sub.asm):01741               tfr   d,x
0CC3 170502           (          sub.asm):01742               lbsr  L11C8
0CC6 FD1D6D           (          sub.asm):01743               std   X1D6D
0CC9 CC010A           (          sub.asm):01744               ldd   #$010A
0CCC 17F7CF           (          sub.asm):01745               lbsr  SMap
                      (          sub.asm):01746                
0CCF F64CA0           (          sub.asm):01747         L0CCF ldb   X4CA0
0CD2 2B13             (          sub.asm):01748               bmi   L0CE7
0CD4 F64CA2           (          sub.asm):01749               ldb   X4CA2
0CD7 2B0E             (          sub.asm):01750               bmi   L0CE7
0CD9 7A4CA2           (          sub.asm):01751               dec   X4CA2
0CDC 2609             (          sub.asm):01752               bne   L0CE7
0CDE 7F028F           (          sub.asm):01753               clr   X028F
0CE1 CC024E           (          sub.asm):01754               ldd   #(sub_2*$100)+$4E
0CE4 17F7B7           (          sub.asm):01755               lbsr  SMap
                      (          sub.asm):01756                
0CE7 F64CA1           (          sub.asm):01757         L0CE7 ldb   X4CA1
0CEA 2B15             (          sub.asm):01758               bmi   L0D01
0CEC F64CA3           (          sub.asm):01759               ldb   X4CA3
0CEF 2B10             (          sub.asm):01760               bmi   L0D01
0CF1 7A4CA3           (          sub.asm):01761               dec   X4CA3
0CF4 260B             (          sub.asm):01762               bne   L0D01
0CF6 C601             (          sub.asm):01763               ldb   #1
0CF8 F7028F           (          sub.asm):01764               stb   X028F
0CFB CC024E           (          sub.asm):01765               ldd   #(sub_2*$100)+$4E
0CFE 17F79D           (          sub.asm):01766               lbsr  SMap 
                      (          sub.asm):01767               
0D01 8E4A80           (          sub.asm):01768         L0D01 ldx   #$4A80
0D04 F64CB4           (          sub.asm):01769               ldb   X4CB4
0D07 8615             (          sub.asm):01770               lda   #$15
0D09 3D               (          sub.asm):01771               mul   
0D0A 308B             (          sub.asm):01772               leax  d,x
0D0C E60D             (          sub.asm):01773               ldb   13,x
0D0E 2628             (          sub.asm):01774               bne   L0D38
0D10 EC0E             (          sub.asm):01775               ldd   14,x
0D12 10831388         (          sub.asm):01776               cmpd  #$1388
0D16 2220             (          sub.asm):01777               bhi   L0D38
0D18 7D4C81           (          sub.asm):01778               tst   X4C81
0D1B 261B             (          sub.asm):01779               bne   L0D38
0D1D CC050E           (          sub.asm):01780               ldd   #$050E
0D20 17F77B           (          sub.asm):01781               lbsr  SMap
                      (          sub.asm):01782                
0D23 7C4C82           (          sub.asm):01783               inc   X4C82
0D26 B64C76           (          sub.asm):01784               lda   X4C76
0D29 8102             (          sub.asm):01785               cmpa  #2
0D2B 260B             (          sub.asm):01786               bne   L0D38
0D2D B60500           (          sub.asm):01787               lda   X0500
0D30 2606             (          sub.asm):01788               bne   L0D38
0D32 CC0112           (          sub.asm):01789               ldd   #$0112
0D35 17F766           (          sub.asm):01790               lbsr  SMap
                      (          sub.asm):01791                
0D38 35F6             (          sub.asm):01792         L0D38 puls  a,b,x,y,u,pc
                      (          sub.asm):01793         
                      (          sub.asm):01794         
0D3A 3476             (          sub.asm):01795         L0D3A pshs  a,b,x,y,u
0D3C 5C               (          sub.asm):01796               incb  
0D3D 3404             (          sub.asm):01797               pshs  b
0D3F 1700AA           (          sub.asm):01798               lbsr  L0DEC
0D42 1700A7           (          sub.asm):01799               lbsr  L0DEC
0D45 3502             (          sub.asm):01800               puls  a
0D47 4D               (          sub.asm):01801               tsta  
0D48 2602             (          sub.asm):01802               bne   L0D4C
0D4A 8602             (          sub.asm):01803               lda   #2
0D4C C60D             (          sub.asm):01804         L0D4C ldb   #$0D
0D4E 7D4CDA           (          sub.asm):01805               tst   X4CDA
0D51 2701             (          sub.asm):01806               beq   L0D54
0D53 5C               (          sub.asm):01807               incb  
0D54 BD7691           (          sub.asm):01808         L0D54 jsr   X7691
0D57 CE4D2D           (          sub.asm):01809               ldu   #$4D2D
0D5A 6DC5             (          sub.asm):01810               tst   b,u
0D5C 2A02             (          sub.asm):01811               bpl   L0D60
0D5E 202A             (          sub.asm):01812               bra   L0D8A
0D60 ABC5             (          sub.asm):01813         L0D60 adda  b,u
0D62 8130             (          sub.asm):01814               cmpa  #$30
0D64 2502             (          sub.asm):01815               bcs   L0D68
0D66 86FF             (          sub.asm):01816               lda   #$FF
0D68 A7C5             (          sub.asm):01817         L0D68 sta   b,u
0D6A BD723C           (          sub.asm):01818               jsr   X723C
0D6D BD72F3           (          sub.asm):01819               jsr   X72F3
0D70 54686520         (          sub.asm):01820               fcc   "The "
0D74 00               (          sub.asm):01821               fcb   C$NULL
0D75 17FC01           (          sub.asm):01822               lbsr  L0979
0D78 8100             (          sub.asm):01823               cmpa  #0
0D7A 2C22             (          sub.asm):01824               bge   L0D9E
0D7C BD72F3           (          sub.asm):01825               jsr   X72F3
0D7F 2064657374726F79 (          sub.asm):01826               fcc   " destroyed"
     6564
0D89 00               (          sub.asm):01827               fcb   C$NULL
0D8A C605             (          sub.asm):01828         L0D8A ldb   #5
0D8C BD7691           (          sub.asm):01829               jsr   X7691
0D8F CB08             (          sub.asm):01830               addb  #8
0D91 B64C77           (          sub.asm):01831               lda   X4C77
0D94 4C               (          sub.asm):01832               inca  
0D95 3D               (          sub.asm):01833               mul   
0D96 FB4CEE           (          sub.asm):01834               addb  X4CEE
0D99 F74CEE           (          sub.asm):01835               stb   X4CEE
0D9C 203B             (          sub.asm):01836               bra   L0DD9
0D9E BD72F3           (          sub.asm):01837         L0D9E jsr   X72F3
0DA1 2064616D61676564 (          sub.asm):01838               fcc   " damaged"
0DA9 00               (          sub.asm):01839               fcb   C$NULL
0DAA BD7228           (          sub.asm):01840               jsr   X7228
0DAD BD723C           (          sub.asm):01841               jsr   X723C
0DB0 BD72F3           (          sub.asm):01842               jsr   X72F3
0DB3 5265706169727320 (          sub.asm):01843               fcc  "Repairs estimated at "
     657374696D617465
     6420617420
0DC8 00               (          sub.asm):01844               fcb   C$NULL
0DC9 1F89             (          sub.asm):01845               tfr   a,b
0DCB 4F               (          sub.asm):01846               clra  
0DCC BD7304           (          sub.asm):01847               jsr   X7304          calcs a integer based on input passed in d
0DCF BD72F3           (          sub.asm):01848               jsr   X72F3
0DD2 20686F757273     (          sub.asm):01849               fcc   " hours"
0DD8 00               (          sub.asm):01850               fcb   C$NULL
0DD9 BD7228           (          sub.asm):01851         L0DD9 jsr   X7228
0DDC B64CEE           (          sub.asm):01852               lda   X4CEE
0DDF 2A09             (          sub.asm):01853               bpl   L0DEA
0DE1 7F0355           (          sub.asm):01854               clr   X0355
0DE4 CC0504           (          sub.asm):01855               ldd   #$0504
0DE7 17F6B4           (          sub.asm):01856               lbsr  SMap
                      (          sub.asm):01857                
0DEA 35F6             (          sub.asm):01858         L0DEA puls  a,b,x,y,u,pc
                      (          sub.asm):01859         
                      (          sub.asm):01860         
0DEC 3476             (          sub.asm):01861         L0DEC pshs  a,b,x,y,u
0DEE 108E07D0         (          sub.asm):01862               ldy   #$07D0
0DF2 3D               (          sub.asm):01863         L0DF2 mul   
0DF3 313F             (          sub.asm):01864               leay  -1,y
0DF5 26FB             (          sub.asm):01865               bne   L0DF2
                      (          sub.asm):01866               
0DF7 CC0027           (          sub.asm):01867               ldd   #$0027           PRN,CTN
0DFA BD735B           (          sub.asm):01868               jsr   X735B            call Change Palette
                      (          sub.asm):01869               
0DFD CC0300           (          sub.asm):01870               ldd   #$0300           PRN,CTN
0E00 BD735B           (          sub.asm):01871               jsr   X735B            call Change Palette
                      (          sub.asm):01872               
0E03 CC0F26           (          sub.asm):01873               ldd   #$0F26           PRN,CTN
0E06 BD735B           (          sub.asm):01874               jsr   X735B            call Change Palette
                      (          sub.asm):01875               
0E09 108E0FA0         (          sub.asm):01876               ldy   #$0FA0
0E0D 3D               (          sub.asm):01877         L0E0D mul   
0E0E 313F             (          sub.asm):01878               leay  -1,y
0E10 26FB             (          sub.asm):01879               bne   L0E0D
                      (          sub.asm):01880               
0E12 CC033F           (          sub.asm):01881               ldd   #$033F           PRN,CTN
0E15 BD735B           (          sub.asm):01882               jsr   X735B            call Change Palette
                      (          sub.asm):01883               
0E18 CC0000           (          sub.asm):01884               ldd   #$0000           PRN,CTN
0E1B BD735B           (          sub.asm):01885               jsr   X735B            call Change Palette
                      (          sub.asm):01886               
0E1E CC0F00           (          sub.asm):01887               ldd   #$0F00           PRN,CTN
0E21 BD735B           (          sub.asm):01888               jsr   X735B            call Change Palette
0E24 35F6             (          sub.asm):01889               puls  a,b,x,y,u,pc
                      (          sub.asm):01890               
                      (          sub.asm):01891               
0E26 3476             (          sub.asm):01892         L0E26 pshs  a,b,x,y,u
0E28 E640             (          sub.asm):01893               fdb   Zldb_u           ldb 0,u
0E2A C164             (          sub.asm):01894               cmpb  #$64
0E2C 2423             (          sub.asm):01895               bcc   L0E51
0E2E 308D1139         (          sub.asm):01896               leax  ByteTbl1,pcr
0E32 E6C812           (          sub.asm):01897               ldb   $12,u
0E35 E685             (          sub.asm):01898               ldb   b,x
0E37 BD76F7           (          sub.asm):01899               jsr   X76F7
0E3A 4C               (          sub.asm):01900               inca  
0E3B AB40             (          sub.asm):01901               fdb   Zadda_u          adda 0,u
0E3D 8164             (          sub.asm):01902               cmpa  #$64
0E3F 2502             (          sub.asm):01903               bcs   L0E43
0E41 8664             (          sub.asm):01904               lda   #$64
0E43 A740             (          sub.asm):01905         L0E43 fdb   $A740            sta 0,u
0E45 A6C810           (          sub.asm):01906               lda   $10,u
0E48 8101             (          sub.asm):01907               cmpa  #1
0E4A 2405             (          sub.asm):01908               bcc   L0E51
0E4C 8601             (          sub.asm):01909               lda   #1
0E4E A7C810           (          sub.asm):01910               sta   $10,u
0E51 B61D43           (          sub.asm):01911         L0E51 lda   X1D43
0E54 8102             (          sub.asm):01912               cmpa  #2
0E56 221C             (          sub.asm):01913               bhi   L0E74
0E58 FF71C9           (          sub.asm):01914               stu   X71C9
0E5B 7F71CB           (          sub.asm):01915               clr   X71CB
                      (          sub.asm):01916         
0E5E CC0400           (          sub.asm):01917         L0E5E ldd   #(sub_4*$100)+$00
0E61 17F63A           (          sub.asm):01918               lbsr  SMap
                      (          sub.asm):01919                
0E64 7C71CB           (          sub.asm):01920               inc   X71CB
0E67 B671CB           (          sub.asm):01921               lda   X71CB
0E6A 8108             (          sub.asm):01922               cmpa  #8
0E6C 25F0             (          sub.asm):01923               bcs   L0E5E
0E6E CC0000           (          sub.asm):01924               ldd   #0
0E71 FD71C9           (          sub.asm):01925               std   X71C9
0E74 35F6             (          sub.asm):01926         L0E74 puls  a,b,x,y,u,pc
                      (          sub.asm):01927         
                      (          sub.asm):01928         
0E76 8E0115           (          sub.asm):01929         L0E76 ldx   #$0115
0E79 103F15           (          sub.asm):01930               os9   F$Time
0E7C F6011A           (          sub.asm):01931               ldb   X011A
0E7F 7D0290           (          sub.asm):01932               tst   X0290
0E82 2607             (          sub.asm):01933               bne   L0E8B
0E84 F1011B           (          sub.asm):01934               cmpb  X011B
0E87 102700A2         (          sub.asm):01935               lbeq  L0F2D
0E8B F7011B           (          sub.asm):01936         L0E8B stb   X011B
0E8E FC1E20           (          sub.asm):01937               ldd   X1E20
0E91 1083003C         (          sub.asm):01938               cmpd  #$003C
0E95 2516             (          sub.asm):01939               bcs   L0EAD
0E97 CE0E10           (          sub.asm):01940               ldu   #$0E10
0E9A BD76B9           (          sub.asm):01941               jsr   X76B9
0E9D 17002F           (          sub.asm):01942               lbsr  L0ECF
0EA0 1F30             (          sub.asm):01943               tfr   u,d
0EA2 CE003C           (          sub.asm):01944               ldu   #$003C
0EA5 BD76B9           (          sub.asm):01945               jsr   X76B9
0EA8 170013           (          sub.asm):01946               lbsr  L0EBE
0EAB 1F30             (          sub.asm):01947               tfr   u,d
0EAD FB1E1B           (          sub.asm):01948         L0EAD addb  X1E1B
0EB0 F71E1B           (          sub.asm):01949               stb   X1E1B
0EB3 C13C             (          sub.asm):01950               cmpb  #$3C
0EB5 2576             (          sub.asm):01951               bcs   L0F2D
0EB7 C03C             (          sub.asm):01952               subb  #$3C
0EB9 F71E1B           (          sub.asm):01953               stb   X1E1B
0EBC C601             (          sub.asm):01954               ldb   #1
0EBE FB1E1A           (          sub.asm):01955         L0EBE addb  X1E1A
0EC1 F71E1A           (          sub.asm):01956               stb   X1E1A
0EC4 C13C             (          sub.asm):01957               cmpb  #$3C
0EC6 2565             (          sub.asm):01958               bcs   L0F2D
0EC8 C03C             (          sub.asm):01959               subb  #$3C
0ECA F71E1A           (          sub.asm):01960               stb   X1E1A
0ECD C601             (          sub.asm):01961               ldb   #1
0ECF 170073           (          sub.asm):01962         L0ECF lbsr  L0F45
0ED2 1700C2           (          sub.asm):01963               lbsr  L0F97
0ED5 FB1E19           (          sub.asm):01964               addb  X1E19
0ED8 F71E19           (          sub.asm):01965               stb   X1E19
0EDB C118             (          sub.asm):01966               cmpb  #$18
0EDD 254F             (          sub.asm):01967               bcs   L0F2E
0EDF C018             (          sub.asm):01968               subb  #$18
0EE1 F71E19           (          sub.asm):01969               stb   X1E19
0EE4 170047           (          sub.asm):01970               lbsr  L0F2E
0EE7 86FF             (          sub.asm):01971               lda   #$FF
0EE9 B70295           (          sub.asm):01972               sta   X0295
0EEC FC1E17           (          sub.asm):01973               ldd   X1E17
0EEF C30001           (          sub.asm):01974               addd  #1
0EF2 1083016D         (          sub.asm):01975               cmpd  #$016D
0EF6 2506             (          sub.asm):01976               bcs   L0EFE
0EF8 CC0000           (          sub.asm):01977               ldd   #0
0EFB 7C1E16           (          sub.asm):01978               inc   X1E16
0EFE FD1E17           (          sub.asm):01979         L0EFE std   X1E17
0F01 B64D21           (          sub.asm):01980               lda   X4D21
0F04 8102             (          sub.asm):01981               cmpa  #2
0F06 2E15             (          sub.asm):01982               bgt   L0F1D
0F08 BD72C3           (          sub.asm):01983               jsr   X72C3
0F0B 537570706C696573 (          sub.asm):01984               fcc   "Supplies low, Sir"
     206C6F772C205369
     72
0F1C 00               (          sub.asm):01985               fcb   C$NULL
0F1D B64D21           (          sub.asm):01986         L0F1D lda   X4D21
0F20 81FE             (          sub.asm):01987               cmpa  #254
0F22 2606             (          sub.asm):01988               bne   L0F2A
0F24 CC0510           (          sub.asm):01989               ldd   #$0510
0F27 16F574           (          sub.asm):01990               lbra  SMap
                      (          sub.asm):01991                
0F2A 7A4D21           (          sub.asm):01992         L0F2A dec   X4D21
0F2D 39               (          sub.asm):01993         L0F2D rts   
                      (          sub.asm):01994         
                      (          sub.asm):01995         
0F2E 4F               (          sub.asm):01996         L0F2E clra  
0F2F C105             (          sub.asm):01997               cmpb  #5
0F31 250E             (          sub.asm):01998               bcs   L0F41
0F33 C105             (          sub.asm):01999               cmpb  #5
0F35 2709             (          sub.asm):02000               beq   L0F40
0F37 C112             (          sub.asm):02001               cmpb  #$12
0F39 2705             (          sub.asm):02002               beq   L0F40
0F3B C112             (          sub.asm):02003               cmpb  #$12
0F3D 2202             (          sub.asm):02004               bhi   L0F41
0F3F 4C               (          sub.asm):02005               inca  
0F40 4C               (          sub.asm):02006         L0F40 inca  
0F41 B71E1C           (          sub.asm):02007         L0F41 sta   X1E1C
0F44 39               (          sub.asm):02008               rts   
                      (          sub.asm):02009         
                      (          sub.asm):02010         
0F45 3476             (          sub.asm):02011         L0F45 pshs  a,b,x,y,u
0F47 F70114           (          sub.asm):02012               stb   X0114
0F4A 8E4D2D           (          sub.asm):02013               ldx   #$4D2D
0F4D 5F               (          sub.asm):02014               clrb  
0F4E A685             (          sub.asm):02015         L0F4E lda   b,x
0F50 1027003C         (          sub.asm):02016               lbeq  L0F90
0F54 102B0038         (          sub.asm):02017               lbmi  L0F90
0F58 B00114           (          sub.asm):02018               suba  X0114
0F5B A785             (          sub.asm):02019               sta   b,x
0F5D 102A002F         (          sub.asm):02020               lbpl  L0F90
0F61 6F85             (          sub.asm):02021               clr   b,x
0F63 BD723C           (          sub.asm):02022               jsr   X723C
0F66 BD72F3           (          sub.asm):02023               jsr   X72F3
0F69 526570616972206F (          sub.asm):02024               fcc   "Repair of the "
     662074686520
0F77 00               (          sub.asm):02025               fcb   C$NULL
0F78 17F97C           (          sub.asm):02026               lbsr  L08F7
0F7B BD7228           (          sub.asm):02027               jsr   X7228
0F7E BD72C3           (          sub.asm):02028               jsr   X72C3
0F81 636F6D706C657465 (          sub.asm):02029               fcc   "completed, Sir"
     642C20536972
0F8F 00               (          sub.asm):02030               fcb   C$NULL
0F90 5C               (          sub.asm):02031         L0F90 incb  
0F91 C10E             (          sub.asm):02032               cmpb  #$0E
0F93 25B9             (          sub.asm):02033               bcs   L0F4E
0F95 35F6             (          sub.asm):02034               puls  a,b,x,y,u,pc
                      (          sub.asm):02035               
                      (          sub.asm):02036               
0F97 3476             (          sub.asm):02037         L0F97 pshs  a,b,x,y,u
0F99 3404             (          sub.asm):02038               pshs  b
0F9B B64D28           (          sub.asm):02039               lda   X4D28
0F9E 10270052         (          sub.asm):02040               lbeq  L0FF4
0FA2 FC4CEF           (          sub.asm):02041               ldd   X4CEF
0FA5 1026004B         (          sub.asm):02042               lbne  L0FF4
0FA9 F64CF2           (          sub.asm):02043               ldb   X4CF2
0FAC 2A01             (          sub.asm):02044               bpl   L0FAF
0FAE 50               (          sub.asm):02045               negb  
0FAF A6E4             (          sub.asm):02046         L0FAF lda   ,s
0FB1 3D               (          sub.asm):02047               mul   
0FB2 B64CDF           (          sub.asm):02048               lda   X4CDF
0FB5 3D               (          sub.asm):02049               mul   
0FB6 44               (          sub.asm):02050               lsra  
0FB7 56               (          sub.asm):02051               rorb  
0FB8 44               (          sub.asm):02052               lsra  
0FB9 56               (          sub.asm):02053               rorb  
0FBA 10830000         (          sub.asm):02054               cmpd  #0
0FBE 2601             (          sub.asm):02055               bne   L0FC1
0FC0 5C               (          sub.asm):02056               incb  
0FC1 43               (          sub.asm):02057         L0FC1 coma  
0FC2 53               (          sub.asm):02058               comb  
0FC3 C30001           (          sub.asm):02059               addd  #1
0FC6 F34D1B           (          sub.asm):02060               addd  X4D1B
0FC9 10830000         (          sub.asm):02061               cmpd  #0
0FCD 2C03             (          sub.asm):02062               bge   L0FD2
0FCF CC0000           (          sub.asm):02063               ldd   #0
0FD2 FD4D1B           (          sub.asm):02064         L0FD2 std   X4D1B
0FD5 B64D29           (          sub.asm):02065               lda   X4D29
0FD8 271A             (          sub.asm):02066               beq   L0FF4
0FDA FC4D1B           (          sub.asm):02067               ldd   X4D1B
0FDD 2715             (          sub.asm):02068               beq   L0FF4
0FDF A6E4             (          sub.asm):02069               lda   ,s
0FE1 5F               (          sub.asm):02070               clrb  
0FE2 F34D1D           (          sub.asm):02071               addd  X4D1D
0FE5 10836300         (          sub.asm):02072               cmpd  #$6300
0FE9 2503             (          sub.asm):02073               bcs   L0FEE
0FEB CC6300           (          sub.asm):02074               ldd   #$6300
0FEE FD4D1D           (          sub.asm):02075         L0FEE std   X4D1D
0FF1 16006C           (          sub.asm):02076               lbra  L1060
0FF4 B64D28           (          sub.asm):02077         L0FF4 lda   X4D28
0FF7 10260065         (          sub.asm):02078               lbne  L1060
0FFB FC4D1D           (          sub.asm):02079               ldd   X4D1D
0FFE 1027005E         (          sub.asm):02080               lbeq  L1060
1002 F64CF2           (          sub.asm):02081               ldb   X4CF2
1005 2A01             (          sub.asm):02082               bpl   L1008
1007 50               (          sub.asm):02083               negb  
1008 3406             (          sub.asm):02084         L1008 pshs  a,b
100A 4F               (          sub.asm):02085               clra  
100B F64CD5           (          sub.asm):02086               ldb   X4CD5
100E 10B34CEF         (          sub.asm):02087               cmpd  X4CEF
1012 2206             (          sub.asm):02088               bhi   L101A
1014 3506             (          sub.asm):02089               puls  a,b
1016 CB03             (          sub.asm):02090               addb  #3
1018 3406             (          sub.asm):02091               pshs  a,b
101A 3506             (          sub.asm):02092         L101A puls  a,b
101C 58               (          sub.asm):02093               lslb  
101D 58               (          sub.asm):02094               lslb  
101E A6E4             (          sub.asm):02095               lda   ,s
1020 3D               (          sub.asm):02096               mul   
1021 5C               (          sub.asm):02097               incb  
1022 B64CE3           (          sub.asm):02098               lda   X4CE3
1025 48               (          sub.asm):02099               asla  
1026 3D               (          sub.asm):02100               mul   
1027 43               (          sub.asm):02101               coma  
1028 53               (          sub.asm):02102               comb  
1029 C30001           (          sub.asm):02103               addd  #1
102C F34D1D           (          sub.asm):02104               addd  X4D1D
102F 10830000         (          sub.asm):02105               cmpd  #0
1033 2C28             (          sub.asm):02106               bge   L105D
1035 FC4D1D           (          sub.asm):02107               ldd   X4D1D
1038 2720             (          sub.asm):02108               beq   L105A
103A BD72C3           (          sub.asm):02109               jsr   X72C3
103D 5468652062617474 (          sub.asm):02110               fcc   "The batteries are dead, Sir!"
     6572696573206172
     6520646561642C20
     53697221
1059 00               (          sub.asm):02111               fcb   C$NULL
105A CC0000           (          sub.asm):02112         L105A ldd   #0
105D FD4D1D           (          sub.asm):02113         L105D std   X4D1D
1060 F64CD5           (          sub.asm):02114         L1060 ldb   X4CD5
1063 4F               (          sub.asm):02115               clra  
1064 10B34CEF         (          sub.asm):02116               cmpd  X4CEF
1068 2308             (          sub.asm):02117               bls   L1072
106A CC6300           (          sub.asm):02118               ldd   #$6300
106D FD4D1F           (          sub.asm):02119               std   X4D1F
1070 202A             (          sub.asm):02120               bra   L109C
1072 A6E4             (          sub.asm):02121         L1072 lda   ,s
1074 F64CE1           (          sub.asm):02122               ldb   X4CE1
1077 58               (          sub.asm):02123               lslb  
1078 58               (          sub.asm):02124               lslb  
1079 FB4C77           (          sub.asm):02125               addb  X4C77
107C 5C               (          sub.asm):02126               incb  
107D 58               (          sub.asm):02127               lslb  
107E 58               (          sub.asm):02128               lslb  
107F 3D               (          sub.asm):02129               mul   
1080 58               (          sub.asm):02130               lslb  
1081 49               (          sub.asm):02131               rola  
1082 43               (          sub.asm):02132               coma  
1083 53               (          sub.asm):02133               comb  
1084 C30001           (          sub.asm):02134               addd  #1
1087 F34D1F           (          sub.asm):02135               addd  X4D1F
108A 10830000         (          sub.asm):02136               cmpd  #0
108E 2C09             (          sub.asm):02137               bge   L1099
1090 CC0512           (          sub.asm):02138               ldd   #$0512
1093 17F408           (          sub.asm):02139               lbsr  SMap
                      (          sub.asm):02140                
1096 CC0000           (          sub.asm):02141               ldd   #0
1099 FD4D1F           (          sub.asm):02142         L1099 std   X4D1F
109C 3504             (          sub.asm):02143         L109C puls  b
109E 35F6             (          sub.asm):02144               puls  a,b,x,y,u,pc
                      (          sub.asm):02145               
10A0 B64D25           (          sub.asm):02146         L10A0 lda   X4D25
10A3 B71DDA           (          sub.asm):02147               sta   X1DDA
10A6 7F4D25           (          sub.asm):02148               clr   X4D25
10A9 7F1DDB           (          sub.asm):02149               clr   X1DDB
10AC 8645             (          sub.asm):02150               lda   #$45
10AE B71E13           (          sub.asm):02151               sta   X1E13
10B1 8E42B5           (          sub.asm):02152               ldx   #$42B5
10B4 A600             (          sub.asm):02153         L10B4 fdb   Zlda_x             lda  0,x
10B6 102B004F         (          sub.asm):02154               lbmi  L1109
10BA A60D             (          sub.asm):02155               lda   13,x
10BC 10260049         (          sub.asm):02156               lbne  L1109
10C0 FC4CEF           (          sub.asm):02157               ldd   X4CEF
10C3 270A             (          sub.asm):02158               beq   L10CF
10C5 EC0E             (          sub.asm):02159               ldd   14,x
10C7 10831770         (          sub.asm):02160               cmpd  #$1770
10CB 222F             (          sub.asm):02161               bhi   L10FC
10CD 201F             (          sub.asm):02162               bra   L10EE
10CF EC0E             (          sub.asm):02163         L10CF ldd   14,x
10D1 7D4CDA           (          sub.asm):02164               tst   X4CDA
10D4 2712             (          sub.asm):02165               beq   L10E8
10D6 7D4D2B           (          sub.asm):02166               tst   X4D2B
10D9 270D             (          sub.asm):02167               beq   L10E8
10DB 7D4D3A           (          sub.asm):02168               tst   X4D3A
10DE 2608             (          sub.asm):02169               bne   L10E8
10E0 10836000         (          sub.asm):02170               cmpd  #$6000
10E4 2216             (          sub.asm):02171               bhi   L10FC
10E6 2006             (          sub.asm):02172               bra   L10EE
10E8 10832000         (          sub.asm):02173         L10E8 cmpd  #$2000
10EC 220E             (          sub.asm):02174               bhi   L10FC
10EE 7C4D25           (          sub.asm):02175         L10EE inc   X4D25
10F1 B61DDA           (          sub.asm):02176               lda   X1DDA
10F4 2634             (          sub.asm):02177               bne   L112A
10F6 CC022C           (          sub.asm):02178               ldd   #(sub_2*$100)+$2C
10F9 16F3A2           (          sub.asm):02179               lbra  SMap
                      (          sub.asm):02180                
10FC 8C480A           (          sub.asm):02181         L10FC cmpx  #$480A
10FF 2408             (          sub.asm):02182               bcc   L1109
1101 7C1DDB           (          sub.asm):02183               inc   X1DDB
1104 EC0B             (          sub.asm):02184               ldd   11,x
1106 FD1D6D           (          sub.asm):02185               std   X1D6D
1109 308815           (          sub.asm):02186         L1109 leax  21,x
110C 7A1E13           (          sub.asm):02187               dec   X1E13
110F 26A3             (          sub.asm):02188               bne   L10B4
1111 FC4CEF           (          sub.asm):02189               ldd   X4CEF
1114 2614             (          sub.asm):02190               bne   L112A
1116 B61DDB           (          sub.asm):02191               lda   X1DDB
1119 270F             (          sub.asm):02192               beq   L112A
111B B64D26           (          sub.asm):02193               lda   X4D26
111E 2704             (          sub.asm):02194               beq   L1124
1120 7A4D26           (          sub.asm):02195               dec   X4D26
1123 39               (          sub.asm):02196               rts   
                      (          sub.asm):02197         
                      (          sub.asm):02198         
1124 CC022E           (          sub.asm):02199         L1124 ldd   #(sub_2*$100)+$2E
1127 16F374           (          sub.asm):02200               lbra  SMap 
112A 39               (          sub.asm):02201         L112A rts   
                      (          sub.asm):02202         
                      (          sub.asm):02203         
112B 8604             (          sub.asm):02204         L112B lda   #4
112D B71E13           (          sub.asm):02205               sta   X1E13
1130 8E4A02           (          sub.asm):02206               ldx   #$4A02
1133 108E0579         (          sub.asm):02207               ldy   #$0579
1137 A600             (          sub.asm):02208         L1137 fdb   Zlda_x         lda 0,x
1139 102B0059         (          sub.asm):02209               lbmi  L1196
113D A68814           (          sub.asm):02210               lda   20,x
1140 2606             (          sub.asm):02211               bne   L1148
1142 86FF             (          sub.asm):02212               lda   #$FF
1144 A700             (          sub.asm):02213               fdb   Zsta_x         sta 0,x
1146 204E             (          sub.asm):02214               bra   L1196
1148 6F8814           (          sub.asm):02215         L1148 clr   20,x
114B A68810           (          sub.asm):02216               lda   16,x
114E 2713             (          sub.asm):02217               beq   L1163
1150 A60D             (          sub.asm):02218               lda   13,x
1152 8103             (          sub.asm):02219               cmpa  #3
1154 2505             (          sub.asm):02220               bcs   L115B
1156 6F8810           (          sub.asm):02221               clr   16,x
1159 2008             (          sub.asm):02222               bra   L1163
115B C608             (          sub.asm):02223         L115B ldb   #8
115D E702             (          sub.asm):02224               stb   2,x
115F 6F01             (          sub.asm):02225               clr   1,x
1161 2006             (          sub.asm):02226               bra   L1169
1163 E621             (          sub.asm):02227         L1163 ldb   1,y
1165 E702             (          sub.asm):02228               stb   2,x
1167 6F01             (          sub.asm):02229               clr   1,x
1169 170038           (          sub.asm):02230         L1169 lbsr  L11A4
116C 4D               (          sub.asm):02231               tsta  
116D 2622             (          sub.asm):02232               bne   L1191
116F A628             (          sub.asm):02233               lda   8,y
1171 4C               (          sub.asm):02234               inca  
1172 8103             (          sub.asm):02235               cmpa  #3
1174 2616             (          sub.asm):02236               bne   L118C
1176 3406             (          sub.asm):02237               pshs  a,b
1178 A622             (          sub.asm):02238               lda   2,y
117A E624             (          sub.asm):02239               ldb   4,y
117C A724             (          sub.asm):02240               sta   4,y
117E E722             (          sub.asm):02241               stb   2,y
1180 A625             (          sub.asm):02242               lda   5,y
1182 E627             (          sub.asm):02243               ldb   7,y
1184 A727             (          sub.asm):02244               sta   7,y
1186 E725             (          sub.asm):02245               stb   5,y
1188 3506             (          sub.asm):02246               puls  a,b
118A 8601             (          sub.asm):02247               lda   #1
118C A728             (          sub.asm):02248         L118C sta   8,y
118E 170013           (          sub.asm):02249               lbsr  L11A4
1191 BD7556           (          sub.asm):02250         L1191 jsr   X7556
1194 ED09             (          sub.asm):02251               std   9,x
1196 308815           (          sub.asm):02252         L1196 leax  21,x
1199 31A816           (          sub.asm):02253               leay  22,y
119C 7A1E13           (          sub.asm):02254               dec   X1E13
119F 1026FF94         (          sub.asm):02255               lbne  L1137
11A3 39               (          sub.asm):02256               rts   
                      (          sub.asm):02257         
                      (          sub.asm):02258         
11A4 3420             (          sub.asm):02259         L11A4 pshs  y
11A6 A628             (          sub.asm):02260               lda   8,y
11A8 31A6             (          sub.asm):02261               leay  a,y
11AA CC0000           (          sub.asm):02262               ldd   #0
11AD FD1DF7           (          sub.asm):02263               std   X1DF7
11B0 FD1DFA           (          sub.asm):02264               std   X1DFA
11B3 E622             (          sub.asm):02265               ldb   2,y
11B5 F71DF6           (          sub.asm):02266               stb   X1DF6
11B8 E625             (          sub.asm):02267               ldb   5,y
11BA F71DF9           (          sub.asm):02268               stb   X1DF9
11BD 108E1DF6         (          sub.asm):02269               ldy   #$1DF6
11C1 3303             (          sub.asm):02270               leau  3,x
11C3 BD74D9           (          sub.asm):02271               jsr   X74D9
11C6 35A0             (          sub.asm):02272               puls  y,pc
                      (          sub.asm):02273         
                      (          sub.asm):02274         
11C8 3470             (          sub.asm):02275         L11C8 pshs  x,y,u
11CA CC0000           (          sub.asm):02276               ldd   #0
11CD FD1DF7           (          sub.asm):02277               std   X1DF7
11D0 FD1DFA           (          sub.asm):02278               std   X1DFA
11D3 FD1DFD           (          sub.asm):02279               std   X1DFD
11D6 FD1E00           (          sub.asm):02280               std   X1E00
11D9 E602             (          sub.asm):02281               ldb   2,x
11DB F71DF6           (          sub.asm):02282               stb   X1DF6
11DE E605             (          sub.asm):02283               ldb   5,x
11E0 F71DF9           (          sub.asm):02284               stb   X1DF9
11E3 E603             (          sub.asm):02285               ldb   3,x
11E5 F71DFC           (          sub.asm):02286               stb   X1DFC
11E8 E606             (          sub.asm):02287               ldb   6,x
11EA F71DFF           (          sub.asm):02288               stb   X1DFF
11ED 108E1DFC         (          sub.asm):02289               ldy   #$1DFC
11F1 CE1DF6           (          sub.asm):02290               ldu   #$1DF6
11F4 BD74D9           (          sub.asm):02291               jsr   X74D9
11F7 BD7556           (          sub.asm):02292               jsr   X7556
11FA 35F0             (          sub.asm):02293               puls  x,y,u,pc
                      (          sub.asm):02294         
                      (          sub.asm):02295         
11FC 8602             (          sub.asm):02296         L11FC lda   #$02             loop counter
11FE B71E13           (          sub.asm):02297               sta   X1E13            store in scratch
                      (          sub.asm):02298               
1201 8E4A56           (          sub.asm):02299               ldx   #$4A56           base address
                      (          sub.asm):02300               
1204 A600             (          sub.asm):02301         L1204 fdb   Zlda_x           lda 0,x     
1206 102B00DC         (          sub.asm):02302               lbmi  L12E6            on minus skip loop
                      (          sub.asm):02303               
120A EE8813           (          sub.asm):02304               ldu   $13,x
120D A647             (          sub.asm):02305               lda   $07,u
120F 2771             (          sub.asm):02306               beq   L1282
                      (          sub.asm):02307               
1211 FC4CEF           (          sub.asm):02308               ldd   X4CEF
1214 2660             (          sub.asm):02309               bne   L1276
                      (          sub.asm):02310               
1216 A60D             (          sub.asm):02311               lda   $0D,x
1218 265C             (          sub.asm):02312               bne   L1276
                      (          sub.asm):02313               
121A EC0E             (          sub.asm):02314               ldd   $0E,x
121C 44               (          sub.asm):02315               lsra                   right shift d (/2)
121D 56               (          sub.asm):02316               rorb  
121E 44               (          sub.asm):02317               lsra                   right shift d (/2)
121F 56               (          sub.asm):02318               rorb        
1220 44               (          sub.asm):02319               lsra                   right shift d (/2) (effectively /8)
1221 56               (          sub.asm):02320               rorb  
1222 10B31E1E         (          sub.asm):02321               cmpd  X1E1E
1226 224E             (          sub.asm):02322               bhi   L1276
                      (          sub.asm):02323         
1228 A640             (          sub.asm):02324               fdb   Zlda_u         lda 0,u
122A 2621             (          sub.asm):02325               bne   L124D
                      (          sub.asm):02326         
122C BD72C3           (          sub.asm):02327               jsr   X72C3
122F 5765207069636B65 (          sub.asm):02328               fcc   "We picked up the flier, Sir"
     6420757020746865
     20666C6965722C20
     536972
124A 00               (          sub.asm):02329               fcb   C$NULL
124B 2023             (          sub.asm):02330               bra   L1270
                      (          sub.asm):02331         
124D BD72C3           (          sub.asm):02332         L124D jsr   X72C3
1250 5765207069636B65 (          sub.asm):02333               fcc   "We picked up the shore party"
     6420757020746865
     2073686F72652070
     61727479
126C 00               (          sub.asm):02334               fcb   C$NULL
                      (          sub.asm):02335         
126D 7F4D27           (          sub.asm):02336               clr   X4D27
                      (          sub.asm):02337         
1270 86FF             (          sub.asm):02338         L1270 lda   #$FF
1272 A700             (          sub.asm):02339               fdb   Zsta_x         sta 0,x
1274 2070             (          sub.asm):02340               bra   L12E6
                      (          sub.asm):02341         
1276 EC0B             (          sub.asm):02342         L1276 ldd   $0B,x          load a value indexed from x
1278 C302D0           (          sub.asm):02343               addd  #$02D0         add 720 to it 
127B BD7648           (          sub.asm):02344               jsr   X7648          call a sub that forces value to be 0-1440
                      (          sub.asm):02345         
127E ED09             (          sub.asm):02346               std   $09,x          save the result and go to bump counter
1280 2064             (          sub.asm):02347               bra   L12E6
                      (          sub.asm):02348         
1282 3141             (          sub.asm):02349         L1282 leay  $01,u
1284 3303             (          sub.asm):02350               leau  $03,x
1286 BD74D9           (          sub.asm):02351               jsr   X74D9
                      (          sub.asm):02352               
1289 3442             (          sub.asm):02353               pshs  a,u
128B BD7556           (          sub.asm):02354               jsr   X7556
                      (          sub.asm):02355         
128E ED09             (          sub.asm):02356               std   $09,x
1290 3542             (          sub.asm):02357               puls  a,u
1292 4D               (          sub.asm):02358               tsta  
1293 2651             (          sub.asm):02359               bne   L12E6
                      (          sub.asm):02360               
1295 1F30             (          sub.asm):02361               tfr   u,d
1297 44               (          sub.asm):02362               lsra                 left shift d (/2)
1298 56               (          sub.asm):02363               rorb  
1299 44               (          sub.asm):02364               lsra                 left shift d (/2) 
129A 56               (          sub.asm):02365               rorb  
129B 44               (          sub.asm):02366               lsra                 left shift d (/2) (effectively /8)
129C 56               (          sub.asm):02367               rorb  
129D 10B31E1E         (          sub.asm):02368               cmpd  X1E1E
12A1 2243             (          sub.asm):02369               bhi   L12E6
                      (          sub.asm):02370         
12A3 BD72C3           (          sub.asm):02371               jsr   X72C3
12A6 53686F7265207061 (          sub.asm):02372               fcc   "Shore party has reached land"
     7274792068617320
     7265616368656420
     6C616E64
12C2 00               (          sub.asm):02373               fcb   C$NULL
                      (          sub.asm):02374         
12C3 BD72C3           (          sub.asm):02375               jsr   X72C3
12C6 53686F7265207061 (          sub.asm):02376               fcc   "Shore party returning, Sir"
     7274792072657475
     726E696E672C2053
     6972
12E0 00               (          sub.asm):02377               fcb   C$NULL
                      (          sub.asm):02378         
12E1 EE8813           (          sub.asm):02379               ldu   $13,x
12E4 6C47             (          sub.asm):02380               inc   $07,u
                      (          sub.asm):02381         
                      (          sub.asm):02382         
12E6 308815           (          sub.asm):02383         L12E6 leax  $15,x
12E9 7A1E13           (          sub.asm):02384               dec   X1E13
12EC 1026FF14         (          sub.asm):02385               lbne  L1204
12F0 39               (          sub.asm):02386               rts   
                      (          sub.asm):02387               
                      (          sub.asm):02388               
12F1 8641             (          sub.asm):02389         L12F1 lda   #$41
12F3 B71E13           (          sub.asm):02390               sta   X1E13
12F6 8E42B5           (          sub.asm):02391               ldx   #$42B5
12F9 A600             (          sub.asm):02392         L12F9 fdb   Zlda_x        lda 0,x
12FB 102B0095         (          sub.asm):02393               lbmi  L1394
12FF 8164             (          sub.asm):02394               cmpa  #$64
1301 1024008F         (          sub.asm):02395               lbhs  L1394
1305 3476             (          sub.asm):02396               pshs  a,b,x,y,u
1307 A60D             (          sub.asm):02397               lda   13,x
1309 2657             (          sub.asm):02398               bne   L1362
130B EC0E             (          sub.asm):02399               ldd   14,x
130D 10830064         (          sub.asm):02400               cmpd  #$0064
1311 224F             (          sub.asm):02401               bhi   L1362
1313 FC4CEF           (          sub.asm):02402               ldd   X4CEF
1316 4D               (          sub.asm):02403               tsta  
1317 2649             (          sub.asm):02404               bne   L1362
1319 B64CD5           (          sub.asm):02405               lda   X4CD5
131C BB4D11           (          sub.asm):02406               adda  X4D11
131F 8B14             (          sub.asm):02407               adda  #$14
1321 3402             (          sub.asm):02408               pshs  a
1323 E1E0             (          sub.asm):02409               cmpb  ,s+
1325 243B             (          sub.asm):02410               bcc   L1362
1327 C604             (          sub.asm):02411               ldb   #4
1329 BD7691           (          sub.asm):02412               jsr   X7691
132C C102             (          sub.asm):02413               cmpb  #2
132E 2632             (          sub.asm):02414               bne   L1362
1330 C614             (          sub.asm):02415               ldb   #$14
1332 BD7691           (          sub.asm):02416               jsr   X7691
1335 B64C77           (          sub.asm):02417               lda   X4C77
1338 4C               (          sub.asm):02418               inca  
1339 3D               (          sub.asm):02419               mul   
133A 5C               (          sub.asm):02420               incb  
133B 17F9FC           (          sub.asm):02421               lbsr  L0D3A
133E C407             (          sub.asm):02422               andb  #7
1340 FB4CEE           (          sub.asm):02423               addb  X4CEE
1343 F74CEE           (          sub.asm):02424               stb   X4CEE
1346 BD72C3           (          sub.asm):02425               jsr   X72C3
1349 5765206861766520 (          sub.asm):02426               fcc   "We have been rammed, Sir"
     6265656E2072616D
     6D65642C20536972
1361 00               (          sub.asm):02427               fcb   C$NULL
1362 3576             (          sub.asm):02428         L1362 puls  a,b,x,y,u
1364 A68812           (          sub.asm):02429               lda   18,x
1367 C60C             (          sub.asm):02430               ldb   #$0C
1369 3D               (          sub.asm):02431               mul   
136A C30501           (          sub.asm):02432               addd  #$0501
136D 1F02             (          sub.asm):02433               tfr   d,y
136F FD0109           (          sub.asm):02434               std   X0109
1372 A68810           (          sub.asm):02435               lda   16,x
1375 8102             (          sub.asm):02436               cmpa  #2
1377 2405             (          sub.asm):02437               bcc   L137E
1379 1700DF           (          sub.asm):02438               lbsr  L145B
137C 2010             (          sub.asm):02439               bra   L138E
137E 10BE0109         (          sub.asm):02440         L137E ldy   X0109
1382 A627             (          sub.asm):02441               lda   7,y
1384 2705             (          sub.asm):02442               beq   L138B
1386 170163           (          sub.asm):02443               lbsr  L14EC
1389 2003             (          sub.asm):02444               bra   L138E
138B 17026B           (          sub.asm):02445         L138B lbsr  L15F9
138E 7F1D7B           (          sub.asm):02446         L138E clr   X1D7B
1391 17000B           (          sub.asm):02447               lbsr  L139F
1394 308815           (          sub.asm):02448         L1394 leax  21,x
1397 7A1E13           (          sub.asm):02449               dec   X1E13
139A 1026FF5B         (          sub.asm):02450               lbne  L12F9
139E 39               (          sub.asm):02451               rts
                      (          sub.asm):02452               
                      (          sub.asm):02453                  
139F EE8813           (          sub.asm):02454         L139F ldu   19,x
13A2 2738             (          sub.asm):02455               beq   L13DC
13A4 8C480A           (          sub.asm):02456               cmpx  #$480A
13A7 2403             (          sub.asm):02457               bcc   L13AC
13A9 6CC814           (          sub.asm):02458               inc   $14,u
13AC A6C810           (          sub.asm):02459         L13AC lda   $10,u
13AF A18810           (          sub.asm):02460               cmpa  16,x
13B2 2508             (          sub.asm):02461               bcs   L13BC
13B4 A78810           (          sub.asm):02462               sta   16,x
13B7 6F8811           (          sub.asm):02463               clr   17,x
13BA 2020             (          sub.asm):02464               bra   L13DC
13BC E68811           (          sub.asm):02465         L13BC ldb   17,x
13BF 271B             (          sub.asm):02466               beq   L13DC
13C1 7D1E1E           (          sub.asm):02467               tst   X1E1E
13C4 260B             (          sub.asm):02468               bne   L13D1
13C6 F01E1F           (          sub.asm):02469               subb  X1E1F
13C9 C101             (          sub.asm):02470               cmpb  #1
13CB 2D04             (          sub.asm):02471               blt   L13D1
13CD E78811           (          sub.asm):02472               stb   17,x
13D0 39               (          sub.asm):02473               rts   
                      (          sub.asm):02474               
                      (          sub.asm):02475               
13D1 6F8811           (          sub.asm):02476         L13D1 clr   17,x
13D4 A7C810           (          sub.asm):02477               sta   $10,u
13D7 8605             (          sub.asm):02478               lda   #5
13D9 A7C811           (          sub.asm):02479               sta   $11,u
13DC A60D             (          sub.asm):02480         L13DC lda   13,x
13DE 2674             (          sub.asm):02481               bne   L1454
13E0 7D1D7B           (          sub.asm):02482               tst   X1D7B
13E3 270F             (          sub.asm):02483               beq   L13F4
13E5 EC01             (          sub.asm):02484               ldd   1,x
13E7 10830032         (          sub.asm):02485               cmpd  #$0032
13EB 2207             (          sub.asm):02486               bhi   L13F4
13ED CC0035           (          sub.asm):02487               ldd   #$0035
13F0 ED01             (          sub.asm):02488               std   1,x
13F2 2005             (          sub.asm):02489               bra   L13F9
13F4 B64D2C           (          sub.asm):02490         L13F4 lda   X4D2C
13F7 264B             (          sub.asm):02491               bne   L1444
13F9 F64CD5           (          sub.asm):02492         L13F9 ldb   X4CD5
13FC 4F               (          sub.asm):02493               clra  
13FD 10B34CEF         (          sub.asm):02494               cmpd  X4CEF
1401 2341             (          sub.asm):02495               bls   L1444
1403 A68810           (          sub.asm):02496               lda   16,x
1406 8102             (          sub.asm):02497               cmpa  #2
1408 10270037         (          sub.asm):02498               lbeq  L1443
140C CE0064           (          sub.asm):02499               ldu   #$0064
140F 8101             (          sub.asm):02500               cmpa  #1
1411 2503             (          sub.asm):02501               bcs   L1416
1413 CE01F4           (          sub.asm):02502               ldu   #$01F4
1416 CC2000           (          sub.asm):02503         L1416 ldd   #$2000
1419 7D1D7B           (          sub.asm):02504               tst   X1D7B
141C 2703             (          sub.asm):02505               beq   L1421
141E CC6000           (          sub.asm):02506               ldd   #$6000
1421 3406             (          sub.asm):02507         L1421 pshs  d
1423 EC0E             (          sub.asm):02508               ldd   14,x
1425 10A3E1           (          sub.asm):02509               cmpd  ,s++
1428 221A             (          sub.asm):02510               bhi   L1444
142A 7D1D7B           (          sub.asm):02511               tst   X1D7B
142D 260A             (          sub.asm):02512               bne   L1439
142F BD76B9           (          sub.asm):02513               jsr   X76B9
1432 5C               (          sub.asm):02514               incb  
1433 BD7691           (          sub.asm):02515               jsr   X7691
1436 5D               (          sub.asm):02516               tstb  
1437 260A             (          sub.asm):02517               bne   L1443
1439 8602             (          sub.asm):02518         L1439 lda   #2
143B A78810           (          sub.asm):02519               sta   16,x
143E 8605             (          sub.asm):02520               lda   #5
1440 A78811           (          sub.asm):02521               sta   17,x
1443 39               (          sub.asm):02522         L1443 rts   
                      (          sub.asm):02523         
                      (          sub.asm):02524         
1444 A68810           (          sub.asm):02525         L1444 lda   16,x
1447 8102             (          sub.asm):02526               cmpa  #2
1449 2608             (          sub.asm):02527               bne   L1453
144B 8601             (          sub.asm):02528               lda   #1
144D A78810           (          sub.asm):02529               sta   16,x
1450 6F8811           (          sub.asm):02530               clr   17,x
1453 39               (          sub.asm):02531         L1453 rts
                      (          sub.asm):02532         
                      (          sub.asm):02533            
1454 6F8810           (          sub.asm):02534         L1454 clr   16,x
1457 6F8811           (          sub.asm):02535               clr   17,x
145A 39               (          sub.asm):02536               rts
                      (          sub.asm):02537               
                      (          sub.asm):02538                  
145B EE8813           (          sub.asm):02539         L145B ldu   19,x
145E 1027007F         (          sub.asm):02540               lbeq  L14E1
1462 3420             (          sub.asm):02541               pshs  y
1464 3143             (          sub.asm):02542               leay  $03,u
1466 3303             (          sub.asm):02543               leau  3,x
1468 BD74D9           (          sub.asm):02544               jsr   X74D9
146B 3520             (          sub.asm):02545               puls  y
146D 4D               (          sub.asm):02546               tsta  
146E 2606             (          sub.asm):02547               bne   L1476
1470 11831F40         (          sub.asm):02548               cmpu  #$1F40
1474 250F             (          sub.asm):02549               bcs   L1485
1476 EE8813           (          sub.asm):02550         L1476 ldu   19,x
1479 EC41             (          sub.asm):02551               ldd   $01,u
147B C30004           (          sub.asm):02552               addd  #4
147E 3406             (          sub.asm):02553               pshs  d
1480 BD7556           (          sub.asm):02554               jsr   X7556
1483 2012             (          sub.asm):02555               bra   L1497
1485 EE8813           (          sub.asm):02556         L1485 ldu   19,x
1488 EC41             (          sub.asm):02557               ldd   $01,u
148A 1083000C         (          sub.asm):02558               cmpd  #$000C
148E 2303             (          sub.asm):02559               bls   L1493
1490 CC000C           (          sub.asm):02560               ldd   #$000C
1493 3406             (          sub.asm):02561         L1493 pshs  a,b
1495 EC49             (          sub.asm):02562               ldd   $09,u
1497 A309             (          sub.asm):02563         L1497 subd  9,x
1499 10270013         (          sub.asm):02564               lbeq  L14B0
149D BD765F           (          sub.asm):02565               jsr   X765F
14A0 10BE0109         (          sub.asm):02566               ldy   X0109
14A4 EE21             (          sub.asm):02567               ldu   1,y
14A6 170927           (          sub.asm):02568               lbsr  L1DD0
14A9 E309             (          sub.asm):02569               addd  9,x
14AB BD7648           (          sub.asm):02570               jsr   X7648
14AE ED09             (          sub.asm):02571               std   9,x
14B0 A68810           (          sub.asm):02572         L14B0 lda   16,x
14B3 270B             (          sub.asm):02573               beq   L14C0
14B5 10BE0109         (          sub.asm):02574               ldy   X0109
14B9 E621             (          sub.asm):02575               ldb   1,y
14BB 4F               (          sub.asm):02576               clra  
14BC 3262             (          sub.asm):02577               leas  2,s
14BE 2002             (          sub.asm):02578               bra   L14C2
14C0 3506             (          sub.asm):02579         L14C0 puls  a,b
14C2 A301             (          sub.asm):02580         L14C2 subd  1,x
14C4 10270018         (          sub.asm):02581               lbeq  L14E0
14C8 10BE0109         (          sub.asm):02582               ldy   X0109
14CC EE24             (          sub.asm):02583               ldu   4,y
14CE 1708FF           (          sub.asm):02584               lbsr  L1DD0
14D1 E301             (          sub.asm):02585               addd  1,x
14D3 10BE0109         (          sub.asm):02586               ldy   X0109
14D7 E121             (          sub.asm):02587               cmpb  1,y
14D9 2303             (          sub.asm):02588               bls   L14DE
14DB E621             (          sub.asm):02589               ldb   1,y
14DD 4F               (          sub.asm):02590               clra  
14DE ED01             (          sub.asm):02591         L14DE std   1,x
14E0 39               (          sub.asm):02592         L14E0 rts   
                      (          sub.asm):02593         
                      (          sub.asm):02594         
14E1 A60D             (          sub.asm):02595         L14E1 lda   13,x
14E3 8103             (          sub.asm):02596               cmpa  #3
14E5 25F9             (          sub.asm):02597               bcs   L14E0
14E7 86FF             (          sub.asm):02598               lda   #$FF
14E9 A700             (          sub.asm):02599               fdb   Zsta_x           sta 0,x
14EB 39               (          sub.asm):02600               rts   
                      (          sub.asm):02601               
                      (          sub.asm):02602               
14EC A60D             (          sub.asm):02603         L14EC lda   13,x
14EE 1026005C         (          sub.asm):02604               lbne  L154E
14F2 FC4CEF           (          sub.asm):02605               ldd   X4CEF
14F5 4D               (          sub.asm):02606               tsta  
14F6 2641             (          sub.asm):02607               bne   L1539
14F8 F14CD5           (          sub.asm):02608               cmpb  X4CD5
14FB 223C             (          sub.asm):02609               bhi   L1539
14FD C614             (          sub.asm):02610               ldb   #$14
14FF F04C77           (          sub.asm):02611               subb  X4C77
1502 BD7691           (          sub.asm):02612               jsr   X7691
1505 5D               (          sub.asm):02613               tstb  
1506 2631             (          sub.asm):02614               bne   L1539
1508 EC0E             (          sub.asm):02615               ldd   14,x
150A 10833A98         (          sub.asm):02616               cmpd  #$3A98
150E 2229             (          sub.asm):02617               bhi   L1539
1510 CE03E8           (          sub.asm):02618               ldu   #$03E8
1513 BD76B9           (          sub.asm):02619               jsr   X76B9
1516 5C               (          sub.asm):02620               incb  
1517 BD7691           (          sub.asm):02621               jsr   X7691
151A 5D               (          sub.asm):02622               tstb  
151B 2705             (          sub.asm):02623               beq   L1522
151D 170098           (          sub.asm):02624               lbsr  L15B8
1520 2017             (          sub.asm):02625               bra   L1539
1522 B64C77           (          sub.asm):02626         L1522 lda   X4C77
1525 4C               (          sub.asm):02627               inca  
1526 10BE0109         (          sub.asm):02628               ldy   X0109
152A E628             (          sub.asm):02629               ldb   8,y
152C 54               (          sub.asm):02630               lsrb  
152D 5C               (          sub.asm):02631               incb  
152E FB1E1D           (          sub.asm):02632               addb  X1E1D
1531 3D               (          sub.asm):02633               mul   
1532 BD7691           (          sub.asm):02634               jsr   X7691
1535 5C               (          sub.asm):02635               incb  
1536 17F801           (          sub.asm):02636               lbsr  L0D3A
1539 EC0E             (          sub.asm):02637         L1539 ldd   14,x
153B 108307D0         (          sub.asm):02638               cmpd  #$07D0
153F 220D             (          sub.asm):02639               bhi   L154E
1541 CC0168           (          sub.asm):02640               ldd   #$0168
1544 BD76A4           (          sub.asm):02641               jsr   X76A4
1547 E30B             (          sub.asm):02642               addd  11,x
1549 C302D0           (          sub.asm):02643               addd  #$02D0
154C 2005             (          sub.asm):02644               bra   L1553
154E EC0B             (          sub.asm):02645         L154E ldd   11,x
1550 C302D0           (          sub.asm):02646               addd  #$02D0
1553 A309             (          sub.asm):02647         L1553 subd  9,x
1555 10270013         (          sub.asm):02648               lbeq  L156C
1559 BD765F           (          sub.asm):02649               jsr   X765F
155C 10BE0109         (          sub.asm):02650               ldy   X0109
1560 EE21             (          sub.asm):02651               ldu   1,y
1562 17086B           (          sub.asm):02652               lbsr  L1DD0
1565 E309             (          sub.asm):02653               addd  9,x
1567 BD7648           (          sub.asm):02654               jsr   X7648
156A ED09             (          sub.asm):02655               std   9,x
156C 10BE0109         (          sub.asm):02656         L156C ldy   X0109
1570 E621             (          sub.asm):02657               ldb   1,y
1572 A600             (          sub.asm):02658               fdb  $A600
1574 2724             (          sub.asm):02659               beq   L159A
1576 8164             (          sub.asm):02660               cmpa  #$64
1578 2503             (          sub.asm):02661               bcs   L157D
157A 5F               (          sub.asm):02662               clrb  
157B 201D             (          sub.asm):02663               bra   L159A
157D 810A             (          sub.asm):02664         L157D cmpa  #$0A
157F 2203             (          sub.asm):02665               bhi   L1584
1581 5A               (          sub.asm):02666               decb  
1582 2016             (          sub.asm):02667               bra   L159A
1584 8150             (          sub.asm):02668         L1584 cmpa  #$50
1586 220C             (          sub.asm):02669               bhi   L1594
1588 813C             (          sub.asm):02670               cmpa  #$3C
158A 2209             (          sub.asm):02671               bhi   L1595
158C 8128             (          sub.asm):02672               cmpa  #$28
158E 2206             (          sub.asm):02673               bhi   L1596
1590 5A               (          sub.asm):02674               decb  
1591 5A               (          sub.asm):02675               decb  
1592 2006             (          sub.asm):02676               bra   L159A
1594 54               (          sub.asm):02677         L1594 lsrb  
1595 54               (          sub.asm):02678         L1595 lsrb  
1596 54               (          sub.asm):02679         L1596 lsrb  
1597 2601             (          sub.asm):02680               bne   L159A
1599 5C               (          sub.asm):02681               incb  
159A 10BE0109         (          sub.asm):02682         L159A ldy   X0109
159E 4F               (          sub.asm):02683               clra  
159F A301             (          sub.asm):02684               subd  1,x
15A1 2714             (          sub.asm):02685               beq   L15B7
15A3 EE24             (          sub.asm):02686               ldu   4,y
15A5 170828           (          sub.asm):02687               lbsr  L1DD0
15A8 10BE0109         (          sub.asm):02688               ldy   X0109
15AC E301             (          sub.asm):02689               addd  1,x
15AE E121             (          sub.asm):02690               cmpb  1,y
15B0 2303             (          sub.asm):02691               bls   L15B5
15B2 E621             (          sub.asm):02692               ldb   1,y
15B4 4F               (          sub.asm):02693               clra  
15B5 ED01             (          sub.asm):02694         L15B5 std   1,x
15B7 39               (          sub.asm):02695         L15B7 rts   
                      (          sub.asm):02696         
                      (          sub.asm):02697         
15B8 3476             (          sub.asm):02698         L15B8 pshs  a,b,x,y,u
15BA B61D43           (          sub.asm):02699               lda   X1D43
15BD 8102             (          sub.asm):02700               cmpa  #2
15BF 2233             (          sub.asm):02701               bhi   L15F4
15C1 86FF             (          sub.asm):02702               lda   #$FF
15C3 B702A2           (          sub.asm):02703               sta   X02A2
15C6 C664             (          sub.asm):02704               ldb   #$64
15C8 BD7691           (          sub.asm):02705               jsr   X7691
15CB 4F               (          sub.asm):02706               clra  
15CC C30032           (          sub.asm):02707               addd  #$0032
15CF FD029E           (          sub.asm):02708               std   X029E
15D2 C61E             (          sub.asm):02709               ldb   #$1E
15D4 BD7691           (          sub.asm):02710               jsr   X7691
15D7 3404             (          sub.asm):02711               pshs  b
15D9 C673             (          sub.asm):02712               ldb   #$73
15DB E0E0             (          sub.asm):02713               subb  ,s+
15DD 4F               (          sub.asm):02714               clra  
15DE FD02A0           (          sub.asm):02715               std   X02A0
15E1 7F029D           (          sub.asm):02716               clr   X029D
                      (          sub.asm):02717               
15E4 CC0400           (          sub.asm):02718         L15E4 ldd   #(sub_4*$100)+$00
15E7 17EEB4           (          sub.asm):02719               lbsr  SMap
                      (          sub.asm):02720                
15EA 7C029D           (          sub.asm):02721               inc   X029D
15ED B6029D           (          sub.asm):02722               lda   X029D
15F0 8108             (          sub.asm):02723               cmpa  #8
15F2 25F0             (          sub.asm):02724               bcs   L15E4
15F4 7F02A2           (          sub.asm):02725         L15F4 clr   X02A2
15F7 35F6             (          sub.asm):02726               puls  a,b,x,y,u,pc
                      (          sub.asm):02727               
                      (          sub.asm):02728               
15F9 EC0B             (          sub.asm):02729         L15F9 ldd   11,x
15FB A309             (          sub.asm):02730               subd  9,x
15FD 10270013         (          sub.asm):02731               lbeq  L1614
1601 BD765F           (          sub.asm):02732               jsr   X765F
1604 10BE0109         (          sub.asm):02733               ldy   X0109
1608 EE21             (          sub.asm):02734               ldu   1,y
160A 1707C3           (          sub.asm):02735               lbsr  L1DD0
160D E309             (          sub.asm):02736               addd  9,x
160F BD7648           (          sub.asm):02737               jsr   X7648
1612 ED09             (          sub.asm):02738               std   9,x
1614 10BE0109         (          sub.asm):02739         L1614 ldy   X0109
1618 E621             (          sub.asm):02740               ldb   1,y
161A A600             (          sub.asm):02741               fdb   Zlda_x      $A600
161C 2724             (          sub.asm):02742               beq   L1642
161E 8164             (          sub.asm):02743               cmpa  #$64
1620 2503             (          sub.asm):02744               bcs   L1625
1622 5F               (          sub.asm):02745               clrb  
1623 201D             (          sub.asm):02746               bra   L1642
1625 810A             (          sub.asm):02747         L1625 cmpa  #$0A
1627 2203             (          sub.asm):02748               bhi   L162C
1629 5A               (          sub.asm):02749               decb  
162A 2016             (          sub.asm):02750               bra   L1642
162C 8150             (          sub.asm):02751         L162C cmpa  #$50
162E 220C             (          sub.asm):02752               bhi   L163C
1630 813C             (          sub.asm):02753               cmpa  #$3C
1632 2209             (          sub.asm):02754               bhi   L163D
1634 8128             (          sub.asm):02755               cmpa  #$28
1636 2206             (          sub.asm):02756               bhi   L163E
1638 5A               (          sub.asm):02757               decb  
1639 5A               (          sub.asm):02758               decb  
163A 2006             (          sub.asm):02759               bra   L1642
163C 54               (          sub.asm):02760         L163C lsrb  
163D 54               (          sub.asm):02761         L163D lsrb  
163E 54               (          sub.asm):02762         L163E lsrb  
163F 2601             (          sub.asm):02763               bne   L1642
1641 5C               (          sub.asm):02764               incb  
1642 4F               (          sub.asm):02765         L1642 clra  
1643 10BE0109         (          sub.asm):02766               ldy   X0109
1647 A301             (          sub.asm):02767               subd  1,x
1649 2714             (          sub.asm):02768               beq   L165F
164B EE24             (          sub.asm):02769               ldu   4,y
164D 170780           (          sub.asm):02770               lbsr  L1DD0
1650 10BE0109         (          sub.asm):02771               ldy   X0109
1654 E301             (          sub.asm):02772               addd  1,x
1656 E121             (          sub.asm):02773               cmpb  1,y
1658 2303             (          sub.asm):02774               bls   L165D
165A E621             (          sub.asm):02775               ldb   1,y
165C 4F               (          sub.asm):02776               clra  
165D ED01             (          sub.asm):02777         L165D std   1,x
165F A68812           (          sub.asm):02778         L165F lda   18,x
1662 8104             (          sub.asm):02779               cmpa  #4
1664 10270001         (          sub.asm):02780               lbeq  L1669
1668 39               (          sub.asm):02781               rts
                      (          sub.asm):02782               
                      (          sub.asm):02783                  
1669 C60A             (          sub.asm):02784         L1669 ldb   #$0A
166B 8604             (          sub.asm):02785               lda   #4
166D B04C77           (          sub.asm):02786               suba  X4C77
1670 3D               (          sub.asm):02787               mul   
1671 BD7691           (          sub.asm):02788               jsr   X7691
1674 5D               (          sub.asm):02789               tstb  
1675 2701             (          sub.asm):02790               beq   L1678
1677 39               (          sub.asm):02791               rts
                      (          sub.asm):02792               
                      (          sub.asm):02793                  
1678 3476             (          sub.asm):02794         L1678 pshs  a,b,x,y,u
167A 8604             (          sub.asm):02795               lda   #4
167C B70111           (          sub.asm):02796               sta   X0111
167F CE480A           (          sub.asm):02797               ldu   #$480A
1682 A640             (          sub.asm):02798         L1682 fdb   Zlda_u           lda 0,u
1684 102A003C         (          sub.asm):02799               lbpl  L16C4
1688 6F40             (          sub.asm):02800               fdb   Zclr_u           clr 0,u
168A EC03             (          sub.asm):02801               ldd   3,x
168C ED43             (          sub.asm):02802               std   $03,u
168E EC05             (          sub.asm):02803               ldd   5,x
1690 ED45             (          sub.asm):02804               std   $05,u
1692 EC07             (          sub.asm):02805               ldd   7,x
1694 ED47             (          sub.asm):02806               std   $07,u
1696 EC09             (          sub.asm):02807               ldd   9,x
1698 ED49             (          sub.asm):02808               std   $09,u
169A AFC813           (          sub.asm):02809               stx   $13,u
169D A68810           (          sub.asm):02810               lda   16,x
16A0 A7C810           (          sub.asm):02811               sta   $10,u
16A3 6FC811           (          sub.asm):02812               clr   $11,u
16A6 C602             (          sub.asm):02813               ldb   #2
16A8 BD7691           (          sub.asm):02814               jsr   X7691
16AB E7C812           (          sub.asm):02815               stb   $12,u
16AE 3426             (          sub.asm):02816               pshs  a,b,y
16B0 CB07             (          sub.asm):02817               addb  #7
16B2 860C             (          sub.asm):02818               lda   #$0C
16B4 3D               (          sub.asm):02819               mul   
16B5 C30502           (          sub.asm):02820               addd  #$0502
16B8 1F02             (          sub.asm):02821               tfr   d,y
16BA E6A4             (          sub.asm):02822               ldb   ,y
16BC 4F               (          sub.asm):02823               clra  
16BD ED41             (          sub.asm):02824               std   $01,u
16BF 3526             (          sub.asm):02825               puls  a,b,y
16C1 7C04FB           (          sub.asm):02826               inc   X04FB
16C4 33C815           (          sub.asm):02827         L16C4 leau  $15,u
16C7 7A0111           (          sub.asm):02828               dec   X0111
16CA 1026FFB4         (          sub.asm):02829               lbne  L1682
16CE 35F6             (          sub.asm):02830               puls  a,b,x,y,u,pc
                      (          sub.asm):02831               
                      (          sub.asm):02832               
16D0 8604             (          sub.asm):02833         L16D0 lda   #4
16D2 B71E13           (          sub.asm):02834               sta   X1E13
16D5 8E480A           (          sub.asm):02835               ldx   #$480A
16D8 A600             (          sub.asm):02836         L16D8 fdb   Zlda_x             lda 0,x
16DA 2B15             (          sub.asm):02837               bmi   L16F1
16DC A68810           (          sub.asm):02838               lda   16,x
16DF 8102             (          sub.asm):02839               cmpa  #2
16E1 2405             (          sub.asm):02840               bcc   L16E8
16E3 170016           (          sub.asm):02841               lbsr  L16FC
16E6 2003             (          sub.asm):02842               bra   L16EB
16E8 17006D           (          sub.asm):02843         L16E8 lbsr  L1758
16EB 7C1D7B           (          sub.asm):02844         L16EB inc   X1D7B
16EE 17FCAE           (          sub.asm):02845               lbsr  L139F
16F1 308815           (          sub.asm):02846         L16F1 leax  21,x
16F4 7A1E13           (          sub.asm):02847               dec   X1E13
16F7 1026FFDD         (          sub.asm):02848               lbne  L16D8
16FB 39               (          sub.asm):02849               rts  
                      (          sub.asm):02850               
                      (          sub.asm):02851                
16FC A60D             (          sub.asm):02852         L16FC lda   13,x
16FE 8103             (          sub.asm):02853               cmpa  #3
1700 2505             (          sub.asm):02854               bcs   L1707
1702 86FF             (          sub.asm):02855               lda   #$FF
1704 A700             (          sub.asm):02856               fdb   Zsta_x           sta 0,x
1706 39               (          sub.asm):02857               rts 
                      (          sub.asm):02858                 
1707 EE8813           (          sub.asm):02859         L1707 ldu   19,x
170A 10270049         (          sub.asm):02860               lbeq  L1757
170E A640             (          sub.asm):02861               fdb   Zlda_u           lda 0,u
1710 102B0043         (          sub.asm):02862               lbmi  L1757
1714 EEC813           (          sub.asm):02863               ldu   $13,u
1717 A640             (          sub.asm):02864               fdb   Zlda_u           lda 0,u
1719 102B003A         (          sub.asm):02865               lbmi  L1757
171D 3143             (          sub.asm):02866               leay  $03,u
171F 3303             (          sub.asm):02867               leau  3,x
1721 BD74D9           (          sub.asm):02868               jsr   X74D9
1724 3402             (          sub.asm):02869               pshs  a
1726 BD7556           (          sub.asm):02870               jsr   X7556
1729 6DE0             (          sub.asm):02871               tst   ,s+
172B 2615             (          sub.asm):02872               bne   L1742
172D 11831000         (          sub.asm):02873               cmpu  #$1000
1731 220F             (          sub.asm):02874               bhi   L1742
1733 3406             (          sub.asm):02875               pshs  a,b
1735 CC003C           (          sub.asm):02876               ldd   #$003C
1738 BD76A4           (          sub.asm):02877               jsr   X76A4
173B E3E1             (          sub.asm):02878               addd  ,s++
173D C30410           (          sub.asm):02879               addd  #$0410
1740 2003             (          sub.asm):02880               bra   L1745
1742 C302D0           (          sub.asm):02881         L1742 addd  #$02D0
1745 A309             (          sub.asm):02882         L1745 subd  9,x
1747 BD765F           (          sub.asm):02883               jsr   X765F
174A CE0020           (          sub.asm):02884               ldu   #$0020
174D 170680           (          sub.asm):02885               lbsr  L1DD0
1750 E309             (          sub.asm):02886               addd  9,x
1752 BD7648           (          sub.asm):02887               jsr   X7648
1755 ED09             (          sub.asm):02888               std   9,x
1757 39               (          sub.asm):02889         L1757 rts
                      (          sub.asm):02890         
                      (          sub.asm):02891            
1758 A60D             (          sub.asm):02892         L1758 lda   13,x
175A 10260054         (          sub.asm):02893               lbne  L17B2
175E FC4CEF           (          sub.asm):02894               ldd   X4CEF
1761 4D               (          sub.asm):02895               tsta  
1762 2639             (          sub.asm):02896               bne   L179D
1764 F14CD5           (          sub.asm):02897               cmpb  X4CD5
1767 2234             (          sub.asm):02898               bhi   L179D
1769 C60A             (          sub.asm):02899               ldb   #$0A
176B BD7691           (          sub.asm):02900               jsr   X7691
176E 5D               (          sub.asm):02901               tstb  
176F 262C             (          sub.asm):02902               bne   L179D
1771 EC0E             (          sub.asm):02903               ldd   14,x
1773 10830FA0         (          sub.asm):02904               cmpd  #$0FA0
1777 2224             (          sub.asm):02905               bhi   L179D
1779 CE03E8           (          sub.asm):02906               ldu   #$03E8
177C BD76B9           (          sub.asm):02907               jsr   X76B9
177F 5C               (          sub.asm):02908               incb  
1780 BD7691           (          sub.asm):02909               jsr   X7691
1783 5D               (          sub.asm):02910               tstb  
1784 2705             (          sub.asm):02911               beq   L178B
1786 17FE2F           (          sub.asm):02912               lbsr  L15B8
1789 2012             (          sub.asm):02913               bra   L179D
178B B64C77           (          sub.asm):02914         L178B lda   X4C77
178E 8B02             (          sub.asm):02915               adda  #2
1790 F61E1D           (          sub.asm):02916               ldb   X1E1D
1793 CB02             (          sub.asm):02917               addb  #2
1795 3D               (          sub.asm):02918               mul   
1796 BD7691           (          sub.asm):02919               jsr   X7691
1799 5C               (          sub.asm):02920               incb  
179A 17F59D           (          sub.asm):02921               lbsr  L0D3A
179D EC0E             (          sub.asm):02922         L179D ldd   14,x
179F 108307D0         (          sub.asm):02923               cmpd  #$07D0
17A3 220D             (          sub.asm):02924               bhi   L17B2
17A5 CC0168           (          sub.asm):02925               ldd   #$0168
17A8 BD76A4           (          sub.asm):02926               jsr   X76A4
17AB E30B             (          sub.asm):02927               addd  11,x
17AD C302D0           (          sub.asm):02928               addd  #$02D0
17B0 2005             (          sub.asm):02929               bra   L17B7
17B2 EC0B             (          sub.asm):02930         L17B2 ldd   11,x
17B4 C302D0           (          sub.asm):02931               addd  #$02D0
17B7 A309             (          sub.asm):02932         L17B7 subd  9,x
17B9 10270010         (          sub.asm):02933               lbeq  L17CD
17BD BD765F           (          sub.asm):02934               jsr   X765F
17C0 CE0010           (          sub.asm):02935               ldu   #$0010
17C3 17060A           (          sub.asm):02936               lbsr  L1DD0
17C6 E309             (          sub.asm):02937               addd  9,x
17C8 BD7648           (          sub.asm):02938               jsr   X7648
17CB ED09             (          sub.asm):02939               std   9,x
17CD 39               (          sub.asm):02940         L17CD rts
                      (          sub.asm):02941         
                      (          sub.asm):02942            
17CE B61E1D           (          sub.asm):02943         L17CE lda   X1E1D
17D1 8104             (          sub.asm):02944               cmpa  #4
17D3 2701             (          sub.asm):02945               beq   L17D6
17D5 39               (          sub.asm):02946               rts 
                      (          sub.asm):02947               
                      (          sub.asm):02948                 
17D6 C606             (          sub.asm):02949         L17D6 ldb   #6
17D8 B64C77           (          sub.asm):02950               lda   X4C77
17DB 8B04             (          sub.asm):02951               adda  #4
17DD 3D               (          sub.asm):02952               mul   
17DE BD7691           (          sub.asm):02953               jsr   X7691
17E1 5D               (          sub.asm):02954               tstb  
17E2 2701             (          sub.asm):02955               beq   L17E5
17E4 39               (          sub.asm):02956               rts   
                      (          sub.asm):02957               
                      (          sub.asm):02958               
17E5 C603             (          sub.asm):02959         L17E5 ldb   #3
17E7 BD7691           (          sub.asm):02960               jsr   X7691
17EA 5D               (          sub.asm):02961               tstb  
17EB 273A             (          sub.asm):02962               beq   L1827
17ED 8604             (          sub.asm):02963               lda   #4
17EF B70111           (          sub.asm):02964               sta   X0111
17F2 CE480A           (          sub.asm):02965               ldu   #$480A
17F5 A640             (          sub.asm):02966         L17F5 fdb   Zlda_u          lda 0,u
17F7 102A0021         (          sub.asm):02967               lbpl  L181C
17FB 7C04FB           (          sub.asm):02968               inc   X04FB
17FE C602             (          sub.asm):02969               ldb   #2
1800 BD7691           (          sub.asm):02970               jsr   X7691
1803 E7C812           (          sub.asm):02971               stb   $12,u
1806 3426             (          sub.asm):02972               pshs  a,b,y
1808 CB07             (          sub.asm):02973               addb  #7
180A 860C             (          sub.asm):02974               lda   #$0C
180C 3D               (          sub.asm):02975               mul   
180D C30502           (          sub.asm):02976               addd  #$0502
1810 1F02             (          sub.asm):02977               tfr   d,y
1812 E6A4             (          sub.asm):02978               ldb   ,y
1814 4F               (          sub.asm):02979               clra  
1815 ED41             (          sub.asm):02980               std   $01,u
1817 3526             (          sub.asm):02981               puls  a,b,y
1819 160039           (          sub.asm):02982               lbra  L1855
181C 33C815           (          sub.asm):02983         L181C leau  $15,u
181F 7A0111           (          sub.asm):02984               dec   X0111
1822 1026FFCF         (          sub.asm):02985               lbne  L17F5
1826 39               (          sub.asm):02986               rts   
                      (          sub.asm):02987               
                      (          sub.asm):02988               
1827 8641             (          sub.asm):02989         L1827 lda   #$41
1829 B70111           (          sub.asm):02990               sta   X0111
182C CE42B5           (          sub.asm):02991               ldu   #$42B5
182F A640             (          sub.asm):02992         L182F fdb   Zlda_u        lda 0,u
1831 102A0015         (          sub.asm):02993               lbpl  L184A
1835 7C04FA           (          sub.asm):02994               inc   X04FA
1838 C604             (          sub.asm):02995               ldb   #4
183A BD7691           (          sub.asm):02996               jsr   X7691
183D CB04             (          sub.asm):02997               addb  #4
183F E7C812           (          sub.asm):02998               stb   $12,u
1842 CC0008           (          sub.asm):02999               ldd   #8
1845 ED41             (          sub.asm):03000               std   $01,u
1847 16000B           (          sub.asm):03001               lbra  L1855
184A 33C815           (          sub.asm):03002         L184A leau  $15,u
184D 7A0111           (          sub.asm):03003               dec   X0111
1850 1026FFDB         (          sub.asm):03004               lbne  L182F
1854 39               (          sub.asm):03005               rts   
                      (          sub.asm):03006         
                      (          sub.asm):03007         
1855 6F40             (          sub.asm):03008         L1855 fdb   Zclr_u       clr 0,u
1857 CC8000           (          sub.asm):03009               ldd   #$8000
185A BD76A4           (          sub.asm):03010               jsr   X76A4
185D C38000           (          sub.asm):03011               addd  #$8000
1860 F34C85           (          sub.asm):03012               addd  X4C85
1863 ED44             (          sub.asm):03013               std   $04,u
1865 CC8000           (          sub.asm):03014               ldd   #$8000
1868 BD76A4           (          sub.asm):03015               jsr   X76A4
186B C38000           (          sub.asm):03016               addd  #$8000
186E F34C88           (          sub.asm):03017               addd  X4C88
1871 ED47             (          sub.asm):03018               std   $07,u
1873 B64C84           (          sub.asm):03019               lda   X4C84
1876 A743             (          sub.asm):03020               sta   $03,u
1878 B64C87           (          sub.asm):03021               lda   X4C87
187B A746             (          sub.asm):03022               sta   $06,u
187D CC0000           (          sub.asm):03023               ldd   #0
1880 ED49             (          sub.asm):03024               std   $09,u
1882 EDC813           (          sub.asm):03025               std   $13,u
1885 8602             (          sub.asm):03026               lda   #2
1887 A7C810           (          sub.asm):03027               sta   $10,u
188A 6FC811           (          sub.asm):03028               clr   $11,u
188D 39               (          sub.asm):03029               rts   
                      (          sub.asm):03030         
                      (          sub.asm):03031         
188E B64D16           (          sub.asm):03032         L188E lda   X4D16
1891 2713             (          sub.asm):03033               beq   L18A6
1893 FE1E1E           (          sub.asm):03034               ldu   X1E1E
1896 1183001E         (          sub.asm):03035               cmpu  #$001E
189A 240B             (          sub.asm):03036               bcc   L18A7
189C B01E1F           (          sub.asm):03037               suba  X1E1F
189F 8101             (          sub.asm):03038               cmpa  #1
18A1 2D04             (          sub.asm):03039               blt   L18A7
18A3 B74D16           (          sub.asm):03040               sta   X4D16
18A6 39               (          sub.asm):03041         L18A6 rts
                      (          sub.asm):03042         
                      (          sub.asm):03043            
18A7 7F4D16           (          sub.asm):03044         L18A7 clr   X4D16
18AA B64D15           (          sub.asm):03045               lda   X4D15
18AD 271F             (          sub.asm):03046               beq   L18CE
18AF BD72C3           (          sub.asm):03047               jsr   X72C3
18B2 4465636B2067756E (          sub.asm):03048               fcc   "Deck gun missed, Sir"
     206D69737365642C
     20536972
18C6 00               (          sub.asm):03049               fcb   C$NULL
18C7 CC0000           (          sub.asm):03050               ldd   #0
18CA FD4D17           (          sub.asm):03051               std   X4D17
18CD 39               (          sub.asm):03052               rts   
                      (          sub.asm):03053               
                      (          sub.asm):03054               
18CE FE4D17           (          sub.asm):03055         L18CE ldu   X4D17
18D1 8617             (          sub.asm):03056               lda   #$17
18D3 F61E16           (          sub.asm):03057               ldb   X1E16
18D6 C026             (          sub.asm):03058               subb  #$26
18D8 3404             (          sub.asm):03059               pshs  b
18DA ABE0             (          sub.asm):03060               adda  ,s+
18DC 17F547           (          sub.asm):03061               lbsr  L0E26
18DF BD72C3           (          sub.asm):03062               jsr   X72C3
18E2 41207368656C6C20 (          sub.asm):03063               fcc   "A shell hit, Sir"
     6869742C20536972
18F2 00               (          sub.asm):03064               fcb   C$NULL
18F3 CC0000           (          sub.asm):03065               ldd   #0
18F6 FD4D17           (          sub.asm):03066               std   X4D17
18F9 7C04FF           (          sub.asm):03067               inc   X04FF
18FC 39               (          sub.asm):03068               rts   
                      (          sub.asm):03069               
                      (          sub.asm):03070               
18FD 8614             (          sub.asm):03071         L18FD lda   #$14
18FF B71E13           (          sub.asm):03072               sta   X1E13
1902 8E485E           (          sub.asm):03073               ldx   #$485E
1905 6D00             (          sub.asm):03074         L1905 fdb   Ztst_x             tst 0,x
1907 102B0095         (          sub.asm):03075               lbmi  L19A0
190B 170155           (          sub.asm):03076               lbsr  L1A63
190E 4D               (          sub.asm):03077               tsta  
190F 2742             (          sub.asm):03078               beq   L1953
1911 7C04FE           (          sub.asm):03079               inc   X04FE
1914 86FF             (          sub.asm):03080               lda   #$FF
1916 A700             (          sub.asm):03081               fdb   Zsta_x             sta 0.x
1918 B64CC2           (          sub.asm):03082               lda   X4CC2
191B 17F508           (          sub.asm):03083               lbsr  L0E26
191E BD723C           (          sub.asm):03084               jsr   X723C
                      (          sub.asm):03085         
1921 CC0048           (          sub.asm):03086               ldd   #$0048
1924 FD1DA5           (          sub.asm):03087               std   X1DA5
                      (          sub.asm):03088         
1927 CC0082           (          sub.asm):03089               ldd   #$0082
192A FD1DA7           (          sub.asm):03090               std   X1DA7
                      (          sub.asm):03091         
192D BD72F3           (          sub.asm):03092               jsr   X72F3
1930 546F727065646F20 (          sub.asm):03093               fcc   "Torpedo "
1938 00               (          sub.asm):03094               fcb   C$NULL
                      (          sub.asm):03095         
1939 E68810           (          sub.asm):03096               ldb   16,x
193C 4F               (          sub.asm):03097               clra  
193D BD7304           (          sub.asm):03098               jsr   X7304          calcs a integer based on input passed in d
1940 BD72F3           (          sub.asm):03099               jsr   X72F3
1943 206869742C205369 (          sub.asm):03100               fcc   " hit, Sir"
     72
194C 00               (          sub.asm):03101               fcb   C$NULL
                      (          sub.asm):03102         
194D BD7228           (          sub.asm):03103               jsr   X7228
1950 16004D           (          sub.asm):03104               lbra  L19A0
                      (          sub.asm):03105         
1953 EC8811           (          sub.asm):03106         L1953 ldd   17,x
1956 F31E1E           (          sub.asm):03107               addd  X1E1E
1959 ED8811           (          sub.asm):03108               std   17,x
195C 10B34CBD         (          sub.asm):03109               cmpd  X4CBD
1960 253E             (          sub.asm):03110               bcs   L19A0
1962 86FF             (          sub.asm):03111               lda   #$FF
1964 A700             (          sub.asm):03112               fdb   Zsta_x           sta 0,x
1966 BD723C           (          sub.asm):03113               jsr   X723C
                      (          sub.asm):03114         
                      (          sub.asm):03115         
1969 CC0048           (          sub.asm):03116               ldd   #$0048
196C FD1DA5           (          sub.asm):03117               std   X1DA5
                      (          sub.asm):03118         
196F CC0082           (          sub.asm):03119               ldd   #$0082
1972 FD1DA7           (          sub.asm):03120               std   X1DA7
                      (          sub.asm):03121         
1975 BD72F3           (          sub.asm):03122               jsr   X72F3
1978 546F727065646F20 (          sub.asm):03123               fcc   "Torpedo "
1980 00               (          sub.asm):03124               fcb   C$NULL
                      (          sub.asm):03125         
1981 E68810           (          sub.asm):03126               ldb   16,x
1984 4F               (          sub.asm):03127               clra  
1985 BD7304           (          sub.asm):03128               jsr   X7304          calcs a integer based on input passed in d
1988 BD72F3           (          sub.asm):03129               jsr   X72F3
198B 206861732073746F (          sub.asm):03130               fcc   " has stopped, Sir"
     707065642C205369
     72
199C 00               (          sub.asm):03131               fcb   C$NULL
                      (          sub.asm):03132         
199D BD7228           (          sub.asm):03133               jsr   X7228
                      (          sub.asm):03134         
19A0 308815           (          sub.asm):03135         L19A0 leax  21,x
19A3 7A1E13           (          sub.asm):03136               dec   X1E13
19A6 1026FF5B         (          sub.asm):03137               lbne  L1905
19AA 39               (          sub.asm):03138               rts   
                      (          sub.asm):03139               
                      (          sub.asm):03140               
19AB 8610             (          sub.asm):03141         L19AB lda   #$10
19AD B71E13           (          sub.asm):03142               sta   X1E13
                      (          sub.asm):03143               
19B0 8E4AFE           (          sub.asm):03144               ldx   #$4AFE
19B3 6D8810           (          sub.asm):03145         L19B3 tst   16,x
19B6 271A             (          sub.asm):03146               beq   L19D2
                      (          sub.asm):03147               
19B8 7D1E1E           (          sub.asm):03148               tst   X1E1E
19BB 260F             (          sub.asm):03149               bne   L19CC
                      (          sub.asm):03150               
19BD E68810           (          sub.asm):03151               ldb   16,x
19C0 F01E1F           (          sub.asm):03152               subb  X1E1F
19C3 2A01             (          sub.asm):03153               bpl   L19C6
19C5 5F               (          sub.asm):03154               clrb  
19C6 E78810           (          sub.asm):03155         L19C6 stb   16,x
19C9 160087           (          sub.asm):03156               lbra  L1A53
                      (          sub.asm):03157         
19CC 6F8810           (          sub.asm):03158         L19CC clr   16,x
19CF 160081           (          sub.asm):03159               lbra  L1A53
19D2 6D00             (          sub.asm):03160         L19D2 fdb   Ztst_x               tst 0,x
19D4 102B007B         (          sub.asm):03161               lbmi  L1A53
                      (          sub.asm):03162         
19D8 CC0005           (          sub.asm):03163               ldd   #5
19DB ED01             (          sub.asm):03164               std   1,x
                      (          sub.asm):03165         
19DD A60D             (          sub.asm):03166               lda   13,x
19DF 263C             (          sub.asm):03167               bne   L1A1D
                      (          sub.asm):03168         
19E1 EC0E             (          sub.asm):03169               ldd   14,x
19E3 1083000A         (          sub.asm):03170               cmpd  #$000A
19E7 2234             (          sub.asm):03171               bhi   L1A1D
                      (          sub.asm):03172         
19E9 C632             (          sub.asm):03173               ldb   #$32
19EB BD7691           (          sub.asm):03174               jsr   X7691
                      (          sub.asm):03175         
19EE B64C77           (          sub.asm):03176               lda   X4C77
19F1 4C               (          sub.asm):03177               inca  
19F2 3D               (          sub.asm):03178               mul   
19F3 17F344           (          sub.asm):03179               lbsr  L0D3A
                      (          sub.asm):03180         
19F6 C41F             (          sub.asm):03181               andb  #$1F
19F8 FB4CEE           (          sub.asm):03182               addb  X4CEE
19FB F74CEE           (          sub.asm):03183               stb   X4CEE
                      (          sub.asm):03184         
19FE BD72C3           (          sub.asm):03185               jsr   X72C3
1A01 41206D696E652068 (          sub.asm):03186               fcc   "A mine hit the sub, Sir"
     6974207468652073
     75622C20536972
1A18 00               (          sub.asm):03187               fcb   C$NULL
                      (          sub.asm):03188         
1A19 86FF             (          sub.asm):03189               lda   #$FF
1A1B A700             (          sub.asm):03190               fdb   Zsta_x           sta 0,x
1A1D 170043           (          sub.asm):03191         L1A1D lbsr  L1A63
1A20 4D               (          sub.asm):03192               tsta  
1A21 2730             (          sub.asm):03193               beq   L1A53
                      (          sub.asm):03194         
1A23 86FF             (          sub.asm):03195               lda   #$FF
1A25 A700             (          sub.asm):03196               fdb   Zsta_x           sta 0,x
1A27 8628             (          sub.asm):03197               lda   #$28
1A29 17F3FA           (          sub.asm):03198               lbsr  L0E26
                      (          sub.asm):03199         
1A2C BD72C3           (          sub.asm):03200               jsr   X72C3
1A2F 49207468696E6B20 (          sub.asm):03201               fcc   "I think a mine exploded, "
     61206D696E652065
     78706C6F6465642C
     20
1A48 53697221         (          sub.asm):03202               fcc   "Sir!"
1A4C 00               (          sub.asm):03203               fcb   C$NULL
                      (          sub.asm):03204              
1A4D BD7228           (          sub.asm):03205               jsr   X7228
                      (          sub.asm):03206              
1A50 160000           (          sub.asm):03207               lbra  L1A53
1A53 CC0000           (          sub.asm):03208         L1A53 ldd   #$0000
1A56 ED01             (          sub.asm):03209               std   1,x
1A58 308815           (          sub.asm):03210               leax  21,x
1A5B 7A1E13           (          sub.asm):03211               dec   X1E13
1A5E 1026FF51         (          sub.asm):03212               lbne  L19B3
1A62 39               (          sub.asm):03213               rts
                      (          sub.asm):03214               
                      (          sub.asm):03215                  
1A63 3434             (          sub.asm):03216         L1A63 pshs  b,x,y
1A65 3103             (          sub.asm):03217               leay  3,x
1A67 E602             (          sub.asm):03218               ldb   2,x
1A69 5C               (          sub.asm):03219               incb  
1A6A B61E1F           (          sub.asm):03220               lda   X1E1F
1A6D 8B05             (          sub.asm):03221               adda  #5
1A6F 3D               (          sub.asm):03222               mul   
1A70 FD0112           (          sub.asm):03223               std   X0112
1A73 8641             (          sub.asm):03224               lda   #$41
1A75 B70111           (          sub.asm):03225               sta   X0111
1A78 8E42B5           (          sub.asm):03226               ldx   #$42B5
1A7B 6D00             (          sub.asm):03227         L1A7B fdb   Ztst_x       tst 0,x
1A7D 2B14             (          sub.asm):03228               bmi   L1A93
1A7F 3303             (          sub.asm):03229               leau  3,x
1A81 BD74D9           (          sub.asm):03230               jsr   X74D9
1A84 4D               (          sub.asm):03231               tsta  
1A85 260C             (          sub.asm):03232               bne   L1A93
1A87 11B30112         (          sub.asm):03233               cmpu  X0112
1A8B 2206             (          sub.asm):03234               bhi   L1A93
1A8D 1F13             (          sub.asm):03235               tfr   x,u
1A8F 8601             (          sub.asm):03236               lda   #1
1A91 35B4             (          sub.asm):03237               puls  b,x,y,pc
                      (          sub.asm):03238               
                      (          sub.asm):03239               
1A93 308815           (          sub.asm):03240         L1A93 leax  21,x
1A96 7A0111           (          sub.asm):03241               dec   X0111
1A99 26E0             (          sub.asm):03242               bne   L1A7B
1A9B 4F               (          sub.asm):03243               clra  
1A9C 35B4             (          sub.asm):03244               puls  b,x,y,pc
                      (          sub.asm):03245               
                      (          sub.asm):03246               
1A9E B64D14           (          sub.asm):03247         L1A9E lda   X4D14
1AA1 275C             (          sub.asm):03248               beq   L1AFF
1AA3 FE1E1E           (          sub.asm):03249               ldu   X1E1E
1AA6 1183001E         (          sub.asm):03250               cmpu  #$001E
1AAA 240B             (          sub.asm):03251               bcc   L1AB7
1AAC B01E1F           (          sub.asm):03252               suba  X1E1F
1AAF 8101             (          sub.asm):03253               cmpa  #1
1AB1 2D04             (          sub.asm):03254               blt   L1AB7
1AB3 B74D14           (          sub.asm):03255               sta   X4D14
1AB6 39               (          sub.asm):03256               rts
                      (          sub.asm):03257               
                      (          sub.asm):03258                  
1AB7 7F4D14           (          sub.asm):03259         L1AB7 clr   X4D14
                      (          sub.asm):03260               
1ABA FE4D19           (          sub.asm):03261               ldu   X4D19
1ABD 2740             (          sub.asm):03262               beq   L1AFF
1ABF FF4D17           (          sub.asm):03263               stu   X4D17
                      (          sub.asm):03264               
1AC2 170047           (          sub.asm):03265               lbsr  L1B0C
1AC5 F74D16           (          sub.asm):03266               stb   X4D16
1AC8 B74D15           (          sub.asm):03267               sta   X4D15
                      (          sub.asm):03268               
1ACB B61E23           (          sub.asm):03269               lda   X1E23
1ACE B74D14           (          sub.asm):03270               sta   X4D14
                      (          sub.asm):03271               
1AD1 CC0000           (          sub.asm):03272               ldd   #$0000
1AD4 FD4D19           (          sub.asm):03273               std   X4D19
                      (          sub.asm):03274         
1AD7 BD72C3           (          sub.asm):03275               jsr   X72C3
1ADA 466972696E672064 (          sub.asm):03276               fcc   "Firing deck gun, Sir"
     65636B2067756E2C
     20536972
1AEE 00               (          sub.asm):03277               fcb   C$NULL
                      (          sub.asm):03278         
1AEF CC3C02           (          sub.asm):03279               ldd   #$3C02            duration and amplitude of tone
1AF2 108E0E10         (          sub.asm):03280               ldy   #$0E10            relative freq counter
1AF6 170007           (          sub.asm):03281         L1AF6 lbsr  ToneOut
                      (          sub.asm):03282         
1AF9 313E             (          sub.asm):03283               leay  -2,y
1AFB 800A             (          sub.asm):03284               suba  #$0A
1AFD 26F7             (          sub.asm):03285               bne   L1AF6
1AFF 39               (          sub.asm):03286         L1AFF rts
                      (          sub.asm):03287         
                      (          sub.asm):03288         
1B00                  (          sub.asm):03289         ToneOut   
1B00 3476             (          sub.asm):03290         L1B00 pshs  a,b,x,y,u
1B02 1F01             (          sub.asm):03291               tfr   d,x
1B04 CC0198           (          sub.asm):03292               ldd   #(StdOut*$100)+SS.Tone
1B07 103F8E           (          sub.asm):03293               os9   I$SetStt
1B0A 35F6             (          sub.asm):03294               puls  a,b,x,y,u,pc
                      (          sub.asm):03295               
                      (          sub.asm):03296               
1B0C A64D             (          sub.asm):03297         L1B0C lda   $0D,u
1B0E 2611             (          sub.asm):03298               bne   SetD             not zero 
1B10 EC4E             (          sub.asm):03299               ldd   $0E,u            otherwise load the next two bytes
1B12 10833A98         (          sub.asm):03300               cmpd  #$3A98           compare 
1B16 2209             (          sub.asm):03301               bhi   SetD
1B18 CE03E8           (          sub.asm):03302               ldu   #$03E8
1B1B BD76B9           (          sub.asm):03303               jsr   X76B9
1B1E 5C               (          sub.asm):03304               incb  
1B1F 4F               (          sub.asm):03305               clra  
1B20 39               (          sub.asm):03306               rts 
                      (          sub.asm):03307               
                      (          sub.asm):03308         
1B21                  (          sub.asm):03309         SetD        
1B21 8601             (          sub.asm):03310         L1B21 lda   #$01
1B23 C610             (          sub.asm):03311               ldb   #$10
1B25 39               (          sub.asm):03312               rts  
                      (          sub.asm):03313               
                      (          sub.asm):03314                
1B26 108E0000         (          sub.asm):03315         L1B26 ldy   #$0000
1B2A 5F               (          sub.asm):03316               clrb  
1B2B 170019           (          sub.asm):03317         L1B2B lbsr  L1B47
1B2E 5C               (          sub.asm):03318               incb  
1B2F F14CCC           (          sub.asm):03319               cmpb  X4CCC
1B32 25F7             (          sub.asm):03320               bcs   L1B2B
1B34 108E0001         (          sub.asm):03321               ldy   #1
1B38 17000C           (          sub.asm):03322         L1B38 lbsr  L1B47
1B3B 5C               (          sub.asm):03323               incb  
1B3C 1F98             (          sub.asm):03324               tfr   b,a
1B3E B04CCC           (          sub.asm):03325               suba  X4CCC
1B41 B14CCD           (          sub.asm):03326               cmpa  X4CCD
1B44 25F2             (          sub.asm):03327               bcs   L1B38
1B46 39               (          sub.asm):03328               rts
                      (          sub.asm):03329               
                      (          sub.asm):03330                  
1B47 3476             (          sub.asm):03331         L1B47 pshs  a,b,x,y,u
1B49 4F               (          sub.asm):03332               clra  
1B4A 1F01             (          sub.asm):03333               tfr   d,x
1B4C A6894D05         (          sub.asm):03334               lda   $4D05,x
1B50 102F0069         (          sub.asm):03335               lble  L1BBD
1B54 FE1E1E           (          sub.asm):03336               ldu   X1E1E
1B57 1183001E         (          sub.asm):03337               cmpu  #$001E
1B5B 240E             (          sub.asm):03338               bcc   L1B6B
1B5D B01E1F           (          sub.asm):03339               suba  X1E1F
1B60 8101             (          sub.asm):03340               cmpa  #1
1B62 2D07             (          sub.asm):03341               blt   L1B6B
1B64 A7894D05         (          sub.asm):03342               sta   $4D05,x
1B68 160052           (          sub.asm):03343               lbra  L1BBD
1B6B A6A94D01         (          sub.asm):03344         L1B6B lda   $4D01,y
1B6F A1A94CFF         (          sub.asm):03345               cmpa  $4CFF,y
1B73 2D08             (          sub.asm):03346               blt   L1B7D
1B75 86FF             (          sub.asm):03347               lda   #$FF
1B77 A7894D05         (          sub.asm):03348               sta   $4D05,x
1B7B 2040             (          sub.asm):03349               bra   L1BBD
1B7D 6F894D05         (          sub.asm):03350         L1B7D clr   $4D05,x
1B81 BD723C           (          sub.asm):03351               jsr   X723C
1B84 BD72F3           (          sub.asm):03352               jsr   X72F3
1B87 5475626520       (          sub.asm):03353               fcc   "Tube "
1B8C 00               (          sub.asm):03354               fcb   C$NULL
1B8D 1F10             (          sub.asm):03355               tfr   x,d
1B8F C30001           (          sub.asm):03356               addd  #1
1B92 BD7304           (          sub.asm):03357               jsr   X7304          calcs a integer based on input passed in d
1B95 BD72F3           (          sub.asm):03358               jsr   X72F3
1B98 2068617320626565 (          sub.asm):03359               fcc   " has been reloaded, Sir"
     6E2072656C6F6164
     65642C20536972
1BAF 00               (          sub.asm):03360               fcb   C$NULL
1BB0 BD7228           (          sub.asm):03361               jsr   X7228
1BB3 6CA94D01         (          sub.asm):03362               inc   $4D01,y
1BB7 BD7843           (          sub.asm):03363               jsr   X7843
1BBA BD7866           (          sub.asm):03364               jsr   X7866
1BBD 35F6             (          sub.asm):03365         L1BBD puls  a,b,x,y,u,pc
                      (          sub.asm):03366         
                      (          sub.asm):03367         
1BBF B64D0F           (          sub.asm):03368         L1BBF lda   X4D0F
1BC2 1027006D         (          sub.asm):03369               lbeq  L1C33
1BC6 FE1E1E           (          sub.asm):03370               ldu   X1E1E
1BC9 11830258         (          sub.asm):03371               cmpu  #$0258
1BCD 240B             (          sub.asm):03372               bcc   L1BDA
1BCF B01E1F           (          sub.asm):03373               suba  X1E1F
1BD2 8101             (          sub.asm):03374               cmpa  #$01
1BD4 2D04             (          sub.asm):03375               blt   L1BDA
1BD6 B74D14           (          sub.asm):03376               sta   X4D14
1BD9 39               (          sub.asm):03377               rts
                      (          sub.asm):03378               
                      (          sub.asm):03379                  
1BDA 7F4D0F           (          sub.asm):03380         L1BDA clr   X4D0F
1BDD BD72C3           (          sub.asm):03381               jsr   X72C3
1BE0 546F727065646F20 (          sub.asm):03382               fcc   "Torpedo transfered, Sir"
     7472616E73666572
     65642C20536972
1BF7 00               (          sub.asm):03383               fcb   C$NULL
1BF8 B64D10           (          sub.asm):03384               lda   X4D10
1BFB 2615             (          sub.asm):03385               bne   L1C12
1BFD 7C4CFF           (          sub.asm):03386               inc   X4CFF
1C00 BD7843           (          sub.asm):03387               jsr   X7843
1C03 8E4D05           (          sub.asm):03388               ldx   #$4D05
1C06 4F               (          sub.asm):03389               clra  
1C07 E686             (          sub.asm):03390         L1C07 ldb   a,x
1C09 2F23             (          sub.asm):03391               ble   L1C2E
1C0B 4C               (          sub.asm):03392               inca  
1C0C B14CCC           (          sub.asm):03393               cmpa  X4CCC
1C0F 25F6             (          sub.asm):03394               bcs   L1C07
1C11 39               (          sub.asm):03395               rts
                      (          sub.asm):03396               
                      (          sub.asm):03397                  
1C12 7C4D00           (          sub.asm):03398         L1C12 inc   X4D00
1C15 BD7866           (          sub.asm):03399               jsr   X7866
1C18 8E4D05           (          sub.asm):03400               ldx   #$4D05
1C1B B64CCC           (          sub.asm):03401               lda   X4CCC
1C1E E686             (          sub.asm):03402         L1C1E ldb   a,x
1C20 2F0C             (          sub.asm):03403               ble   L1C2E
1C22 4C               (          sub.asm):03404               inca  
1C23 1F89             (          sub.asm):03405               tfr   a,b
1C25 F04CCC           (          sub.asm):03406               subb  X4CCC
1C28 F14CCD           (          sub.asm):03407               cmpb  X4CCD
1C2B 25F1             (          sub.asm):03408               bcs   L1C1E
1C2D 39               (          sub.asm):03409               rts
                      (          sub.asm):03410               
                      (          sub.asm):03411                  
1C2E F61E23           (          sub.asm):03412         L1C2E ldb   X1E23
1C31 E786             (          sub.asm):03413               stb   a,x
1C33 39               (          sub.asm):03414         L1C33 rts
                      (          sub.asm):03415         
                      (          sub.asm):03416            
1C34 3476             (          sub.asm):03417         L1C34 pshs  a,b,x,y,u
1C36 B60125           (          sub.asm):03418               lda   X0125            load byte from $0125
1C39 2711             (          sub.asm):03419               beq   L1C4C            if zero branch to next block
                      (          sub.asm):03420              
1C3B CC0730           (          sub.asm):03421               ldd   #$0730           load d with 1840
1C3E B30120           (          sub.asm):03422               subd  X0120            subtract value held at $0120
                      (          sub.asm):03423               
1C41 44               (          sub.asm):03424               lsra                   divide d /2
1C42 56               (          sub.asm):03425               rorb         
                      (          sub.asm):03426               
1C43 44               (          sub.asm):03427               lsra                   and again divide by /2
1C44 56               (          sub.asm):03428               rorb  
                      (          sub.asm):03429               
1C45 44               (          sub.asm):03430               lsra                   and again divide by /2
1C46 56               (          sub.asm):03431               rorb  
                      (          sub.asm):03432               
1C47 44               (          sub.asm):03433               lsra                   and again divide by /2 (effective /16)
1C48 56               (          sub.asm):03434               rorb  
1C49 F70124           (          sub.asm):03435               stb   X0124            store LSB at $0124
                      (          sub.asm):03436               
1C4C B64D2C           (          sub.asm):03437         L1C4C lda   X4D2C
1C4F 2733             (          sub.asm):03438               beq   Notaground
                      (          sub.asm):03439               
1C51 FC0120           (          sub.asm):03440               ldd   X0120
1C54 10B30122         (          sub.asm):03441               cmpd  X0122
1C58 232A             (          sub.asm):03442               bls   Notaground
                      (          sub.asm):03443               
1C5A BD72C3           (          sub.asm):03444               jsr   X72C3
1C5D 5765206172652073 (          sub.asm):03445               fcc   "We are still aground, Sir!"
     74696C6C20616772
     6F756E642C205369
     7221
1C77 00               (          sub.asm):03446               fcb   C$NULL
                      (          sub.asm):03447               
1C78 CC0000           (          sub.asm):03448               ldd   #$0000
1C7B BD7A3A           (          sub.asm):03449               jsr   X7A3A
                      (          sub.asm):03450               
1C7E CC0000           (          sub.asm):03451               ldd   #$0000
1C81 BD7A68           (          sub.asm):03452               jsr   X7A68
                      (          sub.asm):03453               
1C84                  (          sub.asm):03454         Notaground      
1C84 FE4CF3           (          sub.asm):03455         L1C84 ldu   X4CF3
1C87 FC4CF1           (          sub.asm):03456               ldd   X4CF1
1C8A 108E4C84         (          sub.asm):03457               ldy   #$4C84
1C8E 17018C           (          sub.asm):03458               lbsr  L1E1D
                      (          sub.asm):03459               
1C91 FC4CF1           (          sub.asm):03460               ldd   X4CF1
1C94 2725             (          sub.asm):03461               beq   L1CBB
                      (          sub.asm):03462               
1C96 FC4CFB           (          sub.asm):03463               ldd   X4CFB
1C99 B34CF3           (          sub.asm):03464               subd  X4CF3
1C9C 271D             (          sub.asm):03465               beq   L1CBB
1C9E BD765F           (          sub.asm):03466               jsr   X765F
                      (          sub.asm):03467               
1CA1 CE0002           (          sub.asm):03468               ldu   #$0002
1CA4 7D4D30           (          sub.asm):03469               tst   X4D30
1CA7 2703             (          sub.asm):03470               beq   L1CAC
                      (          sub.asm):03471               
1CA9 CE0001           (          sub.asm):03472               ldu   #$0001
1CAC 170121           (          sub.asm):03473         L1CAC lbsr  L1DD0
                      (          sub.asm):03474         
1CAF 10830000         (          sub.asm):03475               cmpd  #$0000
1CB3 2706             (          sub.asm):03476               beq   L1CBB
1CB5 F34CF3           (          sub.asm):03477               addd  X4CF3
1CB8 BD7A23           (          sub.asm):03478               jsr   X7A23
                      (          sub.asm):03479         
1CBB B64D28           (          sub.asm):03480         L1CBB lda   X4D28
1CBE 2615             (          sub.asm):03481               bne   L1CD5
                      (          sub.asm):03482         
1CC0 B64CD2           (          sub.asm):03483               lda   X4CD2
1CC3 7D4D2A           (          sub.asm):03484               tst   X4D2A
1CC6 2701             (          sub.asm):03485               beq   L1CC9
1CC8 44               (          sub.asm):03486               lsra                   divide by 2
                      (          sub.asm):03487                 
1CC9 F64CD3           (          sub.asm):03488         L1CC9 ldb   X4CD3
1CCC 108E4D38         (          sub.asm):03489               ldy   #$4D38           load a base address
1CD0 7D4D1D           (          sub.asm):03490               tst   X4D1D
1CD3 200D             (          sub.asm):03491               bra   L1CE2
                      (          sub.asm):03492         
1CD5 B64CD0           (          sub.asm):03493         L1CD5 lda   X4CD0
1CD8 F64CD1           (          sub.asm):03494               ldb   X4CD1
1CDB 108E4D2F         (          sub.asm):03495               ldy   #$4D2F            load a base address
1CDF 7D4D1B           (          sub.asm):03496               tst   X4D1B
1CE2 2602             (          sub.asm):03497         L1CE2 bne   L1CE6
                      (          sub.asm):03498         
1CE4 4F               (          sub.asm):03499               clra  
1CE5 5F               (          sub.asm):03500               clrb  
1CE6 6DA4             (          sub.asm):03501         L1CE6 tst   ,y
1CE8 2714             (          sub.asm):03502               beq   L1CFE
                      (          sub.asm):03503         
1CEA 7D4C77           (          sub.asm):03504               tst   X4C77
1CED 2704             (          sub.asm):03505               beq   L1CF3
1CEF 4F               (          sub.asm):03506               clra  
1CF0 5F               (          sub.asm):03507               clrb  
1CF1 200B             (          sub.asm):03508               bra   L1CFE
                      (          sub.asm):03509         
1CF3 6DA4             (          sub.asm):03510         L1CF3 tst   ,y
1CF5 2B03             (          sub.asm):03511               bmi   L1CFA
1CF7 44               (          sub.asm):03512               lsra  
1CF8 2004             (          sub.asm):03513               bra   L1CFE
                      (          sub.asm):03514         
1CFA 8601             (          sub.asm):03515         L1CFA lda   #$01
1CFC C601             (          sub.asm):03516               ldb   #$01
1CFE B71DDA           (          sub.asm):03517         L1CFE sta   X1DDA
1D01 50               (          sub.asm):03518               negb  
1D02 F71DDB           (          sub.asm):03519               stb   X1DDB
                      (          sub.asm):03520               
1D05 F64CFA           (          sub.asm):03521               ldb   X4CFA
1D08 F11DDA           (          sub.asm):03522               cmpb  X1DDA
1D0B 2F03             (          sub.asm):03523               ble   L1D10
                      (          sub.asm):03524               
1D0D F61DDA           (          sub.asm):03525               ldb   X1DDA
1D10 F11DDB           (          sub.asm):03526         L1D10 cmpb  X1DDB
1D13 2C03             (          sub.asm):03527               bge   L1D18
                      (          sub.asm):03528               
1D15 F61DDB           (          sub.asm):03529               ldb   X1DDB
1D18 1D               (          sub.asm):03530         L1D18 sex   
1D19 B34CF1           (          sub.asm):03531               subd  X4CF1
1D1C 1027000C         (          sub.asm):03532               lbeq  L1D2C
                      (          sub.asm):03533               
1D20 CE0002           (          sub.asm):03534               ldu   #$0002
1D23 1700AA           (          sub.asm):03535               lbsr  L1DD0
1D26 F34CF1           (          sub.asm):03536               addd  X4CF1
1D29 BD7A3A           (          sub.asm):03537               jsr   X7A3A
                      (          sub.asm):03538               
1D2C B64CCA           (          sub.asm):03539         L1D2C lda   X4CCA
1D2F 2724             (          sub.asm):03540               beq   L1D55
                      (          sub.asm):03541               
1D31 FE1E1E           (          sub.asm):03542               ldu   X1E1E
1D34 1183001E         (          sub.asm):03543               cmpu  #$001E
1D38 240D             (          sub.asm):03544               bcc   L1D47
                      (          sub.asm):03545               
1D3A B01E1F           (          sub.asm):03546               suba  X1E1F
1D3D 8101             (          sub.asm):03547               cmpa  #$01
1D3F 2D06             (          sub.asm):03548               blt   L1D47
                      (          sub.asm):03549               
1D41 B74CCA           (          sub.asm):03550               sta   X4CCA
1D44 160087           (          sub.asm):03551               lbra  L1DCE
                      (          sub.asm):03552               
1D47 7F4CCA           (          sub.asm):03553         L1D47 clr   X4CCA
1D4A B64D28           (          sub.asm):03554               lda   X4D28
1D4D 2706             (          sub.asm):03555               beq   L1D55
                      (          sub.asm):03556               
1D4F CC020C           (          sub.asm):03557               ldd   #(sub_2*$100)+$0C
1D52 17E749           (          sub.asm):03558               lbsr  SMap
                      (          sub.asm):03559                
1D55 FC4CF7           (          sub.asm):03560         L1D55 ldd   X4CF7
1D58 B34CEF           (          sub.asm):03561               subd  X4CEF
1D5B 1027006F         (          sub.asm):03562               lbeq  L1DCE
                      (          sub.asm):03563               
1D5F CE0002           (          sub.asm):03564               ldu   #$0002
1D62 17006B           (          sub.asm):03565               lbsr  L1DD0
                      (          sub.asm):03566               
1D65 F34CEF           (          sub.asm):03567               addd  X4CEF
1D68 3406             (          sub.asm):03568               pshs  d                save this value on the stack
1D6A BD7A89           (          sub.asm):03569               jsr   X7A89
                      (          sub.asm):03570               
1D6D ECE4             (          sub.asm):03571               ldd   ,s               copy it back off the stack
1D6F 1083001E         (          sub.asm):03572               cmpd  #$001E           compare it to 30
1D73 2D17             (          sub.asm):03573               blt   L1D8C            less than that branch over smap calls
                      (          sub.asm):03574               
1D75 B61D43           (          sub.asm):03575               lda   X1D43            otherwise load a from this mem location
1D78 8101             (          sub.asm):03576               cmpa  #$01             compare that to 1
1D7A 2606             (          sub.asm):03577               bne   L1D82            not equal 1 skip one smap call
                      (          sub.asm):03578               
1D7C CC0516           (          sub.asm):03579               ldd   #(sub_5*$100)+$16
1D7F 17E71C           (          sub.asm):03580               lbsr  SMap
                      (          sub.asm):03581                
1D82 8102             (          sub.asm):03582         L1D82 cmpa  #$02             compare value from x1d43 to 2
1D84 2606             (          sub.asm):03583               bne   L1D8C            not equal 2 skip next smap call
                      (          sub.asm):03584               
1D86 CC0516           (          sub.asm):03585               ldd   #(sub_5*$100)+$16
1D89 17E712           (          sub.asm):03586               lbsr  SMap
                      (          sub.asm):03587                
1D8C F64CD9           (          sub.asm):03588         L1D8C ldb   X4CD9
1D8F 8606             (          sub.asm):03589               lda   #$06
1D91 3D               (          sub.asm):03590               mul   
1D92 10A3E4           (          sub.asm):03591               cmpd  ,s
1D95 250A             (          sub.asm):03592               bcs   L1DA1
                      (          sub.asm):03593         
1D97 830064           (          sub.asm):03594               subd  #$0064
1D9A 10A3E4           (          sub.asm):03595               cmpd  ,s
1D9D 230C             (          sub.asm):03596               bls   L1DAB
1D9F 202B             (          sub.asm):03597               bra   L1DCC
                      (          sub.asm):03598         
1DA1 3506             (          sub.asm):03599         L1DA1 puls  d                clean up stack
                      (          sub.asm):03600              
1DA3 CC0514           (          sub.asm):03601               ldd   #(sub_5*$100)+$14
1DA6 17E6F5           (          sub.asm):03602               lbsr  SMap
                      (          sub.asm):03603                
1DA9 35F6             (          sub.asm):03604               puls  a,b,x,y,u,pc
                      (          sub.asm):03605               
                      (          sub.asm):03606               
1DAB C60F             (          sub.asm):03607         L1DAB ldb   #$0F
1DAD BD7691           (          sub.asm):03608               jsr   X7691
1DB0 5D               (          sub.asm):03609               tstb  
1DB1 2619             (          sub.asm):03610               bne   L1DCC
1DB3 BD72C3           (          sub.asm):03611               jsr   X72C3
1DB6 5765206172652074 (          sub.asm):03612               fcc   "We are too deep, Sir!"
     6F6F20646565702C
     2053697221
1DCB 00               (          sub.asm):03613               fcb   C$NULL
1DCC 3506             (          sub.asm):03614         L1DCC puls  a,b
1DCE 35F6             (          sub.asm):03615         L1DCE puls  a,b,x,y,u,pc
                      (          sub.asm):03616         
                      (          sub.asm):03617         
                      (          sub.asm):03618         * caller passes arguments in d and u
                      (          sub.asm):03619         * subroutine passes back a value in d and restores u
1DD0 3440             (          sub.asm):03620         L1DD0 pshs  u                save the u value on the stack
1DD2 7F1DF5           (          sub.asm):03621               clr   X1DF5            clear this flag 
                      (          sub.asm):03622               
1DD5 10830000         (          sub.asm):03623               cmpd  #$0000         
1DD9 2A08             (          sub.asm):03624               bpl   L1DE3            branch on plus         
1DDB 7C1DF5           (          sub.asm):03625               inc   X1DF5            otherwise increment our flag
1DDE 43               (          sub.asm):03626               coma                   complement a
1DDF 53               (          sub.asm):03627               comb                   complement b
1DE0 C30001           (          sub.asm):03628               addd  #$01             and add one to d
                      (          sub.asm):03629               
1DE3 FD1DDA           (          sub.asm):03630         L1DE3 std   X1DDA            stow that 
1DE6 1F30             (          sub.asm):03631               tfr   u,d              transfer the value in u to d
1DE8 F71DDC           (          sub.asm):03632               stb   X1DDC            stow the LSB 
1DEB B61E1F           (          sub.asm):03633               lda   X1E1F            load value into a
1DEE 3D               (          sub.asm):03634               mul                    multiply them
1DEF FD1DF0           (          sub.asm):03635               std   X1DF0            stow that off
                      (          sub.asm):03636               
1DF2 7F1DEF           (          sub.asm):03637               clr   X1DEF            clear here
1DF5 F61DDC           (          sub.asm):03638               ldb   X1DDC            get the LSB passed in u that was saved
1DF8 B61E1E           (          sub.asm):03639               lda   X1E1E            load a value in a
1DFB 3D               (          sub.asm):03640               mul                    multiply them
1DFC F31DEF           (          sub.asm):03641               addd  X1DEF            add in the 0 from the byte we just cleared
1DFF FD1DEF           (          sub.asm):03642               std   X1DEF            and save it back there
                      (          sub.asm):03643         
1E02 4D               (          sub.asm):03644               tsta                   test MSB of calcualted value
1E03 2609             (          sub.asm):03645               bne   L1E0E            not zero branch and load first computed value
                      (          sub.asm):03646               
1E05 FC1DF0           (          sub.asm):03647               ldd   X1DF0            load the second computed value
1E08 10B31DDA         (          sub.asm):03648               cmpd  X1DDA            compare that to the first computed value
1E0C 2503             (          sub.asm):03649               blo   L1E11            less than branch
                      (          sub.asm):03650         
1E0E FC1DDA           (          sub.asm):03651         L1E0E ldd   X1DDA            otherwise load the first computed value
                      (          sub.asm):03652         
1E11 7D1DF5           (          sub.asm):03653         L1E11 tst   X1DF5            test the flag
1E14 2705             (          sub.asm):03654               beq   L1E1B            if zero branch to exit
                      (          sub.asm):03655                
1E16 43               (          sub.asm):03656               coma                   otherwise compliment a        
1E17 53               (          sub.asm):03657               comb                   and compliment b
1E18 C30001           (          sub.asm):03658               addd  #1               then add 1
1E1B 35C0             (          sub.asm):03659         L1E1B puls  u,pc
                      (          sub.asm):03660         
                      (          sub.asm):03661         * d,u,y set by calling routine
1E1D 3476             (          sub.asm):03662         L1E1D pshs  a,b,x,y,u
1E1F 10830000         (          sub.asm):03663               cmpd  #$0000
1E23 2F05             (          sub.asm):03664               ble   L1E2A            less or equal move on
1E25 44               (          sub.asm):03665               lsra                   divide d/2
1E26 56               (          sub.asm):03666               rorb  
1E27 44               (          sub.asm):03667               lsra                   divide d/2 again for a total of /4
1E28 56               (          sub.asm):03668               rorb  
1E29 5C               (          sub.asm):03669               incb                   bump b by one
                      (          sub.asm):03670               
1E2A FF1E02           (          sub.asm):03671         L1E2A stu   X1E02            save the u
1E2D 7F1DF5           (          sub.asm):03672               clr   X1DF5            clear some mem location
1E30 10830000         (          sub.asm):03673               cmpd  #$0000           check d again 
1E34 2A08             (          sub.asm):03674               bpl   L1E3E            positive move on
                      (          sub.asm):03675               
1E36 7C1DF5           (          sub.asm):03676               inc   X1DF5            otherwise bump that mem location
                      (          sub.asm):03677               
1E39 43               (          sub.asm):03678               coma                   compliment both a and b   
1E3A 53               (          sub.asm):03679               comb  
1E3B C30001           (          sub.asm):03680               addd  #1               bump by one
                      (          sub.asm):03681               
1E3E FD1DDA           (          sub.asm):03682         L1E3E std   X1DDA            save that value
                      (          sub.asm):03683               
1E41 B61E1F           (          sub.asm):03684               lda   X1E1F            
1E44 3D               (          sub.asm):03685               mul   
1E45 FD1DF0           (          sub.asm):03686               std   X1DF0
                      (          sub.asm):03687               
1E48 7F1DEF           (          sub.asm):03688               clr   X1DEF             so this is zero
                      (          sub.asm):03689               
1E4B B61DDA           (          sub.asm):03690               lda   X1DDA
1E4E F61E1F           (          sub.asm):03691               ldb   X1E1F
1E51 3D               (          sub.asm):03692               mul   
1E52 F31DEF           (          sub.asm):03693               addd  X1DEF             and we add a zero here ?
                      (          sub.asm):03694               
1E55 FD1DEF           (          sub.asm):03695               std   X1DEF             now stow it here
                      (          sub.asm):03696               
1E58 B61DDB           (          sub.asm):03697               lda   X1DDB
1E5B F61E1E           (          sub.asm):03698               ldb   X1E1E
1E5E 3D               (          sub.asm):03699               mul   
1E5F F31DEF           (          sub.asm):03700               addd  X1DEF
1E62 FD1DEF           (          sub.asm):03701               std   X1DEF
                      (          sub.asm):03702               
1E65 B61DDA           (          sub.asm):03703               lda   X1DDA
1E68 F61E1E           (          sub.asm):03704               ldb   X1E1E
1E6B 3D               (          sub.asm):03705               mul   
1E6C FB1DEF           (          sub.asm):03706               addb  X1DEF
1E6F F71DEF           (          sub.asm):03707               stb   X1DEF
                      (          sub.asm):03708               
1E72 FC1E02           (          sub.asm):03709               ldd   X1E02
1E75 BD7718           (          sub.asm):03710               jsr   X7718
1E78 BD7604           (          sub.asm):03711               jsr   X7604
                      (          sub.asm):03712               
1E7B EC21             (          sub.asm):03713               ldd   1,y
1E7D F31DF3           (          sub.asm):03714               addd  X1DF3
1E80 ED21             (          sub.asm):03715               std   1,y
                      (          sub.asm):03716               
1E82 A6A4             (          sub.asm):03717               lda   ,y
1E84 B91DF2           (          sub.asm):03718               adca  X1DF2
1E87 A7A4             (          sub.asm):03719               sta   ,y
                      (          sub.asm):03720               
1E89 FC1E02           (          sub.asm):03721               ldd   X1E02
1E8C BD7720           (          sub.asm):03722               jsr   X7720
1E8F BD7604           (          sub.asm):03723               jsr   X7604
                      (          sub.asm):03724               
1E92 EC24             (          sub.asm):03725               ldd   4,y
1E94 F31DF3           (          sub.asm):03726               addd  X1DF3
1E97 ED24             (          sub.asm):03727               std   4,y
                      (          sub.asm):03728               
1E99 A623             (          sub.asm):03729               lda   3,y
1E9B B91DF2           (          sub.asm):03730               adca  X1DF2
1E9E A723             (          sub.asm):03731               sta   3,y
                      (          sub.asm):03732               
1EA0 35F6             (          sub.asm):03733               puls  a,b,x,y,u,pc
                      (          sub.asm):03734               
                      (          sub.asm):03735         
1EA2                  (          sub.asm):03736         KillDisplay      
1EA2 8674             (          sub.asm):03737         L1EA2 lda   #$74             set up the loop counter
1EA4 B71E13           (          sub.asm):03738               sta   X1E13            stow it in a temp
1EA7 8E42B5           (          sub.asm):03739               ldx   #$42B5           load base addr of data to work with
                      (          sub.asm):03740         
1EAA                  (          sub.asm):03741         KillLoop
1EAA A600             (          sub.asm):03742         L1EAA fdb   Zlda_x           lda 0,x
1EAC 102B009F         (          sub.asm):03743               lbmi  KDNext           value negative ? skip processing and go again
                      (          sub.asm):03744          
1EB0 8164             (          sub.asm):03745               cmpa  #$64         
1EB2 1025007F         (          sub.asm):03746               lblo  L1F35
                      (          sub.asm):03747          
1EB6 BB1E22           (          sub.asm):03748               adda  X1E22
1EB9 A700             (          sub.asm):03749               fdb   Zsta_x            sta 0,x
1EBB 102A0076         (          sub.asm):03750               lbpl  L1F35
                      (          sub.asm):03751          
1EBF BD723C           (          sub.asm):03752               jsr   X723C
                      (          sub.asm):03753          
1EC2 8C480A           (          sub.asm):03754               cmpx  #$480A
1EC5 2440             (          sub.asm):03755               bcc   Shotdown
                      (          sub.asm):03756         
1EC7 BD72F3           (          sub.asm):03757               jsr   X72F3
1ECA 57652073756E6B20 (          sub.asm):03758               fcc   "We sunk that "
     7468617420
1ED7 00               (          sub.asm):03759               fcb   C$NULL
                      (          sub.asm):03760               
1ED8 A68812           (          sub.asm):03761               lda   $12,x              get ship index
1EDB 17E976           (          sub.asm):03762               lbsr  TypeShip           call ship type display
                      (          sub.asm):03763               
1EDE BD72F3           (          sub.asm):03764               jsr   X72F3
1EE1 2C2053697221     (          sub.asm):03765               fcc   ", Sir!"
1EE7 00               (          sub.asm):03766               fcb   C$NULL
                      (          sub.asm):03767               
1EE8 CE0360           (          sub.asm):03768               ldu   #$0360
1EEB B604F7           (          sub.asm):03769               lda   X04F7
1EEE C604             (          sub.asm):03770               ldb   #4
1EF0 3D               (          sub.asm):03771               mul   
1EF1 33CB             (          sub.asm):03772               leau  d,u
1EF3 B61E16           (          sub.asm):03773               lda   X1E16
1EF6 A7C4             (          sub.asm):03774               sta   ,u
                      (          sub.asm):03775               
1EF8 FC1E17           (          sub.asm):03776               ldd   X1E17
1EFB ED41             (          sub.asm):03777               std   $01,u
                      (          sub.asm):03778               
1EFD A68812           (          sub.asm):03779               lda   $12,x
1F00 A743             (          sub.asm):03780               sta   $03,u
                      (          sub.asm):03781               
1F02 7C04F7           (          sub.asm):03782               inc   X04F7
1F05 202B             (          sub.asm):03783               bra   L1F32
                      (          sub.asm):03784         
1F07                  (          sub.asm):03785         Shotdown      
1F07 BD72F3           (          sub.asm):03786         L1F07 jsr   X72F3
1F0A 57652073686F7420 (          sub.asm):03787               fcc   "We shot down that "
     646F776E20746861
     7420
1F1C 00               (          sub.asm):03788               fcb   C$NULL
                      (          sub.asm):03789             
1F1D A68812           (          sub.asm):03790               lda   $12,x
1F20 2605             (          sub.asm):03791               bne   L1F27
1F22 7C04F9           (          sub.asm):03792               inc   X04F9
1F25 2003             (          sub.asm):03793               bra   DisplayPlane
1F27 7C04F8           (          sub.asm):03794         L1F27 inc   X04F8
                      (          sub.asm):03795         
1F2A                  (          sub.asm):03796         DisplayPlane
1F2A 17E93C           (          sub.asm):03797         L1F2A lbsr  TypePlane
                      (          sub.asm):03798         
1F2D C621             (          sub.asm):03799               ldb   #'!              $21 argument passed in b to this routine
1F2F BD7477           (          sub.asm):03800               jsr   X7477
                      (          sub.asm):03801         
1F32 BD7228           (          sub.asm):03802         L1F32 jsr   X7228
                      (          sub.asm):03803         
1F35 EE09             (          sub.asm):03804         L1F35 ldu   $09,x
1F37 EC01             (          sub.asm):03805               ldd   $01,x
1F39 3103             (          sub.asm):03806               leay  $03,x
1F3B 17FEDF           (          sub.asm):03807               lbsr  L1E1D
                      (          sub.asm):03808               
1F3E 3103             (          sub.asm):03809               leay  $03,x
1F40 CE4C84           (          sub.asm):03810               ldu   #$4C84
1F43 BD74D9           (          sub.asm):03811               jsr   X74D9
                      (          sub.asm):03812              
1F46 A70D             (          sub.asm):03813               sta   $0D,x
1F48 EF0E             (          sub.asm):03814               stu   $0E,x
1F4A BD7556           (          sub.asm):03815               jsr   X7556
1F4D ED0B             (          sub.asm):03816               std   $0B,x
                      (          sub.asm):03817         
1F4F                  (          sub.asm):03818         KDNext
1F4F 308815           (          sub.asm):03819         L1F4F leax  $15,x            move our window 21 bytes
1F52 7A1E13           (          sub.asm):03820               dec   X1E13            dec the loop counter      
1F55 102AFF51         (          sub.asm):03821               lbpl  KillLoop         not done go again
1F59 39               (          sub.asm):03822               rts
                      (          sub.asm):03823               
                      (          sub.asm):03824                  
1F5A FD4CFB           (          sub.asm):03825         L1F5A std   X4CFB           store that sucker there again
1F5D 44               (          sub.asm):03826               lsra                  divide d /2
1F5E 56               (          sub.asm):03827               rorb  
                      (          sub.asm):03828               
1F5F 44               (          sub.asm):03829               lsra                  again divide d /2 (/4)
1F60 56               (          sub.asm):03830               rorb  
                      (          sub.asm):03831               
1F61 44               (          sub.asm):03832               lsra                  and again d /2 (effective /8)
1F62 56               (          sub.asm):03833               rorb                  
                      (          sub.asm):03834               
1F63 8601             (          sub.asm):03835               lda   #$01            load a one and stow it
1F65 B702A4           (          sub.asm):03836               sta   X02A4           used in subroutine we call
                      (          sub.asm):03837               
1F68 7E7889           (          sub.asm):03838               jmp   X7889           uses b (jump instead of jsr)
                      (          sub.asm):03839         
                      (          sub.asm):03840         
1F6B                  (          sub.asm):03841         ByteTbl1      
1F6B 01020101         (          sub.asm):03842         L1F6B fcb   $01,$02,$01,$01
1F6F 03040202         (          sub.asm):03843               fcb   $03,$04,$02,$02
1F73 010101           (          sub.asm):03844               fcb   $01,$01,$01
                      (          sub.asm):03845         
1F76                  (          sub.asm):03846         Sub6      
1F76 7375622F73756236 (          sub.asm):03847         L1F76 fcc   "sub/sub6"
1F7E 00               (          sub.asm):03848               fcb   C$NULL
                      (          sub.asm):03849         
1F7F                  (          sub.asm):03850         Radar
1F7F 7375622F72616461 (          sub.asm):03851         L1F7F fcc   "sub/radar.dat"
     722E646174
1F8C 00               (          sub.asm):03852               fcb   C$NULL
                      (          sub.asm):03853         
1F8D                  (          sub.asm):03854         Status
1F8D 7375622F73746174 (          sub.asm):03855         L1F8D fcc   "sub/status.dat"
     75732E646174
1F9B 00               (          sub.asm):03856               fcb   C$NULL
                      (          sub.asm):03857         
1F9C                  (          sub.asm):03858         STitle
1F9C 7375622F73746974 (          sub.asm):03859         L1F9C fcc   "sub/stitle.pic"
     6C652E706963
1FAA 00               (          sub.asm):03860               fcb   C$NULL
                      (          sub.asm):03861         
1FAB                  (          sub.asm):03862         Sub1
1FAB 73756231         (          sub.asm):03863         L1FAB fcc   "sub1"
1FAF 00               (          sub.asm):03864               fcb   C$NULL
     0005             (          sub.asm):03865         Subsz equ   *-Sub1
                      (          sub.asm):03866         
1FB0                  (          sub.asm):03867         Sub2
1FB0 73756232         (          sub.asm):03868         L1FB0 fcc   "sub2"
1FB4 00               (          sub.asm):03869               fcb   C$NULL
                      (          sub.asm):03870         
1FB5                  (          sub.asm):03871         Sub3
1FB5 73756233         (          sub.asm):03872         L1FB5 fcc   "sub3"
1FB9 00               (          sub.asm):03873               fcb   C$NULL
                      (          sub.asm):03874         
1FBA                  (          sub.asm):03875         Sub4
1FBA 73756234         (          sub.asm):03876         L1FBA fcc   "sub4"
1FBE 00               (          sub.asm):03877               fcb   C$NULL
                      (          sub.asm):03878         
1FBF                  (          sub.asm):03879         Sub5
1FBF 73756235         (          sub.asm):03880         L1FBF fcc   "sub5"
1FC3 00               (          sub.asm):03881               fcb   C$NULL
                      (          sub.asm):03882         
1FC4                  (          sub.asm):03883         Shell
1FC4 7368656C6C       (          sub.asm):03884         L1FC4 fcc   "shell"
1FC9 00               (          sub.asm):03885               fcb   C$NULL
                      (          sub.asm):03886         
1FCA 38CB50           (          sub.asm):03887               emod 
1FCD                  (          sub.asm):03888         eom
     1FCD             (          sub.asm):03889         L1FCD equ *
                      (          sub.asm):03890               end
