                      (         sub6.asm):00001         ********************************************************************
                      (         sub6.asm):00002         * sub6 - Sub6 Sub Battle Simulator Utility Routines
                      (         sub6.asm):00003         *
                      (         sub6.asm):00004         * $Id$
                      (         sub6.asm):00005         *
                      (         sub6.asm):00006         * Edt/Rev  YYYY/MM/DD  Modified by
                      (         sub6.asm):00007         * Comment
                      (         sub6.asm):00008         * ------------------------------------------------------------------
                      (         sub6.asm):00009         *   0      2003/04/10  Paul W. Zibaila
                      (         sub6.asm):00010         * Disassembly of original distribution.
                      (         sub6.asm):00011         *
                      (         sub6.asm):00012         
                      (         sub6.asm):00013                   nam sub6
                      (         sub6.asm):00014                   ttl Sub6 Sub Battle Simulator Utility Routines
                      (         sub6.asm):00015         
                      (         sub6.asm):00016                   ifp1
                      (         sub6.asm):00017                   use defsfile
     0002             (         defsfile):00001         Level   equ   2
                      (         defsfile):00002                 use   os9.d   
                      (            os9.d):00001                        IFNE      OS9.D-1
                      (            os9.d):00002         
     0001             (            os9.d):00003         OS9.D        SET       1
                      (            os9.d):00004         
                      (            os9.d):00005         ********************************************************************
                      (            os9.d):00006         * os9.d - NitrOS-9 System Definitions
                      (            os9.d):00007         *
                      (            os9.d):00008         * $Id$
                      (            os9.d):00009         *
                      (            os9.d):00010         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            os9.d):00011         * Comment
                      (            os9.d):00012         * ------------------------------------------------------------------
                      (            os9.d):00013         *          1985/08/29  KMZ
                      (            os9.d):00014         * Fixed DT.SBF/NFM values to 3/4
                      (            os9.d):00015         *
                      (            os9.d):00016         *          1985/09/01  KMZ
                      (            os9.d):00017         * Added SS.FDInf, SS.Attr to accept 68K request thru NET.
                      (            os9.d):00018         *
                      (            os9.d):00019         *          1985/09/03  KMZ/Robert F. Doggett
                      (            os9.d):00020         * Eliminated E$BPrcID, made Error #238 become E$DNE for
                      (            os9.d):00021         * 68000 compatability.
                      (            os9.d):00022         *
                      (            os9.d):00023         *          1986/04/15  Mark G. Hawkins
                      (            os9.d):00024         * F$AlHRAM System call added for COCO.
                      (            os9.d):00025         *
                      (            os9.d):00026         *          1986/09/08  Mark G. Hawkins
                      (            os9.d):00027         * F$Alarm for COCO Clock Module.
                      (            os9.d):00028         *
                      (            os9.d):00029         *          1986/09/17  Mark G. Hawkins
                      (            os9.d):00030         * SS.Tone For COCO.
                      (            os9.d):00031         *
                      (            os9.d):00032         *          1986/09/23  Mark G. Hawkins
                      (            os9.d):00033         * Added F$NMLink and F$NMLoad for COCO.
                      (            os9.d):00034         *
                      (            os9.d):00035         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00036         * Added Reserved User $70 to $7f in sytem calls.
                      (            os9.d):00037         *
                      (            os9.d):00038         *          1986/09/30  Mark G. Hawkins
                      (            os9.d):00039         * Created Color Computer 3 Version of OS9Defs.
                      (            os9.d):00040         *
                      (            os9.d):00041         *          1998/10/03  Boisy G. Pitre
                      (            os9.d):00042         * Consoldated Level 1/Level 2 os9defs.
                      (            os9.d):00043         *
                      (            os9.d):00044         *          2002/04/04  Boisy G. Pitre
                      (            os9.d):00045         * Consoldated Level 2/Level 2 V3 os9defs.
                      (            os9.d):00046         *
                      (            os9.d):00047         *          2002/04/30  Boisy G. Pitre
                      (            os9.d):00048         * Added NitrOS-9 definitions.
                      (            os9.d):00049         *
                      (            os9.d):00050         *          2003/05/30  Boisy G. Pitre
                      (            os9.d):00051         * Added WD1002 sys vars to Level One section.
                      (            os9.d):00052         *
                      (            os9.d):00053         *          2003/06/02  Boisy G. Pitre
                      (            os9.d):00054         * Fixed incorrectly ordered D.X*** system globals for OS-9 Level One and
                      (            os9.d):00055         * changed the sizes from 2 to 3 bytes.
                      (            os9.d):00056         * DT.NFM is now the same for both Level One and Level Two.
                      (            os9.d):00057         * Added DT.CDFM type for future CD-ROM file manager
                      (            os9.d):00058         *
                      (            os9.d):00059         *          2003/11/05  Robert Gault
                      (            os9.d):00060         * Fixed MouseInf. Made it rmb 2 as it should be. Also changes to init and cc3io.
                      (            os9.d):00061         *
                      (            os9.d):00062         *              2005/11/02  P.Harvey-Smith
                      (            os9.d):00063         * Added definitions for boot areas on Dragon computers.
                      (            os9.d):00064         *
                      (            os9.d):00065         *              2006/03/03  Boisy G. Pitre
                      (            os9.d):00066         * Added F$Debug and D.DbgMem areas, common to all levels of NitrOS-9
                      (            os9.d):00067         
                      (            os9.d):00068                        NAM       os9.d
                      (            os9.d):00069                        IFEQ      Level-1
                      (            os9.d):00070                        TTL       NitrOS-9 Level 1 System Symbol Definitions
                      (            os9.d):00071                        ELSE      
                      (            os9.d):00072                        IFEQ      Level-2
                      (            os9.d):00073                        TTL       NitrOS-9 Level 2 System Symbol Definitions
                      (            os9.d):00074                        ELSE      
                      (            os9.d):00075                        TTL       NitrOS-9 Level 3 System Symbol Definitions
                      (            os9.d):00076                        ENDC      
                      (            os9.d):00077                        ENDC      
                      (            os9.d):00078         
                      (            os9.d):00079         * Common definitions
     0001             (            os9.d):00080         true           EQU       1                   useful name
     0000             (            os9.d):00081         false          EQU       0                   useful name
                      (            os9.d):00082         
                      (            os9.d):00083                        PAG       
                      (            os9.d):00084         *****************************************
                      (            os9.d):00085         * System Service Request Code Definitions
                      (            os9.d):00086         *
                      (            os9.d):00087                        ORG       0
0000                  (            os9.d):00088         F$Link         RMB       1                   Link to Module
0001                  (            os9.d):00089         F$Load         RMB       1                   Load Module from File
0002                  (            os9.d):00090         F$UnLink       RMB       1                   Unlink Module
0003                  (            os9.d):00091         F$Fork         RMB       1                   Start New Process
0004                  (            os9.d):00092         F$Wait         RMB       1                   Wait for Child Process to Die
0005                  (            os9.d):00093         F$Chain        RMB       1                   Chain Process to New Module
0006                  (            os9.d):00094         F$Exit         RMB       1                   Terminate Process
0007                  (            os9.d):00095         F$Mem          RMB       1                   Set Memory Size
0008                  (            os9.d):00096         F$Send         RMB       1                   Send Signal to Process
0009                  (            os9.d):00097         F$Icpt         RMB       1                   Set Signal Intercept
000A                  (            os9.d):00098         F$Sleep        RMB       1                   Suspend Process
000B                  (            os9.d):00099         F$SSpd         RMB       1                   Suspend Process
000C                  (            os9.d):00100         F$ID           RMB       1                   Return Process ID
000D                  (            os9.d):00101         F$SPrior       RMB       1                   Set Process Priority
000E                  (            os9.d):00102         F$SSWI         RMB       1                   Set Software Interrupt
000F                  (            os9.d):00103         F$PErr         RMB       1                   Print Error
0010                  (            os9.d):00104         F$PrsNam       RMB       1                   Parse Pathlist Name
0011                  (            os9.d):00105         F$CmpNam       RMB       1                   Compare Two Names
0012                  (            os9.d):00106         F$SchBit       RMB       1                   Search Bit Map
0013                  (            os9.d):00107         F$AllBit       RMB       1                   Allocate in Bit Map
0014                  (            os9.d):00108         F$DelBit       RMB       1                   Deallocate in Bit Map
0015                  (            os9.d):00109         F$Time         RMB       1                   Get Current Time
0016                  (            os9.d):00110         F$STime        RMB       1                   Set Current Time
0017                  (            os9.d):00111         F$CRC          RMB       1                   Generate CRC ($17)
                      (            os9.d):00112         
                      (            os9.d):00113                        IFGT      Level-1
                      (            os9.d):00114         
                      (            os9.d):00115         * NitrOS-9 Level 2 system calls
0018                  (            os9.d):00116         F$GPrDsc       RMB       1                   Get Process Descriptor copy ($18)
0019                  (            os9.d):00117         F$GBlkMp       RMB       1                   Get System Block Map copy ($19)
001A                  (            os9.d):00118         F$GModDr       RMB       1                   Get Module Directory copy ($1A)
001B                  (            os9.d):00119         F$CpyMem       RMB       1                   Copy External Memory ($1B)
001C                  (            os9.d):00120         F$SUser        RMB       1                   Set User ID number ($1C)
001D                  (            os9.d):00121         F$UnLoad       RMB       1                   Unlink Module by name ($1D)
001E                  (            os9.d):00122         F$Alarm        RMB       1                   Color Computer 3 Alarm Call ($1E)
001F                  (            os9.d):00123                        RMB       2                   Reserved - For overlap of other systems ($1F)
0021                  (            os9.d):00124         F$NMLink       RMB       1                   Color Computer 3 Non-Mapping Link ($21)
0022                  (            os9.d):00125         F$NMLoad       RMB       1                   Color Computer 3 Non-Mapping Load ($22)
                      (            os9.d):00126         
                      (            os9.d):00127                        ELSE      
                      (            os9.d):00128         
                      (            os9.d):00129         * NitrOS-9 Level 1 system call padding
                      (            os9.d):00130                        RMB       11
                      (            os9.d):00131         
                      (            os9.d):00132                        ENDC      
                      (            os9.d):00133         
0023                  (            os9.d):00134         F$Debug        RMB       1                   Drop the system into the debugger ($23)
                      (            os9.d):00135         
                      (            os9.d):00136                        IFGT      Level-1
                      (            os9.d):00137         
                      (            os9.d):00138                        ORG       $25
0025                  (            os9.d):00139         F$TPS          RMB       1                   Return System's Ticks Per Second
0026                  (            os9.d):00140         F$TimAlm       RMB       1                   CoCo individual process alarm call
                      (            os9.d):00141         
                      (            os9.d):00142                        ENDC      
                      (            os9.d):00143         
                      (            os9.d):00144                        ORG       $27                 Beginning of System Reserved Calls
                      (            os9.d):00145         * NitrOS-9 common system calls
0027                  (            os9.d):00146         F$VIRQ         RMB       1                   Install/Delete Virtual IRQ
0028                  (            os9.d):00147         F$SRqMem       RMB       1                   System Memory Request
0029                  (            os9.d):00148         F$SRtMem       RMB       1                   System Memory Return
002A                  (            os9.d):00149         F$IRQ          RMB       1                   Enter IRQ Polling Table
002B                  (            os9.d):00150         F$IOQu         RMB       1                   Enter I/O Queue
002C                  (            os9.d):00151         F$AProc        RMB       1                   Enter Active Process Queue
002D                  (            os9.d):00152         F$NProc        RMB       1                   Start Next Process
002E                  (            os9.d):00153         F$VModul       RMB       1                   Validate Module
002F                  (            os9.d):00154         F$Find64       RMB       1                   Find Process/Path Descriptor
0030                  (            os9.d):00155         F$All64        RMB       1                   Allocate Process/Path Descriptor
0031                  (            os9.d):00156         F$Ret64        RMB       1                   Return Process/Path Descriptor
0032                  (            os9.d):00157         F$SSvc         RMB       1                   Service Request Table Initialization
0033                  (            os9.d):00158         F$IODel        RMB       1                   Delete I/O Module
                      (            os9.d):00159         
                      (            os9.d):00160                        IFGT      Level-1
                      (            os9.d):00161         
0034                  (            os9.d):00162         F$SLink        RMB       1                   System Link
0035                  (            os9.d):00163         F$Boot         RMB       1                   Bootstrap System
0036                  (            os9.d):00164         F$BtMem        RMB       1                   Bootstrap Memory Request
0037                  (            os9.d):00165         F$GProcP       RMB       1                   Get Process ptr
0038                  (            os9.d):00166         F$Move         RMB       1                   Move Data (low bound first)
0039                  (            os9.d):00167         F$AllRAM       RMB       1                   Allocate RAM blocks
003A                  (            os9.d):00168         F$AllImg       RMB       1                   Allocate Image RAM blocks
003B                  (            os9.d):00169         F$DelImg       RMB       1                   Deallocate Image RAM blocks
003C                  (            os9.d):00170         F$SetImg       RMB       1                   Set Process DAT Image
003D                  (            os9.d):00171         F$FreeLB       RMB       1                   Get Free Low Block
003E                  (            os9.d):00172         F$FreeHB       RMB       1                   Get Free High Block
003F                  (            os9.d):00173         F$AllTsk       RMB       1                   Allocate Process Task number
0040                  (            os9.d):00174         F$DelTsk       RMB       1                   Deallocate Process Task number
0041                  (            os9.d):00175         F$SetTsk       RMB       1                   Set Process Task DAT registers
0042                  (            os9.d):00176         F$ResTsk       RMB       1                   Reserve Task number
0043                  (            os9.d):00177         F$RelTsk       RMB       1                   Release Task number
0044                  (            os9.d):00178         F$DATLog       RMB       1                   Convert DAT Block/Offset to Logical
0045                  (            os9.d):00179         F$DATTmp       RMB       1                   Make temporary DAT image (Obsolete)
0046                  (            os9.d):00180         F$LDAXY        RMB       1                   Load A [X,[Y]]
0047                  (            os9.d):00181         F$LDAXYP       RMB       1                   Load A [X+,[Y]]
0048                  (            os9.d):00182         F$LDDDXY       RMB       1                   Load D [D+X,[Y]]
0049                  (            os9.d):00183         F$LDABX        RMB       1                   Load A from 0,X in task B
004A                  (            os9.d):00184         F$STABX        RMB       1                   Store A at 0,X in task B
004B                  (            os9.d):00185         F$AllPrc       RMB       1                   Allocate Process Descriptor
004C                  (            os9.d):00186         F$DelPrc       RMB       1                   Deallocate Process Descriptor
004D                  (            os9.d):00187         F$ELink        RMB       1                   Link using Module Directory Entry
004E                  (            os9.d):00188         F$FModul       RMB       1                   Find Module Directory Entry
004F                  (            os9.d):00189         F$MapBlk       RMB       1                   Map Specific Block
0050                  (            os9.d):00190         F$ClrBlk       RMB       1                   Clear Specific Block
0051                  (            os9.d):00191         F$DelRAM       RMB       1                   Deallocate RAM blocks
0052                  (            os9.d):00192         F$GCMDir       RMB       1                   Pack module directory
0053                  (            os9.d):00193         F$AlHRAM       RMB       1                   Allocate HIGH RAM Blocks
                      (            os9.d):00194         
                      (            os9.d):00195         * Alan DeKok additions
0054                  (            os9.d):00196         F$ReBoot       RMB       1                   Reboot machine (reload OS9Boot) or drop to RSDOS
0055                  (            os9.d):00197         F$CRCMod       RMB       1                   CRC mode, toggle or report current status
0056                  (            os9.d):00198         F$XTime        RMB       1                   Get Extended time packet from RTC (fractions of second)
0057                  (            os9.d):00199         F$VBlock       RMB       1                   Verify modules in a block of memory, add to module directory
                      (            os9.d):00200         
                      (            os9.d):00201                        ENDC      
                      (            os9.d):00202         
                      (            os9.d):00203         *
                      (            os9.d):00204         * Numbers $70 through $7F are reserved for user definitions
                      (            os9.d):00205         *
                      (            os9.d):00206                        ORG       $70
                      (            os9.d):00207         
                      (            os9.d):00208                        IFEQ      Level-1
                      (            os9.d):00209         
                      (            os9.d):00210                        RMB       16                  Reserved for user definition
                      (            os9.d):00211         
                      (            os9.d):00212                        ELSE      
                      (            os9.d):00213         
0070                  (            os9.d):00214         F$RegDmp       RMB       1                   Ron Lammardo's debugging register dump
0071                  (            os9.d):00215         F$NVRAM        RMB       1                   Non Volatile RAM (RTC battery backed static) read/write
                      (            os9.d):00216         
0072                  (            os9.d):00217                        RMB       $80-.               Reserved for user definitions
                      (            os9.d):00218                        ENDC      
                      (            os9.d):00219         
                      (            os9.d):00220                        PAG       
                      (            os9.d):00221         **************************************
                      (            os9.d):00222         * I/O Service Request Code Definitions
                      (            os9.d):00223         *
                      (            os9.d):00224                        ORG       $80
0080                  (            os9.d):00225         I$Attach       RMB       1                   Attach I/O Device
0081                  (            os9.d):00226         I$Detach       RMB       1                   Detach I/O Device
0082                  (            os9.d):00227         I$Dup          RMB       1                   Duplicate Path
0083                  (            os9.d):00228         I$Create       RMB       1                   Create New File
0084                  (            os9.d):00229         I$Open         RMB       1                   Open Existing File
0085                  (            os9.d):00230         I$MakDir       RMB       1                   Make Directory File
0086                  (            os9.d):00231         I$ChgDir       RMB       1                   Change Default Directory
0087                  (            os9.d):00232         I$Delete       RMB       1                   Delete File
0088                  (            os9.d):00233         I$Seek         RMB       1                   Change Current Position
0089                  (            os9.d):00234         I$Read         RMB       1                   Read Data
008A                  (            os9.d):00235         I$Write        RMB       1                   Write Data
008B                  (            os9.d):00236         I$ReadLn       RMB       1                   Read Line of ASCII Data
008C                  (            os9.d):00237         I$WritLn       RMB       1                   Write Line of ASCII Data
008D                  (            os9.d):00238         I$GetStt       RMB       1                   Get Path Status
008E                  (            os9.d):00239         I$SetStt       RMB       1                   Set Path Status
008F                  (            os9.d):00240         I$Close        RMB       1                   Close Path
0090                  (            os9.d):00241         I$DeletX       RMB       1                   Delete from current exec dir
                      (            os9.d):00242         
                      (            os9.d):00243         *******************
                      (            os9.d):00244         * File Access Modes
                      (            os9.d):00245         *
     0001             (            os9.d):00246         READ.          EQU       %00000001
     0002             (            os9.d):00247         WRITE.         EQU       %00000010
     0003             (            os9.d):00248         UPDAT.         EQU       READ.+WRITE.
     0004             (            os9.d):00249         EXEC.          EQU       %00000100
     0008             (            os9.d):00250         PREAD.         EQU       %00001000
     0010             (            os9.d):00251         PWRIT.         EQU       %00010000
     0020             (            os9.d):00252         PEXEC.         EQU       %00100000
     0040             (            os9.d):00253         SHARE.         EQU       %01000000
     0080             (            os9.d):00254         DIR.           EQU       %10000000
     0020             (            os9.d):00255         ISIZ.          EQU       %00100000
                      (            os9.d):00256         
                      (            os9.d):00257         **************
                      (            os9.d):00258         * Signal Codes
                      (            os9.d):00259         *
                      (            os9.d):00260                        ORG       0
0000                  (            os9.d):00261         S$Kill         RMB       1                   Non-Interceptable Abort
0001                  (            os9.d):00262         S$Wake         RMB       1                   Wake-up Sleeping Process
0002                  (            os9.d):00263         S$Abort        RMB       1                   Keyboard Abort
0003                  (            os9.d):00264         S$Intrpt       RMB       1                   Keyboard Interrupt
0004                  (            os9.d):00265         S$Window       RMB       1                   Window Change
     0004             (            os9.d):00266         S$HUP          EQU       S$Window            Hang Up
0005                  (            os9.d):00267         S$Alarm        RMB       1                   CoCo individual process' alarm signal
                      (            os9.d):00268         
                      (            os9.d):00269                        PAG       
                      (            os9.d):00270         **********************************
                      (            os9.d):00271         * Status Codes for GetStat/GetStat
                      (            os9.d):00272         *
                      (            os9.d):00273                        ORG       0
0000                  (            os9.d):00274         SS.Opt         RMB       1                   Read/Write PD Options
0001                  (            os9.d):00275         SS.Ready       RMB       1                   Check for Device Ready
0002                  (            os9.d):00276         SS.Size        RMB       1                   Read/Write File Size
0003                  (            os9.d):00277         SS.Reset       RMB       1                   Device Restore
0004                  (            os9.d):00278         SS.WTrk        RMB       1                   Device Write Track
0005                  (            os9.d):00279         SS.Pos         RMB       1                   Get File Current Position
0006                  (            os9.d):00280         SS.EOF         RMB       1                   Test for End of File
0007                  (            os9.d):00281         SS.Link        RMB       1                   Link to Status routines
0008                  (            os9.d):00282         SS.ULink       RMB       1                   Unlink Status routines
0009                  (            os9.d):00283         SS.Feed        RMB       1                   Issue form feed
000A                  (            os9.d):00284         SS.Frz         RMB       1                   Freeze DD. information
000B                  (            os9.d):00285         SS.SPT         RMB       1                   Set DD.TKS to given value
000C                  (            os9.d):00286         SS.SQD         RMB       1                   Sequence down hard disk
000D                  (            os9.d):00287         SS.DCmd        RMB       1                   Send direct command to disk
000E                  (            os9.d):00288         SS.DevNm       RMB       1                   Return Device name (32-bytes at [X])
000F                  (            os9.d):00289         SS.FD          RMB       1                   Return File Descriptor (Y-bytes at [X])
0010                  (            os9.d):00290         SS.Ticks       RMB       1                   Set Lockout honor duration
0011                  (            os9.d):00291         SS.Lock        RMB       1                   Lock/Release record
0012                  (            os9.d):00292         SS.DStat       RMB       1                   Return Display Status (CoCo)
0013                  (            os9.d):00293         SS.Joy         RMB       1                   Return Joystick Value (CoCo)
0014                  (            os9.d):00294         SS.BlkRd       RMB       1                   Block Read
0015                  (            os9.d):00295         SS.BlkWr       RMB       1                   Block Write
0016                  (            os9.d):00296         SS.Reten       RMB       1                   Retension cycle
0017                  (            os9.d):00297         SS.WFM         RMB       1                   Write File Mark
0018                  (            os9.d):00298         SS.RFM         RMB       1                   Read past File Mark
0019                  (            os9.d):00299         SS.ELog        RMB       1                   Read Error Log
001A                  (            os9.d):00300         SS.SSig        RMB       1                   Send signal on data ready
001B                  (            os9.d):00301         SS.Relea       RMB       1                   Release device
001C                  (            os9.d):00302         SS.AlfaS       RMB       1                   Return Alfa Display Status (CoCo, SCF/GetStat)
     001C             (            os9.d):00303         SS.Attr        EQU       SS.AlfaS            To serve 68K/RBF/SetStat only, thru NET
001D                  (            os9.d):00304         SS.Break       RMB       1                   Send break signal out acia
001E                  (            os9.d):00305         SS.RsBit       RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (            os9.d):00306                        RMB       1                   Reserved
     0020             (            os9.d):00307         SS.FDInf       EQU       $20                 To serve 68K/RBF/GetStat only, thru NET
0020                  (            os9.d):00308         SS.DirEnt      RMB       1                   Reserve bitmap sector (do not allocate in) LSB(X)=sct#
0021                  (            os9.d):00309                        RMB       3                   Reserve $20-$23 for Japanese version (Hoshi)
0024                  (            os9.d):00310         SS.SetMF       RMB       1                   Reserve $24 for Gimix G68 (Flex compatability?)
0025                  (            os9.d):00311         SS.Cursr       RMB       1                   Cursor information for COCO
0026                  (            os9.d):00312         SS.ScSiz       RMB       1                   Return screen size for COCO
0027                  (            os9.d):00313         SS.KySns       RMB       1                   Getstat/SetStat for COCO keyboard
0028                  (            os9.d):00314         SS.ComSt       RMB       1                   Getstat/SetStat for Baud/Parity
0029                  (            os9.d):00315         SS.Open        RMB       1                   SetStat to tell driver a path was opened
002A                  (            os9.d):00316         SS.Close       RMB       1                   SetStat to tell driver a path was closed
002B                  (            os9.d):00317         SS.HngUp       RMB       1                   SetStat to tell driver to hangup phone
002C                  (            os9.d):00318         SS.FSig        RMB       1                   New signal for temp locked files
     0026             (            os9.d):00319         SS.DSize       EQU       SS.ScSiz            Return disk size (RBF GetStat)
     0012             (            os9.d):00320         SS.VarSect     EQU       SS.DStat            Variable Sector Size (RBF GetStat)
                      (            os9.d):00321         
                      (            os9.d):00322         * System Specific and User defined codes above $80
                      (            os9.d):00323                        ORG       $80
0080                  (            os9.d):00324         SS.AAGBf       RMB       1                   SetStat to Allocate Additional Graphic Buffer
0081                  (            os9.d):00325         SS.SLGBf       RMB       1                   SetStat to Select a different Graphic Buffer
0082                  (            os9.d):00326         SS.Mount       RMB       1                   Network 4 Mount Setstat
0083                  (            os9.d):00327         SS.RdNet       RMB       1                   Read Raw Sector from Network 4 Omnidrive
0084                  (            os9.d):00328         SS.MpGPB       RMB       1                   SetStat to request a Get/Put Buffer be mapped in workspace
0085                  (            os9.d):00329         SS.Slots       RMB       1                   Network 4 slots? getstat
                      (            os9.d):00330         
                      (            os9.d):00331         *               IFGT      Level-1
                      (            os9.d):00332                        IFNE      1
                      (            os9.d):00333         * Level 2 Windowing
0086                  (            os9.d):00334         SS.WnSet       RMB       1                   Set up High Level Windowing Information
0087                  (            os9.d):00335         SS.MnSel       RMB       1                   Request High level Menu Handler take determine next event
0088                  (            os9.d):00336         SS.SBar        RMB       1                   SetStat to set position block on Window scroll bars
0089                  (            os9.d):00337         SS.Mouse       RMB       1                   Return Mouse information packet (COCO)
008A                  (            os9.d):00338         SS.MsSig       RMB       1                   SetStat to tell driver to send signal on mouse event
008B                  (            os9.d):00339         SS.AScrn       RMB       1                   Allocate a screen for application poking
008C                  (            os9.d):00340         SS.DScrn       RMB       1                   Display a screen allocated by SS.AScrn
008D                  (            os9.d):00341         SS.FScrn       RMB       1                   Free a screen allocated by SS.AScrn
008E                  (            os9.d):00342         SS.PScrn       RMB       1                   Polymorph Screen into different screen type
008F                  (            os9.d):00343         SS.ScInf       RMB       1                   Get Current screen info for direct writes
0090                  (            os9.d):00344                        RMB       1                   Reserved
0091                  (            os9.d):00345         SS.Palet       RMB       1                   Return palette information
0092                  (            os9.d):00346         SS.Montr       RMB       1                   Get and Set Monitor Type
0093                  (            os9.d):00347         SS.ScTyp       RMB       1                   Get screen type information
0094                  (            os9.d):00348         SS.GIP         RMB       1                   Global Input Parameters (SetStat)
0095                  (            os9.d):00349         SS.UMBar       RMB       1                   update menu bar (SetStat)
0096                  (            os9.d):00350         SS.FBRgs       RMB       1                   return color registers (GetStat)
0097                  (            os9.d):00351         SS.DfPal       RMB       1                   set/return default palette registers (Getstat/Setstat)
0098                  (            os9.d):00352         SS.Tone        RMB       1                   Generate a tone using 6 bit sound
0099                  (            os9.d):00353         SS.GIP2        RMB       1                   Global Input Params #2 (L2V3)
009A                  (            os9.d):00354         SS.AnPal       RMB       1                   Animate palettes (L2V3)
009B                  (            os9.d):00355         SS.FndBf       RMB       1                   Find named buffer (L2V3)
                      (            os9.d):00356         
                      (            os9.d):00357         * sc6551 defined
     0099             (            os9.d):00358         SS.CDSta       EQU       SS.GIP2
     009A             (            os9.d):00359         SS.CDSig       EQU       SS.AnPal
     009B             (            os9.d):00360         SS.CDRel       EQU       SS.FndBf
                      (            os9.d):00361                        ELSE      
                      (            os9.d):00362         * These are wide open in Level 1
                      (            os9.d):00363                        RMB       19
                      (            os9.d):00364         
                      (            os9.d):00365         * sc6551 defined
009C                  (            os9.d):00366         SS.CDSta       RMB       1
009C                  (            os9.d):00367         SS.CDSig       RMB       1
009C                  (            os9.d):00368         SS.CDRel       RMB       1
                      (            os9.d):00369                        ENDC      
                      (            os9.d):00370         
                      (            os9.d):00371                        ORG       $A0
                      (            os9.d):00372         *
                      (            os9.d):00373         * New Default SCF input buffer Set status call
00A0                  (            os9.d):00374         SS.Fill        RMB       1                   Pre-load SCF device input buffer
00A1                  (            os9.d):00375         SS.Hist        RMB       1                   Enable command-line history easily
                      (            os9.d):00376         
                      (            os9.d):00377         
                      (            os9.d):00378                        ORG       $B0
                      (            os9.d):00379         *
                      (            os9.d):00380         * New WDDisk get/set status calls
00B0                  (            os9.d):00381         SS.ECC         RMB       1                   ECC corrected data error enable/disable (GetStat/SetStat)
                      (            os9.d):00382         
                      (            os9.d):00383         *
                      (            os9.d):00384                        IFGT      Level-1
                      (            os9.d):00385         
                      (            os9.d):00386         * VRN get/set status calls.  Named by Alan DeKok.
     0080             (            os9.d):00387         SS.VCtr        EQU       $80                 Return FS2 total VIRQ counter
     0081             (            os9.d):00388         SS.VSig        EQU       $81                 Return FS2 number of signals sent
                      (            os9.d):00389         
     0081             (            os9.d):00390         SS.FClr        EQU       $81                 Set/clear FS2 VIRQ
     00C7             (            os9.d):00391         SS.FSet        EQU       $C7                 Set FS2+ VIRQ
     00C8             (            os9.d):00392         SS.KSet        EQU       $C8                 Set KQ3 VIRQ
     00C9             (            os9.d):00393         SS.KClr        EQU       $C9                 Clr KQ3 VIRQ
     00CA             (            os9.d):00394         SS.ARAM        EQU       $CA                 Allocate RAM blocks
     00CB             (            os9.d):00395         SS.DRAM        EQU       $CB                 De-allocate RAM blocks
                      (            os9.d):00396         
                      (            os9.d):00397         * SDisk 3 Definition Equates
     0080             (            os9.d):00398         SS.DRead       EQU       SS.AAGBf            SDisk3 Direct Sector Read ($80)
     0080             (            os9.d):00399         SS.DWrit       EQU       SS.DRead            SDisk3 Direct sector Write ($80)
     0081             (            os9.d):00400         SS.UnFrz       EQU       SS.SLGBf            SDisk3 UNFreeze DD info ($81)
     0082             (            os9.d):00401         SS.MOFF        EQU       SS.Mount            SDisk3 fast motor off call ($82)
     0083             (            os9.d):00402         SS.MoTim       EQU       SS.RdNet            SDisk3 Set motor shut off time ($83)
     0084             (            os9.d):00403         SS.SDRD        EQU       SS.MpGPB            SDisk3 System direct read ($84)
     0084             (            os9.d):00404         SS.SDWRT       EQU       SS.SDRD             SDisk3 System direct writes ($84)
     0085             (            os9.d):00405         SS.Sleep       EQU       SS.Slots            SDisk3 (DMC ONLY) Enable/disable F$Sleep calls in read/write 1773 I/O ($85)
     0086             (            os9.d):00406         SS.DrvCh       EQU       SS.WnSet            SDisk3 (DMC ONLY) Set drive number to cache, or return drive number being cached ($86)
                      (            os9.d):00407         
                      (            os9.d):00408                        ENDC      
                      (            os9.d):00409         
                      (            os9.d):00410                        TTL       Direct Page Definitions
                      (            os9.d):00411                        PAG       
                      (            os9.d):00412         
                      (            os9.d):00413         **********************************
                      (            os9.d):00414         * Direct Page Variable Definitions
                      (            os9.d):00415         *
                      (            os9.d):00416                        ORG       $00
0000                  (            os9.d):00417         D.WDAddr       RMB       2                   FHL/Isted WD1002-05 interface base address
0002                  (            os9.d):00418         D.WDBtDr       RMB       1                   FHL/Isted WD1002-05 boot physical device drive num.
0003                  (            os9.d):00419         D.SWPage       RMB       1                   SmartWatch page # (see clock2_smart)
0004                  (            os9.d):00420                        RMB       5
0009                  (            os9.d):00421         D.COCOXT       RMB       1                   Busy flag for CoCo-XT driver (one drive at a time)
000A                  (            os9.d):00422         D.DbgMem       RMB       2                   Debug memory pointer
000C                  (            os9.d):00423         D.DWSubAddr    RMB       2                   DriveWire subroutine module pointer
000E                  (            os9.d):00424         D.DWStat       RMB       2                   DriveWire statics page
0010                  (            os9.d):00425         D.DWSrvID      RMB       1                   DriveWire server ID
                      (            os9.d):00426         
                      (            os9.d):00427                        ORG       $20
                      (            os9.d):00428         
                      (            os9.d):00429                        IFEQ      Level-1
                      (            os9.d):00430         
                      (            os9.d):00431         * Level 1 DP vars
0020                  (            os9.d):00432         D.FMBM         RMB       4                   Free memory bit map pointers
0020                  (            os9.d):00433         D.MLIM         RMB       2                   Memory limit $24
0020                  (            os9.d):00434         D.ModDir       RMB       4                   Module directory $26
0020                  (            os9.d):00435         D.Init         RMB       2                   Rom base address $2A
0020                  (            os9.d):00436         D.SWI3         RMB       2                   Swi3 vector $2C
0020                  (            os9.d):00437         D.SWI2         RMB       2                   Swi2 vector $2E
0020                  (            os9.d):00438         D.FIRQ         RMB       2                   Firq vector $30
0020                  (            os9.d):00439         D.IRQ          RMB       2                   Irq vector $32
0020                  (            os9.d):00440         D.SWI          RMB       2                   Swi vector $34
0020                  (            os9.d):00441         D.NMI          RMB       2                   Nmi vector $36
0020                  (            os9.d):00442         D.SvcIRQ       RMB       2                   Interrupt service entry $38
0020                  (            os9.d):00443         D.Poll         RMB       2                   Interrupt polling routine $3A
0020                  (            os9.d):00444         D.UsrIRQ       RMB       2                   User irq routine $3C
0020                  (            os9.d):00445         D.SysIRQ       RMB       2                   System irq routine $3E
0020                  (            os9.d):00446         D.UsrSvc       RMB       2                   User service request routine $40
0020                  (            os9.d):00447         D.SysSvc       RMB       2                   System service request routine $42
0020                  (            os9.d):00448         D.UsrDis       RMB       2                   User service request dispatch table
0020                  (            os9.d):00449         D.SysDis       RMB       2                   System service reuest dispatch table
0020                  (            os9.d):00450         D.Slice        RMB       1                   Process time slice count $48
0020                  (            os9.d):00451         D.PrcDBT       RMB       2                   Process descriptor block address  $49
0020                  (            os9.d):00452         D.Proc         RMB       2                   Process descriptor address $4B
0020                  (            os9.d):00453         D.AProcQ       RMB       2                   Active process queue $4D
0020                  (            os9.d):00454         D.WProcQ       RMB       2                   Waiting process queue $4F
0020                  (            os9.d):00455         D.SProcQ       RMB       2                   Sleeping process queue $51
0020                  (            os9.d):00456         D.Time         EQU       .                   Time
0020                  (            os9.d):00457         D.Year         RMB       1                   $53
0020                  (            os9.d):00458         D.Month        RMB       1                   $54
0020                  (            os9.d):00459         D.Day          RMB       1                   $55
0020                  (            os9.d):00460         D.Hour         RMB       1                   $56
0020                  (            os9.d):00461         D.Min          RMB       1                   $57
0020                  (            os9.d):00462         D.Sec          RMB       1                   $58
0020                  (            os9.d):00463         D.Tick         RMB       1                   $59
0020                  (            os9.d):00464         D.TSec         RMB       1                   Ticks / second $5A
0020                  (            os9.d):00465         D.TSlice       RMB       1                   Ticks / time-slice $5B
0020                  (            os9.d):00466         D.IOML         RMB       2                   I/O mgr free memory low bound $5C
0020                  (            os9.d):00467         D.IOMH         RMB       2                   I/O mgr free memory hi  bound $5E
0020                  (            os9.d):00468         D.DevTbl       RMB       2                   Device driver table addr $60
0020                  (            os9.d):00469         D.PolTbl       RMB       2                   Irq polling table addr $62
0020                  (            os9.d):00470         D.PthDBT       RMB       2                   Path descriptor block table addr $64
0020                  (            os9.d):00471         D.BTLO         RMB       2                   Bootstrap low address $66
0020                  (            os9.d):00472         D.BTHI         RMB       2                   Bootstrap hi address $68
0020                  (            os9.d):00473         D.DMAReq       RMB       1                   DMA in use flag $6A
0020                  (            os9.d):00474         D.AltIRQ       RMB       2                   Alternate IRQ vector (CC) $6B
0020                  (            os9.d):00475         D.KbdSta       RMB       2                   Keyboard scanner static storage (CC) $6D
0020                  (            os9.d):00476         D.DskTmr       RMB       2                   Disk Motor Timer (CC) $6F
0020                  (            os9.d):00477         D.CBStrt       RMB       16                  reserved for CC warmstart ($71)
0020                  (            os9.d):00478         D.Clock        RMB       2                   Address of Clock Tick Routine (CC) $81
0020                  (            os9.d):00479         D.Boot         RMB       1                   Bootstrap attempted flag
0020                  (            os9.d):00480         D.URtoSs       RMB       2                   address of user to system routine (VIRQ) $84
0020                  (            os9.d):00481         D.CLTb         RMB       2                   Pointer to clock interrupt table (VIRQ) $86
0020                  (            os9.d):00482         D.MDREG        RMB       1                   6309 MD (mode) shadow register $88 (added in V2.01.00)
0020                  (            os9.d):00483         D.CRC          RMB       1                   CRC checking mode flag $89 (added in V2.01.00)
0020                  (            os9.d):00484         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00485         
                      (            os9.d):00486                        ORG       $100
                      (            os9.d):00487         *D.XSWI3        RMB       3
                      (            os9.d):00488         *D.XSWI2        RMB       3
                      (            os9.d):00489         *D.XFIRQ        RMB       3
                      (            os9.d):00490         *D.XIRQ         RMB       3
                      (            os9.d):00491         *D.XSWI         RMB       3
                      (            os9.d):00492         *D.XNMI         RMB       3
                      (            os9.d):00493         
0020                  (            os9.d):00494         D.XSWI3        RMB       3
0020                  (            os9.d):00495         D.XSWI2        RMB       3
0020                  (            os9.d):00496         D.XSWI         RMB       3
0020                  (            os9.d):00497         D.XNMI         RMB       3
0020                  (            os9.d):00498         D.XIRQ         RMB       3
0020                  (            os9.d):00499         D.XFIRQ        RMB       3
                      (            os9.d):00500         
                      (            os9.d):00501         * Table Sizes
0020                  (            os9.d):00502         BMAPSZ         EQU       32                  Bitmap table size
0020                  (            os9.d):00503         SVCTNM         EQU       2                   Number of service request tables
0020                  (            os9.d):00504         SVCTSZ         EQU       (256-BMAPSZ)/SVCTNM-2 Service request table size
                      (            os9.d):00505         
                      (            os9.d):00506                        ELSE      
                      (            os9.d):00507         
                      (            os9.d):00508         * Level 2 DP vars
0020                  (            os9.d):00509         D.Tasks        RMB       2                   Task User Table
0022                  (            os9.d):00510         D.TmpDAT       RMB       2                   Temporary DAT Image stack
0024                  (            os9.d):00511         D.Init         RMB       2                   Initialization Module ptr
0026                  (            os9.d):00512         D.Poll         RMB       2                   Interrupt Polling Routine ptr
     0028             (            os9.d):00513         D.Time         EQU       .                   System Time
0028                  (            os9.d):00514         D.Year         RMB       1
0029                  (            os9.d):00515         D.Month        RMB       1
002A                  (            os9.d):00516         D.Day          RMB       1
002B                  (            os9.d):00517         D.Hour         RMB       1
002C                  (            os9.d):00518         D.Min          RMB       1
002D                  (            os9.d):00519         D.Sec          RMB       1
002E                  (            os9.d):00520         D.Tick         RMB       1
002F                  (            os9.d):00521         D.Slice        RMB       1                   current slice remaining
0030                  (            os9.d):00522         D.TSlice       RMB       1                   Ticks per Slice
0031                  (            os9.d):00523         D.Boot         RMB       1                   Bootstrap attempted flag
0032                  (            os9.d):00524         D.MotOn        RMB       1                   Floppy Disk Motor-On time out
0033                  (            os9.d):00525         D.ErrCod       RMB       1                   Reset Error Code
0034                  (            os9.d):00526         D.Daywk        RMB       1                   day of week, com-trol clock
0035                  (            os9.d):00527         D.TkCnt        RMB       1                   Tick Counter
0036                  (            os9.d):00528         D.BtPtr        RMB       2                   Address of Boot in System Address space
0038                  (            os9.d):00529         D.BtSz         RMB       2                   Size of Boot
                      (            os9.d):00530         
                      (            os9.d):00531                        IFNE      H6309
003A                  (            os9.d):00532         D.MDREG        RMB       1                   6309 MD (mode) shadow register
                      (            os9.d):00533                        ELSE      
003A                  (            os9.d):00534                        RMB       1                   Currently unused in NitrOS-9/6809
                      (            os9.d):00535                        ENDC      
                      (            os9.d):00536         
003B                  (            os9.d):00537         D.CRC          RMB       1                   CRC checking mode flag
                      (            os9.d):00538         
003C                  (            os9.d):00539         D.Tenths       RMB       1                   Tenths and hundredths of second for F$Xtime
003D                  (            os9.d):00540         D.Task1N       RMB       1                   Map type 1 task number*2 - offset into [D.TskIPt]
003E                  (            os9.d):00541         D.Quick        RMB       1                   Quick system call return flag - 0 =stack is at $FEE1
003F                  (            os9.d):00542         D.QIRQ         RMB       1                   Quick IRQ flag - 0 =IRQ wasn't clock, so quick return
                      (            os9.d):00543         
                      (            os9.d):00544                        ORG       $40
0040                  (            os9.d):00545         D.BlkMap       RMB       4                   Memory Block Map ptr
0044                  (            os9.d):00546         D.ModDir       RMB       4                   Module Directory ptrs
0048                  (            os9.d):00547         D.PrcDBT       RMB       2                   Process Descriptor Block Table ptr
004A                  (            os9.d):00548         D.SysPrc       RMB       2                   System Process Descriptor ptr
004C                  (            os9.d):00549         D.SysDAT       RMB       2                   System DAT Image ptr
004E                  (            os9.d):00550         D.SysMem       RMB       2                   System Memory Map ptr
0050                  (            os9.d):00551         D.Proc         RMB       2                   Current Process ptr
0052                  (            os9.d):00552         D.AProcQ       RMB       2                   Active Process Queue
0054                  (            os9.d):00553         D.WProcQ       RMB       2                   Waiting Process Queue
0056                  (            os9.d):00554         D.SProcQ       RMB       2                   Sleeping Process Queue
0058                  (            os9.d):00555         D.ModEnd       RMB       2                   Module Directory end ptr
005A                  (            os9.d):00556         D.ModDAT       RMB       2                   Module Dir DAT image end ptr
005C                  (            os9.d):00557         D.CldRes       RMB       2                   Cold Restart vector
005E                  (            os9.d):00558         D.BtBug        RMB       3                   Boot debug information
0061                  (            os9.d):00559         D.Pipe         RMB       2
                      (            os9.d):00560         
                      (            os9.d):00561                        ORG       $6B
006B                  (            os9.d):00562         D.Crash        RMB       6                   Pointer to CC Crash Routine
0071                  (            os9.d):00563         D.CBStrt       RMB       $B                  Reserved for CC warmstart ($71)
007C                  (            os9.d):00564         D.QCnt         RMB       1                   Count of number of quick system calls performed
                      (            os9.d):00565         
                      (            os9.d):00566                        ORG       $80
0080                  (            os9.d):00567         D.DevTbl       RMB       2                   I/O Device Table
0082                  (            os9.d):00568         D.PolTbl       RMB       2                   I/O Polling Table
0084                  (            os9.d):00569                        RMB       4                   reserved
0088                  (            os9.d):00570         D.PthDBT       RMB       2                   Path Descriptor Block Table ptr
008A                  (            os9.d):00571         D.DMAReq       RMB       1                   DMA Request flag
                      (            os9.d):00572         
                      (            os9.d):00573         ********
                      (            os9.d):00574         * CoCo 3 STUFF COMES NEXT
                      (            os9.d):00575         * This area is used for the CoCo Hardware Registers
                      (            os9.d):00576         *
                      (            os9.d):00577                        ORG       $90
0090                  (            os9.d):00578         D.HINIT        RMB       1                   GIME INIT0 register (hardware setup $FF90)
0091                  (            os9.d):00579         D.TINIT        RMB       1                   GIME INIT1 register (timer/task register $FF91)
0092                  (            os9.d):00580         D.IRQER        RMB       1                   Interrupt enable regsiter ($FF92)
0093                  (            os9.d):00581         D.FRQER        RMB       1                   Fast Interrupt enable register ($FF93)
0094                  (            os9.d):00582         D.TIMMS        RMB       1                   Timer most significant nibble ($FF94)
0095                  (            os9.d):00583         D.TIMLS        RMB       1                   Timer least significant byte ($FF95)
0096                  (            os9.d):00584         D.RESV1        RMB       1                   reserved register ($FF96)
0097                  (            os9.d):00585         D.RESV2        RMB       1                   reserved register ($FF97)
0098                  (            os9.d):00586         D.VIDMD        RMB       1                   video mode register ($FF98)
0099                  (            os9.d):00587         D.VIDRS        RMB       1                   video resolution register ($FF99)
009A                  (            os9.d):00588         D.BORDR        RMB       1                   border register ($FF9A)
009B                  (            os9.d):00589         D.RESV3        RMB       1                   reserved register ($FF9B)
009C                  (            os9.d):00590         D.VOFF2        RMB       1                   vertical scroll/offset 2 register ($FF9C)
009D                  (            os9.d):00591         D.VOFF1        RMB       1                   vertical offset 1 register ($FF9D)
009E                  (            os9.d):00592         D.VOFF0        RMB       1                   vertical offset 0 register ($FF9E)
009F                  (            os9.d):00593         D.HOFF0        RMB       1                   horizontal offset 0 register ($FF9F)
00A0                  (            os9.d):00594         D.Speed        RMB       1                   Speed of COCO CPU 0=slow,1=fast ($A0)
00A1                  (            os9.d):00595         D.TskIPt       RMB       2                   Task image Pointer table (CC) ($A1)
00A3                  (            os9.d):00596         D.MemSz        RMB       1                   128/512K memory flag (CC) ($A3)
00A4                  (            os9.d):00597         D.SSTskN       RMB       1                   System State Task Number (COCO) ($A4)
00A5                  (            os9.d):00598         D.CCMem        RMB       2                   Pointer to beginning of CC Memory ($A5)
00A7                  (            os9.d):00599         D.CCStk        RMB       2                   Pointer to top of CC Memory ($A7)
00A9                  (            os9.d):00600         D.Flip0        RMB       2                   Change to Task 0 ($A9)
00AB                  (            os9.d):00601         D.Flip1        RMB       2                   Change to reserved Task 1 ($AB)
00AD                  (            os9.d):00602         D.VIRQ         RMB       2                   VIRQ Polling routine ($AD)
00AF                  (            os9.d):00603         D.IRQS         RMB       1                   IRQ shadow register (CC Temporary) ($AF)
00B0                  (            os9.d):00604         D.CLTb         RMB       2                   VIRQ Table address ($B0)
00B2                  (            os9.d):00605         D.AltIRQ       RMB       2                   Alternate IRQ Vector (CC) ($B2)
00B4                  (            os9.d):00606         D.GPoll        RMB       2                   CC GIME IRQ enable/disable toggle
00B6                  (            os9.d):00607         D.Clock2       RMB       2                   CC Clock2 entry address
                      (            os9.d):00608                        ORG       $C0
00C0                  (            os9.d):00609         D.SysSvc       RMB       2                   System Service Routine entry
00C2                  (            os9.d):00610         D.SysDis       RMB       2                   System Service Dispatch Table ptr
00C4                  (            os9.d):00611         D.SysIRQ       RMB       2                   System IRQ Routine entry
00C6                  (            os9.d):00612         D.UsrSvc       RMB       2                   User Service Routine entry
00C8                  (            os9.d):00613         D.UsrDis       RMB       2                   User Service Dispatch Table ptr
00CA                  (            os9.d):00614         D.UsrIRQ       RMB       2                   User IRQ Routine entry
00CC                  (            os9.d):00615         D.SysStk       RMB       2                   System stack
00CE                  (            os9.d):00616         D.SvcIRQ       RMB       2                   In-System IRQ service
00D0                  (            os9.d):00617         D.SysTsk       RMB       1                   System Task number
                      (            os9.d):00618                        ORG       $E0
00E0                  (            os9.d):00619         D.Clock        RMB       2
00E2                  (            os9.d):00620         D.XSWI3        RMB       2
00E4                  (            os9.d):00621         D.XSWI2        RMB       2
00E6                  (            os9.d):00622         D.XFIRQ        RMB       2
00E8                  (            os9.d):00623         D.XIRQ         RMB       2
00EA                  (            os9.d):00624         D.XSWI         RMB       2
00EC                  (            os9.d):00625         D.XNMI         RMB       2
00EE                  (            os9.d):00626         D.ErrRst       RMB       2
00F0                  (            os9.d):00627         D.SysVec       RMB       2                   F$xxx system call vector for NitrOS-9 Level 3
00F2                  (            os9.d):00628         D.SWI3         RMB       2
00F4                  (            os9.d):00629         D.SWI2         RMB       2
00F6                  (            os9.d):00630         D.FIRQ         RMB       2
00F8                  (            os9.d):00631         D.IRQ          RMB       2
00FA                  (            os9.d):00632         D.SWI          RMB       2
00FC                  (            os9.d):00633         D.NMI          RMB       2
                      (            os9.d):00634         
                      (            os9.d):00635         *************************
                      (            os9.d):00636         * Level 2 Block Map flags
                      (            os9.d):00637         *
     0080             (            os9.d):00638         NotRAM         EQU       %10000000           Block Not RAM flag
     0004             (            os9.d):00639         VidRAM         EQU       %00000100           Block is being used as Video RAM
     0002             (            os9.d):00640         ModBlock       EQU       %00000010           Module in Block
     0001             (            os9.d):00641         RAMinUse       EQU       %00000001           RAM Block in use flag
                      (            os9.d):00642         *
                      (            os9.d):00643         * Service Dispatch Table special entries
                      (            os9.d):00644         *
     00FE             (            os9.d):00645         IOEntry        EQU       254
                      (            os9.d):00646         
                      (            os9.d):00647                        ENDC      
                      (            os9.d):00648         
                      (            os9.d):00649                        TTL       Structure Formats
                      (            os9.d):00650                        PAG       
                      (            os9.d):00651         ************************************
                      (            os9.d):00652         * Module Directory Entry Definitions
                      (            os9.d):00653         *
                      (            os9.d):00654                        ORG       0
                      (            os9.d):00655                        IFGT      Level-1
0000                  (            os9.d):00656         MD$MPDAT       RMB       2                   Module DAT Image ptr
0002                  (            os9.d):00657         MD$MBSiz       RMB       2                   Memory Block size
                      (            os9.d):00658                        ENDC      
0004                  (            os9.d):00659         MD$MPtr        RMB       2                   Module ptr
0006                  (            os9.d):00660         MD$Link        RMB       2                   Module Link count
     0008             (            os9.d):00661         MD$ESize       EQU       .                   Module Directory Entry size
                      (            os9.d):00662         
                      (            os9.d):00663         ************************************
                      (            os9.d):00664         * Module Definitions
                      (            os9.d):00665         *
                      (            os9.d):00666         * Universal Module Offsets
                      (            os9.d):00667         *
                      (            os9.d):00668                        ORG       0
0000                  (            os9.d):00669         M$ID           RMB       2                   ID Code
0002                  (            os9.d):00670         M$Size         RMB       2                   Module Size
0004                  (            os9.d):00671         M$Name         RMB       2                   Module Name
0006                  (            os9.d):00672         M$Type         RMB       1                   Type / Language
0007                  (            os9.d):00673         M$Revs         RMB       1                   Attributes / Revision Level
0008                  (            os9.d):00674         M$Parity       RMB       1                   Header Parity
     0009             (            os9.d):00675         M$IDSize       EQU       .                   Module ID Size
                      (            os9.d):00676         *
                      (            os9.d):00677         * Type-Dependent Module Offsets
                      (            os9.d):00678         *
                      (            os9.d):00679         * System, File Manager, Device Driver, Program Module
                      (            os9.d):00680         *
0009                  (            os9.d):00681         M$Exec         RMB       2                   Execution Entry Offset
                      (            os9.d):00682         *
                      (            os9.d):00683         * Device Driver, Program Module
                      (            os9.d):00684         *
000B                  (            os9.d):00685         M$Mem          RMB       2                   Stack Requirement
                      (            os9.d):00686         *
                      (            os9.d):00687         * Device Driver, Device Descriptor Module
                      (            os9.d):00688         *
000D                  (            os9.d):00689         M$Mode         RMB       1                   Device Driver Mode Capabilities
                      (            os9.d):00690         *
                      (            os9.d):00691         * Device Descriptor Module
                      (            os9.d):00692         *
                      (            os9.d):00693                        ORG       M$IDSize
0009                  (            os9.d):00694         M$FMgr         RMB       2                   File Manager Name Offset
000B                  (            os9.d):00695         M$PDev         RMB       2                   Device Driver Name Offset
000D                  (            os9.d):00696                        RMB       1                   M$Mode (defined above)
000E                  (            os9.d):00697         M$Port         RMB       3                   Port Address
0011                  (            os9.d):00698         M$Opt          RMB       1                   Device Default Options
0012                  (            os9.d):00699         M$DTyp         RMB       1                   Device Type
     0012             (            os9.d):00700         IT.DTP         EQU       M$DTyp              Descriptor type offset
                      (            os9.d):00701         *
                      (            os9.d):00702         * Configuration Module Entry Offsets
                      (            os9.d):00703         *
                      (            os9.d):00704                        ORG       M$IDSize
0009                  (            os9.d):00705         MaxMem         RMB       3                   Maximum Free Memory
000C                  (            os9.d):00706         PollCnt        RMB       1                   Entries in Interrupt Polling Table
000D                  (            os9.d):00707         DevCnt         RMB       1                   Entries in Device Table
000E                  (            os9.d):00708         InitStr        RMB       2                   Initial Module Name
0010                  (            os9.d):00709         SysStr         RMB       2                   System Device Name
0012                  (            os9.d):00710         StdStr         RMB       2                   Standard I/O Pathlist
0014                  (            os9.d):00711         BootStr        RMB       2                   Bootstrap Module name
0016                  (            os9.d):00712         ProtFlag       RMB       1                   Write protect enable flag
                      (            os9.d):00713         
0017                  (            os9.d):00714         OSLevel        RMB       1                   OS level
0018                  (            os9.d):00715         OSVer          RMB       1                   OS version
0019                  (            os9.d):00716         OSMajor        RMB       1                   OS major
001A                  (            os9.d):00717         OSMinor        RMB       1                   OS minor
001B                  (            os9.d):00718         Feature1       RMB       1                   feature byte 1
001C                  (            os9.d):00719         Feature2       RMB       1                   feature byte 2
001D                  (            os9.d):00720         OSName         RMB       2                   OS revision name string (nul terminated)
001F                  (            os9.d):00721         InstallName    RMB       2                   installation name string (nul terminated)
0021                  (            os9.d):00722                        RMB       4                   reserved for future use
                      (            os9.d):00723         
                      (            os9.d):00724                        IFGT      Level-1
                      (            os9.d):00725         * -- VTIO area -- (NitrOS-9 Level 2 and above) *
0025                  (            os9.d):00726         MonType        RMB       1                   Monitor type (0=CMP,1=RGB,2=MONO)
0026                  (            os9.d):00727         MouseInf       RMB       2                   Mouse resolution/Mouse port; was 1, major error RG.
0028                  (            os9.d):00728         KeyRptS        RMB       1                   Key repeat start constant
0029                  (            os9.d):00729         KeyRptD        RMB       1                   Key repeat delay constant
                      (            os9.d):00730                        ENDC      
                      (            os9.d):00731         
                      (            os9.d):00732         * Feature1 byte definitions
     0001             (            os9.d):00733         CRCOn          EQU       %00000001           CRC checking on
     0000             (            os9.d):00734         CRCOff         EQU       %00000000           CRC checking off
     0000             (            os9.d):00735         Proc6809       EQU       %00000000           6809 procesor
     0002             (            os9.d):00736         Proc6309       EQU       %00000010           6309 procesor
                      (            os9.d):00737         
                      (            os9.d):00738                        PAG       
                      (            os9.d):00739         **************************
                      (            os9.d):00740         * Module Field Definitions
                      (            os9.d):00741         *
                      (            os9.d):00742         * ID Field - First two bytes of a NitrOS-9 module
                      (            os9.d):00743         *
     0087             (            os9.d):00744         M$ID1          EQU       $87                 Module ID code byte one
     00CD             (            os9.d):00745         M$ID2          EQU       $CD                 Module ID code byte two
     87CD             (            os9.d):00746         M$ID12         EQU       M$ID1*256+M$ID2
                      (            os9.d):00747         
                      (            os9.d):00748         *
                      (            os9.d):00749         * Module Type/Language Field Masks
                      (            os9.d):00750         *
     00F0             (            os9.d):00751         TypeMask       EQU       %11110000           Type Field
     000F             (            os9.d):00752         LangMask       EQU       %00001111           Language Field
                      (            os9.d):00753         
                      (            os9.d):00754         *
                      (            os9.d):00755         * Module Type Values
                      (            os9.d):00756         *
     00F0             (            os9.d):00757         Devic          EQU       $F0                 Device Descriptor Module
     00E0             (            os9.d):00758         Drivr          EQU       $E0                 Physical Device Driver
     00D0             (            os9.d):00759         FlMgr          EQU       $D0                 File Manager
     00C0             (            os9.d):00760         Systm          EQU       $C0                 System Module
     0050             (            os9.d):00761         ShellSub       EQU       $50                 Shell+ shell sub module
     0040             (            os9.d):00762         Data           EQU       $40                 Data Module
     0030             (            os9.d):00763         Multi          EQU       $30                 Multi-Module
     0020             (            os9.d):00764         Sbrtn          EQU       $20                 Subroutine Module
     0010             (            os9.d):00765         Prgrm          EQU       $10                 Program Module
                      (            os9.d):00766         
                      (            os9.d):00767         *
                      (            os9.d):00768         * Module Language Values
                      (            os9.d):00769         *
     0001             (            os9.d):00770         Objct          EQU       1                   6809 Object Code Module
     0002             (            os9.d):00771         ICode          EQU       2                   Basic09 I-code
     0003             (            os9.d):00772         PCode          EQU       3                   Pascal P-code
     0004             (            os9.d):00773         CCode          EQU       4                   C I-code
     0005             (            os9.d):00774         CblCode        EQU       5                   Cobol I-code
     0006             (            os9.d):00775         FrtnCode       EQU       6                   Fortran I-code
     0007             (            os9.d):00776         Obj6309        EQU       7                   6309 object code
                      (            os9.d):00777         *
                      (            os9.d):00778         * Module Attributes / Revision byte
                      (            os9.d):00779         *
                      (            os9.d):00780         * Field Masks
                      (            os9.d):00781         *
     00F0             (            os9.d):00782         AttrMask       EQU       %11110000           Attributes Field
     000F             (            os9.d):00783         RevsMask       EQU       %00001111           Revision Level Field
                      (            os9.d):00784         *
                      (            os9.d):00785         * Attribute Flags
                      (            os9.d):00786         *
     0080             (            os9.d):00787         ReEnt          EQU       %10000000           Re-Entrant Module
     0040             (            os9.d):00788         ModProt        EQU       %01000000           Gimix Module protect bit (0=protected, 1=write enable)
     0020             (            os9.d):00789         ModNat         EQU       %00100000           6309 native mode attribute
                      (            os9.d):00790         
                      (            os9.d):00791         ********************
                      (            os9.d):00792         * Device Type Values
                      (            os9.d):00793         *
                      (            os9.d):00794         * These values define various classes of devices, which are
                      (            os9.d):00795         * managed by a file manager module.  The Device Type is embedded
                      (            os9.d):00796         * in a device's device descriptor.
                      (            os9.d):00797         *
     0000             (            os9.d):00798         DT.SCF         EQU       0                   Sequential Character File Manager
     0001             (            os9.d):00799         DT.RBF         EQU       1                   Random Block File Manager
     0002             (            os9.d):00800         DT.Pipe        EQU       2                   Pipe File Manager
     0003             (            os9.d):00801         DT.SBF         EQU       3                   Sequential Block File Manager
     0004             (            os9.d):00802         DT.NFM         EQU       4                   Network File Manager
     0005             (            os9.d):00803         DT.CDFM        EQU       5                   CD-ROM File Manager
     0006             (            os9.d):00804         DT.RFM                  EQU             6                                       Remote File Manager
                      (            os9.d):00805         
                      (            os9.d):00806         *********************
                      (            os9.d):00807         * CRC Result Constant
                      (            os9.d):00808         *
     0080             (            os9.d):00809         CRCCon1        EQU       $80
     0FE3             (            os9.d):00810         CRCCon23       EQU       $0FE3
                      (            os9.d):00811         
                      (            os9.d):00812                        TTL       Process Information
                      (            os9.d):00813                        PAG       
                      (            os9.d):00814         ********************************
                      (            os9.d):00815         * Process Descriptor Definitions
                      (            os9.d):00816         *
                      (            os9.d):00817                        IFEQ      Level-1
                      (            os9.d):00818         
                      (            os9.d):00819         * Level 1 process descriptor defs
002A                  (            os9.d):00820         DefIOSiz       EQU       12
002A                  (            os9.d):00821         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00822         
                      (            os9.d):00823                        ORG       0
002A                  (            os9.d):00824         P$ID           RMB       1                   Process ID
002A                  (            os9.d):00825         P$PID          RMB       1                   Parent's ID
002A                  (            os9.d):00826         P$SID          RMB       1                   Sibling's ID
002A                  (            os9.d):00827         P$CID          RMB       1                   Child's ID
002A                  (            os9.d):00828         P$SP           RMB       2                   Stack ptr
002A                  (            os9.d):00829         P$CHAP         RMB       1                   process chapter number
002A                  (            os9.d):00830         P$ADDR         RMB       1                   user address beginning page number
002A                  (            os9.d):00831         P$PagCnt       RMB       1                   Memory Page Count
002A                  (            os9.d):00832         P$User         RMB       2                   User Index $09
002A                  (            os9.d):00833         P$Prior        RMB       1                   Priority $0B
002A                  (            os9.d):00834         P$Age          RMB       1                   Age $0C
002A                  (            os9.d):00835         P$State        RMB       1                   Status $0D
002A                  (            os9.d):00836         P$Queue        RMB       2                   Queue Link (Process ptr) $0E
002A                  (            os9.d):00837         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID) $10
002A                  (            os9.d):00838         P$IOQN         RMB       1                   Next     I/O Queue Link (Process ID)
002A                  (            os9.d):00839         P$PModul       RMB       2                   Primary Module
002A                  (            os9.d):00840         P$SWI          RMB       2                   SWI Entry Point
002A                  (            os9.d):00841         P$SWI2         RMB       2                   SWI2 Entry Point
002A                  (            os9.d):00842         P$SWI3         RMB       2                   SWI3 Entry Point $18
002A                  (            os9.d):00843         P$DIO          RMB       DefIOSiz            default I/O ptrs $1A
002A                  (            os9.d):00844         P$PATH         RMB       NumPaths            I/O path table $26
002A                  (            os9.d):00845         P$Signal       RMB       1                   Signal Code $36
002A                  (            os9.d):00846         P$SigVec       RMB       2                   Signal Intercept Vector
002A                  (            os9.d):00847         P$SigDat       RMB       2                   Signal Intercept Data Address
002A                  (            os9.d):00848         P$NIO          RMB       4                   additional dio pointers for net
                      (            os9.d):00849                        RMB       $40-.               unused
002A                  (            os9.d):00850         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00851         
                      (            os9.d):00852         *
                      (            os9.d):00853         * Process State Flags
                      (            os9.d):00854         *
002A                  (            os9.d):00855         SysState       EQU       %10000000
002A                  (            os9.d):00856         TimSleep       EQU       %01000000
002A                  (            os9.d):00857         TimOut         EQU       %00100000
002A                  (            os9.d):00858         ImgChg         EQU       %00010000
002A                  (            os9.d):00859         Condem         EQU       %00000010
002A                  (            os9.d):00860         Dead           EQU       %00000001
                      (            os9.d):00861         
                      (            os9.d):00862                        ELSE      
                      (            os9.d):00863         
                      (            os9.d):00864         * Level 2 process descriptor defs
     0010             (            os9.d):00865         DefIOSiz       EQU       16                  Default I/O Data Length
     000C             (            os9.d):00866         NefIOSiz       EQU       12                  On-Net Default I/O Data Length
     0010             (            os9.d):00867         NumPaths       EQU       16                  Number of Local Paths
                      (            os9.d):00868         
                      (            os9.d):00869                        ORG       0
0000                  (            os9.d):00870         P$ID           RMB       1                   Process ID
0001                  (            os9.d):00871         P$PID          RMB       1                   Parent's ID
0002                  (            os9.d):00872         P$SID          RMB       1                   Sibling's ID
0003                  (            os9.d):00873         P$CID          RMB       1                   Child's ID
0004                  (            os9.d):00874         P$SP           RMB       2                   Stack ptr
0006                  (            os9.d):00875         P$Task         RMB       1                   Task Number
0007                  (            os9.d):00876         P$PagCnt       RMB       1                   Memory Page Count
0008                  (            os9.d):00877         P$User         RMB       2                   User Index
000A                  (            os9.d):00878         P$Prior        RMB       1                   Priority
000B                  (            os9.d):00879         P$Age          RMB       1                   Age
000C                  (            os9.d):00880         P$State        RMB       1                   Status
000D                  (            os9.d):00881         P$Queue        RMB       2                   Queue Link (Process ptr)
000F                  (            os9.d):00882         P$IOQP         RMB       1                   Previous I/O Queue Link (Process ID)
0010                  (            os9.d):00883         P$IOQN         RMB       1                   Next I/O Queue Link (Process ID)
0011                  (            os9.d):00884         P$PModul       RMB       2                   Primary Module
0013                  (            os9.d):00885         P$SWI          RMB       2                   SWI Entry Point
0015                  (            os9.d):00886         P$SWI2         RMB       2                   SWI2 Entry Point
0017                  (            os9.d):00887         P$SWI3         RMB       2                   SWI3 Entry Point
0019                  (            os9.d):00888         P$Signal       RMB       1                   Signal Code
001A                  (            os9.d):00889         P$SigVec       RMB       2                   Signal Intercept Vector
001C                  (            os9.d):00890         P$SigDat       RMB       2                   Signal Intercept Data Address
001E                  (            os9.d):00891         P$DeadLk       RMB       1                   Dominant proc ID if I/O locked
001F                  (            os9.d):00892                        RMB       $20-.               unused
0020                  (            os9.d):00893         P$DIO          RMB       DefIOSiz            Default I/O ptrs
0030                  (            os9.d):00894         P$Path         RMB       NumPaths            I/O Path Table
0040                  (            os9.d):00895         P$DATImg       RMB       64                  DAT Image
0080                  (            os9.d):00896         P$Links        RMB       32                  Block Link counts
00A0                  (            os9.d):00897         P$NIO          RMB       6*2                 additional DIO ptrs for net, compatible  with 68k
00AC                  (            os9.d):00898         P$SelP         RMB       1                   Selected Path for COCO Windows (Default 0)
00AD                  (            os9.d):00899         P$UTicks       RMB       4                   proc User Tick counter        (L2V3)
00B1                  (            os9.d):00900         P$STicks       RMB       4                   proc System Tick counter      (L2V3)
00B5                  (            os9.d):00901         P$FCalls       RMB       4                   proc F$ call counter          (L2V3)
00B9                  (            os9.d):00902         P$ICalls       RMB       4                   proc I$ call counter          (L2V3)
00BD                  (            os9.d):00903         P$DatBeg       RMB       3                   proc Date of creation (Y/M/D) (L2V3)
00C0                  (            os9.d):00904         P$TimBeg       RMB       3                   proc Time of creation (H/M/S) (L2V3)
00C3                  (            os9.d):00905         P$Alarm        RMB       6
00C9                  (            os9.d):00906                        RMB       $200-.              Local stack
     0200             (            os9.d):00907         P$Stack        EQU       .                   Top of Stack
     0200             (            os9.d):00908         P$Size         EQU       .                   Size of Process Descriptor
                      (            os9.d):00909         
                      (            os9.d):00910         *
                      (            os9.d):00911         * Process State Flags
                      (            os9.d):00912         *
     0080             (            os9.d):00913         SysState       EQU       %10000000
     0040             (            os9.d):00914         TimSleep       EQU       %01000000
     0020             (            os9.d):00915         TimOut         EQU       %00100000
     0010             (            os9.d):00916         ImgChg         EQU       %00010000
     0008             (            os9.d):00917         Suspend        EQU       %00001000
     0002             (            os9.d):00918         Condem         EQU       %00000010
     0001             (            os9.d):00919         Dead           EQU       %00000001
                      (            os9.d):00920         
                      (            os9.d):00921                        ENDC      
                      (            os9.d):00922         
                      (            os9.d):00923                        TTL       NitrOS-9 I/O Symbolic Definitions
                      (            os9.d):00924                        PAG       
                      (            os9.d):00925         *************************
                      (            os9.d):00926         * Path Descriptor Offsets
                      (            os9.d):00927         *
                      (            os9.d):00928                        ORG       0
0000                  (            os9.d):00929         PD.PD          RMB       1                   Path Number
0001                  (            os9.d):00930         PD.MOD         RMB       1                   Mode (Read/Write/Update)
0002                  (            os9.d):00931         PD.CNT         RMB       1                   Number of Open Images
0003                  (            os9.d):00932         PD.DEV         RMB       2                   Device Table Entry Address
0005                  (            os9.d):00933         PD.CPR         RMB       1                   Current Process
0006                  (            os9.d):00934         PD.RGS         RMB       2                   Caller's Register Stack
0008                  (            os9.d):00935         PD.BUF         RMB       2                   Buffer Address
000A                  (            os9.d):00936         PD.FST         RMB       32-.                File Manager's Storage
     0020             (            os9.d):00937         PD.OPT         EQU       .                   PD GetSts(0) Options
0020                  (            os9.d):00938         PD.DTP         RMB       1                   Device Type
0021                  (            os9.d):00939                        RMB       64-.                Path options
     0040             (            os9.d):00940         PDSIZE         EQU       .
                      (            os9.d):00941         
                      (            os9.d):00942         *
                      (            os9.d):00943         * Pathlist Special Symbols
                      (            os9.d):00944         *
     002F             (            os9.d):00945         PDELIM         EQU       '/                  Pathlist Name Separator
     002E             (            os9.d):00946         PDIR           EQU       '.                  Directory
     0040             (            os9.d):00947         PENTIR         EQU       '@                  Entire Device
                      (            os9.d):00948         
                      (            os9.d):00949                        PAG       
                      (            os9.d):00950         ****************************
                      (            os9.d):00951         * File Manager Entry Offsets
                      (            os9.d):00952         *
                      (            os9.d):00953                        ORG       0
0000                  (            os9.d):00954         FMCREA         RMB       3                   Create (Open New) File
0003                  (            os9.d):00955         FMOPEN         RMB       3                   Open File
0006                  (            os9.d):00956         FMMDIR         RMB       3                   Make Directory
0009                  (            os9.d):00957         FMCDIR         RMB       3                   Change Directory
000C                  (            os9.d):00958         FMDLET         RMB       3                   Delete File
000F                  (            os9.d):00959         FMSEEK         RMB       3                   Position File
0012                  (            os9.d):00960         FMREAD         RMB       3                   Read from File
0015                  (            os9.d):00961         FMWRIT         RMB       3                   Write to File
0018                  (            os9.d):00962         FMRDLN         RMB       3                   ReadLn
001B                  (            os9.d):00963         FMWRLN         RMB       3                   WritLn
001E                  (            os9.d):00964         FMGSTA         RMB       3                   Get File Status
0021                  (            os9.d):00965         FMSSTA         RMB       3                   Set File Status
0024                  (            os9.d):00966         FMCLOS         RMB       3                   Close File
                      (            os9.d):00967         
                      (            os9.d):00968         *****************************
                      (            os9.d):00969         * Device Driver Entry Offsets
                      (            os9.d):00970         *
                      (            os9.d):00971                        ORG       0
0000                  (            os9.d):00972         D$INIT         RMB       3                   Device Initialization
0003                  (            os9.d):00973         D$READ         RMB       3                   Read from Device
0006                  (            os9.d):00974         D$WRIT         RMB       3                   Write to Device
0009                  (            os9.d):00975         D$GSTA         RMB       3                   Get Device Status
000C                  (            os9.d):00976         D$PSTA         RMB       3                   Put Device Status
000F                  (            os9.d):00977         D$TERM         RMB       3                   Device Termination
                      (            os9.d):00978         
                      (            os9.d):00979         *********************
                      (            os9.d):00980         * Device Table Format
                      (            os9.d):00981         *
                      (            os9.d):00982                        ORG       0
0000                  (            os9.d):00983         V$DRIV         RMB       2                   Device Driver module
0002                  (            os9.d):00984         V$STAT         RMB       2                   Device Driver Static storage
0004                  (            os9.d):00985         V$DESC         RMB       2                   Device Descriptor module
0006                  (            os9.d):00986         V$FMGR         RMB       2                   File Manager module
0008                  (            os9.d):00987         V$USRS         RMB       1                   use count
                      (            os9.d):00988                        IFGT      Level-1
0009                  (            os9.d):00989         V$DRIVEX       RMB       2                   Device Driver execution address
000B                  (            os9.d):00990         V$FMGREX       RMB       2                   File Manager execution address
                      (            os9.d):00991                        ENDC      
     000D             (            os9.d):00992         DEVSIZ         EQU       .
                      (            os9.d):00993         
                      (            os9.d):00994         *******************************
                      (            os9.d):00995         * Device Static Storage Offsets
                      (            os9.d):00996         *
                      (            os9.d):00997                        ORG       0
0000                  (            os9.d):00998         V.PAGE         RMB       1                   Port Extended Address
0001                  (            os9.d):00999         V.PORT         RMB       2                   Device 'Base' Port Address
0003                  (            os9.d):01000         V.LPRC         RMB       1                   Last Active Process ID
0004                  (            os9.d):01001         V.BUSY         RMB       1                   Active Process ID (0=UnBusy)
0005                  (            os9.d):01002         V.WAKE         RMB       1                   Active PD if Driver MUST Wake-up
     0006             (            os9.d):01003         V.USER         EQU       .                   Driver Allocation Origin
                      (            os9.d):01004         
                      (            os9.d):01005         ********************************
                      (            os9.d):01006         * Interrupt Polling Table Format
                      (            os9.d):01007         *
                      (            os9.d):01008                        ORG       0
0000                  (            os9.d):01009         Q$POLL         RMB       2                   Absolute Polling Address
0002                  (            os9.d):01010         Q$FLIP         RMB       1                   Flip (EOR) Byte ..normally Zero
0003                  (            os9.d):01011         Q$MASK         RMB       1                   Polling Mask (after Flip)
0004                  (            os9.d):01012         Q$SERV         RMB       2                   Absolute Service routine Address
0006                  (            os9.d):01013         Q$STAT         RMB       2                   Static Storage Address
0008                  (            os9.d):01014         Q$PRTY         RMB       1                   Priority (Low Numbers=Top Priority)
                      (            os9.d):01015                        IFGT      Level-1
0009                  (            os9.d):01016         Q$MAP          RMB       2                   NitrOS-9 Level 2 and above
                      (            os9.d):01017                        ENDC      
     000B             (            os9.d):01018         POLSIZ         EQU       .
                      (            os9.d):01019         
                      (            os9.d):01020         ********************
                      (            os9.d):01021         * VIRQ packet format
                      (            os9.d):01022         *
                      (            os9.d):01023                        ORG       0
0000                  (            os9.d):01024         Vi.Cnt         RMB       2                   count down counter
0002                  (            os9.d):01025         Vi.Rst         RMB       2                   reset value for counter
0004                  (            os9.d):01026         Vi.Stat        RMB       1                   status byte
     0005             (            os9.d):01027         Vi.PkSz        EQU       .
                      (            os9.d):01028         
     0001             (            os9.d):01029         Vi.IFlag       EQU       %00000001           status byte virq flag
                      (            os9.d):01030         
                      (            os9.d):01031                        PAG       
                      (            os9.d):01032         *************************************
                      (            os9.d):01033         * Machine Characteristics Definitions
                      (            os9.d):01034         *
     0000             (            os9.d):01035         R$CC           EQU       0                   Condition Codes register
     0001             (            os9.d):01036         R$A            EQU       1                   A Accumulator
     0002             (            os9.d):01037         R$B            EQU       2                   B Accumulator
     0001             (            os9.d):01038         R$D            EQU       R$A                 Combined A:B Accumulator
                      (            os9.d):01039                        IFNE      H6309
0005                  (            os9.d):01040         R$E            EQU       3                   E Accumulator
0005                  (            os9.d):01041         R$F            EQU       4                   F Accumulator
0005                  (            os9.d):01042         R$W            EQU       R$E                 Combined E:F Accumulator
0005                  (            os9.d):01043         R$Q            EQU       R$A                 Combined A:B:E:F Accumulator
0005                  (            os9.d):01044         R$DP           EQU       5                   Direct Page register
0005                  (            os9.d):01045         R$X            EQU       6                   X Index register
0005                  (            os9.d):01046         R$Y            EQU       8                   Y Index register
0005                  (            os9.d):01047         R$U            EQU       10                  User Stack register
0005                  (            os9.d):01048         R$PC           EQU       12                  Program Counter register
0005                  (            os9.d):01049         R$Size         EQU       14                  Total register package size
                      (            os9.d):01050                        ELSE      
     0003             (            os9.d):01051         R$DP           EQU       3                   Direct Page register
     0004             (            os9.d):01052         R$X            EQU       4                   X Index register
     0006             (            os9.d):01053         R$Y            EQU       6                   Y Index register
     0008             (            os9.d):01054         R$U            EQU       8                   User Stack register
     000A             (            os9.d):01055         R$PC           EQU       10                  Program Counter register
     000C             (            os9.d):01056         R$Size         EQU       12                  Total register package size
                      (            os9.d):01057                        ENDC      
                      (            os9.d):01058         
                      (            os9.d):01059         * MD register masks
                      (            os9.d):01060         * 6309 definitions
     0080             (            os9.d):01061         DIV0           EQU       %10000000           division by 0 trap flag       : 1 = trap occured
     0040             (            os9.d):01062         badinstr       EQU       %01000000           illegal instruction trap flag : 1 = trap occured
                      (            os9.d):01063         
     0080             (            os9.d):01064         Entire         EQU       %10000000           Full Register Stack flag
     0040             (            os9.d):01065         FIRQMask       EQU       %01000000           Fast-Interrupt Mask bit
     0020             (            os9.d):01066         HalfCrry       EQU       %00100000           Half Carry flag
     0010             (            os9.d):01067         IRQMask        EQU       %00010000           Interrupt Mask bit
     0008             (            os9.d):01068         Negative       EQU       %00001000           Negative flag
     0004             (            os9.d):01069         Zero           EQU       %00000100           Zero flag
     0002             (            os9.d):01070         TwosOvfl       EQU       %00000010           Two's Comp Overflow flag
     0001             (            os9.d):01071         Carry          EQU       %00000001           Carry bit
     0050             (            os9.d):01072         IntMasks       EQU       IRQMask+FIRQMask
     0080             (            os9.d):01073         Sign           EQU       %10000000           sign bit
                      (            os9.d):01074         
                      (            os9.d):01075                        TTL       Error Code Definitions
                      (            os9.d):01076                        PAG       
                      (            os9.d):01077         ************************
                      (            os9.d):01078         * Error Code Definitions
                      (            os9.d):01079         *
                      (            os9.d):01080         * Basic09 Error Codes
                      (            os9.d):01081         *
                      (            os9.d):01082                        ORG       10
000A                  (            os9.d):01083         E$UnkSym       RMB       1                   Unknown symbol
000B                  (            os9.d):01084         E$ExcVrb       RMB       1                   Excessive verbage
000C                  (            os9.d):01085         E$IllStC       RMB       1                   Illegal statement construction
000D                  (            os9.d):01086         E$ICOvf        RMB       1                   I-code overflow
000E                  (            os9.d):01087         E$IChRef       RMB       1                   Illegal channel reference
000F                  (            os9.d):01088         E$IllMod       RMB       1                   Illegal mode
0010                  (            os9.d):01089         E$IllNum       RMB       1                   Illegal number
0011                  (            os9.d):01090         E$IllPrf       RMB       1                   Illegal prefix
0012                  (            os9.d):01091         E$IllOpd       RMB       1                   Illegal operand
0013                  (            os9.d):01092         E$IllOpr       RMB       1                   Illegal operator
0014                  (            os9.d):01093         E$IllRFN       RMB       1                   Illegal record field name
0015                  (            os9.d):01094         E$IllDim       RMB       1                   Illegal dimension
0016                  (            os9.d):01095         E$IllLit       RMB       1                   Illegal literal
0017                  (            os9.d):01096         E$IllRet       RMB       1                   Illegal relational
0018                  (            os9.d):01097         E$IllSfx       RMB       1                   Illegal type suffix
0019                  (            os9.d):01098         E$DimLrg       RMB       1                   Dimension too large
001A                  (            os9.d):01099         E$LinLrg       RMB       1                   Line number too large
001B                  (            os9.d):01100         E$NoAssg       RMB       1                   Missing assignment statement
001C                  (            os9.d):01101         E$NoPath       RMB       1                   Missing path number
001D                  (            os9.d):01102         E$NoComa       RMB       1                   Missing coma
001E                  (            os9.d):01103         E$NoDim        RMB       1                   Missing dimension
001F                  (            os9.d):01104         E$NoDO         RMB       1                   Missing DO statement
0020                  (            os9.d):01105         E$MFull        RMB       1                   Memory full
0021                  (            os9.d):01106         E$NoGoto       RMB       1                   Missing GOTO
0022                  (            os9.d):01107         E$NoLPar       RMB       1                   Missing left parenthesis
0023                  (            os9.d):01108         E$NoLRef       RMB       1                   Missing line reference
0024                  (            os9.d):01109         E$NoOprd       RMB       1                   Missing operand
0025                  (            os9.d):01110         E$NoRPar       RMB       1                   Missing right parenthesis
0026                  (            os9.d):01111         E$NoTHEN       RMB       1                   Missing THEN statement
0027                  (            os9.d):01112         E$NoTO         RMB       1                   Missing TO statement
0028                  (            os9.d):01113         E$NoVRef       RMB       1                   Missing variable reference
0029                  (            os9.d):01114         E$EndQou       RMB       1                   Missing end quote
002A                  (            os9.d):01115         E$SubLrg       RMB       1                   Too many subscripts
002B                  (            os9.d):01116         E$UnkPrc       RMB       1                   Unknown procedure
002C                  (            os9.d):01117         E$MulPrc       RMB       1                   Multiply defined procedure
002D                  (            os9.d):01118         E$DivZer       RMB       1                   Divice by zero
002E                  (            os9.d):01119         E$TypMis       RMB       1                   Operand type mismatch
002F                  (            os9.d):01120         E$StrOvf       RMB       1                   String stack overflow
0030                  (            os9.d):01121         E$NoRout       RMB       1                   Unimplemented routine
0031                  (            os9.d):01122         E$UndVar       RMB       1                   Undefined variable
0032                  (            os9.d):01123         E$FltOvf       RMB       1                   Floating Overflow
0033                  (            os9.d):01124         E$LnComp       RMB       1                   Line with compiler error
0034                  (            os9.d):01125         E$ValRng       RMB       1                   Value out of range for destination
0035                  (            os9.d):01126         E$SubOvf       RMB       1                   Subroutine stack overflow
0036                  (            os9.d):01127         E$SubUnd       RMB       1                   Subroutine stack underflow
0037                  (            os9.d):01128         E$SubRng       RMB       1                   Subscript out of range
0038                  (            os9.d):01129         E$ParmEr       RMB       1                   Paraemter error
0039                  (            os9.d):01130         E$SysOvf       RMB       1                   System stack overflow
003A                  (            os9.d):01131         E$IOMism       RMB       1                   I/O type mismatch
003B                  (            os9.d):01132         E$IONum        RMB       1                   I/O numeric input format bad
003C                  (            os9.d):01133         E$IOConv       RMB       1                   I/O conversion: number out of range
003D                  (            os9.d):01134         E$IllInp       RMB       1                   Illegal input format
003E                  (            os9.d):01135         E$IOFRpt       RMB       1                   I/O format repeat error
003F                  (            os9.d):01136         E$IOFSyn       RMB       1                   I/O format syntax error
0040                  (            os9.d):01137         E$IllPNm       RMB       1                   Illegal path number
0041                  (            os9.d):01138         E$WrSub        RMB       1                   Wrong number of subscripts
0042                  (            os9.d):01139         E$NonRcO       RMB       1                   Non-record type operand
0043                  (            os9.d):01140         E$IllA         RMB       1                   Illegal argument
0044                  (            os9.d):01141         E$IllCnt       RMB       1                   Illegal control structure
0045                  (            os9.d):01142         E$UnmCnt       RMB       1                   Unmatched control structure
0046                  (            os9.d):01143         E$IllFOR       RMB       1                   Illegal FOR variable
0047                  (            os9.d):01144         E$IllExp       RMB       1                   Illegal expression type
0048                  (            os9.d):01145         E$IllDec       RMB       1                   Illegal declarative statement
0049                  (            os9.d):01146         E$ArrOvf       RMB       1                   Array size overflow
004A                  (            os9.d):01147         E$UndLin       RMB       1                   Undefined line number
004B                  (            os9.d):01148         E$MltLin       RMB       1                   Multiply defined line number
004C                  (            os9.d):01149         E$MltVar       RMB       1                   Multiply defined variable
004D                  (            os9.d):01150         E$IllIVr       RMB       1                   Illegal input variable
004E                  (            os9.d):01151         E$SeekRg       RMB       1                   Seek out of range
004F                  (            os9.d):01152         E$NoData       RMB       1                   Missing data statement
                      (            os9.d):01153         
                      (            os9.d):01154         *
                      (            os9.d):01155         * System Dependent Error Codes
                      (            os9.d):01156         *
                      (            os9.d):01157         
                      (            os9.d):01158         * Level 2 windowing error codes
                      (            os9.d):01159                        ORG       183
00B7                  (            os9.d):01160         E$IWTyp        RMB       1                   Illegal window type
00B8                  (            os9.d):01161         E$WADef        RMB       1                   Window already defined
00B9                  (            os9.d):01162         E$NFont        RMB       1                   Font not found
00BA                  (            os9.d):01163         E$StkOvf       RMB       1                   Stack overflow
00BB                  (            os9.d):01164         E$IllArg       RMB       1                   Illegal argument
00BC                  (            os9.d):01165                        RMB       1                   reserved
00BD                  (            os9.d):01166         E$ICoord       RMB       1                   Illegal coordinates
00BE                  (            os9.d):01167         E$Bug          RMB       1                   Bug (should never be returned)
00BF                  (            os9.d):01168         E$BufSiz       RMB       1                   Buffer size is too small
00C0                  (            os9.d):01169         E$IllCmd       RMB       1                   Illegal command
00C1                  (            os9.d):01170         E$TblFul       RMB       1                   Screen or window table is full
00C2                  (            os9.d):01171         E$BadBuf       RMB       1                   Bad/Undefined buffer number
00C3                  (            os9.d):01172         E$IWDef        RMB       1                   Illegal window definition
00C4                  (            os9.d):01173         E$WUndef       RMB       1                   Window undefined
                      (            os9.d):01174         
00C5                  (            os9.d):01175         E$Up           RMB       1                   Up arrow pressed on SCF I$ReadLn with PD.UP enabled
00C6                  (            os9.d):01176         E$Dn           RMB       1                   Down arrow pressed on SCF I$ReadLn with PD.DOWN enabled
00C7                  (            os9.d):01177         E$Alias        RMB       1
                      (            os9.d):01178         
                      (            os9.d):01179         
                      (            os9.d):01180         *
                      (            os9.d):01181         * Standard NitrOS-9 Error Codes
                      (            os9.d):01182         *
                      (            os9.d):01183                        ORG       200
00C8                  (            os9.d):01184         E$PthFul       RMB       1                   Path Table full
00C9                  (            os9.d):01185         E$BPNum        RMB       1                   Bad Path Number
00CA                  (            os9.d):01186         E$Poll         RMB       1                   Polling Table Full
00CB                  (            os9.d):01187         E$BMode        RMB       1                   Bad Mode
00CC                  (            os9.d):01188         E$DevOvf       RMB       1                   Device Table Overflow
00CD                  (            os9.d):01189         E$BMID         RMB       1                   Bad Module ID
00CE                  (            os9.d):01190         E$DirFul       RMB       1                   Module Directory Full
00CF                  (            os9.d):01191         E$MemFul       RMB       1                   Process Memory Full
00D0                  (            os9.d):01192         E$UnkSvc       RMB       1                   Unknown Service Code
00D1                  (            os9.d):01193         E$ModBsy       RMB       1                   Module Busy
00D2                  (            os9.d):01194         E$BPAddr       RMB       1                   Bad Page Address
00D3                  (            os9.d):01195         E$EOF          RMB       1                   End of File
00D4                  (            os9.d):01196                        RMB       1
00D5                  (            os9.d):01197         E$NES          RMB       1                   Non-Existing Segment
00D6                  (            os9.d):01198         E$FNA          RMB       1                   File Not Accesible
00D7                  (            os9.d):01199         E$BPNam        RMB       1                   Bad Path Name
00D8                  (            os9.d):01200         E$PNNF         RMB       1                   Path Name Not Found
00D9                  (            os9.d):01201         E$SLF          RMB       1                   Segment List Full
00DA                  (            os9.d):01202         E$CEF          RMB       1                   Creating Existing File
00DB                  (            os9.d):01203         E$IBA          RMB       1                   Illegal Block Address
00DC                  (            os9.d):01204         E$HangUp       RMB       1                   Carrier Detect Lost
00DD                  (            os9.d):01205         E$MNF          RMB       1                   Module Not Found
00DE                  (            os9.d):01206                        RMB       1
00DF                  (            os9.d):01207         E$DelSP        RMB       1                   Deleting Stack Pointer memory
00E0                  (            os9.d):01208         E$IPrcID       RMB       1                   Illegal Process ID
     00E0             (            os9.d):01209         E$BPrcID       EQU       E$IPrcID            Bad Process ID (formerly #238)
00E1                  (            os9.d):01210                        RMB       1
00E2                  (            os9.d):01211         E$NoChld       RMB       1                   No Children
00E3                  (            os9.d):01212         E$ISWI         RMB       1                   Illegal SWI code
00E4                  (            os9.d):01213         E$PrcAbt       RMB       1                   Process Aborted
00E5                  (            os9.d):01214         E$PrcFul       RMB       1                   Process Table Full
00E6                  (            os9.d):01215         E$IForkP       RMB       1                   Illegal Fork Parameter
00E7                  (            os9.d):01216         E$KwnMod       RMB       1                   Known Module
00E8                  (            os9.d):01217         E$BMCRC        RMB       1                   Bad Module CRC
00E9                  (            os9.d):01218         E$USigP        RMB       1                   Unprocessed Signal Pending
00EA                  (            os9.d):01219         E$NEMod        RMB       1                   Non Existing Module
00EB                  (            os9.d):01220         E$BNam         RMB       1                   Bad Name
00EC                  (            os9.d):01221         E$BMHP         RMB       1                   (bad module header parity)
00ED                  (            os9.d):01222         E$NoRAM        RMB       1                   No (System) RAM Available
00EE                  (            os9.d):01223         E$DNE          RMB       1                   Directory not empty
00EF                  (            os9.d):01224         E$NoTask       RMB       1                   No available Task number
                      (            os9.d):01225                        RMB       $F0-.               reserved
00F0                  (            os9.d):01226         E$Unit         RMB       1                   Illegal Unit (drive)
00F1                  (            os9.d):01227         E$Sect         RMB       1                   Bad Sector number
00F2                  (            os9.d):01228         E$WP           RMB       1                   Write Protect
00F3                  (            os9.d):01229         E$CRC          RMB       1                   Bad Check Sum
00F4                  (            os9.d):01230         E$Read         RMB       1                   Read Error
00F5                  (            os9.d):01231         E$Write        RMB       1                   Write Error
00F6                  (            os9.d):01232         E$NotRdy       RMB       1                   Device Not Ready
00F7                  (            os9.d):01233         E$Seek         RMB       1                   Seek Error
00F8                  (            os9.d):01234         E$Full         RMB       1                   Media Full
00F9                  (            os9.d):01235         E$BTyp         RMB       1                   Bad Type (incompatable) media
00FA                  (            os9.d):01236         E$DevBsy       RMB       1                   Device Busy
00FB                  (            os9.d):01237         E$DIDC         RMB       1                   Disk ID Change
00FC                  (            os9.d):01238         E$Lock         RMB       1                   Record is busy (locked out)
00FD                  (            os9.d):01239         E$Share        RMB       1                   Non-sharable file busy
00FE                  (            os9.d):01240         E$DeadLk       RMB       1                   I/O Deadlock error
                      (            os9.d):01241         
                      (            os9.d):01242         
                      (            os9.d):01243                        IFEQ      Level-1
                      (            os9.d):01244         
                      (            os9.d):01245         ********************************
                      (            os9.d):01246         * Boot defs for NitrOS-9 Level 1
                      (            os9.d):01247         *
                      (            os9.d):01248         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01249         * system.
                      (            os9.d):01250         *
00FF                  (            os9.d):01251         Bt.Start       EQU       $EE00               Start address of the boot track in memory
                      (            os9.d):01252         
                      (            os9.d):01253         * Boot area size on Dragon is only 16 sectors=4K
                      (            os9.d):01254                        IFNE      DRAGON
00FF                  (            os9.d):01255         Bt.Size        EQU       $1000               Max size of boot file
                      (            os9.d):01256                        ELSE      
00FF                  (            os9.d):01257         Bt.Size        EQU       $1080               Maximum size of bootfile
                      (            os9.d):01258                        ENDC      
                      (            os9.d):01259         
                      (            os9.d):01260                        ELSE      
                      (            os9.d):01261         
                      (            os9.d):01262         ******************************************
                      (            os9.d):01263         * Boot defs for NitrOS-9 Level 2 and above
                      (            os9.d):01264         *
                      (            os9.d):01265         * These defs are not strictly for 'Boot', but are for booting the
                      (            os9.d):01266         * system.
                      (            os9.d):01267         *
     003B             (            os9.d):01268         Bt.Block       EQU       $3B                 Block to map in for the 'OS9BOOT' screen
     8A34             (            os9.d):01269         Bt.Flag        EQU       $8A34               Flag in Bt.Block to verify that it's unchanged
     0002             (            os9.d):01270         Bt.Offst       EQU       2                   Offset into the screen where the current ptr is
     ED00             (            os9.d):01271         Bt.Start       EQU       $ED00               Start address of the boot track in memory
                      (            os9.d):01272         
                      (            os9.d):01273                        ENDC      
                      (            os9.d):01274         
                      (            os9.d):01275         * Boot area on the Dragon starts on track 0 sector 2, imediatly 
                      (            os9.d):01276         * after the blockmap.
                      (            os9.d):01277         * On the CoCo, the boot track is all of track 34
                      (            os9.d):01278         
                      (            os9.d):01279                        IFNE      DRAGON
00FF                  (            os9.d):01280         Bt.Track       EQU       0                   Boot track
00FF                  (            os9.d):01281         Bt.Sec         EQU       2                   Start LSN of boot area on boot track
                      (            os9.d):01282                        ELSE      
     0022             (            os9.d):01283         Bt.Track       EQU       34                  Boot track
     0000             (            os9.d):01284         Bt.Sec         EQU       0                   Start LSN of boot area on boot track
                      (            os9.d):01285                        ENDC      
                      (            os9.d):01286         
                      (            os9.d):01287         
                      (            os9.d):01288                        IFGT      Level-2
                      (            os9.d):01289         ***************************
                      (            os9.d):01290         * Level 3 Defs
                      (            os9.d):01291         *
                      (            os9.d):01292         * These definitions apply to NitrOS-9 Level 3
                      (            os9.d):01293         *
00FF                  (            os9.d):01294         L3.Start       EQU       $2000               Start off at slot 1
00FF                  (            os9.d):01295         L3.Size        EQU       $40                 Go for 64 pages: 2 slots total
00FF                  (            os9.d):01296         L3.Blks        EQU       L3.Size/$20         Number of slots
00FF                  (            os9.d):01297         L3.End         EQU       L3.Start+L3.Size*$0100 end of L3 memory
00FF                  (            os9.d):01298         L3.SCF         EQU       $0660               SCF block ptr
00FF                  (            os9.d):01299         L3.RBF         EQU       L3.SCF+1            RBF block ptr
                      (            os9.d):01300                        ENDC      
                      (            os9.d):01301         
                      (            os9.d):01302                        ENDC      
                      (         defsfile):00003                 use   scf.d   
                      (            scf.d):00001                        IFNE      SCF.D-1
                      (            scf.d):00002         
     0001             (            scf.d):00003         SCF.D          SET       1
                      (            scf.d):00004         
                      (            scf.d):00005         ********************************************************************
                      (            scf.d):00006         * scf.d - Sequential Character File Manager Definitions
                      (            scf.d):00007         *
                      (            scf.d):00008         * $Id$
                      (            scf.d):00009         *
                      (            scf.d):00010         * SCF stands for 'Sequential Character Filemanager' and is a package of subroutines
                      (            scf.d):00011         * that define the logical structure of a serial device.
                      (            scf.d):00012         *
                      (            scf.d):00013         * The data structures in this file give SCF its 'personality' and are used
                      (            scf.d):00014         * by SCF itself, as well as applications that will require disk I/O.
                      (            scf.d):00015         *
                      (            scf.d):00016         * Edt/Rev  YYYY/MM/DD  Modified by
                      (            scf.d):00017         * Comment
                      (            scf.d):00018         * ------------------------------------------------------------------
                      (            scf.d):00019         *          1984/01/11  YO
                      (            scf.d):00020         * Added V.KANJI, V.KBUF, V.MODADR for new kanji input process.
                      (            scf.d):00021         *
                      (            scf.d):00022         *          1985/04/20  Mark G. Hawkins
                      (            scf.d):00023         * Added V.PDLHd Path Descriptor List Head.
                      (            scf.d):00024         *
                      (            scf.d):00025         *          1985/04/21  Mark G. Hawkins
                      (            scf.d):00026         * Added PD.PLP and PD.PST for modem handling.
                      (            scf.d):00027         *
                      (            scf.d):00028         *          1987/06/23  Kevin K. Darling
                      (            scf.d):00029         * Updated with Dev Desc info.
                      (            scf.d):00030         *
                      (            scf.d):00031         *          1998/10/03  Boisy G. Pitre
                      (            scf.d):00032         * Consolidated L1/L2 scfdefs.
                      (            scf.d):00033         *
                      (            scf.d):00034         *          2003/01/21  Boisy G. Pitre
                      (            scf.d):00035         * Added symbolics for enhanced SCF line editing.
                      (            scf.d):00036         *
                      (            scf.d):00037         *          2003/06/02  Boisy G. Pitre
                      (            scf.d):00038         * Updated comments for clarity.
                      (            scf.d):00039         *
                      (            scf.d):00040         *          2004/05/17  Boisy G. Pitre
                      (            scf.d):00041         * Added higher baud rates.
                      (            scf.d):00042         
                      (            scf.d):00043                        NAM       scf.d
                      (            scf.d):00044                        TTL       Sequential File Manager Definitions
                      (            scf.d):00045         
                      (            scf.d):00046                        PAG       
                      (            scf.d):00047         *******************************
                      (            scf.d):00048         * SCF Device Descriptor Offsets
                      (            scf.d):00049         *
                      (            scf.d):00050         * These definitions are for SCF device descriptors.
                      (            scf.d):00051         
                      (            scf.d):00052                        ORG       M$DTyp
0012                  (            scf.d):00053         IT.DVC         RMB       1                   Device type (DT.SCF)
0013                  (            scf.d):00054         IT.UPC         RMB       1                   Uppercase flag
0014                  (            scf.d):00055         IT.BSO         RMB       1                   Backspace behavior
0015                  (            scf.d):00056         IT.DLO         RMB       1                   Delete behavior
0016                  (            scf.d):00057         IT.EKO         RMB       1                   Echo flag
0017                  (            scf.d):00058         IT.ALF         RMB       1                   Auto linefeed flag
0018                  (            scf.d):00059         IT.NUL         RMB       1                   End-of-line null count
0019                  (            scf.d):00060         IT.PAU         RMB       1                   Page pause flag
001A                  (            scf.d):00061         IT.PAG         RMB       1                   Number of lines per page
001B                  (            scf.d):00062         IT.BSP         RMB       1                   Backspace character
001C                  (            scf.d):00063         IT.DEL         RMB       1                   Delete-line character
001D                  (            scf.d):00064         IT.EOR         RMB       1                   End-of-record character
001E                  (            scf.d):00065         IT.EOF         RMB       1                   End-of-file character
001F                  (            scf.d):00066         IT.RPR         RMB       1                   Reprint-line character
0020                  (            scf.d):00067         IT.DUP         RMB       1                   Duplicate-last-line character
0021                  (            scf.d):00068         IT.PSC         RMB       1                   Pause character
0022                  (            scf.d):00069         IT.INT         RMB       1                   Interrupt character
0023                  (            scf.d):00070         IT.QUT         RMB       1                   Quit character
0024                  (            scf.d):00071         IT.BSE         RMB       1                   Backspace echo character
0025                  (            scf.d):00072         IT.OVF         RMB       1                   Bell character
0026                  (            scf.d):00073         IT.PAR         RMB       1                   Parity
0027                  (            scf.d):00074         IT.BAU         RMB       1                   Baud rate
0028                  (            scf.d):00075         IT.D2P         RMB       2                   Attached device name string offset
002A                  (            scf.d):00076         IT.XON         RMB       1                   X-ON character
002B                  (            scf.d):00077         IT.XOFF        RMB       1                   X-OFF character
002C                  (            scf.d):00078         IT.COL         RMB       1                   Number of columns for display
002D                  (            scf.d):00079         IT.ROW         RMB       1                   Number of rows for display
002E                  (            scf.d):00080         IT.XTYP        RMB       1                   Extended type (added by BRI)
                      (            scf.d):00081         
                      (            scf.d):00082                        IFGT      Level-1
                      (            scf.d):00083         * Window Descriptor Additions
                      (            scf.d):00084         * For CoCo window, where IT.PAR = $80
                      (            scf.d):00085                        ORG       IT.ROW+1
002E                  (            scf.d):00086         IT.WND         RMB       1                   Window number (matches device name) ($2E)
002F                  (            scf.d):00087         IT.VAL         RMB       1                   Use defaults on Init (0=no, 1=yes)
0030                  (            scf.d):00088         IT.STY         RMB       1                   Screen type default
0031                  (            scf.d):00089         IT.CPX         RMB       1                   Column start default
0032                  (            scf.d):00090         IT.CPY         RMB       1                   Row start default
0033                  (            scf.d):00091         IT.FGC         RMB       1                   Foreground color default
0034                  (            scf.d):00092         IT.BGC         RMB       1                   Background color default
0035                  (            scf.d):00093         IT.BDC         RMB       1                   Border color default
                      (            scf.d):00094                        ENDC      
                      (            scf.d):00095         
                      (            scf.d):00096         
                      (            scf.d):00097                        PAG       
                      (            scf.d):00098         ********************
                      (            scf.d):00099         * SCF Static Storage
                      (            scf.d):00100         *
                      (            scf.d):00101         * SCF devices must reserve this space for SCF
                      (            scf.d):00102         *
                      (            scf.d):00103                        ORG       V.USER
0006                  (            scf.d):00104         V.TYPE         RMB       1                   Device type or parity
0007                  (            scf.d):00105         V.LINE         RMB       1                   Lines left until end of page
0008                  (            scf.d):00106         V.PAUS         RMB       1                   Immediate Pause request
0009                  (            scf.d):00107         V.DEV2         RMB       2                   Attached device's static
000B                  (            scf.d):00108         V.INTR         RMB       1                   Interrupt char
000C                  (            scf.d):00109         V.QUIT         RMB       1                   Quit char
000D                  (            scf.d):00110         V.PCHR         RMB       1                   Pause char
000E                  (            scf.d):00111         V.ERR          RMB       1                   Accumulated errors
000F                  (            scf.d):00112         V.XON          RMB       1                   X-On char
0010                  (            scf.d):00113         V.XOFF         RMB       1                   X-Off char
0011                  (            scf.d):00114         V.KANJI        RMB       1                   Kanji mode flag
0012                  (            scf.d):00115         V.KBUF         RMB       2                   Kana - Kanji convert routine work address
0014                  (            scf.d):00116         V.MODADR       RMB       2                   Kana - Kanji convert module address
0016                  (            scf.d):00117         V.PDLHd        RMB       2                   Open path descriptor list head pointer
0018                  (            scf.d):00118         V.RSV          RMB       5                   Reserve bytes for future expansion
     001D             (            scf.d):00119         V.SCF          EQU       .                   Total SCF manager static overhead
                      (            scf.d):00120         
                      (            scf.d):00121         
                      (            scf.d):00122                        PAG       
                      (            scf.d):00123         ***********************
                      (            scf.d):00124         * Character Definitions
                      (            scf.d):00125         *
     0000             (            scf.d):00126         C$NULL         SET       0                   Null char
     0001             (            scf.d):00127         C$RPET         SET       $01                 (CTRL-A - SOH) Repeat last input line
     0003             (            scf.d):00128         C$INTR         SET       $03                 (CTRL-C - ETX) Keyboard interrupt
     0004             (            scf.d):00129         C$RPRT         SET       $04                 (CTRL-D - EOT) Reprint current input line
     0005             (            scf.d):00130         C$QUIT         SET       $05                 (CTRL-E - ENQ) Keyboard Abort
     0007             (            scf.d):00131         C$BELL         SET       $07                 (CTRL-G - BEL) Line overflow warning
     0008             (            scf.d):00132         C$BSP          SET       $08                 (CTRL-H - BS ) Back space
     0009             (            scf.d):00133         C$RARR         SET       $09                 Right Arrow
     0005             (            scf.d):00134         C$EL           SET       $05                 Erase Line
     000A             (            scf.d):00135         C$LF           SET       $0A                 Line feed
     000B             (            scf.d):00136         C$HOME         SET       $0B                 Home position Code
     0015             (            scf.d):00137         C$Clsgr        SET       $15                 Graphic screen clear (use FM-11)
     0016             (            scf.d):00138         C$Clsall       SET       $16                 Graphic & character clear (use FM-11)
     000D             (            scf.d):00139         C$CR           SET       $0D                 Carriage return
     000C             (            scf.d):00140         C$FORM         SET       $0C                 (CTRL-L - FF ) Form Feed ... screen clear
     000F             (            scf.d):00141         C$SI           SET       $0F                 Shift IN Code
     000E             (            scf.d):00142         C$SO           SET       $0E                 Shift OUT Code
     0010             (            scf.d):00143         C$DELETE       SET       $10                 Delete char (for SCF enhanced line editing)
     0011             (            scf.d):00144         C$XON          SET       $11                 (CTRL-Q - DC1) Transmit Enable
     0011             (            scf.d):00145         C$INSERT       SET       C$XON               Insert char (for SCF enhanced line editing)
     0013             (            scf.d):00146         C$XOFF         SET       $13                 (CTRL-S - DC3) Transmit Disable
     0013             (            scf.d):00147         C$PLINE        SET       C$XOFF              Print remaining line (for SCF enhanced line editing)
     0017             (            scf.d):00148         C$PAUS         SET       $17                 (CTRL-W - ETB) Pause character
     0018             (            scf.d):00149         C$DEL          SET       $18                 (CTRL-X - CAN) Delete line
     0019             (            scf.d):00150         C$SHRARR       SET       $19                 Shift Right-Arrow
     001B             (            scf.d):00151         C$EOF          SET       $1B                 (CTRL-[ - ESC) END of file
     001C             (            scf.d):00152         C$RGT          SET       $1C                 Cursor right
     001D             (            scf.d):00153         C$LFT          SET       $1D                 Cursor left
     001E             (            scf.d):00154         C$UP           SET       $1E                 Cursor up
     001F             (            scf.d):00155         C$DWN          SET       $1F                 Cursor down
     0020             (            scf.d):00156         C$SPAC         SET       $20                 Space
     002E             (            scf.d):00157         C$PERD         SET       '.
     002C             (            scf.d):00158         C$COMA         SET       ',
                      (            scf.d):00159         
                      (            scf.d):00160         
                      (            scf.d):00161                        PAG       
                      (            scf.d):00162         *********************************************
                      (            scf.d):00163         * Sequential Character Path Descriptor Format
                      (            scf.d):00164         *
                      (            scf.d):00165         * A path descriptor is created for every new path that is open
                      (            scf.d):00166         * via the I$Open system call (processed by IOMan).  Process
                      (            scf.d):00167         * descriptors track state information of a path.
                      (            scf.d):00168         *
                      (            scf.d):00169                        ORG       PD.FST
000A                  (            scf.d):00170         PD.DV2         RMB       2                   Output device table pointer
000C                  (            scf.d):00171         PD.RAW         RMB       1                   Read/Write or ReadLn/WritLn mode
000D                  (            scf.d):00172         PD.MAX         RMB       2                   ReadLn high byte count
000F                  (            scf.d):00173         PD.MIN         RMB       1                   Devices are "mine" if clear
0010                  (            scf.d):00174         PD.STS         RMB       2                   Status routine module addr
0012                  (            scf.d):00175         PD.STM         RMB       2                   Reserved for status routine
                      (            scf.d):00176                        ORG       PD.OPT
0020                  (            scf.d):00177                        RMB       1                   Device type
0021                  (            scf.d):00178         PD.UPC         RMB       1                   Case (0=both, 1=upper only)
0022                  (            scf.d):00179         PD.BSO         RMB       1                   Backspace (0=BSE, 1=BSE,SP,BSE)
0023                  (            scf.d):00180         PD.DLO         RMB       1                   Delete (0=BSE over line, 1=CRLF)
0024                  (            scf.d):00181         PD.EKO         RMB       1                   Echo (0=No Echo)
0025                  (            scf.d):00182         PD.ALF         RMB       1                   Auto linefeed (0=No auto LF)
0026                  (            scf.d):00183         PD.NUL         RMB       1                   End of Line null count
0027                  (            scf.d):00184         PD.PAU         RMB       1                   Page pause (0=No end of page pause)
0028                  (            scf.d):00185         PD.PAG         RMB       1                   Lines per page
0029                  (            scf.d):00186         PD.BSP         RMB       1                   Backspace character
002A                  (            scf.d):00187         PD.DEL         RMB       1                   Delete Line character
002B                  (            scf.d):00188         PD.EOR         RMB       1                   End of Record character (read only)
002C                  (            scf.d):00189         PD.EOF         RMB       1                   End of File character
002D                  (            scf.d):00190         PD.RPR         RMB       1                   Repront Line character
002E                  (            scf.d):00191         PD.DUP         RMB       1                   Dup Last Line character
002F                  (            scf.d):00192         PD.PSC         RMB       1                   Pause character
0030                  (            scf.d):00193         PD.INT         RMB       1                   Keyboard interrupt character (CTRL-C)
0031                  (            scf.d):00194         PD.QUT         RMB       1                   Keyboard quit character (CTRL-E)
0032                  (            scf.d):00195         PD.BSE         RMB       1                   Backspace echo character
0033                  (            scf.d):00196         PD.OVF         RMB       1                   Line overflow character (BELL)
0034                  (            scf.d):00197         PD.PAR         RMB       1                   Parity code
0035                  (            scf.d):00198         PD.BAU         RMB       1                   ACIA baud rate (Color Computer)
0036                  (            scf.d):00199         PD.D2P         RMB       2                   Offset of DEV2 name
0038                  (            scf.d):00200         PD.XON         RMB       1                   ACIA X-ON character
0039                  (            scf.d):00201         PD.XOFF        RMB       1                   ACIA X-OFF character
     001A             (            scf.d):00202         OPTCNT         EQU       .-PD.OPT            Total user settable options
003A                  (            scf.d):00203         PD.ERR         RMB       1                   Most recent I/O error status
003B                  (            scf.d):00204         PD.TBL         RMB       2                   Device table addr (copy)
003D                  (            scf.d):00205         PD.PLP         RMB       2                   Path Descriptor List Pointer
003F                  (            scf.d):00206         PD.PST         RMB       1                   Current path status
                      (            scf.d):00207         
                      (            scf.d):00208         
                      (            scf.d):00209         * PD.PST values Path Descriptor Status byte
                      (            scf.d):00210         *
     0001             (            scf.d):00211         PST.DCD        EQU       %00000001           Set if DCD is lost on Serial port
                      (            scf.d):00212         
                      (            scf.d):00213         
                      (            scf.d):00214         * PD.PAR definitions
                      (            scf.d):00215         *
                      (            scf.d):00216         * Parity
     0000             (            scf.d):00217         PARNONE        EQU       %00000000
     0020             (            scf.d):00218         PARODD         EQU       %00100000
     0060             (            scf.d):00219         PAREVEN        EQU       %01100000
     00A0             (            scf.d):00220         PARMARK        EQU       %10100000
     00E0             (            scf.d):00221         PARSPACE       EQU       %11100000
                      (            scf.d):00222         
                      (            scf.d):00223         * PD.BAU definitions
                      (            scf.d):00224         *
                      (            scf.d):00225         * Baud rate
     0000             (            scf.d):00226         B110           EQU       %00000000
     0001             (            scf.d):00227         B300           EQU       %00000001
     0002             (            scf.d):00228         B600           EQU       %00000010
     0003             (            scf.d):00229         B1200          EQU       %00000011
     0004             (            scf.d):00230         B2400          EQU       %00000100
     0005             (            scf.d):00231         B4800          EQU       %00000101
     0006             (            scf.d):00232         B9600          EQU       %00000110
     0007             (            scf.d):00233         B19200         EQU       %00000111
     0008             (            scf.d):00234         B38400         EQU       %00001000
     0009             (            scf.d):00235         B57600         EQU       %00001001
     000A             (            scf.d):00236         B115200        EQU       %00001010
                      (            scf.d):00237         * Word size
     0000             (            scf.d):00238         WORD8          EQU       %00000000
     0020             (            scf.d):00239         WORD7          EQU       %00100000
                      (            scf.d):00240         * Stop bits
     0000             (            scf.d):00241         STOP1          EQU       %00000000
     0010             (            scf.d):00242         STOP2          EQU       %00010000
                      (            scf.d):00243         
                      (            scf.d):00244                        ENDC      
                      (         sub6.asm):00018                   endc
                      (         sub6.asm):00019         
                      (         sub6.asm):00020         * I/O path definitions
     0000             (         sub6.asm):00021         StdIn     equ   0
     0001             (         sub6.asm):00022         StdOut    equ   1
     0002             (         sub6.asm):00023         StdErr    equ   2
                      (         sub6.asm):00024         
                      (         sub6.asm):00025         
                      (         sub6.asm):00026         * class X external label equates
     02A4             (         sub6.asm):00027         X02A4     equ $02A4
     02A5             (         sub6.asm):00028         X02A5     equ $02A5
     1D3F             (         sub6.asm):00029         X1D3F     equ $1D3F
     1D40             (         sub6.asm):00030         X1D40     equ $1D40
     1D41             (         sub6.asm):00031         X1D41     equ $1D41
     1D42             (         sub6.asm):00032         X1D42     equ $1D42
     1D43             (         sub6.asm):00033         X1D43     equ $1D43
     1D6B             (         sub6.asm):00034         X1D6B     equ $1D6B
     1D88             (         sub6.asm):00035         X1D88     equ $1D88
     1D89             (         sub6.asm):00036         X1D89     equ $1D89
     1D8B             (         sub6.asm):00037         X1D8B     equ $1D8B
     1D8D             (         sub6.asm):00038         X1D8D     equ $1D8D
     1D8F             (         sub6.asm):00039         X1D8F     equ $1D8F
     1D90             (         sub6.asm):00040         X1D90     equ $1D90
     1D91             (         sub6.asm):00041         X1D91     equ $1D91
     1D92             (         sub6.asm):00042         X1D92     equ $1D92
     1D93             (         sub6.asm):00043         X1D93     equ $1D93
     1D94             (         sub6.asm):00044         X1D94     equ $1D94
     1D95             (         sub6.asm):00045         X1D95     equ $1D95
     1D96             (         sub6.asm):00046         X1D96     equ $1D96
     1DA3             (         sub6.asm):00047         X1DA3     equ $1DA3
     1DA5             (         sub6.asm):00048         X1DA5     equ $1DA5
     1DA7             (         sub6.asm):00049         X1DA7     equ $1DA7
     1DA8             (         sub6.asm):00050         X1DA8     equ $1DA8
     1DA9             (         sub6.asm):00051         X1DA9     equ $1DA9
     1DAB             (         sub6.asm):00052         X1DAB     equ $1DAB
     1DAD             (         sub6.asm):00053         X1DAD     equ $1DAD
     1DAF             (         sub6.asm):00054         X1DAF     equ $1DAF
     1DB1             (         sub6.asm):00055         X1DB1     equ $1DB1
     1DB3             (         sub6.asm):00056         X1DB3     equ $1DB3
     1DB5             (         sub6.asm):00057         X1DB5     equ $1DB5
     1DB7             (         sub6.asm):00058         X1DB7     equ $1DB7
     1DB9             (         sub6.asm):00059         X1DB9     equ $1DB9
     1DDA             (         sub6.asm):00060         X1DDA     equ $1DDA
     1DDB             (         sub6.asm):00061         X1DDB     equ $1DDB
     1DDC             (         sub6.asm):00062         X1DDC     equ $1DDC
     1DDD             (         sub6.asm):00063         X1DDD     equ $1DDD
     1DDE             (         sub6.asm):00064         X1DDE     equ $1DDE
     1DEA             (         sub6.asm):00065         X1DEA     equ $1DEA
     1DEB             (         sub6.asm):00066         X1DEB     equ $1DEB
     1DED             (         sub6.asm):00067         X1DED     equ $1DED
     1DEF             (         sub6.asm):00068         X1DEF     equ $1DEF
     1DF0             (         sub6.asm):00069         X1DF0     equ $1DF0
     1DF1             (         sub6.asm):00070         X1DF1     equ $1DF1
     1DF2             (         sub6.asm):00071         X1DF2     equ $1DF2
     1DF3             (         sub6.asm):00072         X1DF3     equ $1DF3
     1DF4             (         sub6.asm):00073         X1DF4     equ $1DF4
     1DF5             (         sub6.asm):00074         X1DF5     equ $1DF5
     1E02             (         sub6.asm):00075         X1E02     equ $1E02
     1E04             (         sub6.asm):00076         X1E04     equ $1E04
     1E05             (         sub6.asm):00077         X1E05     equ $1E05
     1E06             (         sub6.asm):00078         X1E06     equ $1E06
     1E08             (         sub6.asm):00079         X1E08     equ $1E08
     1E09             (         sub6.asm):00080         X1E09     equ $1E09
     1E0B             (         sub6.asm):00081         X1E0B     equ $1E0B
     1E0C             (         sub6.asm):00082         X1E0C     equ $1E0C
     4265             (         sub6.asm):00083         X4265     equ $4265   Scratch area
     4266             (         sub6.asm):00084         X4266     equ $4266
     4C75             (         sub6.asm):00085         X4C75     equ $4C75
     4CEF             (         sub6.asm):00086         X4CEF     equ $4CEF
     4CF0             (         sub6.asm):00087         X4CF0     equ $4CF0
     4CF1             (         sub6.asm):00088         X4CF1     equ $4CF1
     4CF2             (         sub6.asm):00089         X4CF2     equ $4CF2
     4CF3             (         sub6.asm):00090         X4CF3     equ $4CF3
     4CF7             (         sub6.asm):00091         X4CF7     equ $4CF7
     4CF9             (         sub6.asm):00092         X4CF9     equ $4CF9
     4CFF             (         sub6.asm):00093         X4CFF     equ $4CFF
     4D00             (         sub6.asm):00094         X4D00     equ $4D00
     4D01             (         sub6.asm):00095         X4D01     equ $4D01
     4D02             (         sub6.asm):00096         X4D02     equ $4D02
                      (         sub6.asm):00097         
                      (         sub6.asm):00098         
                      (         sub6.asm):00099         
     0021             (         sub6.asm):00100         tylg      set   SbRtn+Objct
     0081             (         sub6.asm):00101         atrv      set   ReEnt+rev
     0001             (         sub6.asm):00102         rev       set   $01
                      (         sub6.asm):00103         *edition  set  $01
                      (         sub6.asm):00104         
0000 87CD0BED000D2181 (         sub6.asm):00105                   mod   eom,name,tylg,atrv,start,size
     FE00110000
                      (         sub6.asm):00106         
                      (         sub6.asm):00107         * OS9 data area definitions
                      (         sub6.asm):00108         
     0000             (         sub6.asm):00109         size      equ .
                      (         sub6.asm):00110         
000D 737562B6         (         sub6.asm):00111         name      fcs "sub6"
                      (         sub6.asm):00112         *         fcb  edition       not included in original code
                      (         sub6.asm):00113         
                      (         sub6.asm):00114         *X7228
0011 3476             (         sub6.asm):00115         start     pshs  a,b,x,y,u
0013 FC1DA5           (         sub6.asm):00116         loopsb1   ldd   X1DA5
0016 10830138         (         sub6.asm):00117                   cmpd  #$0138
001A 2407             (         sub6.asm):00118                   bhs   Ex_sub1
001C C620             (         sub6.asm):00119                   ldb   #$20
001E 17023F           (         sub6.asm):00120                   lbsr  L0260
0021 20F0             (         sub6.asm):00121                   bra   loopsb1
0023 35F6             (         sub6.asm):00122         Ex_sub1   puls  a,b,x,y,u,pc
                      (         sub6.asm):00123         
                      (         sub6.asm):00124         
                      (         sub6.asm):00125         *X723C
                      (         sub6.asm):00126         * nothing passed by caller
                      (         sub6.asm):00127         * uses a.b.u and s
                      (         sub6.asm):00128         * restores them on exit
                      (         sub6.asm):00129         
0025 3476             (         sub6.asm):00130         L0025     pshs  a,b,x,y,u
0027 7F1D6B           (         sub6.asm):00131                   clr   X1D6B        clear a flag
                      (         sub6.asm):00132         
002A FC1D8B           (         sub6.asm):00133                   ldd   X1D8B        get a base address
002D C32B20           (         sub6.asm):00134                   addd  #$2B20       add an offset to it
0030 FD1DEB           (         sub6.asm):00135                   std   X1DEB        from address
                      (         sub6.asm):00136         
0033 8302D0           (         sub6.asm):00137                   subd  #$02D0       subtract from base+offset
0036 FD1DED           (         sub6.asm):00138                   std   X1DED        stow that as to address
                      (         sub6.asm):00139         
0039 8609             (         sub6.asm):00140                   lda   #$09         set up loop counter
003B B71DEA           (         sub6.asm):00141                   sta   X1DEA        store the loop counter
                      (         sub6.asm):00142         
003E 1A50             (         sub6.asm):00143                   orcc  #IntMasks    mask interrupts          $50
0040 10FF1DDA         (         sub6.asm):00144                   sts   X1DDA        save the current stack pointer
                      (         sub6.asm):00145         
0044 FE1DEB           (         sub6.asm):00146                   ldu   X1DEB        set the from address
0047 10FE1DED         (         sub6.asm):00147                   lds   X1DED        set the to address
                      (         sub6.asm):00148         
004B 335A             (         sub6.asm):00149         L004B     leau  -6,u
004D 3736             (         sub6.asm):00150                   pulu  d,x,y
004F 3354             (         sub6.asm):00151                   leau  -12,u
0051 3436             (         sub6.asm):00152                   pshs  d,x,y
                      (         sub6.asm):00153         
0053 3736             (         sub6.asm):00154                   pulu  d,x,y
0055 3354             (         sub6.asm):00155                   leau  -12,u
0057 3436             (         sub6.asm):00156                   pshs  d,x,y
                      (         sub6.asm):00157         
0059 3736             (         sub6.asm):00158                   pulu  d,x,y
005B 3354             (         sub6.asm):00159                   leau  -12,u
005D 3436             (         sub6.asm):00160                   pshs  d,x,y
                      (         sub6.asm):00161         
005F 3736             (         sub6.asm):00162                   pulu  d,x,y
0061 3354             (         sub6.asm):00163                   leau  -12,u
0063 3436             (         sub6.asm):00164                   pshs  d,x,y
                      (         sub6.asm):00165         
0065 3736             (         sub6.asm):00166                   pulu  d,x,y
0067 3354             (         sub6.asm):00167                   leau  -12,u
0069 3436             (         sub6.asm):00168                   pshs  d,x,y
                      (         sub6.asm):00169         
006B 3736             (         sub6.asm):00170                   pulu  d,x,y
006D 3354             (         sub6.asm):00171                   leau  -12,u
006F 3436             (         sub6.asm):00172                   pshs  d,x,y
                      (         sub6.asm):00173         
0071 3736             (         sub6.asm):00174                   pulu  d,x,y
0073 3354             (         sub6.asm):00175                   leau  -12,u
0075 3436             (         sub6.asm):00176                   pshs  d,x,y
                      (         sub6.asm):00177         
0077 3736             (         sub6.asm):00178                   pulu  d,x,y
0079 3354             (         sub6.asm):00179                   leau  -12,u
007B 3436             (         sub6.asm):00180                   pshs  d,x,y
                      (         sub6.asm):00181         
007D 3736             (         sub6.asm):00182                   pulu  d,x,y
007F 3354             (         sub6.asm):00183                   leau  -12,u
0081 3436             (         sub6.asm):00184                   pshs  d,x,y
                      (         sub6.asm):00185         
0083 3736             (         sub6.asm):00186                   pulu  d,x,y
0085 3357             (         sub6.asm):00187                   leau  -9,u
0087 3436             (         sub6.asm):00188                   pshs  d,x,y
                      (         sub6.asm):00189         
0089 3712             (         sub6.asm):00190                   pulu  a,x
008B 3412             (         sub6.asm):00191                   pshs  a,x
                      (         sub6.asm):00192         
008D 33C8EC           (         sub6.asm):00193                   leau  -20,u
0090 32E8EF           (         sub6.asm):00194                   leas  -17,s
                      (         sub6.asm):00195         
0093 7A1DEA           (         sub6.asm):00196                   dec   X1DEA        decrement the loop counter
0096 26B3             (         sub6.asm):00197                   bne   L004B        gone 9 times ? nope go again
                      (         sub6.asm):00198         
0098 10FE1DDA         (         sub6.asm):00199                   lds   X1DDA        restore the stack pointer
009C 1CAF             (         sub6.asm):00200                   andcc #^IntMasks   un mask interrupts
                      (         sub6.asm):00201         
009E CC0048           (         sub6.asm):00202                   ldd   #$0048       set some values
00A1 FD1DA5           (         sub6.asm):00203                   std   X1DA5
                      (         sub6.asm):00204         
00A4 CC0082           (         sub6.asm):00205                   ldd   #$0082
00A7 FD1DA7           (         sub6.asm):00206                   std   X1DA7
00AA 35F6             (         sub6.asm):00207                   puls  a,b,x,y,u,pc and return
                      (         sub6.asm):00208         
                      (         sub6.asm):00209         
                      (         sub6.asm):00210         *X72C3
00AC 3416             (         sub6.asm):00211         N00AC     pshs  a,b,x
00AE 17FF74           (         sub6.asm):00212                   lbsr  L0025
                      (         sub6.asm):00213         
00B1 CC0048           (         sub6.asm):00214                   ldd   #$0048
00B4 FD1DA5           (         sub6.asm):00215                   std   X1DA5
                      (         sub6.asm):00216         
00B7 CC0082           (         sub6.asm):00217                   ldd   #$0082
00BA FD1DA7           (         sub6.asm):00218                   std   X1DA7
                      (         sub6.asm):00219         
00BD 4F               (         sub6.asm):00220                   clra
00BE AE64             (         sub6.asm):00221                   ldx   4,s
00C0 E680             (         sub6.asm):00222         L00C0     ldb   ,x+
00C2 2706             (         sub6.asm):00223                   beq   L00CA
                      (         sub6.asm):00224         
00C4 170199           (         sub6.asm):00225                   lbsr  L0260
                      (         sub6.asm):00226         
00C7 4C               (         sub6.asm):00227                   inca
00C8 20F6             (         sub6.asm):00228                   bra   L00C0
                      (         sub6.asm):00229         
00CA 811E             (         sub6.asm):00230         L00CA     cmpa  #$1E
00CC 2C0A             (         sub6.asm):00231                   bge   L00D8
                      (         sub6.asm):00232         
00CE C620             (         sub6.asm):00233         L00CE     ldb   #$20
00D0 17018D           (         sub6.asm):00234                   lbsr  L0260
00D3 4C               (         sub6.asm):00235                   inca
00D4 811E             (         sub6.asm):00236                   cmpa  #$1E
00D6 2DF6             (         sub6.asm):00237                   blt   L00CE
                      (         sub6.asm):00238         
00D8 AF64             (         sub6.asm):00239         L00D8     stx   4,s
00DA 3596             (         sub6.asm):00240                   puls  a,b,x,pc
                      (         sub6.asm):00241         
                      (         sub6.asm):00242         
                      (         sub6.asm):00243         *X72F3
00DC 3414             (         sub6.asm):00244         N00DC     pshs  b,x
00DE AE63             (         sub6.asm):00245                   ldx   3,s
00E0 E680             (         sub6.asm):00246         L00E0     ldb   ,x+
00E2 2705             (         sub6.asm):00247                   beq   L00E9
00E4 170179           (         sub6.asm):00248                   lbsr  L0260
00E7 20F7             (         sub6.asm):00249                   bra   L00E0
00E9 AF63             (         sub6.asm):00250         L00E9     stx   3,s
00EB 3594             (         sub6.asm):00251                   puls  b,x,pc
                      (         sub6.asm):00252         
                      (         sub6.asm):00253         
                      (         sub6.asm):00254         *X7304
                      (         sub6.asm):00255         * argument passed in d converted to digit(s)
                      (         sub6.asm):00256         * calls L0260 for further handling
00ED                  (         sub6.asm):00257         hex_to_digits
00ED 3476             (         sub6.asm):00258         L00ED     pshs  a,b,x,y,u
00EF 7F4265           (         sub6.asm):00259                   clr   X4265        clear scratch for digit counter
00F2 1083000A         (         sub6.asm):00260                   cmpd  #$000A       compare to 10
00F6 2537             (         sub6.asm):00261                   blo   ZeroBase     add '0 to and call screen writer
                      (         sub6.asm):00262         
00F8 308D003A         (         sub6.asm):00263                   leax  >DecimalTbl,pcr load table base
00FC 3002             (         sub6.asm):00264         Findplc   leax  2,x          index onto 10K entry (why they didn't load a base and work from there??)
00FE 10A384           (         sub6.asm):00265                   cmpd  ,x           compare input to table value
0101 25F9             (         sub6.asm):00266                   blo   Findplc      less than table value move down one place
                      (         sub6.asm):00267         
0103 7C4265           (         sub6.asm):00268         Digitcnt  inc   X4265        bump the digit counter
0106 A384             (         sub6.asm):00269                   subd  ,x           subtract x from d and store result in d
0108 10A384           (         sub6.asm):00270                   cmpd  ,x           compare that value to current x
010B 24F6             (         sub6.asm):00271                   bhs   Digitcnt     if d is still greater or equal x go again
                      (         sub6.asm):00272         
010D FD4266           (         sub6.asm):00273         Placedone std   X4266        store remaining value
0110 F64265           (         sub6.asm):00274                   ldb   X4265        get the digit counter value
0113 CB30             (         sub6.asm):00275                   addb  #'0          and an ascii zero $30
0115 170148           (         sub6.asm):00276                   lbsr  L0260        process it
                      (         sub6.asm):00277         
0118 7F4265           (         sub6.asm):00278                   clr   X4265        clear scratch for digit counter
011B 3002             (         sub6.asm):00279                   leax  2,x          index next lower value
011D CC0000           (         sub6.asm):00280                   ldd   #$0000       check if we are at the end of the table
0120 10A384           (         sub6.asm):00281                   cmpd  ,x
0123 270F             (         sub6.asm):00282                   beq   Ex_h2d       if so exit routine
0125 FC4266           (         sub6.asm):00283                   ldd   X4266        otherwise get the remaining value
0128 10A384           (         sub6.asm):00284                   cmpd  ,x           compare to current x
012B 25E0             (         sub6.asm):00285                   blo   Placedone    less than pocess and move to next place down
012D 20D4             (         sub6.asm):00286                   bra   Digitcnt     greater or equal go get the count
                      (         sub6.asm):00287         
012F CB30             (         sub6.asm):00288         ZeroBase  addb  #'0          add an ascci zero $30
0131 17012C           (         sub6.asm):00289                   lbsr  L0260        process it
0134 35F6             (         sub6.asm):00290         Ex_h2d    puls  a,b,x,y,u,pc
                      (         sub6.asm):00291         
                      (         sub6.asm):00292         
0136                  (         sub6.asm):00293         DecimalTbl
0136 0000             (         sub6.asm):00294         L0136     fdb $0000        0
0138 2710             (         sub6.asm):00295                   fdb $2710    10000
013A 03E8             (         sub6.asm):00296                   fdb $03E8     1000
013C 0064             (         sub6.asm):00297                   fdb $0064      100
013E 000A             (         sub6.asm):00298                   fdb $000A       10
0140 0001             (         sub6.asm):00299                   fdb $0001        1
0142 0000             (         sub6.asm):00300                   fdb $0000        0
                      (         sub6.asm):00301         
                      (         sub6.asm):00302         *X735B
                      (         sub6.asm):00303         * Change Palette
                      (         sub6.asm):00304         * PRN,CTN are passed by caller in d
0144 3430             (         sub6.asm):00305         N0144     pshs  x,y
0146 8E4265           (         sub6.asm):00306                   ldx   #$4265       scratch area
0149 108E1B31         (         sub6.asm):00307                   ldy   #$1B31       palette change code
014D 10AF84           (         sub6.asm):00308                   sty   ,x           save it at scratch
0150 ED02             (         sub6.asm):00309                   std   2,x          save prn,ctn at second word
0152 8601             (         sub6.asm):00310                   lda   #StdOut      set path to screen
0154 108E0004         (         sub6.asm):00311                   ldy   #4           write four bytes
0158 103F8A           (         sub6.asm):00312                   os9   I$Write      write it
015B 35B0             (         sub6.asm):00313                   puls  x,y,pc
                      (         sub6.asm):00314         
                      (         sub6.asm):00315         
                      (         sub6.asm):00316         *X7374
015D 3436             (         sub6.asm):00317         L015D     pshs  a,b,x,y
015F B61D92           (         sub6.asm):00318                   lda   X1D92
0162 C650             (         sub6.asm):00319                   ldb   #$50
0164 3D               (         sub6.asm):00320                   mul
0165 10BE1D8B         (         sub6.asm):00321                   ldy   X1D8B
0169 31AB             (         sub6.asm):00322                   leay  d,y
016B FC1D8F           (         sub6.asm):00323                   ldd   X1D8F
016E 44               (         sub6.asm):00324                   lsra
016F 56               (         sub6.asm):00325                   rorb
0170 44               (         sub6.asm):00326                   lsra
0171 56               (         sub6.asm):00327                   rorb
0172 31AB             (         sub6.asm):00328                   leay  d,y
0174 308D0A5E         (         sub6.asm):00329                   leax  ByteTbl7,pcr
0178 F61D90           (         sub6.asm):00330                   ldb   X1D90
017B C403             (         sub6.asm):00331                   andb  #3
017D A6A4             (         sub6.asm):00332                   lda   ,y
017F A485             (         sub6.asm):00333                   anda  b,x
0181 3406             (         sub6.asm):00334                   pshs  a,b
0183 F61D88           (         sub6.asm):00335                   ldb   X1D88
0186 308D0A44         (         sub6.asm):00336                   leax  ByteTbl5,pcr
018A A685             (         sub6.asm):00337                   lda   b,x
018C A8A4             (         sub6.asm):00338                   eora  ,y
018E E661             (         sub6.asm):00339                   ldb   1,s
0190 308D0A3E         (         sub6.asm):00340                   leax  ByteTbl6,pcr
0194 A485             (         sub6.asm):00341                   anda  b,x
0196 AAE1             (         sub6.asm):00342                   ora   ,s++
0198 A7A4             (         sub6.asm):00343                   sta   ,y
019A 35B6             (         sub6.asm):00344                   puls  a,b,x,y,pc
                      (         sub6.asm):00345         
                      (         sub6.asm):00346         
                      (         sub6.asm):00347         *X73B3
019C 3416             (         sub6.asm):00348         L019C     pshs  a,b,x
019E FC1D8F           (         sub6.asm):00349                   ldd   X1D8F
01A1 10B31D93         (         sub6.asm):00350                   cmpd  X1D93
01A5 2315             (         sub6.asm):00351                   bls   L01BC
                      (         sub6.asm):00352         
01A7 BE1D93           (         sub6.asm):00353                   ldx   X1D93
01AA FD1D93           (         sub6.asm):00354                   std   X1D93
                      (         sub6.asm):00355         
01AD BF1D8F           (         sub6.asm):00356                   stx   X1D8F
01B0 FC1D91           (         sub6.asm):00357                   ldd   X1D91
                      (         sub6.asm):00358         
01B3 BE1D95           (         sub6.asm):00359                   ldx   X1D95
01B6 FD1D95           (         sub6.asm):00360                   std   X1D95
                      (         sub6.asm):00361         
01B9 BF1D91           (         sub6.asm):00362                   stx   X1D91
01BC FC1D93           (         sub6.asm):00363         L01BC     ldd   X1D93
01BF B31D8F           (         sub6.asm):00364                   subd  X1D8F
01C2 FD1DB1           (         sub6.asm):00365                   std   X1DB1
                      (         sub6.asm):00366         
01C5 8E0001           (         sub6.asm):00367                   ldx   #1
01C8 FC1D95           (         sub6.asm):00368                   ldd   X1D95
01CB B31D91           (         sub6.asm):00369                   subd  X1D91
01CE 2407             (         sub6.asm):00370                   bcc   L01D7
01D0 301E             (         sub6.asm):00371                   leax  -2,x
01D2 43               (         sub6.asm):00372                   coma
01D3 53               (         sub6.asm):00373                   comb
01D4 C30001           (         sub6.asm):00374                   addd  #1
01D7 BF1DB5           (         sub6.asm):00375         L01D7     stx   X1DB5
01DA FD1DB3           (         sub6.asm):00376                   std   X1DB3
01DD 10B31DB1         (         sub6.asm):00377                   cmpd  X1DB1
01E1 102E003E         (         sub6.asm):00378                   lbgt  L0223
                      (         sub6.asm):00379         
01E5 FC1DB1           (         sub6.asm):00380                   ldd   X1DB1
01E8 44               (         sub6.asm):00381                   lsra
01E9 56               (         sub6.asm):00382                   rorb
01EA FD1DB7           (         sub6.asm):00383                   std   X1DB7
                      (         sub6.asm):00384         
01ED 17FF6D           (         sub6.asm):00385         L01ED     lbsr  L015D
                      (         sub6.asm):00386         
01F0 BE1D8F           (         sub6.asm):00387                   ldx   X1D8F
01F3 BC1D93           (         sub6.asm):00388                   cmpx  X1D93
01F6 10270064         (         sub6.asm):00389                   lbeq  L025E
                      (         sub6.asm):00390         
01FA BE1D8F           (         sub6.asm):00391                   ldx   X1D8F
01FD 3001             (         sub6.asm):00392                   leax  1,x
01FF BF1D8F           (         sub6.asm):00393                   stx   X1D8F
                      (         sub6.asm):00394         
0202 FC1DB7           (         sub6.asm):00395                   ldd   X1DB7
0205 F31DB3           (         sub6.asm):00396                   addd  X1DB3
0208 FD1DB7           (         sub6.asm):00397                   std   X1DB7
020B 10B31DB1         (         sub6.asm):00398                   cmpd  X1DB1
020F 2DDC             (         sub6.asm):00399                   blt   L01ED
0211 B31DB1           (         sub6.asm):00400                   subd  X1DB1
0214 FD1DB7           (         sub6.asm):00401                   std   X1DB7
                      (         sub6.asm):00402         
0217 FC1D91           (         sub6.asm):00403                   ldd   X1D91
021A F31DB5           (         sub6.asm):00404                   addd  X1DB5
021D FD1D91           (         sub6.asm):00405                   std   X1D91
                      (         sub6.asm):00406         
0220 16FFCA           (         sub6.asm):00407                   lbra  L01ED
                      (         sub6.asm):00408         
0223 44               (         sub6.asm):00409         L0223     lsra
0224 56               (         sub6.asm):00410                   rorb
0225 FD1DB7           (         sub6.asm):00411                   std   X1DB7
0228 17FF32           (         sub6.asm):00412         L0228     lbsr  L015D
022B BE1D91           (         sub6.asm):00413                   ldx   X1D91
022E BC1D95           (         sub6.asm):00414                   cmpx  X1D95
0231 10270029         (         sub6.asm):00415                   lbeq  L025E
0235 FC1D91           (         sub6.asm):00416                   ldd   X1D91
0238 F31DB5           (         sub6.asm):00417                   addd  X1DB5
023B FD1D91           (         sub6.asm):00418                   std   X1D91
023E FC1DB7           (         sub6.asm):00419                   ldd   X1DB7
0241 F31DB1           (         sub6.asm):00420                   addd  X1DB1
0244 FD1DB7           (         sub6.asm):00421                   std   X1DB7
0247 10B31DB3         (         sub6.asm):00422                   cmpd  X1DB3
024B 2DDB             (         sub6.asm):00423                   blt   L0228
024D B31DB3           (         sub6.asm):00424                   subd  X1DB3
0250 FD1DB7           (         sub6.asm):00425                   std   X1DB7
0253 BE1D8F           (         sub6.asm):00426                   ldx   X1D8F
0256 3001             (         sub6.asm):00427                   leax  1,x
0258 BF1D8F           (         sub6.asm):00428                   stx   X1D8F
025B 16FFCA           (         sub6.asm):00429                   lbra  L0228
025E 3596             (         sub6.asm):00430         L025E     puls  a,b,x,pc
                      (         sub6.asm):00431         
                      (         sub6.asm):00432         
                      (         sub6.asm):00433         *X7477
                      (         sub6.asm):00434         * receives data in b from caller
                      (         sub6.asm):00435         * validates value is between $20 and $5F ascii
                      (         sub6.asm):00436         
0260 3432             (         sub6.asm):00437         L0260     pshs  a,x,y
0262 C01F             (         sub6.asm):00438                   subb  #C$SPAC-1    subtract 1 less than a space (unit sep) $1F
0264 2345             (         sub6.asm):00439                   bls   L02AB        less than or equal time to go
                      (         sub6.asm):00440         
0266 C160             (         sub6.asm):00441                   cmpb  #'_+1        compare value now to underscore +1 $60
0268 2C41             (         sub6.asm):00442                   bge   L02AB        greater or equal were done it was >=$7F to start with
                      (         sub6.asm):00443         
026A 8608             (         sub6.asm):00444                   lda   #$08
026C 3D               (         sub6.asm):00445                   mul                mul b value times 8 and stow in d
026D 8E4D3F           (         sub6.asm):00446                   ldx   #$4D3F       load a base address
0270 308B             (         sub6.asm):00447                   leax  d,x          using our calculated offset adjust x
                      (         sub6.asm):00448         
0272 B61DA8           (         sub6.asm):00449                   lda   X1DA8        get the value
0275 C650             (         sub6.asm):00450                   ldb   #$50
0277 3D               (         sub6.asm):00451                   mul                multiply it by 80 and stow in d
0278 10BE1D8B         (         sub6.asm):00452                   ldy   X1D8B        load a base
027C 31AB             (         sub6.asm):00453                   leay  d,y          using our calc'ed offset adjust y
                      (         sub6.asm):00454         
027E FC1DA5           (         sub6.asm):00455                   ldd   X1DA5        get the value
0281 44               (         sub6.asm):00456                   lsra               divide d by 2
0282 56               (         sub6.asm):00457                   rorb
0283 44               (         sub6.asm):00458                   lsra               and again by 2 for a total of 4
0284 56               (         sub6.asm):00459                   rorb
0285 31AB             (         sub6.asm):00460                   leay  d,y          using our calc'ed offset adjust y
                      (         sub6.asm):00461         
0287 C608             (         sub6.asm):00462                   ldb   #$08
0289 338D094D         (         sub6.asm):00463                   leau  ByteTbl8,pcr
028D A680             (         sub6.asm):00464         L028D     lda   ,x+
028F 3406             (         sub6.asm):00465                   pshs  d
0291 44               (         sub6.asm):00466                   lsra
0292 44               (         sub6.asm):00467                   lsra
0293 44               (         sub6.asm):00468                   lsra
0294 44               (         sub6.asm):00469                   lsra
0295 E6C6             (         sub6.asm):00470                   ldb   a,u
0297 E7A0             (         sub6.asm):00471                   stb   ,y+
0299 A6E4             (         sub6.asm):00472                   lda   ,s
029B 840F             (         sub6.asm):00473                   anda  #$0F
029D E6C6             (         sub6.asm):00474                   ldb   a,u
029F E7A4             (         sub6.asm):00475                   stb   ,y
02A1 31A84F           (         sub6.asm):00476                   leay  79,y
02A4 3506             (         sub6.asm):00477                   puls  a,b
02A6 5A               (         sub6.asm):00478                   decb
02A7 1026FFE2         (         sub6.asm):00479                   lbne  L028D
                      (         sub6.asm):00480         
02AB BE1DA5           (         sub6.asm):00481         L02AB     ldx   X1DA5
02AE 3008             (         sub6.asm):00482                   leax  8,x
02B0 BF1DA5           (         sub6.asm):00483                   stx   X1DA5
02B3 35B2             (         sub6.asm):00484                   puls  a,x,y,pc
                      (         sub6.asm):00485         
                      (         sub6.asm):00486         
                      (         sub6.asm):00487         *X74CC
02B5 3406             (         sub6.asm):00488         N02B5     pshs  a,b
02B7 E680             (         sub6.asm):00489         L02B7     ldb   ,x+
02B9 2705             (         sub6.asm):00490                   beq   L02C0
02BB 17FFA2           (         sub6.asm):00491                   lbsr  L0260
02BE 20F7             (         sub6.asm):00492                   bra   L02B7
02C0 3586             (         sub6.asm):00493         L02C0     puls  a,b,pc
                      (         sub6.asm):00494         
                      (         sub6.asm):00495         
                      (         sub6.asm):00496         *X74D9
02C2 3420             (         sub6.asm):00497         N02C2     pshs  y
02C4 7F1E0B           (         sub6.asm):00498                   clr   X1E0B
02C7 7F1E0C           (         sub6.asm):00499                   clr   X1E0C
02CA EC21             (         sub6.asm):00500                   ldd   1,y
02CC A341             (         sub6.asm):00501                   subd  1,u
02CE FD1E06           (         sub6.asm):00502                   std   X1E06
02D1 A6A4             (         sub6.asm):00503                   lda   ,y
02D3 A2C4             (         sub6.asm):00504                   sbca  ,u
02D5 B71E05           (         sub6.asm):00505                   sta   X1E05
02D8 2414             (         sub6.asm):00506                   bcc   L02EE
02DA 7C1E0B           (         sub6.asm):00507                   inc   X1E0B
02DD CC0000           (         sub6.asm):00508                   ldd   #0
02E0 B31E06           (         sub6.asm):00509                   subd  X1E06
02E3 FD1E06           (         sub6.asm):00510                   std   X1E06
02E6 8600             (         sub6.asm):00511                   lda   #0
02E8 B21E05           (         sub6.asm):00512                   sbca  X1E05
02EB B71E05           (         sub6.asm):00513                   sta   X1E05
02EE EC24             (         sub6.asm):00514         L02EE     ldd   4,y
02F0 A344             (         sub6.asm):00515                   subd  4,u
02F2 FD1E09           (         sub6.asm):00516                   std   X1E09
02F5 A623             (         sub6.asm):00517                   lda   3,y
02F7 A243             (         sub6.asm):00518                   sbca  3,u
02F9 B71E08           (         sub6.asm):00519                   sta   X1E08
02FC 2414             (         sub6.asm):00520                   bcc   L0312
02FE 7C1E0C           (         sub6.asm):00521                   inc   X1E0C
0301 CC0000           (         sub6.asm):00522                   ldd   #0
0304 B31E09           (         sub6.asm):00523                   subd  X1E09
0307 FD1E09           (         sub6.asm):00524                   std   X1E09
030A 8600             (         sub6.asm):00525                   lda   #0
030C B21E08           (         sub6.asm):00526                   sbca  X1E08
030F B71E08           (         sub6.asm):00527                   sta   X1E08
0312 108E1E05         (         sub6.asm):00528         L0312     ldy   #$1E05
0316 CE1E08           (         sub6.asm):00529                   ldu   #$1E08
0319 A6A4             (         sub6.asm):00530                   lda   ,y
031B A1C4             (         sub6.asm):00531                   cmpa  ,u
031D 220B             (         sub6.asm):00532                   bhi   L032A
031F 2507             (         sub6.asm):00533                   bcs   L0328
0321 EC21             (         sub6.asm):00534                   ldd   1,y
0323 10A341           (         sub6.asm):00535                   cmpd  1,u
0326 2202             (         sub6.asm):00536                   bhi   L032A
0328 1E32             (         sub6.asm):00537         L0328     exg   u,y
032A A6C4             (         sub6.asm):00538         L032A     lda   ,u
032C 44               (         sub6.asm):00539                   lsra
032D B71DDA           (         sub6.asm):00540                   sta   X1DDA
0330 EC41             (         sub6.asm):00541                   ldd   1,u
0332 46               (         sub6.asm):00542                   rora
0333 56               (         sub6.asm):00543                   rorb
0334 E321             (         sub6.asm):00544                   addd  1,y
0336 1F03             (         sub6.asm):00545                   tfr   d,u
0338 B61DDA           (         sub6.asm):00546                   lda   X1DDA
033B A9A4             (         sub6.asm):00547                   adca  ,y
033D 35A0             (         sub6.asm):00548                   puls  y,pc
033F 108E1E05         (         sub6.asm):00549                   ldy   #$1E05
0343 CE1E08           (         sub6.asm):00550                   ldu   #$1E08
0346 6DA4             (         sub6.asm):00551                   tst   ,y
0348 2608             (         sub6.asm):00552                   bne   L0352
034A 6DC4             (         sub6.asm):00553                   tst   ,u
034C 2604             (         sub6.asm):00554                   bne   L0352
034E 3121             (         sub6.asm):00555                   leay  1,y
0350 3341             (         sub6.asm):00556                   leau  1,u
0352 ECA4             (         sub6.asm):00557         L0352     ldd   ,y
0354 10A3C4           (         sub6.asm):00558                   cmpd  ,u
0357 250A             (         sub6.asm):00559                   bcs   L0363
0359 EEC4             (         sub6.asm):00560                   ldu   ,u
035B 17003C           (         sub6.asm):00561                   lbsr  L039A
035E 50               (         sub6.asm):00562                   negb
035F CB5A             (         sub6.asm):00563                   addb  #$5A
0361 2007             (         sub6.asm):00564                   bra   L036A
0363 ECC4             (         sub6.asm):00565         L0363     ldd   ,u
0365 EEA4             (         sub6.asm):00566                   ldu   ,y
0367 170030           (         sub6.asm):00567                   lbsr  L039A
036A 58               (         sub6.asm):00568         L036A     lslb
036B 49               (         sub6.asm):00569                   rola
036C 58               (         sub6.asm):00570                   lslb
036D 49               (         sub6.asm):00571                   rola
036E 7D1E0C           (         sub6.asm):00572                   tst   X1E0C
0371 260F             (         sub6.asm):00573                   bne   L0382
0373 7D1E0B           (         sub6.asm):00574                   tst   X1E0B
0376 2706             (         sub6.asm):00575                   beq   L037E
0378 43               (         sub6.asm):00576                   coma
0379 53               (         sub6.asm):00577                   comb
037A C30169           (         sub6.asm):00578                   addd  #$0169
037D 39               (         sub6.asm):00579                   rts
                      (         sub6.asm):00580         
                      (         sub6.asm):00581         *X7595
037E C30168           (         sub6.asm):00582         L037E     addd  #$0168
0381 39               (         sub6.asm):00583                   rts
                      (         sub6.asm):00584         
                      (         sub6.asm):00585         
                      (         sub6.asm):00586         *X7599
0382 7D1E0B           (         sub6.asm):00587         L0382     tst   X1E0B
0385 2606             (         sub6.asm):00588                   bne   L038D
0387 43               (         sub6.asm):00589                   coma
0388 53               (         sub6.asm):00590                   comb
0389 C30439           (         sub6.asm):00591                   addd  #$0439
038C 39               (         sub6.asm):00592                   rts
                      (         sub6.asm):00593         
                      (         sub6.asm):00594         
                      (         sub6.asm):00595         *X75A4
038D C30438           (         sub6.asm):00596         L038D     addd  #$0438
0390 108305A0         (         sub6.asm):00597                   cmpd  #$05A0
0394 2503             (         sub6.asm):00598                   bcs   L0399
0396 CC0000           (         sub6.asm):00599                   ldd   #0
0399 39               (         sub6.asm):00600         L0399     rts
                      (         sub6.asm):00601         
                      (         sub6.asm):00602         
                      (         sub6.asm):00603         
                      (         sub6.asm):00604         *X75B1
039A 11830000         (         sub6.asm):00605         L039A     cmpu  #0
039E 10270047         (         sub6.asm):00606                   lbeq  L03E9
03A2 7F1DDC           (         sub6.asm):00607                   clr   X1DDC
03A5 FD1DDA           (         sub6.asm):00608                   std   X1DDA
03A8 FF1DDE           (         sub6.asm):00609                   stu   X1DDE
03AB 8618             (         sub6.asm):00610                   lda   #$18
03AD B71DEA           (         sub6.asm):00611                   sta   X1DEA
03B0 4F               (         sub6.asm):00612                   clra
03B1 5F               (         sub6.asm):00613                   clrb
03B2 781DDC           (         sub6.asm):00614         L03B2     asl   X1DDC
03B5 791DDB           (         sub6.asm):00615                   rol   X1DDB
03B8 791DDA           (         sub6.asm):00616                   rol   X1DDA
03BB 59               (         sub6.asm):00617                   rolb
03BC 49               (         sub6.asm):00618                   rola
03BD 10B31DDE         (         sub6.asm):00619                   cmpd  X1DDE
03C1 2506             (         sub6.asm):00620                   bcs   L03C9
03C3 B31DDE           (         sub6.asm):00621                   subd  X1DDE
03C6 7C1DDC           (         sub6.asm):00622                   inc   X1DDC
03C9 7A1DEA           (         sub6.asm):00623         L03C9     dec   X1DEA
03CC 26E4             (         sub6.asm):00624                   bne   L03B2
03CE 1F03             (         sub6.asm):00625                   tfr   d,u
03D0 7D1DDA           (         sub6.asm):00626                   tst   X1DDA
03D3 10260012         (         sub6.asm):00627                   lbne  L03E9
03D7 FC1DDB           (         sub6.asm):00628                   ldd   X1DDB
03DA C30080           (         sub6.asm):00629                   addd  #$0080
03DD 10250008         (         sub6.asm):00630                   lblo  L03E9
03E1 1F03             (         sub6.asm):00631                   tfr   d,u
03E3 CC4380           (         sub6.asm):00632                   ldd   #$4380
03E6 1600B9           (         sub6.asm):00633                   lbra  L04A2
03E9 CC0000           (         sub6.asm):00634         L03E9     ldd   #0
03EC 39               (         sub6.asm):00635                   rts
                      (         sub6.asm):00636         
                      (         sub6.asm):00637         
                      (         sub6.asm):00638         *X7604
03ED B71DDA           (         sub6.asm):00639         N03ED     sta   X1DDA
03F0 F61DF1           (         sub6.asm):00640                   ldb   X1DF1
03F3 3D               (         sub6.asm):00641                   mul
03F4 B71DF4           (         sub6.asm):00642                   sta   X1DF4
03F7 7F1DF3           (         sub6.asm):00643                   clr   X1DF3
03FA 7F1DF2           (         sub6.asm):00644                   clr   X1DF2
03FD B61DDA           (         sub6.asm):00645                   lda   X1DDA
0400 F61DF0           (         sub6.asm):00646                   ldb   X1DF0
0403 3D               (         sub6.asm):00647                   mul
0404 F31DF3           (         sub6.asm):00648                   addd  X1DF3
0407 FD1DF3           (         sub6.asm):00649                   std   X1DF3
040A B61DDA           (         sub6.asm):00650                   lda   X1DDA
040D F61DEF           (         sub6.asm):00651                   ldb   X1DEF
0410 3D               (         sub6.asm):00652                   mul
0411 F31DF2           (         sub6.asm):00653                   addd  X1DF2
0414 FD1DF2           (         sub6.asm):00654                   std   X1DF2
0417 B61E04           (         sub6.asm):00655                   lda   X1E04
041A B81DF5           (         sub6.asm):00656                   eora  X1DF5
041D 2711             (         sub6.asm):00657                   beq   L0430
041F CC0000           (         sub6.asm):00658                   ldd   #0
0422 B31DF3           (         sub6.asm):00659                   subd  X1DF3
0425 FD1DF3           (         sub6.asm):00660                   std   X1DF3
0428 8600             (         sub6.asm):00661                   lda   #0
042A B21DF2           (         sub6.asm):00662                   sbca  X1DF2
042D B71DF2           (         sub6.asm):00663                   sta   X1DF2
0430 39               (         sub6.asm):00664         L0430     rts
                      (         sub6.asm):00665         
                      (         sub6.asm):00666         
                      (         sub6.asm):00667         *X7648
0431                  (         sub6.asm):00668         Set_0_1440
0431 1083059F         (         sub6.asm):00669         L0431     cmpd  #$059F       compare to 1439
0435 2E07             (         sub6.asm):00670                   bgt   L043E        > 1439 go subtract 1440
0437 10830000         (         sub6.asm):00671                   cmpd  #$0000       compare to zero
043B 2D06             (         sub6.asm):00672                   blt   L0443        < 0 go add 1440
043D 39               (         sub6.asm):00673                   rts
                      (         sub6.asm):00674         
                      (         sub6.asm):00675         
                      (         sub6.asm):00676         *X7655
043E 8305A0           (         sub6.asm):00677         L043E     subd  #$05A0      subtract 1440 
0441 20EE             (         sub6.asm):00678                   bra   L0431       always go test again 1439
                      (         sub6.asm):00679                   
0443 C305A0           (         sub6.asm):00680         L0443     addd  #$05A0
0446 20E9             (         sub6.asm):00681                   bra   L0431
                      (         sub6.asm):00682                   
                      (         sub6.asm):00683         
0448 108302CF         (         sub6.asm):00684         L0448     cmpd  #$02CF      compare to 719
044C 2E07             (         sub6.asm):00685                   bgt   L0455       greater than that subtract 1440
044E 1083FD30         (         sub6.asm):00686                   cmpd  #$FD30      compare to -720
0452 2D06             (         sub6.asm):00687                   blt   L045A       less than that go add 1440
0454 39               (         sub6.asm):00688                   rts
                      (         sub6.asm):00689         
                      (         sub6.asm):00690         
                      (         sub6.asm):00691         *X766C
0455 8305A0           (         sub6.asm):00692         L0455     subd  #$05A0
0458 20EE             (         sub6.asm):00693                   bra   L0448
                      (         sub6.asm):00694                   
045A C305A0           (         sub6.asm):00695         L045A     addd  #$05A0
045D 20E9             (         sub6.asm):00696                   bra   L0448
                      (         sub6.asm):00697           
                      (         sub6.asm):00698           
                      (         sub6.asm):00699           
                      (         sub6.asm):00700                   
045F 791D3F           (         sub6.asm):00701         L045F     rol   X1D3F
0462 791D40           (         sub6.asm):00702                   rol   X1D40
0465 761D41           (         sub6.asm):00703                   ror   X1D41
0468 791D42           (         sub6.asm):00704                   rol   X1D42
046B 791D3F           (         sub6.asm):00705                   rol   X1D3F
046E FC1D3F           (         sub6.asm):00706                   ldd   X1D3F
0471 F31D41           (         sub6.asm):00707                   addd  X1D41
0474 8B05             (         sub6.asm):00708                   adda  #5
0476 FD1D3F           (         sub6.asm):00709                   std   X1D3F
0479 39               (         sub6.asm):00710                   rts
                      (         sub6.asm):00711         
                      (         sub6.asm):00712         
                      (         sub6.asm):00713         
                      (         sub6.asm):00714         *X7691
047A 3402             (         sub6.asm):00715         N047A     pshs  a
047C 3404             (         sub6.asm):00716                   pshs  b
047E 17FFDE           (         sub6.asm):00717                   lbsr  L045F
0481 4C               (         sub6.asm):00718                   inca
0482 847F             (         sub6.asm):00719                   anda  #$7F
0484 3504             (         sub6.asm):00720                   puls  b
0486 C47F             (         sub6.asm):00721                   andb  #$7F
0488 170055           (         sub6.asm):00722                   lbsr  L04E0
048B 3582             (         sub6.asm):00723                   puls  a,pc
                      (         sub6.asm):00724         
                      (         sub6.asm):00725         
                      (         sub6.asm):00726         *X76A4
048D 3440             (         sub6.asm):00727         N048D     pshs  u
048F 10830000         (         sub6.asm):00728                   cmpd  #0
0493 270B             (         sub6.asm):00729                   beq   L04A0
0495 1F03             (         sub6.asm):00730                   tfr   d,u
0497 17FFC5           (         sub6.asm):00731                   lbsr  L045F
049A 5C               (         sub6.asm):00732                   incb
049B 170004           (         sub6.asm):00733                   lbsr  L04A2
049E 1F30             (         sub6.asm):00734                   tfr   u,d
04A0 35C0             (         sub6.asm):00735         L04A0     puls  u,pc
                      (         sub6.asm):00736         
                      (         sub6.asm):00737         
                      (         sub6.asm):00738         * passed values in d and u by calling routine
                      (         sub6.asm):00739         *X76B9
04A2 3410             (         sub6.asm):00740         L04A2     pshs  x          save x as we will modify it
04A4 1F31             (         sub6.asm):00741                   tfr   u,x        move current u value into x
04A6 8C0000           (         sub6.asm):00742                   cmpx  #$0000     is the value zero ?
04A9 272D             (         sub6.asm):00743                   beq   ClrD_U     if so branch to clear d and u and return
                      (         sub6.asm):00744         *                            otherwise
04AB FD1DDA           (         sub6.asm):00745                   std   X1DDA      save the value in d
04AE FF1DDC           (         sub6.asm):00746                   stu   X1DDC      save the value in u
                      (         sub6.asm):00747                   
04B1 8610             (         sub6.asm):00748                   lda   #$10       set up loop counter of 16
04B3 B71DEA           (         sub6.asm):00749                   sta   X1DEA      stow that in a scratch var
04B6 4F               (         sub6.asm):00750                   clra             clear a,b and cc
04B7 5F               (         sub6.asm):00751                   clrb
                      (         sub6.asm):00752         *                          multiply the value x 2
04B8 781DDB           (         sub6.asm):00753         L04B8     asl   X1DDB      shift lsb left b7 to cc     
04BB 791DDA           (         sub6.asm):00754                   rol   X1DDA      pick up cc and shift msb left
                      (         sub6.asm):00755         *                          b7 of msb is now in cc
04BE 59               (         sub6.asm):00756                   rolb             pull cc into b0 and push b7 of lsb into cc
04BF 49               (         sub6.asm):00757                   rola             pull cc into b0 of msb and push b7 in cc
04C0 10B31DDC         (         sub6.asm):00758                   cmpd  X1DDC      compare the value now in d to the original u value
04C4 2506             (         sub6.asm):00759                   blo   L04CC      less then bump counter and go again
04C6 B31DDC           (         sub6.asm):00760                   subd  X1DDC      otherwise subtract original u value from d 
04C9 7C1DDB           (         sub6.asm):00761                   inc   X1DDB      and add one to the multiplied value
04CC 7A1DEA           (         sub6.asm):00762         L04CC     dec   X1DEA      dec the loop counter
04CF 26E7             (         sub6.asm):00763                   bne   L04B8      not done go again
                      (         sub6.asm):00764                   
04D1 1F03             (         sub6.asm):00765                   tfr   d,u        move d to u 
04D3 FC1DDA           (         sub6.asm):00766                   ldd   X1DDA      load d 
04D6 3590             (         sub6.asm):00767                   puls  x,pc       and return
                      (         sub6.asm):00768         
                      (         sub6.asm):00769         
                      (         sub6.asm):00770         *X76EF
04D8                  (         sub6.asm):00771         ClrD_U
04D8 CC0000           (         sub6.asm):00772         L04D8     ldd   #$0000  zero both d and u
04DB CE0000           (         sub6.asm):00773                   ldu   #$0000
04DE 3590             (         sub6.asm):00774                   puls  x,pc    then return
                      (         sub6.asm):00775         
                      (         sub6.asm):00776         
                      (         sub6.asm):00777         *X76F7
04E0 5D               (         sub6.asm):00778         L04E0     tstb
04E1 271A             (         sub6.asm):00779                   beq   L04FD
04E3 F71DDB           (         sub6.asm):00780                   stb   X1DDB
04E6 C608             (         sub6.asm):00781                   ldb   #8
04E8 F71DEA           (         sub6.asm):00782                   stb   X1DEA
04EB 5F               (         sub6.asm):00783                   clrb
04EC 48               (         sub6.asm):00784         L04EC     asla
04ED 59               (         sub6.asm):00785                   rolb
04EE F11DDB           (         sub6.asm):00786                   cmpb  X1DDB
04F1 2504             (         sub6.asm):00787                   bcs   L04F7
04F3 F01DDB           (         sub6.asm):00788                   subb  X1DDB
04F6 4C               (         sub6.asm):00789                   inca
04F7 7A1DEA           (         sub6.asm):00790         L04F7     dec   X1DEA
04FA 26F0             (         sub6.asm):00791                   bne   L04EC
04FC 39               (         sub6.asm):00792                   rts
                      (         sub6.asm):00793         
                      (         sub6.asm):00794         
                      (         sub6.asm):00795         *X7714
04FD CC0000           (         sub6.asm):00796         L04FD     ldd   #0
0500 39               (         sub6.asm):00797                   rts
                      (         sub6.asm):00798         
                      (         sub6.asm):00799         
                      (         sub6.asm):00800         
                      (         sub6.asm):00801         *X7718
0501 830168           (         sub6.asm):00802         L0501     subd  #$0168
0504 2A03             (         sub6.asm):00803                   bpl   L0509
0506 C305A0           (         sub6.asm):00804                   addd  #$05A0
0509 7F1E04           (         sub6.asm):00805         L0509     clr   X1E04
050C 108302D0         (         sub6.asm):00806                   cmpd  #$02D0
0510 2506             (         sub6.asm):00807                   bcs   L0518
0512 7C1E04           (         sub6.asm):00808                   inc   X1E04
0515 8302D0           (         sub6.asm):00809                   subd  #$02D0
0518 10830168         (         sub6.asm):00810         L0518     cmpd  #$0168
051C 2309             (         sub6.asm):00811                   bls   L0527
051E FD1DDA           (         sub6.asm):00812                   std   X1DDA
0521 CC02D0           (         sub6.asm):00813                   ldd   #$02D0
0524 B31DDA           (         sub6.asm):00814                   subd  X1DDA
0527 3410             (         sub6.asm):00815         L0527     pshs  x
0529 8E0126           (         sub6.asm):00816                   ldx   #$0126
052C A68B             (         sub6.asm):00817                   lda   d,x
052E 3590             (         sub6.asm):00818                   puls  x,pc
                      (         sub6.asm):00819         
                      (         sub6.asm):00820         
                      (         sub6.asm):00821         *X7747
0530 3476             (         sub6.asm):00822         N0530     pshs  a,b,x,y,u
0532 10FF1DDA         (         sub6.asm):00823                   sts   X1DDA
                      (         sub6.asm):00824         
0536 CC4252           (         sub6.asm):00825                   ldd   #$4252
0539 FD1DEB           (         sub6.asm):00826                   std   X1DEB
                      (         sub6.asm):00827         
053C FC1D8D           (         sub6.asm):00828                   ldd   X1D8D
053F C3243E           (         sub6.asm):00829                   addd  #$243E
0542 FD1DED           (         sub6.asm):00830                   std   X1DED
                      (         sub6.asm):00831         
0545 8673             (         sub6.asm):00832                   lda   #$73
0547 B71DEA           (         sub6.asm):00833                   sta   X1DEA
                      (         sub6.asm):00834         
054A B61D43           (         sub6.asm):00835                   lda   X1D43
054D 8102             (         sub6.asm):00836                   cmpa  #2
054F 221F             (         sub6.asm):00837                   bhi   L0570
                      (         sub6.asm):00838         
0551 FC1DB9           (         sub6.asm):00839                   ldd   X1DB9
0554 271A             (         sub6.asm):00840                   beq   L0570
                      (         sub6.asm):00841         
0556 FC1DEB           (         sub6.asm):00842                   ldd   X1DEB
0559 830280           (         sub6.asm):00843                   subd  #$0280
055C FD1DEB           (         sub6.asm):00844                   std   X1DEB
                      (         sub6.asm):00845         
055F FC1DED           (         sub6.asm):00846                   ldd   X1DED
0562 830280           (         sub6.asm):00847                   subd  #$0280
0565 FD1DED           (         sub6.asm):00848                   std   X1DED
                      (         sub6.asm):00849         
0568 B61DEA           (         sub6.asm):00850                   lda   X1DEA
056B 8008             (         sub6.asm):00851                   suba  #8
056D B71DEA           (         sub6.asm):00852                   sta   X1DEA
                      (         sub6.asm):00853         
0570 1A50             (         sub6.asm):00854         L0570     orcc  #$50
0572 FE1DEB           (         sub6.asm):00855                   ldu   X1DEB
0575 10FE1DED         (         sub6.asm):00856                   lds   X1DED
0579 335A             (         sub6.asm):00857         L0579     leau  -6,u
057B 3736             (         sub6.asm):00858                   pulu  d,x,y
057D 3354             (         sub6.asm):00859                   leau  -12,u
057F 3436             (         sub6.asm):00860                   pshs  d,x,y
0581 3736             (         sub6.asm):00861                   pulu  d,x,y
0583 3354             (         sub6.asm):00862                   leau  -12,u
0585 3436             (         sub6.asm):00863                   pshs  d,x,y
0587 3736             (         sub6.asm):00864                   pulu  d,x,y
0589 3354             (         sub6.asm):00865                   leau  -12,u
058B 3436             (         sub6.asm):00866                   pshs  d,x,y
058D 3736             (         sub6.asm):00867                   pulu  d,x,y
058F 3354             (         sub6.asm):00868                   leau  -12,u
0591 3436             (         sub6.asm):00869                   pshs  d,x,y
0593 3736             (         sub6.asm):00870                   pulu  d,x,y
0595 3354             (         sub6.asm):00871                   leau  -12,u
0597 3436             (         sub6.asm):00872                   pshs  d,x,y
0599 3736             (         sub6.asm):00873                   pulu  d,x,y
059B 3354             (         sub6.asm):00874                   leau  -12,u
059D 3436             (         sub6.asm):00875                   pshs  d,x,y
059F 3736             (         sub6.asm):00876                   pulu  d,x,y
05A1 3354             (         sub6.asm):00877                   leau  -12,u
05A3 3436             (         sub6.asm):00878                   pshs  d,x,y
05A5 3736             (         sub6.asm):00879                   pulu  d,x,y
05A7 3354             (         sub6.asm):00880                   leau  -12,u
05A9 3436             (         sub6.asm):00881                   pshs  d,x,y
05AB 3736             (         sub6.asm):00882                   pulu  d,x,y
05AD 3354             (         sub6.asm):00883                   leau  -12,u
05AF 3436             (         sub6.asm):00884                   pshs  d,x,y
05B1 3736             (         sub6.asm):00885                   pulu  d,x,y
05B3 3359             (         sub6.asm):00886                   leau  -7,u
05B5 3436             (         sub6.asm):00887                   pshs  d,x,y
05B7 3702             (         sub6.asm):00888                   pulu  a
05B9 3402             (         sub6.asm):00889                   pshs  a
05BB 32E8ED           (         sub6.asm):00890                   leas  -19,s
05BE 33C8EC           (         sub6.asm):00891                   leau  -20,u
                      (         sub6.asm):00892         
05C1 7A1DEA           (         sub6.asm):00893                   dec   X1DEA
05C4 26B3             (         sub6.asm):00894                   bne   L0579
05C6 10FE1DDA         (         sub6.asm):00895                   lds   X1DDA
                      (         sub6.asm):00896         
05CA 1CAF             (         sub6.asm):00897                   andcc #$AF
05CC 35F6             (         sub6.asm):00898                   puls  a,b,x,y,u,pc
                      (         sub6.asm):00899         
                      (         sub6.asm):00900         
                      (         sub6.asm):00901         *X77E3
05CE 3476             (         sub6.asm):00902         N05CC     pshs  a,b,x,y,u
05D0 B71DDC           (         sub6.asm):00903                   sta   X1DDC
05D3 B71DDD           (         sub6.asm):00904                   sta   X1DDD
05D6 50               (         sub6.asm):00905                   negb
05D7 CB74             (         sub6.asm):00906                   addb  #$74
05D9 F71DEA           (         sub6.asm):00907                   stb   X1DEA
05DC 10FF1DDA         (         sub6.asm):00908                   sts   X1DDA
05E0 8650             (         sub6.asm):00909                   lda   #$50
05E2 3D               (         sub6.asm):00910                   mul
05E3 C31E25           (         sub6.asm):00911                   addd  #$1E25
05E6 1A50             (         sub6.asm):00912                   orcc  #$50
05E8 1F04             (         sub6.asm):00913                   tfr   d,s
05EA FC1DDC           (         sub6.asm):00914                   ldd   X1DDC
05ED BE1DDC           (         sub6.asm):00915                   ldx   X1DDC
05F0 FE1DDC           (         sub6.asm):00916                   ldu   X1DDC
05F3 10BE1DDC         (         sub6.asm):00917                   ldy   X1DDC
                      (         sub6.asm):00918         
05F7 32E8ED           (         sub6.asm):00919         L05F7     leas  -19,s
05FA 3476             (         sub6.asm):00920                   pshs  d,x,y,u
05FC 3476             (         sub6.asm):00921                   pshs  d,x,y,u
05FE 3476             (         sub6.asm):00922                   pshs  d,x,y,u
0600 3476             (         sub6.asm):00923                   pshs  d,x,y,u
0602 3476             (         sub6.asm):00924                   pshs  d,x,y,u
0604 3476             (         sub6.asm):00925                   pshs  d,x,y,u
0606 3476             (         sub6.asm):00926                   pshs  d,x,y,u
0608 3432             (         sub6.asm):00927                   pshs  a,x,y
                      (         sub6.asm):00928         
060A 7A1DEA           (         sub6.asm):00929                   dec   X1DEA
060D 26E8             (         sub6.asm):00930                   bne   L05F7
                      (         sub6.asm):00931         
060F 10FE1DDA         (         sub6.asm):00932                   lds   X1DDA
0613 1CAF             (         sub6.asm):00933                   andcc #$AF
0615 35F6             (         sub6.asm):00934                   puls  a,b,x,y,u,pc
                      (         sub6.asm):00935         
                      (         sub6.asm):00936         
                      (         sub6.asm):00937         *X782E
                      (         sub6.asm):00938         * receives a value from caller in b
                      (         sub6.asm):00939         * so range of input 0-255
                      (         sub6.asm):00940         * if less that 10 pads with leading zero
0617                  (         sub6.asm):00941         format_2_places
0617 3476             (         sub6.asm):00942         L0617     pshs  a,b,x,y,u     save everybody its always safe unless you forget to pull them :-)
0619 C109             (         sub6.asm):00943                   cmpb  #$09          test input for single digit
061B 2E09             (         sub6.asm):00944                   bgt   No_pad        will be at least 2 places normal processing
061D 3404             (         sub6.asm):00945                   pshs  b             otherwise save value
061F C630             (         sub6.asm):00946                   ldb   #'0           load a zero $30
0621 17FC3C           (         sub6.asm):00947                   lbsr  L0260         process that
0624 3504             (         sub6.asm):00948                   puls  b             pull value
0626 4F               (         sub6.asm):00949         No_pad    clra                clear up anything left hanging around in a
0627 17FAC3           (         sub6.asm):00950                   lbsr  hex_to_digits call normal processing  L00ED
062A 35F6             (         sub6.asm):00951                   puls  a,b,x,y,u,pc  we done
                      (         sub6.asm):00952         
                      (         sub6.asm):00953         
                      (         sub6.asm):00954         *X7843
                      (         sub6.asm):00955         * apparently no args passed
062C 3476             (         sub6.asm):00956         N062C     pshs  a,b,x,y,u
062E CC00A2           (         sub6.asm):00957                   ldd   #$00A2
0631 FD1DA7           (         sub6.asm):00958                   std   X1DA7
                      (         sub6.asm):00959         
0634 CC0112           (         sub6.asm):00960                   ldd   #$0112
0637 FD1DA5           (         sub6.asm):00961                   std   X1DA5
                      (         sub6.asm):00962         
063A 4F               (         sub6.asm):00963                   clra
063B F64D01           (         sub6.asm):00964                   ldb   X4D01             load a value and pass it to
063E 17FAAC           (         sub6.asm):00965                   lbsr  hex_to_digits
                      (         sub6.asm):00966         
0641 CC0120           (         sub6.asm):00967                   ldd   #$0120
0644 FD1DA5           (         sub6.asm):00968                   std   X1DA5
                      (         sub6.asm):00969         
0647 F64CFF           (         sub6.asm):00970                   ldb   X4CFF             load a value and pass it to
064A 17FFCA           (         sub6.asm):00971                   lbsr  format_2_places
064D 35F6             (         sub6.asm):00972                   puls  a,b,x,y,u,pc
                      (         sub6.asm):00973         
                      (         sub6.asm):00974         
                      (         sub6.asm):00975         *X7866
064F 3476             (         sub6.asm):00976         N064F     pshs  a,b,x,y,u
0651 CC00B2           (         sub6.asm):00977                   ldd   #$00B2
0654 FD1DA7           (         sub6.asm):00978                   std   X1DA7
0657 CC0112           (         sub6.asm):00979                   ldd   #$0112
065A FD1DA5           (         sub6.asm):00980                   std   X1DA5
065D 4F               (         sub6.asm):00981                   clra
065E F64D02           (         sub6.asm):00982                   ldb   X4D02
0661 17FA89           (         sub6.asm):00983                   lbsr  hex_to_digits        L00ED
0664 CC0120           (         sub6.asm):00984                   ldd   #$0120
0667 FD1DA5           (         sub6.asm):00985                   std   X1DA5
066A F64D00           (         sub6.asm):00986                   ldb   X4D00
066D 17FFA7           (         sub6.asm):00987                   lbsr  L0617
0670 35F6             (         sub6.asm):00988                   puls  a,b,x,y,u,pc
                      (         sub6.asm):00989         
                      (         sub6.asm):00990         
                      (         sub6.asm):00991         *X7889
0672 3416             (         sub6.asm):00992         L0672     pshs  a,b,x        save the ones we will modify
0674 3404             (         sub6.asm):00993                   pshs  b            save b as we will use it later
                      (         sub6.asm):00994                   
0676 BE1D8B           (         sub6.asm):00995                   ldx   X1D8B
0679 BF1D89           (         sub6.asm):00996                   stx   X1D89
                      (         sub6.asm):00997                   
067C 8603             (         sub6.asm):00998                   lda   #$03
067E B71D88           (         sub6.asm):00999                   sta   X1D88
                      (         sub6.asm):01000                   
0681 7F1D8F           (         sub6.asm):01001                   clr   X1D8F
0684 7F1D91           (         sub6.asm):01002                   clr   X1D91
                      (         sub6.asm):01003                   
0687 8E02AF           (         sub6.asm):01004                   ldx   #$02AF       load a base address
068A B602A4           (         sub6.asm):01005                   lda   X02A4        we set this to 1 prior to calling in sub
068D 48               (         sub6.asm):01006                   asla               multiply by 2
068E 3086             (         sub6.asm):01007                   leax  a,x
0690 EC84             (         sub6.asm):01008                   ldd   ,x
0692 B71D90           (         sub6.asm):01009                   sta   X1D90
0695 F71D92           (         sub6.asm):01010                   stb   X1D92
                      (         sub6.asm):01011                   
0698 3504             (         sub6.asm):01012                   puls  b
069A 17FAC0           (         sub6.asm):01013                   lbsr  L015D
                      (         sub6.asm):01014                   
069D 7C1D90           (         sub6.asm):01015                   inc   X1D90
06A0 17FABA           (         sub6.asm):01016                   lbsr  L015D
06A3 7C1D92           (         sub6.asm):01017                   inc   X1D92
06A6 17FAB4           (         sub6.asm):01018                   lbsr  L015D
06A9 7A1D90           (         sub6.asm):01019                   dec   X1D90
06AC 17FAAE           (         sub6.asm):01020                   lbsr  L015D
06AF 1700AE           (         sub6.asm):01021                   lbsr  L0760
06B2 FC1D93           (         sub6.asm):01022                   ldd   X1D93
06B5 E780             (         sub6.asm):01023                   stb   ,x+
06B7 FD1D8F           (         sub6.asm):01024                   std   X1D8F
06BA FC1D95           (         sub6.asm):01025                   ldd   X1D95
06BD E784             (         sub6.asm):01026                   stb   ,x
06BF FD1D91           (         sub6.asm):01027                   std   X1D91
06C2 17FA98           (         sub6.asm):01028                   lbsr  L015D
06C5 7C1D90           (         sub6.asm):01029                   inc   X1D90
06C8 17FA92           (         sub6.asm):01030                   lbsr  L015D
06CB 7C1D92           (         sub6.asm):01031                   inc   X1D92
06CE 17FA8C           (         sub6.asm):01032                   lbsr  L015D
06D1 7A1D90           (         sub6.asm):01033                   dec   X1D90
06D4 17FA86           (         sub6.asm):01034                   lbsr  L015D
06D7 3596             (         sub6.asm):01035                   puls  a,b,x,pc
                      (         sub6.asm):01036         
                      (         sub6.asm):01037         
                      (         sub6.asm):01038         *X78F0
06D9 3476             (         sub6.asm):01039         L06D9     pshs  a,b,x,y,u
06DB 10830064         (         sub6.asm):01040                   cmpd  #$0064
06DF 2C18             (         sub6.asm):01041                   bge   L06F9
06E1 3404             (         sub6.asm):01042                   pshs  b
06E3 C630             (         sub6.asm):01043                   ldb   #$30
06E5 17FB78           (         sub6.asm):01044                   lbsr  L0260
06E8 3504             (         sub6.asm):01045                   puls  b
06EA 1083000A         (         sub6.asm):01046                   cmpd  #$000A
06EE 2C09             (         sub6.asm):01047                   bge   L06F9
06F0 3404             (         sub6.asm):01048                   pshs  b
06F2 C630             (         sub6.asm):01049                   ldb   #$30
06F4 17FB69           (         sub6.asm):01050                   lbsr  L0260
06F7 3504             (         sub6.asm):01051                   puls  b
06F9 17F9F1           (         sub6.asm):01052         L06F9     lbsr  hex_to_digits        L00ED
06FC 35F6             (         sub6.asm):01053                   puls  a,b,x,y,u,pc
                      (         sub6.asm):01054         
                      (         sub6.asm):01055         
                      (         sub6.asm):01056         *X7915
06FE 3476             (         sub6.asm):01057         L06FE     pshs  a,b,x,y,u
0700 17005D           (         sub6.asm):01058                   lbsr  L0760
0703 8603             (         sub6.asm):01059                   lda   #3
0705 B71D88           (         sub6.asm):01060                   sta   X1D88
0708 BE1D8B           (         sub6.asm):01061                   ldx   X1D8B
070B BF1D89           (         sub6.asm):01062                   stx   X1D89
070E FC1D8F           (         sub6.asm):01063                   ldd   X1D8F
0711 83000C           (         sub6.asm):01064                   subd  #$000C
0714 FD1DA5           (         sub6.asm):01065                   std   X1DA5
0717 FC1D91           (         sub6.asm):01066                   ldd   X1D91
071A C30004           (         sub6.asm):01067                   addd  #4
071D FD1DA7           (         sub6.asm):01068                   std   X1DA7
0720 CE1D8F           (         sub6.asm):01069                   ldu   #$1D8F
0723 3716             (         sub6.asm):01070                   pulu  d,x
0725 3416             (         sub6.asm):01071                   pshs  d,x
0727 3716             (         sub6.asm):01072                   pulu  d,x
0729 3416             (         sub6.asm):01073                   pshs  d,x
072B B602A4           (         sub6.asm):01074                   lda   X02A4
072E 48               (         sub6.asm):01075                   asla
072F 8E02A7           (         sub6.asm):01076                   ldx   #$02A7
0732 3086             (         sub6.asm):01077                   leax  a,x
0734 EC84             (         sub6.asm):01078                   ldd   ,x
0736 B71D94           (         sub6.asm):01079                   sta   X1D94
0739 F71D96           (         sub6.asm):01080                   stb   X1D96
073C 17FA5D           (         sub6.asm):01081                   lbsr  L019C
073F FC02A5           (         sub6.asm):01082                   ldd   X02A5
0742 17FF94           (         sub6.asm):01083                   lbsr  L06D9
0745 3506             (         sub6.asm):01084                   puls  d
0747 FD1D93           (         sub6.asm):01085                   std   X1D93
074A E780             (         sub6.asm):01086                   stb   ,x+
074C 3506             (         sub6.asm):01087                   puls  d
074E FD1D95           (         sub6.asm):01088                   std   X1D95
0751 E784             (         sub6.asm):01089                   stb   ,x
0753 3516             (         sub6.asm):01090                   puls  d,x
0755 FD1D8F           (         sub6.asm):01091                   std   X1D8F
0758 BF1D91           (         sub6.asm):01092                   stx   X1D91
075B 17FA3E           (         sub6.asm):01093                   lbsr  L019C
075E 35F6             (         sub6.asm):01094                   puls  a,b,x,y,u,pc
                      (         sub6.asm):01095         
                      (         sub6.asm):01096         
                      (         sub6.asm):01097         *X7977
0760 3476             (         sub6.asm):01098         L0760     pshs  a,b,x,y,u
0762 1F03             (         sub6.asm):01099                   tfr   d,u
0764 3404             (         sub6.asm):01100                   pshs  b
0766 8E0020           (         sub6.asm):01101                   ldx   #$0020
0769 BF1D8F           (         sub6.asm):01102                   stx   X1D8F
076C 308D0194         (         sub6.asm):01103                   leax  ByteTbl1,pcr
0770 B602A4           (         sub6.asm):01104                   lda   X02A4
0773 E686             (         sub6.asm):01105                   ldb   a,x
0775 4F               (         sub6.asm):01106                   clra
0776 FD1D91           (         sub6.asm):01107                   std   X1D91
0779 3504             (         sub6.asm):01108                   puls  b
077B 308D0129         (         sub6.asm):01109                   leax  WordTbl2,pcr
077F C12C             (         sub6.asm):01110                   cmpb  #$2C
0781 2224             (         sub6.asm):01111                   bhi   L07A7
0783 58               (         sub6.asm):01112                   lslb
0784 3406             (         sub6.asm):01113                   pshs  d
0786 30885A           (         sub6.asm):01114                   leax  90,x         last entry in table
0789 1F10             (         sub6.asm):01115                   tfr   x,d
078B A3E1             (         sub6.asm):01116                   subd  ,s++
078D 1F01             (         sub6.asm):01117                   tfr   d,x
078F 4F               (         sub6.asm):01118                   clra
0790 E680             (         sub6.asm):01119                   ldb   ,x+
0792 F31D8F           (         sub6.asm):01120                   addd  X1D8F
0795 FD1D93           (         sub6.asm):01121                   std   X1D93
0798 E684             (         sub6.asm):01122                   ldb   ,x
079A 3406             (         sub6.asm):01123                   pshs  d
079C FC1D91           (         sub6.asm):01124                   ldd   X1D91
079F A3E1             (         sub6.asm):01125                   subd  ,s++
07A1 FD1D95           (         sub6.asm):01126                   std   X1D95
07A4 160063           (         sub6.asm):01127                   lbra  L080A
07A7 C159             (         sub6.asm):01128         L07A7     cmpb  #$59
07A9 2217             (         sub6.asm):01129                   bhi   L07C2
07AB C02D             (         sub6.asm):01130                   subb  #$2D
07AD 58               (         sub6.asm):01131                   lslb
07AE 3085             (         sub6.asm):01132                   leax  b,x
07B0 E680             (         sub6.asm):01133                   ldb   ,x+
07B2 F31D8F           (         sub6.asm):01134                   addd  X1D8F
07B5 FD1D93           (         sub6.asm):01135                   std   X1D93
07B8 E684             (         sub6.asm):01136                   ldb   ,x
07BA F31D91           (         sub6.asm):01137                   addd  X1D91
07BD FD1D95           (         sub6.asm):01138                   std   X1D95
07C0 2048             (         sub6.asm):01139                   bra   L080A
07C2 C186             (         sub6.asm):01140         L07C2     cmpb  #$86
07C4 2226             (         sub6.asm):01141                   bhi   L07EC
07C6 C05A             (         sub6.asm):01142                   subb  #$5A
07C8 58               (         sub6.asm):01143                   lslb
07C9 3406             (         sub6.asm):01144                   pshs  d
07CB 30885A           (         sub6.asm):01145                   leax  90,x
07CE 1F10             (         sub6.asm):01146                   tfr   x,d
07D0 A3E1             (         sub6.asm):01147                   subd  ,s++
07D2 1F01             (         sub6.asm):01148                   tfr   d,x
07D4 4F               (         sub6.asm):01149                   clra
07D5 E680             (         sub6.asm):01150                   ldb   ,x+
07D7 3406             (         sub6.asm):01151                   pshs  d
07D9 FC1D8F           (         sub6.asm):01152                   ldd   X1D8F
07DC A3E1             (         sub6.asm):01153                   subd  ,s++
07DE FD1D93           (         sub6.asm):01154                   std   X1D93
07E1 4F               (         sub6.asm):01155                   clra
07E2 E684             (         sub6.asm):01156                   ldb   ,x
07E4 F31D91           (         sub6.asm):01157                   addd  X1D91
07E7 FD1D95           (         sub6.asm):01158                   std   X1D95
07EA 201E             (         sub6.asm):01159                   bra   L080A
07EC C087             (         sub6.asm):01160         L07EC     subb  #$87
07EE 58               (         sub6.asm):01161                   lslb
07EF 3085             (         sub6.asm):01162                   leax  b,x
07F1 E680             (         sub6.asm):01163                   ldb   ,x+
07F3 3406             (         sub6.asm):01164                   pshs  d
07F5 FC1D8F           (         sub6.asm):01165                   ldd   X1D8F
07F8 A3E1             (         sub6.asm):01166                   subd  ,s++
07FA FD1D93           (         sub6.asm):01167                   std   X1D93
07FD 4F               (         sub6.asm):01168                   clra
07FE E684             (         sub6.asm):01169                   ldb   ,x
0800 3406             (         sub6.asm):01170                   pshs  d
0802 FC1D91           (         sub6.asm):01171                   ldd   X1D91
0805 A3E1             (         sub6.asm):01172                   subd  ,s++
0807 FD1D95           (         sub6.asm):01173                   std   X1D95
080A 35F6             (         sub6.asm):01174         L080A     puls  a,b,x,y,u,pc
                      (         sub6.asm):01175         
                      (         sub6.asm):01176         
                      (         sub6.asm):01177         *X7A23
080C 17FC22           (         sub6.asm):01178         N080C     lbsr  L0431
080F FD4CF3           (         sub6.asm):01179                   std   X4CF3
0812 44               (         sub6.asm):01180                   lsra
0813 56               (         sub6.asm):01181                   rorb
0814 44               (         sub6.asm):01182                   lsra
0815 56               (         sub6.asm):01183                   rorb
0816 FD02A5           (         sub6.asm):01184                   std   X02A5
0819 44               (         sub6.asm):01185                   lsra
081A 56               (         sub6.asm):01186                   rorb
081B 8601             (         sub6.asm):01187                   lda   #1
081D B702A4           (         sub6.asm):01188                   sta   X02A4
0820 16FEDB           (         sub6.asm):01189                   lbra  L06FE
                      (         sub6.asm):01190         
                      (         sub6.asm):01191         *X7A3A
0823 FD4CF1           (         sub6.asm):01192         N0823     std   X4CF1
0826 2A05             (         sub6.asm):01193                   bpl   L082D
0828 43               (         sub6.asm):01194                   coma
0829 53               (         sub6.asm):01195                   comb
082A C30001           (         sub6.asm):01196                   addd  #1
082D FD02A5           (         sub6.asm):01197         L082D     std   X02A5
0830 F64CF2           (         sub6.asm):01198                   ldb   X4CF2
0833 2A02             (         sub6.asm):01199                   bpl   L0837
0835 CB1C             (         sub6.asm):01200                   addb  #$1C
0837 F71DDA           (         sub6.asm):01201         L0837     stb   X1DDA
083A 8673             (         sub6.asm):01202                   lda   #$73
083C 3D               (         sub6.asm):01203                   mul
083D B71DDB           (         sub6.asm):01204                   sta   X1DDB
0840 F61DDA           (         sub6.asm):01205                   ldb   X1DDA
0843 8606             (         sub6.asm):01206                   lda   #6
0845 3D               (         sub6.asm):01207                   mul
0846 FB1DDB           (         sub6.asm):01208                   addb  X1DDB
0849 8602             (         sub6.asm):01209                   lda   #2
084B B702A4           (         sub6.asm):01210                   sta   X02A4
084E 16FEAD           (         sub6.asm):01211                   lbra  L06FE
                      (         sub6.asm):01212         
                      (         sub6.asm):01213         *X7A68          
0851 FD4CF9           (         sub6.asm):01214         N0851     std   X4CF9
0854 2A02             (         sub6.asm):01215                   bpl   L0858
0856 CB1C             (         sub6.asm):01216                   addb  #$1C
0858 F71DDA           (         sub6.asm):01217         L0858     stb   X1DDA
085B 8673             (         sub6.asm):01218                   lda   #$73
085D 3D               (         sub6.asm):01219                   mul
085E B71DDB           (         sub6.asm):01220                   sta   X1DDB
0861 F61DDA           (         sub6.asm):01221                   ldb   X1DDA
0864 8606             (         sub6.asm):01222                   lda   #6
0866 3D               (         sub6.asm):01223                   mul
0867 FB1DDB           (         sub6.asm):01224                   addb  X1DDB
086A 8602             (         sub6.asm):01225                   lda   #2
086C B702A4           (         sub6.asm):01226                   sta   X02A4
086F 16FE00           (         sub6.asm):01227                   lbra  L0672
                      (         sub6.asm):01228         
                      (         sub6.asm):01229         *X7A89          
0872 FD4CEF           (         sub6.asm):01230         N0872     std   X4CEF
0875 FD02A5           (         sub6.asm):01231                   std   X02A5
0878 8603             (         sub6.asm):01232                   lda   #3
087A B702A4           (         sub6.asm):01233                   sta   X02A4
087D B64CF0           (         sub6.asm):01234                   lda   X4CF0
0880 C62E             (         sub6.asm):01235                   ldb   #$2E
0882 3D               (         sub6.asm):01236                   mul
0883 3402             (         sub6.asm):01237                   pshs  a
0885 B64CEF           (         sub6.asm):01238                   lda   X4CEF
0888 C62E             (         sub6.asm):01239                   ldb   #$2E
088A 3D               (         sub6.asm):01240                   mul
088B EBE0             (         sub6.asm):01241                   addb  ,s+
088D 16FE6E           (         sub6.asm):01242                   lbra  L06FE
0890 FD4CF7           (         sub6.asm):01243                   std   X4CF7
0893 862E             (         sub6.asm):01244                   lda   #$2E
0895 3D               (         sub6.asm):01245                   mul
0896 3402             (         sub6.asm):01246                   pshs  a
0898 8603             (         sub6.asm):01247                   lda   #3
089A B702A4           (         sub6.asm):01248                   sta   X02A4
089D B64CF7           (         sub6.asm):01249                   lda   X4CF7
08A0 C62E             (         sub6.asm):01250                   ldb   #$2E
08A2 3D               (         sub6.asm):01251                   mul
08A3 EBE0             (         sub6.asm):01252                   addb  ,s+
08A5 16FDCA           (         sub6.asm):01253                   lbra  L0672        exits from there
                      (         sub6.asm):01254         
08A8                  (         sub6.asm):01255         WordTbl2
08A8 1300             (         sub6.asm):01256         L08A8     fdb $1300
08AA 1301             (         sub6.asm):01257                   fdb $1301
08AC 1301             (         sub6.asm):01258                   fdb $1301
08AE 1302             (         sub6.asm):01259                   fdb $1302
08B0 1302             (         sub6.asm):01260                   fdb $1302
08B2 1203             (         sub6.asm):01261                   fdb $1203
08B4 1203             (         sub6.asm):01262                   fdb $1203
08B6 1204             (         sub6.asm):01263                   fdb $1204
08B8 1204             (         sub6.asm):01264                   fdb $1204
08BA 1205             (         sub6.asm):01265                   fdb $1205
08BC 1205             (         sub6.asm):01266                   fdb $1205
08BE 1106             (         sub6.asm):01267                   fdb $1106
08C0 1106             (         sub6.asm):01268                   fdb $1106
08C2 1007             (         sub6.asm):01269                   fdb $1007
08C4 1007             (         sub6.asm):01270                   fdb $1007
08C6 1008             (         sub6.asm):01271                   fdb $1008
08C8 1008             (         sub6.asm):01272                   fdb $1008
08CA 0F09             (         sub6.asm):01273                   fdb $0F09
08CC 0F09             (         sub6.asm):01274                   fdb $0F09
08CE 0E0A             (         sub6.asm):01275                   fdb $0E0A
08D0 0E0A             (         sub6.asm):01276                   fdb $0E0A
08D2 0D0B             (         sub6.asm):01277                   fdb $0D0B
08D4 0D0B             (         sub6.asm):01278                   fdb $0D0B
08D6 0C0B             (         sub6.asm):01279                   fdb $0C0B
08D8 0B0C             (         sub6.asm):01280                   fdb $0B0C
08DA 0B0C             (         sub6.asm):01281                   fdb $0B0C
08DC 0A0D             (         sub6.asm):01282                   fdb $0A0D
08DE 0A0D             (         sub6.asm):01283                   fdb $0A0D
08E0 090D             (         sub6.asm):01284                   fdb $090D
08E2 090D             (         sub6.asm):01285                   fdb $090D
08E4 080E             (         sub6.asm):01286                   fdb $080E
08E6 070E             (         sub6.asm):01287                   fdb $070E
08E8 070E             (         sub6.asm):01288                   fdb $070E
08EA 060E             (         sub6.asm):01289                   fdb $060E
08EC 060E             (         sub6.asm):01290                   fdb $060E
08EE 050E             (         sub6.asm):01291                   fdb $050E
08F0 050E             (         sub6.asm):01292                   fdb $050E
08F2 040F             (         sub6.asm):01293                   fdb $040F
08F4 040F             (         sub6.asm):01294                   fdb $040F
08F6 030F             (         sub6.asm):01295                   fdb $030F
08F8 030F             (         sub6.asm):01296                   fdb $030F
08FA 020F             (         sub6.asm):01297                   fdb $020F
08FC 020F             (         sub6.asm):01298                   fdb $020F
08FE 010F             (         sub6.asm):01299                   fdb $010F
0900 010F             (         sub6.asm):01300                   fdb $010F
0902 000F             (         sub6.asm):01301                   fdb $000F
                      (         sub6.asm):01302         
0904                  (         sub6.asm):01303         ByteTbl1
0904 184978A8         (         sub6.asm):01304         L0904     fcb $18,$49,$78,$A8
                      (         sub6.asm):01305         
                      (         sub6.asm):01306         
                      (         sub6.asm):01307         *X7B1F
0908 3476             (         sub6.asm):01308         N0908     pshs  a,b,x,y,u
090A FC1DA3           (         sub6.asm):01309                   ldd   X1DA3
090D 2744             (         sub6.asm):01310                   beq   L0953
090F BE1D91           (         sub6.asm):01311                   ldx   X1D91
0912 BC1DAB           (         sub6.asm):01312                   cmpx  X1DAB
0915 253C             (         sub6.asm):01313                   bcs   L0953
0917 BC1DAF           (         sub6.asm):01314                   cmpx  X1DAF
091A 2237             (         sub6.asm):01315                   bhi   L0953
091C FC1D8F           (         sub6.asm):01316                   ldd   X1D8F
091F 10B31DAD         (         sub6.asm):01317                   cmpd  X1DAD
0923 2E2E             (         sub6.asm):01318                   bgt   L0953
0925 F31DA3           (         sub6.asm):01319                   addd  X1DA3
0928 10B31DA9         (         sub6.asm):01320                   cmpd  X1DA9
092C 2D25             (         sub6.asm):01321                   blt   L0953
092E FC1D8F           (         sub6.asm):01322                   ldd   X1D8F
0931 B31DA9           (         sub6.asm):01323                   subd  X1DA9
0934 2A0C             (         sub6.asm):01324                   bpl   L0942
0936 F31DA3           (         sub6.asm):01325                   addd  X1DA3
0939 FD1DA3           (         sub6.asm):01326                   std   X1DA3
093C FC1DA9           (         sub6.asm):01327                   ldd   X1DA9
093F FD1D8F           (         sub6.asm):01328                   std   X1D8F
0942 FC1DAD           (         sub6.asm):01329         L0942     ldd   X1DAD
0945 B31D8F           (         sub6.asm):01330                   subd  X1D8F
0948 10B31DA3         (         sub6.asm):01331                   cmpd  X1DA3
094C 2C03             (         sub6.asm):01332                   bge   L0951
094E FD1DA3           (         sub6.asm):01333                   std   X1DA3
0951 2004             (         sub6.asm):01334         L0951     bra   L0957
0953 35F6             (         sub6.asm):01335         L0953     puls  a,b,x,y,u,pc
                      (         sub6.asm):01336         
                      (         sub6.asm):01337         
                      (         sub6.asm):01338         
                      (         sub6.asm):01339         *X7B6C
0955 3476             (         sub6.asm):01340         N0955     pshs  a,b,x,y,u
0957 B61D92           (         sub6.asm):01341         L0957     lda   X1D92
095A C650             (         sub6.asm):01342                   ldb   #$50
095C 3D               (         sub6.asm):01343                   mul
095D 10BE1D89         (         sub6.asm):01344                   ldy   X1D89
0961 31AB             (         sub6.asm):01345                   leay  d,y
0963 FC1D8F           (         sub6.asm):01346                   ldd   X1D8F
0966 44               (         sub6.asm):01347                   lsra
0967 56               (         sub6.asm):01348                   rorb
0968 44               (         sub6.asm):01349                   lsra
0969 56               (         sub6.asm):01350                   rorb
096A 31AB             (         sub6.asm):01351                   leay  d,y
096C 338D025E         (         sub6.asm):01352                   leau  ByteTbl5,pcr
0970 F61D88           (         sub6.asm):01353                   ldb   X1D88
0973 A6C5             (         sub6.asm):01354                   lda   b,u
0975 B71DDA           (         sub6.asm):01355                   sta   X1DDA
0978 BE1DA3           (         sub6.asm):01356                   ldx   X1DA3
097B F61D90           (         sub6.asm):01357                   ldb   X1D90
097E C403             (         sub6.asm):01358                   andb  #3
0980 2726             (         sub6.asm):01359                   beq   L09A8
0982 338D024C         (         sub6.asm):01360         L0982     leau  ByteTbl6,pcr
0986 B61DDA           (         sub6.asm):01361                   lda   X1DDA
0989 A4C5             (         sub6.asm):01362                   anda  b,u
098B B71DDB           (         sub6.asm):01363                   sta   X1DDB
098E 338D0244         (         sub6.asm):01364                   leau  ByteTbl7,pcr
0992 A6A4             (         sub6.asm):01365                   lda   ,y
0994 A4C5             (         sub6.asm):01366                   anda  b,u
0996 BA1DDB           (         sub6.asm):01367                   ora   X1DDB
0999 A7A4             (         sub6.asm):01368                   sta   ,y
099B 301F             (         sub6.asm):01369                   leax  -1,x
099D 1027003A         (         sub6.asm):01370                   lbeq  L09DB
09A1 5C               (         sub6.asm):01371                   incb
09A2 C104             (         sub6.asm):01372                   cmpb  #4
09A4 26DC             (         sub6.asm):01373                   bne   L0982
09A6 3121             (         sub6.asm):01374                   leay  1,y
09A8 1F10             (         sub6.asm):01375         L09A8     tfr   x,d
09AA F71DDB           (         sub6.asm):01376                   stb   X1DDB
09AD 44               (         sub6.asm):01377                   lsra
09AE 56               (         sub6.asm):01378                   rorb
09AF 44               (         sub6.asm):01379                   lsra
09B0 56               (         sub6.asm):01380                   rorb
09B1 2708             (         sub6.asm):01381                   beq   L09BB
09B3 B61DDA           (         sub6.asm):01382                   lda   X1DDA
09B6 A7A0             (         sub6.asm):01383         L09B6     sta   ,y+
09B8 5A               (         sub6.asm):01384                   decb
09B9 26FB             (         sub6.asm):01385                   bne   L09B6
09BB F61DDB           (         sub6.asm):01386         L09BB     ldb   X1DDB
09BE C403             (         sub6.asm):01387                   andb  #3
09C0 2719             (         sub6.asm):01388                   beq   L09DB
09C2 338D0200         (         sub6.asm):01389                   leau  ByteTbl3,pcr
09C6 B61DDA           (         sub6.asm):01390                   lda   X1DDA
09C9 A4C5             (         sub6.asm):01391                   anda  b,u
09CB B71DDB           (         sub6.asm):01392                   sta   X1DDB
09CE 338D01F8         (         sub6.asm):01393                   leau  ByteTbl4,pcr
09D2 A6A4             (         sub6.asm):01394                   lda   ,y
09D4 A4C5             (         sub6.asm):01395                   anda  b,u
09D6 BA1DDB           (         sub6.asm):01396                   ora   X1DDB
09D9 A7A4             (         sub6.asm):01397                   sta   ,y
09DB 35F6             (         sub6.asm):01398         L09DB     puls  a,b,x,y,u,pc
                      (         sub6.asm):01399         
                      (         sub6.asm):01400         
                      (         sub6.asm):01401         
                      (         sub6.asm):01402         *X7BF4
09DD 3416             (         sub6.asm):01403         N09DD     pshs  a,b,x
09DF FC1D91           (         sub6.asm):01404                   ldd   X1D91
09E2 2A06             (         sub6.asm):01405                   bpl   L09EA
09E4 CC0000           (         sub6.asm):01406                   ldd   #0
09E7 FD1D91           (         sub6.asm):01407                   std   X1D91
09EA FC1D95           (         sub6.asm):01408         L09EA     ldd   X1D95
09ED 2A06             (         sub6.asm):01409                   bpl   L09F5
09EF CC0000           (         sub6.asm):01410                   ldd   #0
09F2 FD1D95           (         sub6.asm):01411                   std   X1D95
09F5 FC1D8F           (         sub6.asm):01412         L09F5     ldd   X1D8F
09F8 10B31D93         (         sub6.asm):01413                   cmpd  X1D93
09FC 2315             (         sub6.asm):01414                   bls   L0A13
09FE BE1D93           (         sub6.asm):01415                   ldx   X1D93
0A01 FD1D93           (         sub6.asm):01416                   std   X1D93
0A04 BF1D8F           (         sub6.asm):01417                   stx   X1D8F
0A07 FC1D91           (         sub6.asm):01418                   ldd   X1D91
0A0A BE1D95           (         sub6.asm):01419                   ldx   X1D95
0A0D FD1D95           (         sub6.asm):01420                   std   X1D95
0A10 BF1D91           (         sub6.asm):01421                   stx   X1D91
0A13 FC1D93           (         sub6.asm):01422         L0A13     ldd   X1D93
0A16 B31D8F           (         sub6.asm):01423                   subd  X1D8F
0A19 FD1DB1           (         sub6.asm):01424                   std   X1DB1
0A1C 8E0001           (         sub6.asm):01425                   ldx   #1
0A1F FC1D95           (         sub6.asm):01426                   ldd   X1D95
0A22 B31D91           (         sub6.asm):01427                   subd  X1D91
0A25 2407             (         sub6.asm):01428                   bcc   L0A2E
0A27 301E             (         sub6.asm):01429                   leax  -2,x
0A29 43               (         sub6.asm):01430                   coma
0A2A 53               (         sub6.asm):01431                   comb
0A2B C30001           (         sub6.asm):01432                   addd  #1
0A2E BF1DB5           (         sub6.asm):01433         L0A2E     stx   X1DB5
0A31 FD1DB3           (         sub6.asm):01434                   std   X1DB3
0A34 10B31DB1         (         sub6.asm):01435                   cmpd  X1DB1
0A38 102E003E         (         sub6.asm):01436                   lbgt  L0A7A
0A3C FC1DB1           (         sub6.asm):01437                   ldd   X1DB1
0A3F 44               (         sub6.asm):01438                   lsra
0A40 56               (         sub6.asm):01439                   rorb
0A41 FD1DB7           (         sub6.asm):01440                   std   X1DB7
0A44 170070           (         sub6.asm):01441         L0A44     lbsr  L0AB7
0A47 BE1D8F           (         sub6.asm):01442                   ldx   X1D8F
0A4A BC1D93           (         sub6.asm):01443                   cmpx  X1D93
0A4D 10270064         (         sub6.asm):01444                   lbeq  L0AB5
0A51 BE1D8F           (         sub6.asm):01445                   ldx   X1D8F
0A54 3001             (         sub6.asm):01446                   leax  1,x
0A56 BF1D8F           (         sub6.asm):01447                   stx   X1D8F
0A59 FC1DB7           (         sub6.asm):01448                   ldd   X1DB7
0A5C F31DB3           (         sub6.asm):01449                   addd  X1DB3
0A5F FD1DB7           (         sub6.asm):01450                   std   X1DB7
0A62 10B31DB1         (         sub6.asm):01451                   cmpd  X1DB1
0A66 2DDC             (         sub6.asm):01452                   blt   L0A44
0A68 B31DB1           (         sub6.asm):01453                   subd  X1DB1
0A6B FD1DB7           (         sub6.asm):01454                   std   X1DB7
0A6E FC1D91           (         sub6.asm):01455                   ldd   X1D91
0A71 F31DB5           (         sub6.asm):01456                   addd  X1DB5
0A74 FD1D91           (         sub6.asm):01457                   std   X1D91
0A77 16FFCA           (         sub6.asm):01458                   lbra  L0A44
0A7A 44               (         sub6.asm):01459         L0A7A     lsra
0A7B 56               (         sub6.asm):01460                   rorb
0A7C FD1DB7           (         sub6.asm):01461                   std   X1DB7
0A7F 170035           (         sub6.asm):01462         L0A7F     lbsr  L0AB7
0A82 BE1D91           (         sub6.asm):01463                   ldx   X1D91
0A85 BC1D95           (         sub6.asm):01464                   cmpx  X1D95
0A88 10270029         (         sub6.asm):01465                   lbeq  L0AB5
0A8C FC1D91           (         sub6.asm):01466                   ldd   X1D91
0A8F F31DB5           (         sub6.asm):01467                   addd  X1DB5
0A92 FD1D91           (         sub6.asm):01468                   std   X1D91
0A95 FC1DB7           (         sub6.asm):01469                   ldd   X1DB7
0A98 F31DB1           (         sub6.asm):01470                   addd  X1DB1
0A9B FD1DB7           (         sub6.asm):01471                   std   X1DB7
0A9E 10B31DB3         (         sub6.asm):01472                   cmpd  X1DB3
0AA2 2DDB             (         sub6.asm):01473                   blt   L0A7F
0AA4 B31DB3           (         sub6.asm):01474                   subd  X1DB3
0AA7 FD1DB7           (         sub6.asm):01475                   std   X1DB7
0AAA BE1D8F           (         sub6.asm):01476                   ldx   X1D8F
0AAD 3001             (         sub6.asm):01477                   leax  1,x
0AAF BF1D8F           (         sub6.asm):01478                   stx   X1D8F
0AB2 16FFCA           (         sub6.asm):01479                   lbra  L0A7F
0AB5 3596             (         sub6.asm):01480         L0AB5     puls  a,b,x,pc
                      (         sub6.asm):01481         
                      (         sub6.asm):01482         
                      (         sub6.asm):01483         *X7CCE
0AB7 3436             (         sub6.asm):01484         L0AB7     pshs  a,b,x,y
0AB9 FC1D91           (         sub6.asm):01485                   ldd   X1D91
0ABC 10B31DAB         (         sub6.asm):01486                   cmpd  X1DAB
0AC0 2550             (         sub6.asm):01487                   bcs   L0B12
0AC2 10B31DAF         (         sub6.asm):01488                   cmpd  X1DAF
0AC6 224A             (         sub6.asm):01489                   bhi   L0B12
0AC8 FC1D8F           (         sub6.asm):01490                   ldd   X1D8F
0ACB 10B31DA9         (         sub6.asm):01491                   cmpd  X1DA9
0ACF 2541             (         sub6.asm):01492                   bcs   L0B12
0AD1 10B31DAD         (         sub6.asm):01493                   cmpd  X1DAD
0AD5 223B             (         sub6.asm):01494                   bhi   L0B12
0AD7 B61D92           (         sub6.asm):01495                   lda   X1D92
0ADA C650             (         sub6.asm):01496                   ldb   #$50
0ADC 3D               (         sub6.asm):01497                   mul
0ADD 10BE1D8B         (         sub6.asm):01498                   ldy   X1D8B
0AE1 31AB             (         sub6.asm):01499                   leay  d,y
0AE3 FC1D8F           (         sub6.asm):01500                   ldd   X1D8F
0AE6 44               (         sub6.asm):01501                   lsra
0AE7 56               (         sub6.asm):01502                   rorb
0AE8 44               (         sub6.asm):01503                   lsra
0AE9 56               (         sub6.asm):01504                   rorb
0AEA 31AB             (         sub6.asm):01505                   leay  d,y
0AEC 308D00E6         (         sub6.asm):01506                   leax  >ByteTbl7,pcr
0AF0 F61D90           (         sub6.asm):01507                   ldb   X1D90
0AF3 C403             (         sub6.asm):01508                   andb  #3
0AF5 3404             (         sub6.asm):01509                   pshs  b
0AF7 A6A4             (         sub6.asm):01510                   lda   ,y
0AF9 A485             (         sub6.asm):01511                   anda  b,x
0AFB A7A4             (         sub6.asm):01512                   sta   ,y
0AFD F61D88           (         sub6.asm):01513                   ldb   X1D88
0B00 308D00CA         (         sub6.asm):01514                   leax  >ByteTbl5,pcr
0B04 A685             (         sub6.asm):01515                   lda   b,x
0B06 308D00C8         (         sub6.asm):01516                   leax  >ByteTbl6,pcr
0B0A 3504             (         sub6.asm):01517                   puls  b
0B0C A485             (         sub6.asm):01518                   anda  b,x
0B0E AAA4             (         sub6.asm):01519                   ora   ,y
0B10 A7A4             (         sub6.asm):01520                   sta   ,y
0B12 35B6             (         sub6.asm):01521         L0B12     puls  a,b,x,y,pc
                      (         sub6.asm):01522         
                      (         sub6.asm):01523         
                      (         sub6.asm):01524         *X7D28
0B14 3406             (         sub6.asm):01525         N0B14     pshs  a,b
0B16 FF1E02           (         sub6.asm):01526                   stu   X1E02
0B19 F71DEF           (         sub6.asm):01527                   stb   X1DEF
0B1C FC1E02           (         sub6.asm):01528                   ldd   X1E02
0B1F 17F9DF           (         sub6.asm):01529                   lbsr  L0501
0B22 17000F           (         sub6.asm):01530                   lbsr  L0B34
0B25 31A6             (         sub6.asm):01531                   leay  a,y
0B27 FC1E02           (         sub6.asm):01532                   ldd   X1E02
0B2A 17F9DC           (         sub6.asm):01533                   lbsr  L0509
0B2D 170004           (         sub6.asm):01534                   lbsr  L0B34
0B30 3086             (         sub6.asm):01535                   leax  a,x
0B32 3586             (         sub6.asm):01536                   puls  a,b,pc
0B34 F61DEF           (         sub6.asm):01537         L0B34     ldb   X1DEF
0B37 3D               (         sub6.asm):01538                   mul
0B38 7D1E04           (         sub6.asm):01539                   tst   X1E04
0B3B 2701             (         sub6.asm):01540                   beq   L0B3E
0B3D 40               (         sub6.asm):01541                   nega
0B3E 39               (         sub6.asm):01542         L0B3E     rts
                      (         sub6.asm):01543         
                      (         sub6.asm):01544         
                      (         sub6.asm):01545         *X7D56
0B3F 3476             (         sub6.asm):01546         N0B3F     pshs  a,b,x,y,u
0B41 7C1D6B           (         sub6.asm):01547                   inc   X1D6B
0B44 B61D6B           (         sub6.asm):01548                   lda   X1D6B
0B47 811E             (         sub6.asm):01549                   cmpa  #$1E
0B49 2511             (         sub6.asm):01550                   bcs   L0B5C
0B4B 7F1D6B           (         sub6.asm):01551                   clr   X1D6B
0B4E 17F4D4           (         sub6.asm):01552                   lbsr  L0025
0B51 4F               (         sub6.asm):01553                   clra
0B52 C620             (         sub6.asm):01554         L0B52     ldb   #$20
0B54 17F709           (         sub6.asm):01555                   lbsr  L0260
0B57 4C               (         sub6.asm):01556                   inca
0B58 811E             (         sub6.asm):01557                   cmpa  #$1E
0B5A 2DF6             (         sub6.asm):01558                   blt   L0B52
0B5C 35F6             (         sub6.asm):01559         L0B5C     puls  a,b,x,y,u,pc
                      (         sub6.asm):01560         
                      (         sub6.asm):01561         
                      (         sub6.asm):01562         *X7D75
                      (         sub6.asm):01563         * input passed in u from caller is base address
                      (         sub6.asm):01564         * returns a value in a,b,x and y
                      (         sub6.asm):01565         
0B5E EC41             (         sub6.asm):01566         N0B5E     ldd   1,u
0B60 847F             (         sub6.asm):01567                   anda  #$7F
0B62 1F02             (         sub6.asm):01568                   tfr   d,y
0B64 EC44             (         sub6.asm):01569                   ldd   4,u
0B66 847F             (         sub6.asm):01570                   anda  #$7F
0B68 1F01             (         sub6.asm):01571                   tfr   d,x
0B6A A644             (         sub6.asm):01572                   lda   4,u
0B6C E643             (         sub6.asm):01573                   ldb   3,u
0B6E 49               (         sub6.asm):01574                   rola
0B6F 59               (         sub6.asm):01575                   rolb
0B70 49               (         sub6.asm):01576                   rola
0B71 8401             (         sub6.asm):01577                   anda  #1
0B73 7D4C75           (         sub6.asm):01578                   tst   X4C75
0B76 2605             (         sub6.asm):01579                   bne   L0B7D
0B78 83004C           (         sub6.asm):01580                   subd  #$004C
0B7B 2003             (         sub6.asm):01581                   bra   L0B80
0B7D 830060           (         sub6.asm):01582         L0B7D     subd  #$0060
0B80 F71DDA           (         sub6.asm):01583         L0B80     stb   X1DDA
0B83 A641             (         sub6.asm):01584                   lda   1,u
0B85 E6C4             (         sub6.asm):01585                   ldb   ,u
0B87 49               (         sub6.asm):01586                   rola
0B88 59               (         sub6.asm):01587                   rolb
0B89 49               (         sub6.asm):01588                   rola
0B8A 8401             (         sub6.asm):01589                   anda  #1
0B8C 7D4C75           (         sub6.asm):01590                   tst   X4C75
0B8F 2605             (         sub6.asm):01591                   bne   L0B96
0B91 830074           (         sub6.asm):01592                   subd  #$0074
0B94 2003             (         sub6.asm):01593                   bra   L0B99
0B96 83009C           (         sub6.asm):01594         L0B96     subd  #$009C
0B99 B61DDA           (         sub6.asm):01595         L0B99     lda   X1DDA
0B9C 39               (         sub6.asm):01596                   rts
                      (         sub6.asm):01597         
                      (         sub6.asm):01598         
                      (         sub6.asm):01599         *X7DB4
                      (         sub6.asm):01600         * input passed in a and b from caller
                      (         sub6.asm):01601         * and uses the first byte on the stack
                      (         sub6.asm):01602         * modifies a, b, x and u
                      (         sub6.asm):01603         * restores a, x, and u on exit
                      (         sub6.asm):01604         * sets b for the return
0B9D 3452             (         sub6.asm):01605         N0B9D     pshs  a,x,u            save regs to be restored
0B9F 3402             (         sub6.asm):01606                   pshs  a                save the value passed by the caller(again)
                      (         sub6.asm):01607         
0BA1 861C             (         sub6.asm):01608                   lda   #$1C             load a with 28
0BA3 3D               (         sub6.asm):01609                   mul                    multiply a x b stow in d
0BA4 8E05CF           (         sub6.asm):01610                   ldx   #$05CF           load a base address
0BA7 308B             (         sub6.asm):01611                   leax  d,x              using offset calculated reposition x
                      (         sub6.asm):01612         
0BA9 A6E4             (         sub6.asm):01613                   lda   ,s               using the value passed in a last pushed on the stack
0BAB 44               (         sub6.asm):01614                   lsra                   divide by 2
0BAC 44               (         sub6.asm):01615                   lsra                   and again divide by 2  (by 4)
0BAD 44               (         sub6.asm):01616                   lsra                   and finally by 2 again (by 8 total)
0BAE 3086             (         sub6.asm):01617                   leax  a,x              using that offset calculated reposition x again
                      (         sub6.asm):01618         
0BB0 3502             (         sub6.asm):01619                   puls  a                pop that input off the stack
0BB2 8407             (         sub6.asm):01620                   anda  #7               take the modulo 8 of the value
0BB4 338D0006         (         sub6.asm):01621                   leau  >ByteTbl2,pcr    load the address of an 8 byte table
0BB8 E6C6             (         sub6.asm):01622                   ldb   a,u              using the modulo val for index select a value
0BBA E484             (         sub6.asm):01623                   andb  ,x               and that value with the contents of x and save in b
0BBC 35D2             (         sub6.asm):01624                   puls  a,x,u,pc         clean up the stack and return
                      (         sub6.asm):01625         
                      (         sub6.asm):01626         
                      (         sub6.asm):01627         
0BBE                  (         sub6.asm):01628         ByteTbl2
0BBE 8040201008040201 (         sub6.asm):01629         L0BBE     fcb $80,$40,$20,$10,$08,$04,$02,$01
                      (         sub6.asm):01630         
0BC6                  (         sub6.asm):01631         ByteTbl3
0BC6 00C0F0FC         (         sub6.asm):01632         L0BC6     fcb $00,$C0,$F0,$FC
                      (         sub6.asm):01633         
0BCA                  (         sub6.asm):01634         ByteTbl4
0BCA FF3F0F03         (         sub6.asm):01635         L0BCA     fcb $FF,$3F,$0F,$03
                      (         sub6.asm):01636         
0BCE                  (         sub6.asm):01637         ByteTbl5
0BCE 0055AAFF         (         sub6.asm):01638         L0BCE     fcb $00,$55,$AA,$FF
                      (         sub6.asm):01639         
0BD2                  (         sub6.asm):01640         ByteTbl6
0BD2 C0300C03         (         sub6.asm):01641         L0BD2     fcb $C0,$30,$0C,$03
                      (         sub6.asm):01642         
0BD6                  (         sub6.asm):01643         ByteTbl7
0BD6 3FCFF3FC         (         sub6.asm):01644         L0BD6     fcb $3F,$CF,$F3,$FC
                      (         sub6.asm):01645         
0BDA                  (         sub6.asm):01646         ByteTbl8
0BDA 00030C0F3033     (         sub6.asm):01647         L0BDA     fcb $00,$03,$0C,$0F,$30,$33
0BE0 3C3FC0C3CCCF     (         sub6.asm):01648                   fcb $3C,$3F,$C0,$C3,$CC,$CF
0BE6 F0F3FCFF         (         sub6.asm):01649                   fcb $F0,$F3,$FC,$FF
                      (         sub6.asm):01650         
0BEA 9F979C           (         sub6.asm):01651                   emod
     0BED             (         sub6.asm):01652         eom       equ *
                      (         sub6.asm):01653                   end
